{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "invariant_burn_gas",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405260008054600160ff19918216811790925560048054909116909117905534801561002d57600080fd5b50611a648061003d6000396000f3fe608060405234801561001057600080fd5b50600436106100d45760003560e01c8063916a17c611610081578063d45aad941161005b578063d45aad9414610163578063e20c9f711461016b578063fa7626d41461017357600080fd5b8063916a17c61461013b578063b5508aa914610143578063ba414fa61461014b57600080fd5b80633f7286f4116100b25780633f7286f41461010957806366d9a9a01461011157806385226c811461012657600080fd5b80630a9254e4146100d95780631ed7831c146100e35780633e5e3c2314610101575b600080fd5b6100e1610180565b005b6100eb61030f565b6040516100f89190610f78565b60405180910390f35b6100eb61037e565b6100eb6103eb565b610119610458565b6040516100f89190610fd2565b61012e610569565b6040516100f8919061113e565b610119610639565b61012e610741565b610153610811565b60405190151581526020016100f8565b6100e1610971565b6100eb610a0f565b6000546101539060ff1681565b6040517f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d906101ae90610eaa565b73ffffffffffffffffffffffffffffffffffffffff9091168152602001604051809103906000f0801580156101e7573d6000803e3d6000fd5b50601b805473ffffffffffffffffffffffffffffffffffffffff929092167fffffffffffffffffffffffff00000000000000000000000000000000000000009283168117909155600e80546001810182556000919091527fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd018054909216179055604080516001808252818301909252600091816020016020820280368337019050509050634ad5d16f60e01b816000815181106102a7576102a76111be565b7fffffffff0000000000000000000000000000000000000000000000000000000090921660209283029190910182015260408051808201909152601b5473ffffffffffffffffffffffffffffffffffffffff16815290810182905261030b81610a7c565b5050565b6060600d80548060200260200160405190810160405280929190818152602001828054801561037457602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610349575b5050505050905090565b6060600f8054806020026020016040519081016040528092919081815260200182805480156103745760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610349575050505050905090565b6060600e8054806020026020016040519081016040528092919081815260200182805480156103745760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610349575050505050905090565b60606012805480602002602001604051908101604052809291908181526020016000905b8282101561056057600084815260209081902060408051808201825260028602909201805473ffffffffffffffffffffffffffffffffffffffff16835260018101805483518187028101870190945280845293949193858301939283018282801561054857602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600401906020826003010492830192600103820291508084116104f55790505b5050505050815250508152602001906001019061047c565b50505050905090565b60606011805480602002602001604051908101604052809291908181526020016000905b828210156105605783829060005260206000200180546105ac906111ed565b80601f01602080910402602001604051908101604052809291908181526020018280546105d8906111ed565b80156106255780601f106105fa57610100808354040283529160200191610625565b820191906000526020600020905b81548152906001019060200180831161060857829003601f168201915b50505050508152602001906001019061058d565b60606013805480602002602001604051908101604052809291908181526020016000905b8282101561056057600084815260209081902060408051808201825260028602909201805473ffffffffffffffffffffffffffffffffffffffff16835260018101805483518187028101870190945280845293949193858301939283018282801561072957602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600401906020826003010492830192600103820291508084116106d65790505b5050505050815250508152602001906001019061065d565b60606010805480602002602001604051908101604052809291908181526020016000905b82821015610560578382906000526020600020018054610784906111ed565b80601f01602080910402602001604051908101604052809291908181526020018280546107b0906111ed565b80156107fd5780601f106107d2576101008083540402835291602001916107fd565b820191906000526020600020905b8154815290600101906020018083116107e057829003601f168201915b505050505081526020019060010190610765565b60008054610100900460ff16156108315750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1561096c5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190527f6661696c65640000000000000000000000000000000000000000000000000000828401528251808303840181526060830190935260009290916108d6917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001611240565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905261090e91611288565b6000604051808303816000865af19150503d806000811461094b576040519150601f19603f3d011682016040523d82523d6000602084013e610950565b606091505b509150508080602001905181019061096891906112a4565b9150505b919050565b601b54604080517f79df245a0000000000000000000000000000000000000000000000000000000081529051610a0d9273ffffffffffffffffffffffffffffffffffffffff16916379df245a9160048083019260209291908290030181865afa1580156109e2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0691906112a4565b6000610b39565b565b6060600c8054806020026020016040519081016040528092919081815260200182805480156103745760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610349575050505050905090565b6013805460018101825560009190915281517f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a090600290920291820180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff90921691909117815560208084015180518594610b33937f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a091909101920190610eb7565b50505050565b8015158215151461030b577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051610bc99060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b626f6f60408201527f6c5d000000000000000000000000000000000000000000000000000000000000606082015260800190565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358382610c32576040518060400160405280600581526020017f66616c7365000000000000000000000000000000000000000000000000000000815250610c69565b6040518060400160405280600481526020017f74727565000000000000000000000000000000000000000000000000000000008152505b604051610c7691906112cd565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358381610cdf576040518060400160405280600581526020017f66616c7365000000000000000000000000000000000000000000000000000000815250610d16565b6040518060400160405280600481526020017f74727565000000000000000000000000000000000000000000000000000000008152505b604051610d239190611314565b60405180910390a161030b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610e7c5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190527f6661696c656400000000000000000000000000000000000000000000000000009282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc490608001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815290829052610dfd9291602001611240565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815290829052610e3591611288565b6000604051808303816000865af19150503d8060008114610e72576040519150601f19603f3d011682016040523d82523d6000602084013e610e77565b606091505b505050505b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16610100179055565b6106fc8061135c83390190565b82805482825590600052602060002090600701600890048101928215610f535791602002820160005b83821115610f2157835183826101000a81548163ffffffff021916908360e01c02179055509260200192600401602081600301049283019260010302610ee0565b8015610f515782816101000a81549063ffffffff0219169055600401602081600301049283019260010302610f21565b505b50610f5f929150610f63565b5090565b5b80821115610f5f5760008155600101610f64565b6020808252825182820181905260009190848201906040850190845b81811015610fc657835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101610f94565b50909695505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b848110156110b9578984037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc00186528251805173ffffffffffffffffffffffffffffffffffffffff168552880151888501889052805188860181905290890190839060608701905b808310156110a45783517fffffffff00000000000000000000000000000000000000000000000000000000168252928b019260019290920191908b0190611062565b50978a01979550505091870191600101610ffa565b50919998505050505050505050565b60005b838110156110e35781810151838201526020016110cb565b83811115610b335750506000910152565b6000815180845261110c8160208601602086016110c8565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156111b1577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc088860301845261119f8583516110f4565b94509285019290850190600101611165565b5092979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600181811c9082168061120157607f821691505b60208210810361123a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7fffffffff00000000000000000000000000000000000000000000000000000000831681526000825161127a8160048501602087016110c8565b919091016004019392505050565b6000825161129a8184602087016110c8565b9190910192915050565b6000602082840312156112b657600080fd5b815180151581146112c657600080fd5b9392505050565b60408152600a60408201527f2020202020204c6566740000000000000000000000000000000000000000000060608201526080602082015260006112c660808301846110f4565b60408152600a60408201527f202020202052696768740000000000000000000000000000000000000000000060608201526080602082015260006112c660808301846110f456fe608060405234801561001057600080fd5b506040516106fc3803806106fc83398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610669806100936000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80634ad5d16f1461003b57806379df245a14610050575b600080fd5b61004e6100493660046104cd565b610089565b005b6000546100759074010000000000000000000000000000000000000000900460ff1681565b604051901515815260200160405180910390f35b627a1200600061009a83828461010e565b905060005a90506100aa82610163565b60005a905082828203111580156100c2575081838303115b1561010757600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16740100000000000000000000000000000000000000001790555b5050505050565b600061011b848484610191565b905061015c6040518060400160405280600c81526020017f426f756e6420526573756c740000000000000000000000000000000000000000815250826103cd565b9392505050565b6000805a90505b825a6101769083610515565b101561018c576101858261052c565b915061016a565b505050565b600081831115610227576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603e60248201527f5374645574696c7320626f756e642875696e743235362c75696e743235362c7560448201527f696e74323536293a204d6178206973206c657373207468616e206d696e2e0000606482015260840160405180910390fd5b8284101580156102375750818411155b1561024357508261015c565b600061024f8484610515565b61025a906001610564565b90506003851115801561026c57508481115b156102835761027b8585610564565b91505061015c565b6102ae60037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610515565b85101580156102e557506102e2857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610515565b81115b1561031e57610314857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610515565b61027b9084610515565b828511156103745760006103328487610515565b90506000610340838361057c565b9050806000036103555784935050505061015c565b60016103618288610564565b61036b9190610515565b935050506103c5565b838510156103c55760006103888686610515565b90506000610396838361057c565b9050806000036103ab5785935050505061015c565b6103b58186610515565b6103c0906001610564565b935050505b509392505050565b60006a636f6e736f6c652e6c6f6773ffffffffffffffffffffffffffffffffffffffff1683836040516024016104049291906105e7565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fb60e72cc00000000000000000000000000000000000000000000000000000000179052516104859190610640565b600060405180830381855afa9150503d80600081146104c0576040519150601f19603f3d011682016040523d82523d6000602084013e6104c5565b606091505b505050505050565b6000602082840312156104df57600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082821015610527576105276104e6565b500390565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361055d5761055d6104e6565b5060010190565b60008219821115610577576105776104e6565b500190565b6000826105b2577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500690565b60005b838110156105d25781810151838201526020016105ba565b838111156105e1576000848401525b50505050565b60408152600083518060408401526106068160608501602088016105b7565b602083019390935250601f919091017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01601606001919050565b600082516106528184602087016105b7565b919091019291505056fea164736f6c634300080f000aa164736f6c634300080f000a",
    "sourceMap": "1357:935:311:-:0;;;1572:26:1;;;1594:4;-1:-1:-1;;1572:26:1;;;;;;;;3161:44:5;;;;;;;;;;;1357:935:311;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100d45760003560e01c8063916a17c611610081578063d45aad941161005b578063d45aad9414610163578063e20c9f711461016b578063fa7626d41461017357600080fd5b8063916a17c61461013b578063b5508aa914610143578063ba414fa61461014b57600080fd5b80633f7286f4116100b25780633f7286f41461010957806366d9a9a01461011157806385226c811461012657600080fd5b80630a9254e4146100d95780631ed7831c146100e35780633e5e3c2314610101575b600080fd5b6100e1610180565b005b6100eb61030f565b6040516100f89190610f78565b60405180910390f35b6100eb61037e565b6100eb6103eb565b610119610458565b6040516100f89190610fd2565b61012e610569565b6040516100f8919061113e565b610119610639565b61012e610741565b610153610811565b60405190151581526020016100f8565b6100e1610971565b6100eb610a0f565b6000546101539060ff1681565b6040517f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d906101ae90610eaa565b73ffffffffffffffffffffffffffffffffffffffff9091168152602001604051809103906000f0801580156101e7573d6000803e3d6000fd5b50601b805473ffffffffffffffffffffffffffffffffffffffff929092167fffffffffffffffffffffffff00000000000000000000000000000000000000009283168117909155600e80546001810182556000919091527fbb7b4a454dc3493923482f07822329ed19e8244eff582cc204f8554c3620c3fd018054909216179055604080516001808252818301909252600091816020016020820280368337019050509050634ad5d16f60e01b816000815181106102a7576102a76111be565b7fffffffff0000000000000000000000000000000000000000000000000000000090921660209283029190910182015260408051808201909152601b5473ffffffffffffffffffffffffffffffffffffffff16815290810182905261030b81610a7c565b5050565b6060600d80548060200260200160405190810160405280929190818152602001828054801561037457602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610349575b5050505050905090565b6060600f8054806020026020016040519081016040528092919081815260200182805480156103745760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610349575050505050905090565b6060600e8054806020026020016040519081016040528092919081815260200182805480156103745760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610349575050505050905090565b60606012805480602002602001604051908101604052809291908181526020016000905b8282101561056057600084815260209081902060408051808201825260028602909201805473ffffffffffffffffffffffffffffffffffffffff16835260018101805483518187028101870190945280845293949193858301939283018282801561054857602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600401906020826003010492830192600103820291508084116104f55790505b5050505050815250508152602001906001019061047c565b50505050905090565b60606011805480602002602001604051908101604052809291908181526020016000905b828210156105605783829060005260206000200180546105ac906111ed565b80601f01602080910402602001604051908101604052809291908181526020018280546105d8906111ed565b80156106255780601f106105fa57610100808354040283529160200191610625565b820191906000526020600020905b81548152906001019060200180831161060857829003601f168201915b50505050508152602001906001019061058d565b60606013805480602002602001604051908101604052809291908181526020016000905b8282101561056057600084815260209081902060408051808201825260028602909201805473ffffffffffffffffffffffffffffffffffffffff16835260018101805483518187028101870190945280845293949193858301939283018282801561072957602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600401906020826003010492830192600103820291508084116106d65790505b5050505050815250508152602001906001019061065d565b60606010805480602002602001604051908101604052809291908181526020016000905b82821015610560578382906000526020600020018054610784906111ed565b80601f01602080910402602001604051908101604052809291908181526020018280546107b0906111ed565b80156107fd5780601f106107d2576101008083540402835291602001916107fd565b820191906000526020600020905b8154815290600101906020018083116107e057829003601f168201915b505050505081526020019060010190610765565b60008054610100900460ff16156108315750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b1561096c5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190527f6661696c65640000000000000000000000000000000000000000000000000000828401528251808303840181526060830190935260009290916108d6917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001611240565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905261090e91611288565b6000604051808303816000865af19150503d806000811461094b576040519150601f19603f3d011682016040523d82523d6000602084013e610950565b606091505b509150508080602001905181019061096891906112a4565b9150505b919050565b601b54604080517f79df245a0000000000000000000000000000000000000000000000000000000081529051610a0d9273ffffffffffffffffffffffffffffffffffffffff16916379df245a9160048083019260209291908290030181865afa1580156109e2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a0691906112a4565b6000610b39565b565b6060600c8054806020026020016040519081016040528092919081815260200182805480156103745760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610349575050505050905090565b6013805460018101825560009190915281517f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a090600290920291820180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff90921691909117815560208084015180518594610b33937f66de8ffda797e3de9c05e8fc57b3bf0ec28a930d40b0d285d93c06501cf6a091909101920190610eb7565b50505050565b8015158215151461030b577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f50604051610bc99060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b626f6f60408201527f6c5d000000000000000000000000000000000000000000000000000000000000606082015260800190565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358382610c32576040518060400160405280600581526020017f66616c7365000000000000000000000000000000000000000000000000000000815250610c69565b6040518060400160405280600481526020017f74727565000000000000000000000000000000000000000000000000000000008152505b604051610c7691906112cd565b60405180910390a17f280f4446b28a1372417dda658d30b95b2992b12ac9c7f378535f29a97acf358381610cdf576040518060400160405280600581526020017f66616c7365000000000000000000000000000000000000000000000000000000815250610d16565b6040518060400160405280600481526020017f74727565000000000000000000000000000000000000000000000000000000008152505b604051610d239190611314565b60405180910390a161030b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15610e7c5760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190527f6661696c656400000000000000000000000000000000000000000000000000009282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc490608001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815290829052610dfd9291602001611240565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815290829052610e3591611288565b6000604051808303816000865af19150503d8060008114610e72576040519150601f19603f3d011682016040523d82523d6000602084013e610e77565b606091505b505050505b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16610100179055565b6106fc8061135c83390190565b82805482825590600052602060002090600701600890048101928215610f535791602002820160005b83821115610f2157835183826101000a81548163ffffffff021916908360e01c02179055509260200192600401602081600301049283019260010302610ee0565b8015610f515782816101000a81549063ffffffff0219169055600401602081600301049283019260010302610f21565b505b50610f5f929150610f63565b5090565b5b80821115610f5f5760008155600101610f64565b6020808252825182820181905260009190848201906040850190845b81811015610fc657835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101610f94565b50909695505050505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b848110156110b9578984037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc00186528251805173ffffffffffffffffffffffffffffffffffffffff168552880151888501889052805188860181905290890190839060608701905b808310156110a45783517fffffffff00000000000000000000000000000000000000000000000000000000168252928b019260019290920191908b0190611062565b50978a01979550505091870191600101610ffa565b50919998505050505050505050565b60005b838110156110e35781810151838201526020016110cb565b83811115610b335750506000910152565b6000815180845261110c8160208601602086016110c8565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b828110156111b1577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc088860301845261119f8583516110f4565b94509285019290850190600101611165565b5092979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600181811c9082168061120157607f821691505b60208210810361123a577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7fffffffff00000000000000000000000000000000000000000000000000000000831681526000825161127a8160048501602087016110c8565b919091016004019392505050565b6000825161129a8184602087016110c8565b9190910192915050565b6000602082840312156112b657600080fd5b815180151581146112c657600080fd5b9392505050565b60408152600a60408201527f2020202020204c6566740000000000000000000000000000000000000000000060608201526080602082015260006112c660808301846110f4565b60408152600a60408201527f202020202052696768740000000000000000000000000000000000000000000060608201526080602082015260006112c660808301846110f456fe608060405234801561001057600080fd5b506040516106fc3803806106fc83398101604081905261002f91610054565b600080546001600160a01b0319166001600160a01b0392909216919091179055610084565b60006020828403121561006657600080fd5b81516001600160a01b038116811461007d57600080fd5b9392505050565b610669806100936000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c80634ad5d16f1461003b57806379df245a14610050575b600080fd5b61004e6100493660046104cd565b610089565b005b6000546100759074010000000000000000000000000000000000000000900460ff1681565b604051901515815260200160405180910390f35b627a1200600061009a83828461010e565b905060005a90506100aa82610163565b60005a905082828203111580156100c2575081838303115b1561010757600080547fffffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffff16740100000000000000000000000000000000000000001790555b5050505050565b600061011b848484610191565b905061015c6040518060400160405280600c81526020017f426f756e6420526573756c740000000000000000000000000000000000000000815250826103cd565b9392505050565b6000805a90505b825a6101769083610515565b101561018c576101858261052c565b915061016a565b505050565b600081831115610227576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603e60248201527f5374645574696c7320626f756e642875696e743235362c75696e743235362c7560448201527f696e74323536293a204d6178206973206c657373207468616e206d696e2e0000606482015260840160405180910390fd5b8284101580156102375750818411155b1561024357508261015c565b600061024f8484610515565b61025a906001610564565b90506003851115801561026c57508481115b156102835761027b8585610564565b91505061015c565b6102ae60037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610515565b85101580156102e557506102e2857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610515565b81115b1561031e57610314857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff610515565b61027b9084610515565b828511156103745760006103328487610515565b90506000610340838361057c565b9050806000036103555784935050505061015c565b60016103618288610564565b61036b9190610515565b935050506103c5565b838510156103c55760006103888686610515565b90506000610396838361057c565b9050806000036103ab5785935050505061015c565b6103b58186610515565b6103c0906001610564565b935050505b509392505050565b60006a636f6e736f6c652e6c6f6773ffffffffffffffffffffffffffffffffffffffff1683836040516024016104049291906105e7565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fb60e72cc00000000000000000000000000000000000000000000000000000000179052516104859190610640565b600060405180830381855afa9150503d80600081146104c0576040519150601f19603f3d011682016040523d82523d6000602084013e6104c5565b606091505b505050505050565b6000602082840312156104df57600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082821015610527576105276104e6565b500390565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff820361055d5761055d6104e6565b5060010190565b60008219821115610577576105776104e6565b500190565b6000826105b2577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500690565b60005b838110156105d25781810151838201526020016105ba565b838111156105e1576000848401525b50505050565b60408152600083518060408401526106068160608501602088016105b7565b602083019390935250601f919091017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01601606001919050565b600082516106528184602087016105b7565b919091019291505056fea164736f6c634300080f000aa164736f6c634300080f000a",
    "sourceMap": "1357:935:311:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1453:386;;;:::i;:::-;;2161:134:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2930:133;;;:::i;2631:141::-;;;:::i;2447:178::-;;;:::i;:::-;;;;;;;:::i;2301:140::-;;;:::i;:::-;;;;;;;:::i;2778:146::-;;;:::i;1866:141::-;;;:::i;1819:584:1:-;;;:::i;:::-;;;4017:14:322;;4010:22;3992:41;;3980:2;3965:18;1819:584:1;3852:187:322;2110:180:311;;;:::i;2013:142:8:-;;;:::i;1572:26:1:-;;;;;;;;;1453:386:311;1533:22;;317:28:2;;1533:22:311;;;:::i;:::-;4232:42:322;4220:55;;;4202:74;;4190:2;4175:18;1533:22:311;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1525:5:311;:30;;;;;;;;;;;;;;;;1419:18:8;:45;;-1:-1:-1;1419:45:8;;;;-1:-1:-1;1419:45:8;;;;;;;;;;;;;;1635:15:311;;;1648:1;1635:15;;;;;;;;;1607:25;;1635:15;;;;;;;;;;;;-1:-1:-1;1635:15:311;1607:43;;1675:22;;;1660:9;1670:1;1660:12;;;;;;;;:::i;:::-;:37;;;;:12;;;;;;;;;;:37;1738:60;;;;;;;;;1767:5;;;;1738:60;;;;;;;;1808:24;1738:60;1808:14;:24::i;:::-;1477:362;;1453:386::o;2161:134:8:-;2208:33;2272:16;2253:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2161:134;:::o;2930:133::-;2976:33;3040:16;3021:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2930:133;:::o;2631:141::-;2679:35;2747:18;2726:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2631:141;:::o;2447:178::-;2503:48;2592:26;2563:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2447:178;:::o;2301:140::-;2349:34;2416:18;2395:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2778:146;2826:40;2899:18;2878:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1866:141;1915:34;1982:18;1961:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:584:1;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:1;;;;;;;;1819:584::o;1869:528::-;1941:17;2997:42;2985:55;3066:16;1980:374;;2196:43;;;1671:64;2196:43;;;5281:74:322;;;2221:17:1;5371:18:322;;;5364:34;2196:43:1;;;;;;;;;5254:18:322;;;2196:43:1;;;-1:-1:-1;;1671:64:1;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;;;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:1:o;2110:180:311:-;2254:5;;:21;;;;;;;;2245:38;;2254:5;;;:19;;:21;;;;;;;;;;;;;;:5;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2277:5;2245:8;:38::i;:::-;2110:180::o;2013:142:8:-;2062:35;2130:18;2109:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2013:142;:::o;1477:137::-;1562:18;:45;;;;;;;-1:-1:-1;1562:45:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;1477:137;:::o;789:312:4:-;859:1;854:6;;:1;:6;;;850:245;;881:41;;;;;6594:2:322;6576:21;;;6633:2;6613:18;;;6606:30;6672:34;6667:2;6652:18;;6645:62;6743:4;6738:2;6723:18;;6716:32;6780:3;6765:19;;6392:398;881:41:4;;;;;;;;941:52;972:1;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;941:52;;;;;;:::i;:::-;;;;;;;;1012;1043:1;:20;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1012:52;;;;;;:::i;:::-;;;;;;;;1078:6;2997:42:1;2985:55;3066:16;2452:359;;2652:67;;;1671:64;2652:67;;;7911:74:322;;;2677:17:1;8001:18:322;;;7994:34;;;;2712:4:1;8044:18:322;;;8037:34;2489:11:1;;1671:64;2586:43;;7884:18:322;;2652:67:1;;;;;;;;;;;;;;2541:196;;;2652:67;2541:196;;:::i;:::-;;;;;;;;;;;;;;;2506:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2452:359:1;2820:7;:14;;;;;;;;2409:432::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;14:681:322;185:2;237:21;;;307:13;;210:18;;;329:22;;;156:4;;185:2;408:15;;;;382:2;367:18;;;156:4;451:218;465:6;462:1;459:13;451:218;;;530:13;;545:42;526:62;514:75;;644:15;;;;609:12;;;;487:1;480:9;451:218;;;-1:-1:-1;686:3:322;;14:681;-1:-1:-1;;;;;;14:681:322:o;700:1695::-;902:4;931:2;971;960:9;956:18;1001:2;990:9;983:21;1024:6;1059;1053:13;1090:6;1082;1075:22;1116:2;1106:12;;1149:2;1138:9;1134:18;1127:25;;1211:2;1201:6;1198:1;1194:14;1183:9;1179:30;1175:39;1249:2;1241:6;1237:15;1270:1;1291;1301:1065;1317:6;1312:3;1309:15;1301:1065;;;1386:22;;;1410:66;1382:95;1370:108;;1501:13;;1588:9;;1599:42;1584:58;1569:74;;1682:11;;1676:18;1714:15;;;1707:27;;;1795:19;;1541:15;;;1827:24;;;1917:21;;;;1962:1;;1885:2;1873:15;;;1976:282;1992:8;1987:3;1984:17;1976:282;;;2073:15;;2090:66;2069:88;2055:103;;2227:17;;;;2020:1;2011:11;;;;;2184:14;;;;1976:282;;;-1:-1:-1;2344:12:322;;;;2281:5;-1:-1:-1;;;2309:15:322;;;;1343:1;1334:11;1301:1065;;;-1:-1:-1;2383:6:322;;700:1695;-1:-1:-1;;;;;;;;;700:1695:322:o;2400:258::-;2472:1;2482:113;2496:6;2493:1;2490:13;2482:113;;;2572:11;;;2566:18;2553:11;;;2546:39;2518:2;2511:10;2482:113;;;2613:6;2610:1;2607:13;2604:48;;;-1:-1:-1;;2648:1:322;2630:16;;2623:27;2400:258::o;2663:317::-;2705:3;2743:5;2737:12;2770:6;2765:3;2758:19;2786:63;2842:6;2835:4;2830:3;2826:14;2819:4;2812:5;2808:16;2786:63;:::i;:::-;2894:2;2882:15;2899:66;2878:88;2869:98;;;;2969:4;2865:109;;2663:317;-1:-1:-1;;2663:317:322:o;2985:862::-;3147:4;3176:2;3216;3205:9;3201:18;3246:2;3235:9;3228:21;3269:6;3304;3298:13;3335:6;3327;3320:22;3373:2;3362:9;3358:18;3351:25;;3435:2;3425:6;3422:1;3418:14;3407:9;3403:30;3399:39;3385:53;;3473:2;3465:6;3461:15;3494:1;3504:314;3518:6;3515:1;3512:13;3504:314;;;3607:66;3595:9;3587:6;3583:22;3579:95;3574:3;3567:108;3698:40;3731:6;3722;3716:13;3698:40;:::i;:::-;3688:50;-1:-1:-1;3796:12:322;;;;3761:15;;;;3540:1;3533:9;3504:314;;;-1:-1:-1;3835:6:322;;2985:862;-1:-1:-1;;;;;;;2985:862:322:o;4476:184::-;4528:77;4525:1;4518:88;4625:4;4622:1;4615:15;4649:4;4646:1;4639:15;4665:437;4744:1;4740:12;;;;4787;;;4808:61;;4862:4;4854:6;4850:17;4840:27;;4808:61;4915:2;4907:6;4904:14;4884:18;4881:38;4878:218;;4952:77;4949:1;4942:88;5053:4;5050:1;5043:15;5081:4;5078:1;5071:15;4878:218;;4665:437;;;:::o;5409:417::-;5606:66;5598:6;5594:79;5589:3;5582:92;5564:3;5703:6;5697:13;5719:61;5773:6;5769:1;5764:3;5760:11;5753:4;5745:6;5741:17;5719:61;:::i;:::-;5800:16;;;;5818:1;5796:24;;5409:417;-1:-1:-1;;;5409:417:322:o;5831:274::-;5960:3;5998:6;5992:13;6014:53;6060:6;6055:3;6048:4;6040:6;6036:17;6014:53;:::i;:::-;6083:16;;;;;5831:274;-1:-1:-1;;5831:274:322:o;6110:277::-;6177:6;6230:2;6218:9;6209:7;6205:23;6201:32;6198:52;;;6246:1;6243;6236:12;6198:52;6278:9;6272:16;6331:5;6324:13;6317:21;6310:5;6307:32;6297:60;;6353:1;6350;6343:12;6297:60;6376:5;6110:277;-1:-1:-1;;;6110:277:322:o;6795:452::-;7045:2;7034:9;7027:21;7084:2;7079;7068:9;7064:18;7057:30;7123:12;7118:2;7107:9;7103:18;7096:40;7174:3;7167:4;7156:9;7152:20;7145:33;7008:4;7195:46;7236:3;7225:9;7221:19;7213:6;7195:46;:::i;7252:452::-;7502:2;7491:9;7484:21;7541:2;7536;7525:9;7521:18;7514:30;7580:12;7575:2;7564:9;7560:18;7553:40;7631:3;7624:4;7613:9;7609:20;7602:33;7465:4;7652:46;7693:3;7682:9;7678:19;7670:6;7652:46;:::i",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "invariant_burn_gas()": "d45aad94",
    "setUp()": "0a9254e4",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"invariant_burn_gas\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"invariant_burn_gas()\":{\"custom:invariant\":\"`gas(uint256)` always burns at least the amount of gas passed.                   Asserts that when `Burn.gas(uint256)` is called, it always burns                   at least the amount of gas passed to the function.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/invariants/Burn.Gas.t.sol\":\"Burn_BurnGas_Invariant\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@cwia/=lib/clones-with-immutable-args/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/solmate/\",\":clones-with-immutable-args/=lib/clones-with-immutable-args/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240\",\"dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b\",\"dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x9100bd38453711d5f5ae32d16b4aacef8d4e26abb3061fcc9920cd30cdb49315\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://114654e304083d3403510edd13d7df2223747337150ecf51dd36b441e50498f7\",\"dweb:/ipfs/QmQy6uvcVHyHzU2RbuvEo1hKiV7k81z21gR6DSj4DkCP8D\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xb58d624eb0922d4ab14856efb0ab558b0727ccfc28448c5779f1ab4d98cf3daf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1869fc58cb27a7b680428b79d0e0b6f45bd3c61fedb4b3f895e143fb899519d5\",\"dweb:/ipfs/QmcjECGVpQPjhL2bokDyQeGWdzM99qPFMhq5r7KqKLot7R\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477\",\"dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c\",\"dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5\",\"dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985\",\"dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x18ac6dcce9cdfe3bc754ce910b4b97e56963c49a92e50f57d055adb562416b86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6b29b4a814dc26c3722e994a792f4cc1be86e6b8c2b2adc352ed54fb326593d\",\"dweb:/ipfs/Qma8a7XELNmUepiitaLyxJXW66urnXsvCwx1bMLmRw2Fpn\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf\",\"dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xb5d4816a3f37977b1efa07b5e715daa917e96fd28dec1805c4189653db4ea33a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34338fa7f079f8d64f20d976f9bf908a710c8728f18c4b361b020b24fedfedf2\",\"dweb:/ipfs/QmYhwY1wi6vVLMUsJ32L3GiSR9HRaFhGL1Y3wRDjy41KXn\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"src/libraries/Burn.sol\":{\"keccak256\":\"0x90a795bcea3ef06d6d5011256c4bd63d1a4271f519246dbf1ee3e8f1c0e21010\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f60c3aa77cf0c484ddda4754157cff4dc0e2eace4bea67990daff4c0612ab5f\",\"dweb:/ipfs/QmSYGanMFve9uBC17X7hFneSFnwnJxz86Jgh6MX9BRMweb\"]},\"test/invariants/Burn.Gas.t.sol\":{\"keccak256\":\"0xa2170edd9ef37c8cac30aeb71c8e1f33ab450f3a93d91c9d8bfa0419b17dc35e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f9fc990854ecb8f9bacaaec2cc2c8d75159799bbb101c0f390677d681ebd9d0d\",\"dweb:/ipfs/QmUgM5VvfqsW8MVPAo5aF24vyWiLFK4WQvU9ocrGWE1AwK\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "invariant_burn_gas"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "invariant_burn_gas()": {
            "custom:invariant": "`gas(uint256)` always burns at least the amount of gas passed.                   Asserts that when `Burn.gas(uint256)` is called, it always burns                   at least the amount of gas passed to the function."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@cwia/=lib/clones-with-immutable-args/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@rari-capital/solmate/=lib/solmate/",
        "clones-with-immutable-args/=lib/clones-with-immutable-args/src/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "safe-contracts/=lib/safe-contracts/contracts/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 999999
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "test/invariants/Burn.Gas.t.sol": "Burn_BurnGas_Invariant"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b",
        "urls": [
          "bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240",
          "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c",
        "urls": [
          "bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224",
          "dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60",
        "urls": [
          "bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b",
          "dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x9100bd38453711d5f5ae32d16b4aacef8d4e26abb3061fcc9920cd30cdb49315",
        "urls": [
          "bzz-raw://114654e304083d3403510edd13d7df2223747337150ecf51dd36b441e50498f7",
          "dweb:/ipfs/QmQy6uvcVHyHzU2RbuvEo1hKiV7k81z21gR6DSj4DkCP8D"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0xb58d624eb0922d4ab14856efb0ab558b0727ccfc28448c5779f1ab4d98cf3daf",
        "urls": [
          "bzz-raw://1869fc58cb27a7b680428b79d0e0b6f45bd3c61fedb4b3f895e143fb899519d5",
          "dweb:/ipfs/QmcjECGVpQPjhL2bokDyQeGWdzM99qPFMhq5r7KqKLot7R"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c",
        "urls": [
          "bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477",
          "dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b",
        "urls": [
          "bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c",
          "dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673",
        "urls": [
          "bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5",
          "dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337",
        "urls": [
          "bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985",
          "dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x18ac6dcce9cdfe3bc754ce910b4b97e56963c49a92e50f57d055adb562416b86",
        "urls": [
          "bzz-raw://d6b29b4a814dc26c3722e994a792f4cc1be86e6b8c2b2adc352ed54fb326593d",
          "dweb:/ipfs/Qma8a7XELNmUepiitaLyxJXW66urnXsvCwx1bMLmRw2Fpn"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945",
        "urls": [
          "bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf",
          "dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xb5d4816a3f37977b1efa07b5e715daa917e96fd28dec1805c4189653db4ea33a",
        "urls": [
          "bzz-raw://34338fa7f079f8d64f20d976f9bf908a710c8728f18c4b361b020b24fedfedf2",
          "dweb:/ipfs/QmYhwY1wi6vVLMUsJ32L3GiSR9HRaFhGL1Y3wRDjy41KXn"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea",
        "urls": [
          "bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973",
          "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "src/libraries/Burn.sol": {
        "keccak256": "0x90a795bcea3ef06d6d5011256c4bd63d1a4271f519246dbf1ee3e8f1c0e21010",
        "urls": [
          "bzz-raw://9f60c3aa77cf0c484ddda4754157cff4dc0e2eace4bea67990daff4c0612ab5f",
          "dweb:/ipfs/QmSYGanMFve9uBC17X7hFneSFnwnJxz86Jgh6MX9BRMweb"
        ],
        "license": "MIT"
      },
      "test/invariants/Burn.Gas.t.sol": {
        "keccak256": "0xa2170edd9ef37c8cac30aeb71c8e1f33ab450f3a93d91c9d8bfa0419b17dc35e",
        "urls": [
          "bzz-raw://f9fc990854ecb8f9bacaaec2cc2c8d75159799bbb101c0f390677d681ebd9d0d",
          "dweb:/ipfs/QmUgM5VvfqsW8MVPAo5aF24vyWiLFK4WQvU9ocrGWE1AwK"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 119,
        "contract": "test/invariants/Burn.Gas.t.sol:Burn_BurnGas_Invariant",
        "label": "IS_TEST",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 121,
        "contract": "test/invariants/Burn.Gas.t.sol:Burn_BurnGas_Invariant",
        "label": "_failed",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 3877,
        "contract": "test/invariants/Burn.Gas.t.sol:Burn_BurnGas_Invariant",
        "label": "stdChainsInitialized",
        "offset": 2,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 3898,
        "contract": "test/invariants/Burn.Gas.t.sol:Burn_BurnGas_Invariant",
        "label": "chains",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_string_memory_ptr,t_struct(Chain)3893_storage)"
      },
      {
        "astId": 3902,
        "contract": "test/invariants/Burn.Gas.t.sol:Burn_BurnGas_Invariant",
        "label": "defaultRpcUrls",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_string_memory_ptr,t_string_storage)"
      },
      {
        "astId": 3906,
        "contract": "test/invariants/Burn.Gas.t.sol:Burn_BurnGas_Invariant",
        "label": "idToAlias",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_string_storage)"
      },
      {
        "astId": 3909,
        "contract": "test/invariants/Burn.Gas.t.sol:Burn_BurnGas_Invariant",
        "label": "fallbackToDefaultRpcUrls",
        "offset": 0,
        "slot": "4",
        "type": "t_bool"
      },
      {
        "astId": 4575,
        "contract": "test/invariants/Burn.Gas.t.sol:Burn_BurnGas_Invariant",
        "label": "gasMeteringOff",
        "offset": 1,
        "slot": "4",
        "type": "t_bool"
      },
      {
        "astId": 6288,
        "contract": "test/invariants/Burn.Gas.t.sol:Burn_BurnGas_Invariant",
        "label": "stdstore",
        "offset": 0,
        "slot": "5",
        "type": "t_struct(StdStorage)7998_storage"
      },
      {
        "astId": 7036,
        "contract": "test/invariants/Burn.Gas.t.sol:Burn_BurnGas_Invariant",
        "label": "_excludedContracts",
        "offset": 0,
        "slot": "12",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 7039,
        "contract": "test/invariants/Burn.Gas.t.sol:Burn_BurnGas_Invariant",
        "label": "_excludedSenders",
        "offset": 0,
        "slot": "13",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 7042,
        "contract": "test/invariants/Burn.Gas.t.sol:Burn_BurnGas_Invariant",
        "label": "_targetedContracts",
        "offset": 0,
        "slot": "14",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 7045,
        "contract": "test/invariants/Burn.Gas.t.sol:Burn_BurnGas_Invariant",
        "label": "_targetedSenders",
        "offset": 0,
        "slot": "15",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 7048,
        "contract": "test/invariants/Burn.Gas.t.sol:Burn_BurnGas_Invariant",
        "label": "_excludedArtifacts",
        "offset": 0,
        "slot": "16",
        "type": "t_array(t_string_storage)dyn_storage"
      },
      {
        "astId": 7051,
        "contract": "test/invariants/Burn.Gas.t.sol:Burn_BurnGas_Invariant",
        "label": "_targetedArtifacts",
        "offset": 0,
        "slot": "17",
        "type": "t_array(t_string_storage)dyn_storage"
      },
      {
        "astId": 7055,
        "contract": "test/invariants/Burn.Gas.t.sol:Burn_BurnGas_Invariant",
        "label": "_targetedArtifactSelectors",
        "offset": 0,
        "slot": "18",
        "type": "t_array(t_struct(FuzzSelector)7033_storage)dyn_storage"
      },
      {
        "astId": 7059,
        "contract": "test/invariants/Burn.Gas.t.sol:Burn_BurnGas_Invariant",
        "label": "_targetedSelectors",
        "offset": 0,
        "slot": "19",
        "type": "t_array(t_struct(FuzzSelector)7033_storage)dyn_storage"
      },
      {
        "astId": 2384,
        "contract": "test/invariants/Burn.Gas.t.sol:Burn_BurnGas_Invariant",
        "label": "stdstore",
        "offset": 0,
        "slot": "20",
        "type": "t_struct(StdStorage)7998_storage"
      },
      {
        "astId": 151069,
        "contract": "test/invariants/Burn.Gas.t.sol:Burn_BurnGas_Invariant",
        "label": "actor",
        "offset": 0,
        "slot": "27",
        "type": "t_contract(Burn_GasBurner)151062"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32",
        "base": "t_address"
      },
      "t_array(t_bytes32)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32",
        "base": "t_bytes32"
      },
      "t_array(t_bytes4)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "bytes4[]",
        "numberOfBytes": "32",
        "base": "t_bytes4"
      },
      "t_array(t_string_storage)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32",
        "base": "t_string_storage"
      },
      "t_array(t_struct(FuzzSelector)7033_storage)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "struct StdInvariant.FuzzSelector[]",
        "numberOfBytes": "32",
        "base": "t_struct(FuzzSelector)7033_storage"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_bytes4": {
        "encoding": "inplace",
        "label": "bytes4",
        "numberOfBytes": "4"
      },
      "t_contract(Burn_GasBurner)151062": {
        "encoding": "inplace",
        "label": "contract Burn_GasBurner",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_bool)))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(bytes4 => mapping(bytes32 => bool)))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes4,t_mapping(t_bytes32,t_bool))"
      },
      "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_uint256)))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(bytes4 => mapping(bytes32 => uint256)))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes4,t_mapping(t_bytes32,t_uint256))"
      },
      "t_mapping(t_bytes32,t_bool)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_bytes32,t_uint256)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_bytes4,t_mapping(t_bytes32,t_bool))": {
        "encoding": "mapping",
        "key": "t_bytes4",
        "label": "mapping(bytes4 => mapping(bytes32 => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes32,t_bool)"
      },
      "t_mapping(t_bytes4,t_mapping(t_bytes32,t_uint256))": {
        "encoding": "mapping",
        "key": "t_bytes4",
        "label": "mapping(bytes4 => mapping(bytes32 => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes32,t_uint256)"
      },
      "t_mapping(t_string_memory_ptr,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_mapping(t_string_memory_ptr,t_struct(Chain)3893_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct StdChains.Chain)",
        "numberOfBytes": "32",
        "value": "t_struct(Chain)3893_storage"
      },
      "t_mapping(t_uint256,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Chain)3893_storage": {
        "encoding": "inplace",
        "label": "struct StdChains.Chain",
        "numberOfBytes": "128",
        "members": [
          {
            "astId": 3886,
            "contract": "test/invariants/Burn.Gas.t.sol:Burn_BurnGas_Invariant",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 3888,
            "contract": "test/invariants/Burn.Gas.t.sol:Burn_BurnGas_Invariant",
            "label": "chainId",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 3890,
            "contract": "test/invariants/Burn.Gas.t.sol:Burn_BurnGas_Invariant",
            "label": "chainAlias",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 3892,
            "contract": "test/invariants/Burn.Gas.t.sol:Burn_BurnGas_Invariant",
            "label": "rpcUrl",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          }
        ]
      },
      "t_struct(FuzzSelector)7033_storage": {
        "encoding": "inplace",
        "label": "struct StdInvariant.FuzzSelector",
        "numberOfBytes": "64",
        "members": [
          {
            "astId": 7029,
            "contract": "test/invariants/Burn.Gas.t.sol:Burn_BurnGas_Invariant",
            "label": "addr",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 7032,
            "contract": "test/invariants/Burn.Gas.t.sol:Burn_BurnGas_Invariant",
            "label": "selectors",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_bytes4)dyn_storage"
          }
        ]
      },
      "t_struct(StdStorage)7998_storage": {
        "encoding": "inplace",
        "label": "struct StdStorage",
        "numberOfBytes": "224",
        "members": [
          {
            "astId": 7978,
            "contract": "test/invariants/Burn.Gas.t.sol:Burn_BurnGas_Invariant",
            "label": "slots",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_uint256)))"
          },
          {
            "astId": 7986,
            "contract": "test/invariants/Burn.Gas.t.sol:Burn_BurnGas_Invariant",
            "label": "finds",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_bool)))"
          },
          {
            "astId": 7989,
            "contract": "test/invariants/Burn.Gas.t.sol:Burn_BurnGas_Invariant",
            "label": "_keys",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_bytes32)dyn_storage"
          },
          {
            "astId": 7991,
            "contract": "test/invariants/Burn.Gas.t.sol:Burn_BurnGas_Invariant",
            "label": "_sig",
            "offset": 0,
            "slot": "3",
            "type": "t_bytes4"
          },
          {
            "astId": 7993,
            "contract": "test/invariants/Burn.Gas.t.sol:Burn_BurnGas_Invariant",
            "label": "_depth",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 7995,
            "contract": "test/invariants/Burn.Gas.t.sol:Burn_BurnGas_Invariant",
            "label": "_target",
            "offset": 0,
            "slot": "5",
            "type": "t_address"
          },
          {
            "astId": 7997,
            "contract": "test/invariants/Burn.Gas.t.sol:Burn_BurnGas_Invariant",
            "label": "_set",
            "offset": 0,
            "slot": "6",
            "type": "t_bytes32"
          }
        ]
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  },
  "userdoc": {
    "version": 1,
    "kind": "user"
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "methods": {
      "invariant_burn_gas()": {}
    }
  },
  "ast": {
    "absolutePath": "test/invariants/Burn.Gas.t.sol",
    "id": 151136,
    "exportedSymbols": {
      "Burn": [
        76404
      ],
      "Burn_BurnGas_Invariant": [
        151135
      ],
      "Burn_GasBurner": [
        151062
      ],
      "StdInvariant": [
        7248
      ],
      "StdUtils": [
        11490
      ],
      "Test": [
        11539
      ],
      "Vm": [
        13045
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:2261:311",
    "nodes": [
      {
        "id": 150980,
        "nodeType": "PragmaDirective",
        "src": "32:23:311",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 150982,
        "nodeType": "ImportDirective",
        "src": "57:50:311",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/StdUtils.sol",
        "file": "forge-std/StdUtils.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 151136,
        "sourceUnit": 11491,
        "symbolAliases": [
          {
            "foreign": {
              "id": 150981,
              "name": "StdUtils",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 11490,
              "src": "66:8:311",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 150984,
        "nodeType": "ImportDirective",
        "src": "108:42:311",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 151136,
        "sourceUnit": 11540,
        "symbolAliases": [
          {
            "foreign": {
              "id": 150983,
              "name": "Test",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 11539,
              "src": "117:4:311",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 150986,
        "nodeType": "ImportDirective",
        "src": "151:38:311",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Vm.sol",
        "file": "forge-std/Vm.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 151136,
        "sourceUnit": 13046,
        "symbolAliases": [
          {
            "foreign": {
              "id": 150985,
              "name": "Vm",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 13045,
              "src": "160:2:311",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 150988,
        "nodeType": "ImportDirective",
        "src": "191:58:311",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/StdInvariant.sol",
        "file": "forge-std/StdInvariant.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 151136,
        "sourceUnit": 7249,
        "symbolAliases": [
          {
            "foreign": {
              "id": 150987,
              "name": "StdInvariant",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 7248,
              "src": "200:12:311",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 150990,
        "nodeType": "ImportDirective",
        "src": "250:46:311",
        "nodes": [],
        "absolutePath": "src/libraries/Burn.sol",
        "file": "src/libraries/Burn.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 151136,
        "sourceUnit": 76421,
        "symbolAliases": [
          {
            "foreign": {
              "id": 150989,
              "name": "Burn",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 76404,
              "src": "259:4:311",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 151062,
        "nodeType": "ContractDefinition",
        "src": "298:1057:311",
        "nodes": [
          {
            "id": 150995,
            "nodeType": "VariableDeclaration",
            "src": "340:14:311",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "vm",
            "nameLocation": "352:2:311",
            "scope": 151062,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Vm_$13045",
              "typeString": "contract Vm"
            },
            "typeName": {
              "id": 150994,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 150993,
                "name": "Vm",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 13045,
                "src": "340:2:311"
              },
              "referencedDeclaration": 13045,
              "src": "340:2:311",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Vm_$13045",
                "typeString": "contract Vm"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 150997,
            "nodeType": "VariableDeclaration",
            "src": "360:25:311",
            "nodes": [],
            "constant": false,
            "functionSelector": "79df245a",
            "mutability": "mutable",
            "name": "failedGasBurn",
            "nameLocation": "372:13:311",
            "scope": 151062,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 150996,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "360:4:311",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 151008,
            "nodeType": "FunctionDefinition",
            "src": "392:45:311",
            "nodes": [],
            "body": {
              "id": 151007,
              "nodeType": "Block",
              "src": "412:25:311",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 151005,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 151003,
                      "name": "vm",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 150995,
                      "src": "422:2:311",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Vm_$13045",
                        "typeString": "contract Vm"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 151004,
                      "name": "_vm",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 151000,
                      "src": "427:3:311",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Vm_$13045",
                        "typeString": "contract Vm"
                      }
                    },
                    "src": "422:8:311",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Vm_$13045",
                      "typeString": "contract Vm"
                    }
                  },
                  "id": 151006,
                  "nodeType": "ExpressionStatement",
                  "src": "422:8:311"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 151001,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 151000,
                  "mutability": "mutable",
                  "name": "_vm",
                  "nameLocation": "407:3:311",
                  "nodeType": "VariableDeclaration",
                  "scope": 151008,
                  "src": "404:6:311",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Vm_$13045",
                    "typeString": "contract Vm"
                  },
                  "typeName": {
                    "id": 150999,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 150998,
                      "name": "Vm",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 13045,
                      "src": "404:2:311"
                    },
                    "referencedDeclaration": 13045,
                    "src": "404:2:311",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Vm_$13045",
                      "typeString": "contract Vm"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "403:8:311"
            },
            "returnParameters": {
              "id": 151002,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "412:0:311"
            },
            "scope": 151062,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 151061,
            "nodeType": "FunctionDefinition",
            "src": "647:706:311",
            "nodes": [],
            "body": {
              "id": 151060,
              "nodeType": "Block",
              "src": "689:664:311",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    151015
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 151015,
                      "mutability": "mutable",
                      "name": "MAX_RESOURCE_LIMIT",
                      "nameLocation": "758:18:311",
                      "nodeType": "VariableDeclaration",
                      "scope": 151060,
                      "src": "750:26:311",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 151014,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "750:7:311",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 151017,
                  "initialValue": {
                    "hexValue": "385f3030305f303030",
                    "id": 151016,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "779:9:311",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_8000000_by_1",
                      "typeString": "int_const 8000000"
                    },
                    "value": "8_000_000"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "750:38:311"
                },
                {
                  "assignments": [
                    151019
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 151019,
                      "mutability": "mutable",
                      "name": "value",
                      "nameLocation": "806:5:311",
                      "nodeType": "VariableDeclaration",
                      "scope": 151060,
                      "src": "798:13:311",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 151018,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "798:7:311",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 151025,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 151021,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 151011,
                        "src": "820:6:311",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 151022,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "828:1:311",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 151023,
                        "name": "MAX_RESOURCE_LIMIT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 151015,
                        "src": "831:18:311",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 151020,
                      "name": "bound",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10842,
                        10992
                      ],
                      "referencedDeclaration": 10842,
                      "src": "814:5:311",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) view returns (uint256)"
                      }
                    },
                    "id": 151024,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "814:36:311",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "798:52:311"
                },
                {
                  "assignments": [
                    151027
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 151027,
                      "mutability": "mutable",
                      "name": "preBurnGas",
                      "nameLocation": "923:10:311",
                      "nodeType": "VariableDeclaration",
                      "scope": 151060,
                      "src": "915:18:311",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 151026,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "915:7:311",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 151030,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 151028,
                      "name": "gasleft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -7,
                      "src": "936:7:311",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 151029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "936:9:311",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "915:30:311"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 151034,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 151019,
                        "src": "997:5:311",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 151031,
                        "name": "Burn",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76404,
                        "src": "988:4:311",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Burn_$76404_$",
                          "typeString": "type(library Burn)"
                        }
                      },
                      "id": 151033,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "gas",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 76403,
                      "src": "988:8:311",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) view"
                      }
                    },
                    "id": 151035,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "988:15:311",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 151036,
                  "nodeType": "ExpressionStatement",
                  "src": "988:15:311"
                },
                {
                  "assignments": [
                    151038
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 151038,
                      "mutability": "mutable",
                      "name": "postBurnGas",
                      "nameLocation": "1067:11:311",
                      "nodeType": "VariableDeclaration",
                      "scope": 151060,
                      "src": "1059:19:311",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 151037,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1059:7:311",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 151041,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 151039,
                      "name": "gasleft",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -7,
                      "src": "1081:7:311",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
                        "typeString": "function () view returns (uint256)"
                      }
                    },
                    "id": 151040,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1081:9:311",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1059:31:311"
                },
                {
                  "id": 151059,
                  "nodeType": "UncheckedBlock",
                  "src": "1186:161:311",
                  "statements": [
                    {
                      "condition": {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 151052,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 151046,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 151044,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 151042,
                              "name": "postBurnGas",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 151038,
                              "src": "1214:11:311",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 151043,
                              "name": "preBurnGas",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 151027,
                              "src": "1228:10:311",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1214:24:311",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "id": 151045,
                            "name": "value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 151019,
                            "src": "1242:5:311",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1214:33:311",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 151051,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 151049,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 151047,
                              "name": "preBurnGas",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 151027,
                              "src": "1251:10:311",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 151048,
                              "name": "value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 151019,
                              "src": "1264:5:311",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "1251:18:311",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 151050,
                            "name": "preBurnGas",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 151027,
                            "src": "1272:10:311",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "1251:31:311",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "1214:68:311",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "id": 151058,
                      "nodeType": "IfStatement",
                      "src": "1210:127:311",
                      "trueBody": {
                        "id": 151057,
                        "nodeType": "Block",
                        "src": "1284:53:311",
                        "statements": [
                          {
                            "expression": {
                              "id": 151055,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftHandSide": {
                                "id": 151053,
                                "name": "failedGasBurn",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 150997,
                                "src": "1302:13:311",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "Assignment",
                              "operator": "=",
                              "rightHandSide": {
                                "hexValue": "74727565",
                                "id": 151054,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1318:4:311",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "true"
                              },
                              "src": "1302:20:311",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "id": 151056,
                            "nodeType": "ExpressionStatement",
                            "src": "1302:20:311"
                          }
                        ]
                      }
                    }
                  ]
                }
              ]
            },
            "documentation": {
              "id": 151009,
              "nodeType": "StructuredDocumentation",
              "src": "443:199:311",
              "text": "@notice Takes an integer amount of gas to burn through the Burn library and\n         updates the contract state if at least that amount of gas was not burned\n         by the library"
            },
            "functionSelector": "4ad5d16f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "burnGas",
            "nameLocation": "656:7:311",
            "parameters": {
              "id": 151012,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 151011,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "672:6:311",
                  "nodeType": "VariableDeclaration",
                  "scope": 151061,
                  "src": "664:14:311",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 151010,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "664:7:311",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "663:16:311"
            },
            "returnParameters": {
              "id": 151013,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "689:0:311"
            },
            "scope": 151062,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 150991,
              "name": "StdUtils",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11490,
              "src": "325:8:311"
            },
            "id": 150992,
            "nodeType": "InheritanceSpecifier",
            "src": "325:8:311"
          }
        ],
        "canonicalName": "Burn_GasBurner",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          151062,
          11490
        ],
        "name": "Burn_GasBurner",
        "nameLocation": "307:14:311",
        "scope": 151136,
        "usedErrors": []
      },
      {
        "id": 151135,
        "nodeType": "ContractDefinition",
        "src": "1357:935:311",
        "nodes": [
          {
            "id": 151069,
            "nodeType": "VariableDeclaration",
            "src": "1417:29:311",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "actor",
            "nameLocation": "1441:5:311",
            "scope": 151135,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Burn_GasBurner_$151062",
              "typeString": "contract Burn_GasBurner"
            },
            "typeName": {
              "id": 151068,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 151067,
                "name": "Burn_GasBurner",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 151062,
                "src": "1417:14:311"
              },
              "referencedDeclaration": 151062,
              "src": "1417:14:311",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Burn_GasBurner_$151062",
                "typeString": "contract Burn_GasBurner"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 151122,
            "nodeType": "FunctionDefinition",
            "src": "1453:386:311",
            "nodes": [],
            "body": {
              "id": 151121,
              "nodeType": "Block",
              "src": "1477:362:311",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 151078,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 151072,
                      "name": "actor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 151069,
                      "src": "1525:5:311",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Burn_GasBurner_$151062",
                        "typeString": "contract Burn_GasBurner"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 151076,
                          "name": "vm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2381,
                          "src": "1552:2:311",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Vm_$13045",
                            "typeString": "contract Vm"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_Vm_$13045",
                            "typeString": "contract Vm"
                          }
                        ],
                        "id": 151075,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1533:18:311",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_Vm_$13045_$returns$_t_contract$_Burn_GasBurner_$151062_$",
                          "typeString": "function (contract Vm) returns (contract Burn_GasBurner)"
                        },
                        "typeName": {
                          "id": 151074,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 151073,
                            "name": "Burn_GasBurner",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 151062,
                            "src": "1537:14:311"
                          },
                          "referencedDeclaration": 151062,
                          "src": "1537:14:311",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Burn_GasBurner_$151062",
                            "typeString": "contract Burn_GasBurner"
                          }
                        }
                      },
                      "id": 151077,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1533:22:311",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Burn_GasBurner_$151062",
                        "typeString": "contract Burn_GasBurner"
                      }
                    },
                    "src": "1525:30:311",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Burn_GasBurner_$151062",
                      "typeString": "contract Burn_GasBurner"
                    }
                  },
                  "id": 151079,
                  "nodeType": "ExpressionStatement",
                  "src": "1525:30:311"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 151083,
                            "name": "actor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 151069,
                            "src": "1589:5:311",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Burn_GasBurner_$151062",
                              "typeString": "contract Burn_GasBurner"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Burn_GasBurner_$151062",
                              "typeString": "contract Burn_GasBurner"
                            }
                          ],
                          "id": 151082,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1581:7:311",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 151081,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1581:7:311",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 151084,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1581:14:311",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 151080,
                      "name": "targetContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7132,
                      "src": "1566:14:311",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 151085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1566:30:311",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 151086,
                  "nodeType": "ExpressionStatement",
                  "src": "1566:30:311"
                },
                {
                  "assignments": [
                    151091
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 151091,
                      "mutability": "mutable",
                      "name": "selectors",
                      "nameLocation": "1623:9:311",
                      "nodeType": "VariableDeclaration",
                      "scope": 151121,
                      "src": "1607:25:311",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                        "typeString": "bytes4[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 151089,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "1607:6:311",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 151090,
                        "nodeType": "ArrayTypeName",
                        "src": "1607:8:311",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
                          "typeString": "bytes4[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 151097,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 151095,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1648:1:311",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 151094,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1635:12:311",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes4_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes4[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 151092,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "1639:6:311",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 151093,
                        "nodeType": "ArrayTypeName",
                        "src": "1639:8:311",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
                          "typeString": "bytes4[]"
                        }
                      }
                    },
                    "id": 151096,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1635:15:311",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                      "typeString": "bytes4[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1607:43:311"
                },
                {
                  "expression": {
                    "id": 151104,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 151098,
                        "name": "selectors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 151091,
                        "src": "1660:9:311",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[] memory"
                        }
                      },
                      "id": 151100,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 151099,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1670:1:311",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1660:12:311",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 151101,
                          "name": "actor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 151069,
                          "src": "1675:5:311",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Burn_GasBurner_$151062",
                            "typeString": "contract Burn_GasBurner"
                          }
                        },
                        "id": 151102,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "burnGas",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 151061,
                        "src": "1675:13:311",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                          "typeString": "function (uint256) external"
                        }
                      },
                      "id": 151103,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "src": "1675:22:311",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "1660:37:311",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "id": 151105,
                  "nodeType": "ExpressionStatement",
                  "src": "1660:37:311"
                },
                {
                  "assignments": [
                    151108
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 151108,
                      "mutability": "mutable",
                      "name": "selector",
                      "nameLocation": "1727:8:311",
                      "nodeType": "VariableDeclaration",
                      "scope": 151121,
                      "src": "1707:28:311",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FuzzSelector_$7033_memory_ptr",
                        "typeString": "struct StdInvariant.FuzzSelector"
                      },
                      "typeName": {
                        "id": 151107,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 151106,
                          "name": "FuzzSelector",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 7033,
                          "src": "1707:12:311"
                        },
                        "referencedDeclaration": 7033,
                        "src": "1707:12:311",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FuzzSelector_$7033_storage_ptr",
                          "typeString": "struct StdInvariant.FuzzSelector"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 151116,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 151112,
                            "name": "actor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 151069,
                            "src": "1767:5:311",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Burn_GasBurner_$151062",
                              "typeString": "contract Burn_GasBurner"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_Burn_GasBurner_$151062",
                              "typeString": "contract Burn_GasBurner"
                            }
                          ],
                          "id": 151111,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1759:7:311",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 151110,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1759:7:311",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 151113,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1759:14:311",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 151114,
                        "name": "selectors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 151091,
                        "src": "1786:9:311",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[] memory"
                        }
                      ],
                      "id": 151109,
                      "name": "FuzzSelector",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7033,
                      "src": "1738:12:311",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_FuzzSelector_$7033_storage_ptr_$",
                        "typeString": "type(struct StdInvariant.FuzzSelector storage pointer)"
                      }
                    },
                    "id": 151115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "addr",
                      "selectors"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "1738:60:311",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FuzzSelector_$7033_memory_ptr",
                      "typeString": "struct StdInvariant.FuzzSelector memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1707:91:311"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 151118,
                        "name": "selector",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 151108,
                        "src": "1823:8:311",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FuzzSelector_$7033_memory_ptr",
                          "typeString": "struct StdInvariant.FuzzSelector memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_FuzzSelector_$7033_memory_ptr",
                          "typeString": "struct StdInvariant.FuzzSelector memory"
                        }
                      ],
                      "id": 151117,
                      "name": "targetSelector",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7145,
                      "src": "1808:14:311",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_FuzzSelector_$7033_memory_ptr_$returns$__$",
                        "typeString": "function (struct StdInvariant.FuzzSelector memory)"
                      }
                    },
                    "id": 151119,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1808:24:311",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 151120,
                  "nodeType": "ExpressionStatement",
                  "src": "1808:24:311"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "1462:5:311",
            "parameters": {
              "id": 151070,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1467:2:311"
            },
            "returnParameters": {
              "id": 151071,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1477:0:311"
            },
            "scope": 151135,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 151134,
            "nodeType": "FunctionDefinition",
            "src": "2110:180:311",
            "nodes": [],
            "body": {
              "id": 151133,
              "nodeType": "Block",
              "src": "2149:141:311",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 151127,
                            "name": "actor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 151069,
                            "src": "2254:5:311",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Burn_GasBurner_$151062",
                              "typeString": "contract Burn_GasBurner"
                            }
                          },
                          "id": 151128,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "failedGasBurn",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 150997,
                          "src": "2254:19:311",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                            "typeString": "function () view external returns (bool)"
                          }
                        },
                        "id": 151129,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2254:21:311",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 151130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2277:5:311",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 151126,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2553,
                        2578,
                        2591,
                        2607,
                        2649,
                        2691,
                        2733,
                        2770,
                        2807,
                        2844,
                        351,
                        376,
                        406,
                        431,
                        490,
                        515,
                        545,
                        570,
                        2043,
                        2078
                      ],
                      "referencedDeclaration": 2553,
                      "src": "2245:8:311",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (bool,bool)"
                      }
                    },
                    "id": 151131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2245:38:311",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 151132,
                  "nodeType": "ExpressionStatement",
                  "src": "2245:38:311"
                }
              ]
            },
            "documentation": {
              "id": 151123,
              "nodeType": "StructuredDocumentation",
              "src": "1845:260:311",
              "text": "@custom:invariant `gas(uint256)` always burns at least the amount of gas passed.\n                   Asserts that when `Burn.gas(uint256)` is called, it always burns\n                   at least the amount of gas passed to the function."
            },
            "functionSelector": "d45aad94",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "invariant_burn_gas",
            "nameLocation": "2119:18:311",
            "parameters": {
              "id": 151124,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2137:2:311"
            },
            "returnParameters": {
              "id": 151125,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2149:0:311"
            },
            "scope": 151135,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 151063,
              "name": "StdInvariant",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7248,
              "src": "1392:12:311"
            },
            "id": 151064,
            "nodeType": "InheritanceSpecifier",
            "src": "1392:12:311"
          },
          {
            "baseName": {
              "id": 151065,
              "name": "Test",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11539,
              "src": "1406:4:311"
            },
            "id": 151066,
            "nodeType": "InheritanceSpecifier",
            "src": "1406:4:311"
          }
        ],
        "canonicalName": "Burn_BurnGas_Invariant",
        "contractDependencies": [
          151062
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          151135,
          11539,
          2388,
          2385,
          11490,
          7248,
          6958,
          6279,
          4546,
          3852,
          2322
        ],
        "name": "Burn_BurnGas_Invariant",
        "nameLocation": "1366:22:311",
        "scope": 151136,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 311
}