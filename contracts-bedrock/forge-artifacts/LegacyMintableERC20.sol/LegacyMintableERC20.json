{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_l2Bridge",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_l1Token",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_symbol",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "Burn",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "_account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "Mint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "burn",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "l1Token",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "l2Bridge",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "_interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b506040516200156038038062001560833981016040819052620000349162000179565b8181600362000044838262000298565b50600462000053828262000298565b5050600580546001600160a01b039586166001600160a01b03199182161790915560068054969095169516949094179092555062000364915050565b80516001600160a01b0381168114620000a757600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600082601f830112620000d457600080fd5b81516001600160401b0380821115620000f157620000f1620000ac565b604051601f8301601f19908116603f011681019082821181831017156200011c576200011c620000ac565b816040528381526020925086838588010111156200013957600080fd5b600091505b838210156200015d57858201830151818301840152908201906200013e565b838211156200016f5760008385830101525b9695505050505050565b600080600080608085870312156200019057600080fd5b6200019b856200008f565b9350620001ab602086016200008f565b60408601519093506001600160401b0380821115620001c957600080fd5b620001d788838901620000c2565b93506060870151915080821115620001ee57600080fd5b50620001fd87828801620000c2565b91505092959194509250565b600181811c908216806200021e57607f821691505b6020821081036200023f57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200029357600081815260208120601f850160051c810160208610156200026e5750805b601f850160051c820191505b818110156200028f578281556001016200027a565b5050505b505050565b81516001600160401b03811115620002b457620002b4620000ac565b620002cc81620002c5845462000209565b8462000245565b602080601f831160018114620003045760008415620002eb5750858301515b600019600386901b1c1916600185901b1785556200028f565b600085815260208120601f198616915b82811015620003355788860151825594840194600190910190840162000314565b5085821015620003545787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b6111ec80620003746000396000f3fe608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063a9059cbb11610066578063a9059cbb14610215578063ae1f6aaf14610228578063c01e1bd61461026d578063dd62ed3e1461028d57600080fd5b806370a08231146101b157806395d89b41146101e75780639dc29fac146101ef578063a457c2d71461020257600080fd5b806323b872dd116100d357806323b872dd14610167578063313ce5671461017a578063395093511461018957806340c10f191461019c57600080fd5b806301ffc9a71461010557806306fdde031461012d578063095ea7b31461014257806318160ddd14610155575b600080fd5b610118610113366004610f95565b6102d3565b60405190151581526020015b60405180910390f35b610135610393565b6040516101249190610fde565b61011861015036600461107a565b610425565b6002545b604051908152602001610124565b6101186101753660046110a4565b61043d565b60405160128152602001610124565b61011861019736600461107a565b610461565b6101af6101aa36600461107a565b6104ad565b005b6101596101bf3660046110e0565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b610135610591565b6101af6101fd36600461107a565b6105a0565b61011861021036600461107a565b610673565b61011861022336600461107a565b610744565b6006546102489073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610124565b6005546102489073ffffffffffffffffffffffffffffffffffffffff1681565b61015961029b3660046110fb565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b60007f01ffc9a7a5cef8baa21ed3c5c0d7e23accb804b619e9333b597f47a0d84076e27f1d1d8b63000000000000000000000000000000000000000000000000000000007fffffffff0000000000000000000000000000000000000000000000000000000084167f01ffc9a700000000000000000000000000000000000000000000000000000000148061038b57507fffffffff00000000000000000000000000000000000000000000000000000000848116908216145b949350505050565b6060600380546103a29061112e565b80601f01602080910402602001604051908101604052809291908181526020018280546103ce9061112e565b801561041b5780601f106103f05761010080835404028352916020019161041b565b820191906000526020600020905b8154815290600101906020018083116103fe57829003601f168201915b5050505050905090565b600033610433818585610752565b5060019392505050565b60003361044b858285610906565b6104568585856109dd565b506001949350505050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490919061043390829086906104a89087906111b0565b610752565b60065473ffffffffffffffffffffffffffffffffffffffff163314610533576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f6e6c79204c32204272696467652063616e206d696e7420616e64206275726e60448201526064015b60405180910390fd5b61053d8282610c90565b8173ffffffffffffffffffffffffffffffffffffffff167f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d41213968858260405161058591815260200190565b60405180910390a25050565b6060600480546103a29061112e565b60065473ffffffffffffffffffffffffffffffffffffffff163314610621576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f6e6c79204c32204272696467652063616e206d696e7420616e64206275726e604482015260640161052a565b61062b8282610db0565b8173ffffffffffffffffffffffffffffffffffffffff167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca58260405161058591815260200190565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490919083811015610737576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f000000000000000000000000000000000000000000000000000000606482015260840161052a565b6104568286868403610752565b6000336104338185856109dd565b73ffffffffffffffffffffffffffffffffffffffff83166107f4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015260840161052a565b73ffffffffffffffffffffffffffffffffffffffff8216610897576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f7373000000000000000000000000000000000000000000000000000000000000606482015260840161052a565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146109d757818110156109ca576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161052a565b6109d78484848403610752565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8316610a80576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f6472657373000000000000000000000000000000000000000000000000000000606482015260840161052a565b73ffffffffffffffffffffffffffffffffffffffff8216610b23576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f6573730000000000000000000000000000000000000000000000000000000000606482015260840161052a565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205481811015610bd9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e63650000000000000000000000000000000000000000000000000000606482015260840161052a565b73ffffffffffffffffffffffffffffffffffffffff808516600090815260208190526040808220858503905591851681529081208054849290610c1d9084906111b0565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610c8391815260200190565b60405180910390a36109d7565b73ffffffffffffffffffffffffffffffffffffffff8216610d0d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161052a565b8060026000828254610d1f91906111b0565b909155505073ffffffffffffffffffffffffffffffffffffffff821660009081526020819052604081208054839290610d599084906111b0565b909155505060405181815273ffffffffffffffffffffffffffffffffffffffff8316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b73ffffffffffffffffffffffffffffffffffffffff8216610e53576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f7300000000000000000000000000000000000000000000000000000000000000606482015260840161052a565b73ffffffffffffffffffffffffffffffffffffffff821660009081526020819052604090205481811015610f09576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f6365000000000000000000000000000000000000000000000000000000000000606482015260840161052a565b73ffffffffffffffffffffffffffffffffffffffff83166000908152602081905260408120838303905560028054849290610f459084906111c8565b909155505060405182815260009073ffffffffffffffffffffffffffffffffffffffff8516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016108f9565b600060208284031215610fa757600080fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114610fd757600080fd5b9392505050565b600060208083528351808285015260005b8181101561100b57858101830151858201604001528201610fef565b8181111561101d576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461107557600080fd5b919050565b6000806040838503121561108d57600080fd5b61109683611051565b946020939093013593505050565b6000806000606084860312156110b957600080fd5b6110c284611051565b92506110d060208501611051565b9150604084013590509250925092565b6000602082840312156110f257600080fd5b610fd782611051565b6000806040838503121561110e57600080fd5b61111783611051565b915061112560208401611051565b90509250929050565b600181811c9082168061114257607f821691505b60208210810361117b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082198211156111c3576111c3611181565b500190565b6000828210156111da576111da611181565b50039056fea164736f6c634300080f000a",
    "sourceMap": "378:2196:117:-:0;;;1024:230;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1169:5;1176:7;2044:5:27;:13;1169:5:117;2044::27;:13;:::i;:::-;-1:-1:-1;2067:7:27;:17;2077:7;2067;:17;:::i;:::-;-1:-1:-1;;1199:7:117::1;:18:::0;;-1:-1:-1;;;;;1199:18:117;;::::1;-1:-1:-1::0;;;;;;1199:18:117;;::::1;;::::0;;;1227:8:::1;:20:::0;;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;-1:-1:-1;378:2196:117;;-1:-1:-1;;378:2196:117;14:177:156;93:13;;-1:-1:-1;;;;;135:31:156;;125:42;;115:70;;181:1;178;171:12;115:70;14:177;;;:::o;196:127::-;257:10;252:3;248:20;245:1;238:31;288:4;285:1;278:15;312:4;309:1;302:15;328:885;382:5;435:3;428:4;420:6;416:17;412:27;402:55;;453:1;450;443:12;402:55;476:13;;-1:-1:-1;;;;;538:10:156;;;535:36;;;551:18;;:::i;:::-;626:2;620:9;594:2;680:13;;-1:-1:-1;;676:22:156;;;700:2;672:31;668:40;656:53;;;724:18;;;744:22;;;721:46;718:72;;;770:18;;:::i;:::-;810:10;806:2;799:22;845:2;837:6;830:18;867:4;857:14;;912:3;907:2;902;894:6;890:15;886:24;883:33;880:53;;;929:1;926;919:12;880:53;951:1;942:10;;961:133;975:2;972:1;969:9;961:133;;;1063:14;;;1059:23;;1053:30;1032:14;;;1028:23;;1021:63;986:10;;;;961:133;;;1112:2;1109:1;1106:9;1103:80;;;1171:1;1166:2;1161;1153:6;1149:15;1145:24;1138:35;1103:80;1201:6;328:885;-1:-1:-1;;;;;;328:885:156:o;1218:733::-;1335:6;1343;1351;1359;1412:3;1400:9;1391:7;1387:23;1383:33;1380:53;;;1429:1;1426;1419:12;1380:53;1452:40;1482:9;1452:40;:::i;:::-;1442:50;;1511:49;1556:2;1545:9;1541:18;1511:49;:::i;:::-;1604:2;1589:18;;1583:25;1501:59;;-1:-1:-1;;;;;;1657:14:156;;;1654:34;;;1684:1;1681;1674:12;1654:34;1707:61;1760:7;1751:6;1740:9;1736:22;1707:61;:::i;:::-;1697:71;;1814:2;1803:9;1799:18;1793:25;1777:41;;1843:2;1833:8;1830:16;1827:36;;;1859:1;1856;1849:12;1827:36;;1882:63;1937:7;1926:8;1915:9;1911:24;1882:63;:::i;:::-;1872:73;;;1218:733;;;;;;;:::o;1956:380::-;2035:1;2031:12;;;;2078;;;2099:61;;2153:4;2145:6;2141:17;2131:27;;2099:61;2206:2;2198:6;2195:14;2175:18;2172:38;2169:161;;2252:10;2247:3;2243:20;2240:1;2233:31;2287:4;2284:1;2277:15;2315:4;2312:1;2305:15;2169:161;;1956:380;;;:::o;2467:545::-;2569:2;2564:3;2561:11;2558:448;;;2605:1;2630:5;2626:2;2619:17;2675:4;2671:2;2661:19;2745:2;2733:10;2729:19;2726:1;2722:27;2716:4;2712:38;2781:4;2769:10;2766:20;2763:47;;;-1:-1:-1;2804:4:156;2763:47;2859:2;2854:3;2850:12;2847:1;2843:20;2837:4;2833:31;2823:41;;2914:82;2932:2;2925:5;2922:13;2914:82;;;2977:17;;;2958:1;2947:13;2914:82;;;2918:3;;;2558:448;2467:545;;;:::o;3188:1352::-;3308:10;;-1:-1:-1;;;;;3330:30:156;;3327:56;;;3363:18;;:::i;:::-;3392:97;3482:6;3442:38;3474:4;3468:11;3442:38;:::i;:::-;3436:4;3392:97;:::i;:::-;3544:4;;3608:2;3597:14;;3625:1;3620:663;;;;4327:1;4344:6;4341:89;;;-1:-1:-1;4396:19:156;;;4390:26;4341:89;-1:-1:-1;;3145:1:156;3141:11;;;3137:24;3133:29;3123:40;3169:1;3165:11;;;3120:57;4443:81;;3590:944;;3620:663;2414:1;2407:14;;;2451:4;2438:18;;-1:-1:-1;;3656:20:156;;;3774:236;3788:7;3785:1;3782:14;3774:236;;;3877:19;;;3871:26;3856:42;;3969:27;;;;3937:1;3925:14;;;;3804:19;;3774:236;;;3778:3;4038:6;4029:7;4026:19;4023:201;;;4099:19;;;4093:26;-1:-1:-1;;4182:1:156;4178:14;;;4194:3;4174:24;4170:37;4166:42;4151:58;4136:74;;4023:201;-1:-1:-1;;;;;4270:1:156;4254:14;;;4250:22;4237:36;;-1:-1:-1;3188:1352:156:o;:::-;378:2196:117;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106101005760003560e01c806370a0823111610097578063a9059cbb11610066578063a9059cbb14610215578063ae1f6aaf14610228578063c01e1bd61461026d578063dd62ed3e1461028d57600080fd5b806370a08231146101b157806395d89b41146101e75780639dc29fac146101ef578063a457c2d71461020257600080fd5b806323b872dd116100d357806323b872dd14610167578063313ce5671461017a578063395093511461018957806340c10f191461019c57600080fd5b806301ffc9a71461010557806306fdde031461012d578063095ea7b31461014257806318160ddd14610155575b600080fd5b610118610113366004610f95565b6102d3565b60405190151581526020015b60405180910390f35b610135610393565b6040516101249190610fde565b61011861015036600461107a565b610425565b6002545b604051908152602001610124565b6101186101753660046110a4565b61043d565b60405160128152602001610124565b61011861019736600461107a565b610461565b6101af6101aa36600461107a565b6104ad565b005b6101596101bf3660046110e0565b73ffffffffffffffffffffffffffffffffffffffff1660009081526020819052604090205490565b610135610591565b6101af6101fd36600461107a565b6105a0565b61011861021036600461107a565b610673565b61011861022336600461107a565b610744565b6006546102489073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff9091168152602001610124565b6005546102489073ffffffffffffffffffffffffffffffffffffffff1681565b61015961029b3660046110fb565b73ffffffffffffffffffffffffffffffffffffffff918216600090815260016020908152604080832093909416825291909152205490565b60007f01ffc9a7a5cef8baa21ed3c5c0d7e23accb804b619e9333b597f47a0d84076e27f1d1d8b63000000000000000000000000000000000000000000000000000000007fffffffff0000000000000000000000000000000000000000000000000000000084167f01ffc9a700000000000000000000000000000000000000000000000000000000148061038b57507fffffffff00000000000000000000000000000000000000000000000000000000848116908216145b949350505050565b6060600380546103a29061112e565b80601f01602080910402602001604051908101604052809291908181526020018280546103ce9061112e565b801561041b5780601f106103f05761010080835404028352916020019161041b565b820191906000526020600020905b8154815290600101906020018083116103fe57829003601f168201915b5050505050905090565b600033610433818585610752565b5060019392505050565b60003361044b858285610906565b6104568585856109dd565b506001949350505050565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490919061043390829086906104a89087906111b0565b610752565b60065473ffffffffffffffffffffffffffffffffffffffff163314610533576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f6e6c79204c32204272696467652063616e206d696e7420616e64206275726e60448201526064015b60405180910390fd5b61053d8282610c90565b8173ffffffffffffffffffffffffffffffffffffffff167f0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d41213968858260405161058591815260200190565b60405180910390a25050565b6060600480546103a29061112e565b60065473ffffffffffffffffffffffffffffffffffffffff163314610621576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4f6e6c79204c32204272696467652063616e206d696e7420616e64206275726e604482015260640161052a565b61062b8282610db0565b8173ffffffffffffffffffffffffffffffffffffffff167fcc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca58260405161058591815260200190565b33600081815260016020908152604080832073ffffffffffffffffffffffffffffffffffffffff8716845290915281205490919083811015610737576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f7760448201527f207a65726f000000000000000000000000000000000000000000000000000000606482015260840161052a565b6104568286868403610752565b6000336104338185856109dd565b73ffffffffffffffffffffffffffffffffffffffff83166107f4576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015260840161052a565b73ffffffffffffffffffffffffffffffffffffffff8216610897576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f20616464726560448201527f7373000000000000000000000000000000000000000000000000000000000000606482015260840161052a565b73ffffffffffffffffffffffffffffffffffffffff83811660008181526001602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600160209081526040808320938616835292905220547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff81146109d757818110156109ca576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e6365000000604482015260640161052a565b6109d78484848403610752565b50505050565b73ffffffffffffffffffffffffffffffffffffffff8316610a80576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f20616460448201527f6472657373000000000000000000000000000000000000000000000000000000606482015260840161052a565b73ffffffffffffffffffffffffffffffffffffffff8216610b23576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201527f6573730000000000000000000000000000000000000000000000000000000000606482015260840161052a565b73ffffffffffffffffffffffffffffffffffffffff831660009081526020819052604090205481811015610bd9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e742065786365656473206260448201527f616c616e63650000000000000000000000000000000000000000000000000000606482015260840161052a565b73ffffffffffffffffffffffffffffffffffffffff808516600090815260208190526040808220858503905591851681529081208054849290610c1d9084906111b0565b925050819055508273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610c8391815260200190565b60405180910390a36109d7565b73ffffffffffffffffffffffffffffffffffffffff8216610d0d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f206164647265737300604482015260640161052a565b8060026000828254610d1f91906111b0565b909155505073ffffffffffffffffffffffffffffffffffffffff821660009081526020819052604081208054839290610d599084906111b0565b909155505060405181815273ffffffffffffffffffffffffffffffffffffffff8316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b73ffffffffffffffffffffffffffffffffffffffff8216610e53576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f2061646472657360448201527f7300000000000000000000000000000000000000000000000000000000000000606482015260840161052a565b73ffffffffffffffffffffffffffffffffffffffff821660009081526020819052604090205481811015610f09576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e60448201527f6365000000000000000000000000000000000000000000000000000000000000606482015260840161052a565b73ffffffffffffffffffffffffffffffffffffffff83166000908152602081905260408120838303905560028054849290610f459084906111c8565b909155505060405182815260009073ffffffffffffffffffffffffffffffffffffffff8516907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906020016108f9565b600060208284031215610fa757600080fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114610fd757600080fd5b9392505050565b600060208083528351808285015260005b8181101561100b57858101830151858201604001528201610fef565b8181111561101d576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016929092016040019392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461107557600080fd5b919050565b6000806040838503121561108d57600080fd5b61109683611051565b946020939093013593505050565b6000806000606084860312156110b957600080fd5b6110c284611051565b92506110d060208501611051565b9150604084013590509250925092565b6000602082840312156110f257600080fd5b610fd782611051565b6000806040838503121561110e57600080fd5b61111783611051565b915061112560208401611051565b90509250929050565b600181811c9082168061114257607f821691505b60208210810361117b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082198211156111c3576111c3611181565b500190565b6000828210156111da576111da611181565b50039056fea164736f6c634300080f000a",
    "sourceMap": "378:2196:117:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1502:448;;;;;;:::i;:::-;;:::i;:::-;;;516:14:156;;509:22;491:41;;479:2;464:18;1502:448:117;;;;;;;;2156:98:27;;;:::i;:::-;;;;;;;:::i;4433:197::-;;;;;;:::i;:::-;;:::i;3244:106::-;3331:12;;3244:106;;;1810:25:156;;;1798:2;1783:18;3244:106:27;1664:177:156;5192:286:27;;;;;;:::i;:::-;;:::i;3093:91::-;;;3175:2;2321:36:156;;2309:2;2294:18;3093:91:27;2179:184:156;5873:234:27;;;;;;:::i;:::-;;:::i;2114:142:117:-;;;;;;:::i;:::-;;:::i;:::-;;3408:125:27;;;;;;:::i;:::-;3508:18;;3482:7;3508:18;;;;;;;;;;;;3408:125;2367:102;;;:::i;2424:148:117:-;;;;;;:::i;:::-;;:::i;6594:427:27:-;;;;;;:::i;:::-;;:::i;3729:189::-;;;;;;:::i;:::-;;:::i;801:23:117:-;;;;;;;;;;;;2735:42:156;2723:55;;;2705:74;;2693:2;2678:18;801:23:117;2559:226:156;738:22:117;;;;;;;;;3976:149:27;;;;;;:::i;:::-;4091:18;;;;4065:7;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;3976:149;1502:448:117;1571:4;1627:38;1720:123;1860:39;;;;;;:83;;-1:-1:-1;1903:40:117;;;;;;;;1860:83;1853:90;1502:448;-1:-1:-1;;;;1502:448:117:o;2156:98:27:-;2210:13;2242:5;2235:12;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2156:98;:::o;4433:197::-;4516:4;719:10:39;4570:32:27;719:10:39;4586:7:27;4595:6;4570:8;:32::i;:::-;-1:-1:-1;4619:4:27;;4433:197;-1:-1:-1;;;4433:197:27:o;5192:286::-;5319:4;719:10:39;5375:38:27;5391:4;719:10:39;5406:6:27;5375:15;:38::i;:::-;5423:27;5433:4;5439:2;5443:6;5423:9;:27::i;:::-;-1:-1:-1;5467:4:27;;5192:286;-1:-1:-1;;;;5192:286:27:o;5873:234::-;719:10:39;5961:4:27;4091:18;;;:11;:18;;;;;;;;;:27;;;;;;;;;;5961:4;;719:10:39;6015:64:27;;719:10:39;;4091:27:27;;6040:38;;6068:10;;6040:38;:::i;:::-;6015:8;:64::i;2114:142:117:-;1394:8;;;;1380:10;:22;1372:67;;;;;;;4021:2:156;1372:67:117;;;4003:21:156;;;4040:18;;;4033:30;4099:34;4079:18;;;4072:62;4151:18;;1372:67:117;;;;;;;;;2196:19:::1;2202:3;2207:7;2196:5;:19::i;:::-;2236:3;2231:18;;;2241:7;2231:18;;;;1810:25:156::0;;1798:2;1783:18;;1664:177;2231:18:117::1;;;;;;;;2114:142:::0;;:::o;2367:102:27:-;2423:13;2455:7;2448:14;;;;;:::i;2424:148:117:-;1394:8;;;;1380:10;:22;1372:67;;;;;;;4021:2:156;1372:67:117;;;4003:21:156;;;4040:18;;;4033:30;4099:34;4079:18;;;4072:62;4151:18;;1372:67:117;3819:356:156;1372:67:117;2508:21:::1;2514:5;2521:7;2508:5;:21::i;:::-;2550:5;2545:20;;;2557:7;2545:20;;;;1810:25:156::0;;1798:2;1783:18;;1664:177;6594:427:27;719:10:39;6687:4:27;4091:18;;;:11;:18;;;;;;;;;:27;;;;;;;;;;6687:4;;719:10:39;6831:15:27;6811:16;:35;;6803:85;;;;;;;4382:2:156;6803:85:27;;;4364:21:156;4421:2;4401:18;;;4394:30;4460:34;4440:18;;;4433:62;4531:7;4511:18;;;4504:35;4556:19;;6803:85:27;4180:401:156;6803:85:27;6922:60;6931:5;6938:7;6966:15;6947:16;:34;6922:8;:60::i;3729:189::-;3808:4;719:10:39;3862:28:27;719:10:39;3879:2:27;3883:6;3862:9;:28::i;10110:370::-;10241:19;;;10233:68;;;;;;;4788:2:156;10233:68:27;;;4770:21:156;4827:2;4807:18;;;4800:30;4866:34;4846:18;;;4839:62;4937:6;4917:18;;;4910:34;4961:19;;10233:68:27;4586:400:156;10233:68:27;10319:21;;;10311:68;;;;;;;5193:2:156;10311:68:27;;;5175:21:156;5232:2;5212:18;;;5205:30;5271:34;5251:18;;;5244:62;5342:4;5322:18;;;5315:32;5364:19;;10311:68:27;4991:398:156;10311:68:27;10390:18;;;;;;;;:11;:18;;;;;;;;:27;;;;;;;;;;;;;:36;;;10441:32;;1810:25:156;;;10441:32:27;;1783:18:156;10441:32:27;;;;;;;;10110:370;;;:::o;10761:441::-;4091:18;;;;10891:24;4091:18;;;:11;:18;;;;;;;;:27;;;;;;;;;;10977:17;10957:37;;10953:243;;11038:6;11018:16;:26;;11010:68;;;;;;;5596:2:156;11010:68:27;;;5578:21:156;5635:2;5615:18;;;5608:30;5674:31;5654:18;;;5647:59;5723:18;;11010:68:27;5394:353:156;11010:68:27;11120:51;11129:5;11136:7;11164:6;11145:16;:25;11120:8;:51::i;:::-;10881:321;10761:441;;;:::o;7475:651::-;7601:18;;;7593:68;;;;;;;5954:2:156;7593:68:27;;;5936:21:156;5993:2;5973:18;;;5966:30;6032:34;6012:18;;;6005:62;6103:7;6083:18;;;6076:35;6128:19;;7593:68:27;5752:401:156;7593:68:27;7679:16;;;7671:64;;;;;;;6360:2:156;7671:64:27;;;6342:21:156;6399:2;6379:18;;;6372:30;6438:34;6418:18;;;6411:62;6509:5;6489:18;;;6482:33;6532:19;;7671:64:27;6158:399:156;7671:64:27;7817:15;;;7795:19;7817:15;;;;;;;;;;;7850:21;;;;7842:72;;;;;;;6764:2:156;7842:72:27;;;6746:21:156;6803:2;6783:18;;;6776:30;6842:34;6822:18;;;6815:62;6913:8;6893:18;;;6886:36;6939:19;;7842:72:27;6562:402:156;7842:72:27;7948:15;;;;:9;:15;;;;;;;;;;;7966:20;;;7948:38;;8006:13;;;;;;;;:23;;7980:6;;7948:9;8006:23;;7980:6;;8006:23;:::i;:::-;;;;;;;;8060:2;8045:26;;8054:4;8045:26;;;8064:6;8045:26;;;;1810:25:156;;1798:2;1783:18;;1664:177;8045:26:27;;;;;;;;8082:37;9111:576;8402:389;8485:21;;;8477:65;;;;;;;7171:2:156;8477:65:27;;;7153:21:156;7210:2;7190:18;;;7183:30;7249:33;7229:18;;;7222:61;7300:18;;8477:65:27;6969:355:156;8477:65:27;8629:6;8613:12;;:22;;;;;;;:::i;:::-;;;;-1:-1:-1;;8645:18:27;;;:9;:18;;;;;;;;;;:28;;8667:6;;8645:9;:28;;8667:6;;8645:28;:::i;:::-;;;;-1:-1:-1;;8688:37:27;;1810:25:156;;;8688:37:27;;;;8705:1;;8688:37;;1798:2:156;1783:18;8688:37:27;;;;;;;8402:389;;:::o;9111:576::-;9194:21;;;9186:67;;;;;;;7531:2:156;9186:67:27;;;7513:21:156;7570:2;7550:18;;;7543:30;7609:34;7589:18;;;7582:62;7680:3;7660:18;;;7653:31;7701:19;;9186:67:27;7329:397:156;9186:67:27;9349:18;;;9324:22;9349:18;;;;;;;;;;;9385:24;;;;9377:71;;;;;;;7933:2:156;9377:71:27;;;7915:21:156;7972:2;7952:18;;;7945:30;8011:34;7991:18;;;7984:62;8082:4;8062:18;;;8055:32;8104:19;;9377:71:27;7731:398:156;9377:71:27;9482:18;;;:9;:18;;;;;;;;;;9503:23;;;9482:44;;9546:12;:22;;9520:6;;9482:9;9546:22;;9520:6;;9546:22;:::i;:::-;;;;-1:-1:-1;;9584:37:27;;1810:25:156;;;9610:1:27;;9584:37;;;;;;1798:2:156;1783:18;9584:37:27;1664:177:156;14:332;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;180:9;167:23;230:66;223:5;219:78;212:5;209:89;199:117;;312:1;309;302:12;199:117;335:5;14:332;-1:-1:-1;;;14:332:156:o;543:656::-;655:4;684:2;713;702:9;695:21;745:6;739:13;788:6;783:2;772:9;768:18;761:34;813:1;823:140;837:6;834:1;831:13;823:140;;;932:14;;;928:23;;922:30;898:17;;;917:2;894:26;887:66;852:10;;823:140;;;981:6;978:1;975:13;972:91;;;1051:1;1046:2;1037:6;1026:9;1022:22;1018:31;1011:42;972:91;-1:-1:-1;1115:2:156;1103:15;1120:66;1099:88;1084:104;;;;1190:2;1080:113;;543:656;-1:-1:-1;;;543:656:156:o;1204:196::-;1272:20;;1332:42;1321:54;;1311:65;;1301:93;;1390:1;1387;1380:12;1301:93;1204:196;;;:::o;1405:254::-;1473:6;1481;1534:2;1522:9;1513:7;1509:23;1505:32;1502:52;;;1550:1;1547;1540:12;1502:52;1573:29;1592:9;1573:29;:::i;:::-;1563:39;1649:2;1634:18;;;;1621:32;;-1:-1:-1;;;1405:254:156:o;1846:328::-;1923:6;1931;1939;1992:2;1980:9;1971:7;1967:23;1963:32;1960:52;;;2008:1;2005;1998:12;1960:52;2031:29;2050:9;2031:29;:::i;:::-;2021:39;;2079:38;2113:2;2102:9;2098:18;2079:38;:::i;:::-;2069:48;;2164:2;2153:9;2149:18;2136:32;2126:42;;1846:328;;;;;:::o;2368:186::-;2427:6;2480:2;2468:9;2459:7;2455:23;2451:32;2448:52;;;2496:1;2493;2486:12;2448:52;2519:29;2538:9;2519:29;:::i;2790:260::-;2858:6;2866;2919:2;2907:9;2898:7;2894:23;2890:32;2887:52;;;2935:1;2932;2925:12;2887:52;2958:29;2977:9;2958:29;:::i;:::-;2948:39;;3006:38;3040:2;3029:9;3025:18;3006:38;:::i;:::-;2996:48;;2790:260;;;;;:::o;3055:437::-;3134:1;3130:12;;;;3177;;;3198:61;;3252:4;3244:6;3240:17;3230:27;;3198:61;3305:2;3297:6;3294:14;3274:18;3271:38;3268:218;;3342:77;3339:1;3332:88;3443:4;3440:1;3433:15;3471:4;3468:1;3461:15;3268:218;;3055:437;;;:::o;3497:184::-;3549:77;3546:1;3539:88;3646:4;3643:1;3636:15;3670:4;3667:1;3660:15;3686:128;3726:3;3757:1;3753:6;3750:1;3747:13;3744:39;;;3763:18;;:::i;:::-;-1:-1:-1;3799:9:156;;3686:128::o;8134:125::-;8174:4;8202:1;8199;8196:8;8193:34;;;8207:18;;:::i;:::-;-1:-1:-1;8244:9:156;;8134:125::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "allowance(address,address)": "dd62ed3e",
    "approve(address,uint256)": "095ea7b3",
    "balanceOf(address)": "70a08231",
    "burn(address,uint256)": "9dc29fac",
    "decimals()": "313ce567",
    "decreaseAllowance(address,uint256)": "a457c2d7",
    "increaseAllowance(address,uint256)": "39509351",
    "l1Token()": "c01e1bd6",
    "l2Bridge()": "ae1f6aaf",
    "mint(address,uint256)": "40c10f19",
    "name()": "06fdde03",
    "supportsInterface(bytes4)": "01ffc9a7",
    "symbol()": "95d89b41",
    "totalSupply()": "18160ddd",
    "transfer(address,uint256)": "a9059cbb",
    "transferFrom(address,address,uint256)": "23b872dd"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_l2Bridge\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_l1Token\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Burn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"Mint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"internalType\":\"uint8\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"subtractedValue\",\"type\":\"uint256\"}],\"name\":\"decreaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"spender\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"addedValue\",\"type\":\"uint256\"}],\"name\":\"increaseAllowance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"l1Token\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"l2Bridge\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"_interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"allowance(address,address)\":{\"details\":\"See {IERC20-allowance}.\"},\"approve(address,uint256)\":{\"details\":\"See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address.\"},\"balanceOf(address)\":{\"details\":\"See {IERC20-balanceOf}.\"},\"burn(address,uint256)\":{\"params\":{\"_amount\":\"The amount of tokens being burnt.\",\"_from\":\"The account having tokens burnt.\"}},\"constructor\":{\"params\":{\"_l1Token\":\"Address of the corresponding L1 token.\",\"_l2Bridge\":\"Address of the L2 standard bridge.\",\"_name\":\"ERC20 name.\",\"_symbol\":\"ERC20 symbol.\"}},\"decimals()\":{\"details\":\"Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}.\"},\"decreaseAllowance(address,uint256)\":{\"details\":\"Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`.\"},\"increaseAllowance(address,uint256)\":{\"details\":\"Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address.\"},\"mint(address,uint256)\":{\"params\":{\"_amount\":\"The amount of tokens to receive.\",\"_to\":\"The account receiving tokens.\"}},\"name()\":{\"details\":\"Returns the name of the token.\"},\"symbol()\":{\"details\":\"Returns the symbol of the token, usually a shorter version of the name.\"},\"totalSupply()\":{\"details\":\"See {IERC20-totalSupply}.\"},\"transfer(address,uint256)\":{\"details\":\"See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`.\"},\"transferFrom(address,address,uint256)\":{\"details\":\"See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`.\"}},\"title\":\"LegacyMintableERC20\",\"version\":1},\"userdoc\":{\"events\":{\"Burn(address,uint256)\":{\"notice\":\"Emitted when a token is burned by the bridge.\"},\"Mint(address,uint256)\":{\"notice\":\"Emitted when the token is minted by the bridge.\"}},\"kind\":\"user\",\"methods\":{\"burn(address,uint256)\":{\"notice\":\"Only the bridge can burn tokens.\"},\"l1Token()\":{\"notice\":\"The token on the remote domain.\"},\"l2Bridge()\":{\"notice\":\"The local bridge.\"},\"mint(address,uint256)\":{\"notice\":\"Only the bridge can mint tokens.\"},\"supportsInterface(bytes4)\":{\"notice\":\"EIP165 implementation.\"}},\"notice\":\"The legacy implementation of the OptimismMintableERC20. This         contract is deprecated and should no longer be used.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/legacy/LegacyMintableERC20.sol\":\"LegacyMintableERC20\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@cwia/=lib/clones-with-immutable-args/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/solmate/\",\":clones-with-immutable-args/=lib/clones-with-immutable-args/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"src/legacy/LegacyMintableERC20.sol\":{\"keccak256\":\"0x0b2dbfdc7425be6444be2894cdd0565f8da6cab59e1bbcfec7e7566898d9bec5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://463d34adcc4003d1b421c61a53bb8290c18f2f239f5f4b7ea9e41444b460800f\",\"dweb:/ipfs/QmbwpbPZ2wfVJQ4bKKjNsHibkBo28E5H6vbJFhRAvLPrpK\"]},\"src/universal/IOptimismMintableERC20.sol\":{\"keccak256\":\"0x6f8133b39efcbcbd5088f195dfacf1bedc3146508429c3865443909af735a04c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://adc36971e2e120458769f050428d9d2b0504516660345020c2521ee46e6d8abf\",\"dweb:/ipfs/QmPbFusQkZgGKpU8Fv5JoqL4oVeJtM3yqnhRGLY9eZT5zZ\"]},\"src/universal/OptimismMintableERC20.sol\":{\"keccak256\":\"0x239934f3d2f6fc94587461e080014f61c1f7f24150ef2173fd042c97eb416385\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85a184dba76a4fead2142d6b1ea7dc89efc3046b181961f8aff5f55ea9bc057f\",\"dweb:/ipfs/QmPdmrQhh6YhdK2r3969nPdjk1UUu4p1Q1BFrXutNFUHKt\"]},\"src/universal/Semver.sol\":{\"keccak256\":\"0x9de68ce536aee1aa616b4bf88d7ccc335460e6edd0e7170bdbf94c4fe3d41c60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5909c0b049b03a2bc24816ecf15b0aaf18c04a963174e1eba7624321bef330d\",\"dweb:/ipfs/QmeqdutwZWHqQMXauNR6WY8PrUpfsTiWTQyanbnGM9QqzT\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_l2Bridge",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_l1Token",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_symbol",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Approval",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Burn",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Mint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Transfer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "allowance",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "approve",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "balanceOf",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_from",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "burn"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "decimals",
          "outputs": [
            {
              "internalType": "uint8",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "subtractedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "decreaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "spender",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "addedValue",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "increaseAllowance",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "l1Token",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "l2Bridge",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "mint"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "_interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "symbol",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalSupply",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transfer",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferFrom",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "allowance(address,address)": {
            "details": "See {IERC20-allowance}."
          },
          "approve(address,uint256)": {
            "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
          },
          "balanceOf(address)": {
            "details": "See {IERC20-balanceOf}."
          },
          "burn(address,uint256)": {
            "params": {
              "_amount": "The amount of tokens being burnt.",
              "_from": "The account having tokens burnt."
            }
          },
          "constructor": {
            "params": {
              "_l1Token": "Address of the corresponding L1 token.",
              "_l2Bridge": "Address of the L2 standard bridge.",
              "_name": "ERC20 name.",
              "_symbol": "ERC20 symbol."
            }
          },
          "decimals()": {
            "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
          },
          "decreaseAllowance(address,uint256)": {
            "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
          },
          "increaseAllowance(address,uint256)": {
            "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
          },
          "mint(address,uint256)": {
            "params": {
              "_amount": "The amount of tokens to receive.",
              "_to": "The account receiving tokens."
            }
          },
          "name()": {
            "details": "Returns the name of the token."
          },
          "symbol()": {
            "details": "Returns the symbol of the token, usually a shorter version of the name."
          },
          "totalSupply()": {
            "details": "See {IERC20-totalSupply}."
          },
          "transfer(address,uint256)": {
            "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
          },
          "transferFrom(address,address,uint256)": {
            "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "burn(address,uint256)": {
            "notice": "Only the bridge can burn tokens."
          },
          "l1Token()": {
            "notice": "The token on the remote domain."
          },
          "l2Bridge()": {
            "notice": "The local bridge."
          },
          "mint(address,uint256)": {
            "notice": "Only the bridge can mint tokens."
          },
          "supportsInterface(bytes4)": {
            "notice": "EIP165 implementation."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@cwia/=lib/clones-with-immutable-args/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@rari-capital/solmate/=lib/solmate/",
        "clones-with-immutable-args/=lib/clones-with-immutable-args/src/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "safe-contracts/=lib/safe-contracts/contracts/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 999999
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "src/legacy/LegacyMintableERC20.sol": "LegacyMintableERC20"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238",
        "urls": [
          "bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0",
          "dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3",
        "urls": [
          "bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638",
          "dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "src/legacy/LegacyMintableERC20.sol": {
        "keccak256": "0x0b2dbfdc7425be6444be2894cdd0565f8da6cab59e1bbcfec7e7566898d9bec5",
        "urls": [
          "bzz-raw://463d34adcc4003d1b421c61a53bb8290c18f2f239f5f4b7ea9e41444b460800f",
          "dweb:/ipfs/QmbwpbPZ2wfVJQ4bKKjNsHibkBo28E5H6vbJFhRAvLPrpK"
        ],
        "license": "MIT"
      },
      "src/universal/IOptimismMintableERC20.sol": {
        "keccak256": "0x6f8133b39efcbcbd5088f195dfacf1bedc3146508429c3865443909af735a04c",
        "urls": [
          "bzz-raw://adc36971e2e120458769f050428d9d2b0504516660345020c2521ee46e6d8abf",
          "dweb:/ipfs/QmPbFusQkZgGKpU8Fv5JoqL4oVeJtM3yqnhRGLY9eZT5zZ"
        ],
        "license": "MIT"
      },
      "src/universal/OptimismMintableERC20.sol": {
        "keccak256": "0x239934f3d2f6fc94587461e080014f61c1f7f24150ef2173fd042c97eb416385",
        "urls": [
          "bzz-raw://85a184dba76a4fead2142d6b1ea7dc89efc3046b181961f8aff5f55ea9bc057f",
          "dweb:/ipfs/QmPdmrQhh6YhdK2r3969nPdjk1UUu4p1Q1BFrXutNFUHKt"
        ],
        "license": "MIT"
      },
      "src/universal/Semver.sol": {
        "keccak256": "0x9de68ce536aee1aa616b4bf88d7ccc335460e6edd0e7170bdbf94c4fe3d41c60",
        "urls": [
          "bzz-raw://d5909c0b049b03a2bc24816ecf15b0aaf18c04a963174e1eba7624321bef330d",
          "dweb:/ipfs/QmeqdutwZWHqQMXauNR6WY8PrUpfsTiWTQyanbnGM9QqzT"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 30638,
        "contract": "src/legacy/LegacyMintableERC20.sol:LegacyMintableERC20",
        "label": "_balances",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 30644,
        "contract": "src/legacy/LegacyMintableERC20.sol:LegacyMintableERC20",
        "label": "_allowances",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 30646,
        "contract": "src/legacy/LegacyMintableERC20.sol:LegacyMintableERC20",
        "label": "_totalSupply",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      },
      {
        "astId": 30648,
        "contract": "src/legacy/LegacyMintableERC20.sol:LegacyMintableERC20",
        "label": "_name",
        "offset": 0,
        "slot": "3",
        "type": "t_string_storage"
      },
      {
        "astId": 30650,
        "contract": "src/legacy/LegacyMintableERC20.sol:LegacyMintableERC20",
        "label": "_symbol",
        "offset": 0,
        "slot": "4",
        "type": "t_string_storage"
      },
      {
        "astId": 59423,
        "contract": "src/legacy/LegacyMintableERC20.sol:LegacyMintableERC20",
        "label": "l1Token",
        "offset": 0,
        "slot": "5",
        "type": "t_address"
      },
      {
        "astId": 59426,
        "contract": "src/legacy/LegacyMintableERC20.sol:LegacyMintableERC20",
        "label": "l2Bridge",
        "offset": 0,
        "slot": "6",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  },
  "userdoc": {
    "version": 1,
    "kind": "user",
    "methods": {
      "burn(address,uint256)": {
        "notice": "Only the bridge can burn tokens."
      },
      "l1Token()": {
        "notice": "The token on the remote domain."
      },
      "l2Bridge()": {
        "notice": "The local bridge."
      },
      "mint(address,uint256)": {
        "notice": "Only the bridge can mint tokens."
      },
      "supportsInterface(bytes4)": {
        "notice": "EIP165 implementation."
      }
    },
    "events": {
      "Burn(address,uint256)": {
        "notice": "Emitted when a token is burned by the bridge."
      },
      "Mint(address,uint256)": {
        "notice": "Emitted when the token is minted by the bridge."
      }
    },
    "notice": "The legacy implementation of the OptimismMintableERC20. This         contract is deprecated and should no longer be used."
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IERC20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IERC20-approve}. NOTE: If `amount` is the maximum `uint256`, the allowance is not updated on `transferFrom`. This is semantically equivalent to an infinite approval. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IERC20-balanceOf}."
      },
      "burn(address,uint256)": {
        "params": {
          "_amount": "The amount of tokens being burnt.",
          "_from": "The account having tokens burnt."
        }
      },
      "constructor": {
        "params": {
          "_l1Token": "Address of the corresponding L1 token.",
          "_l2Bridge": "Address of the L2 standard bridge.",
          "_name": "ERC20 name.",
          "_symbol": "ERC20 symbol."
        }
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5.05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {ERC20} uses, unless this function is overridden; NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IERC20-balanceOf} and {IERC20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IERC20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "mint(address,uint256)": {
        "params": {
          "_amount": "The amount of tokens to receive.",
          "_to": "The account receiving tokens."
        }
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IERC20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IERC20-transfer}. Requirements: - `to` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IERC20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {ERC20}. NOTE: Does not update the allowance if the current allowance is the maximum `uint256`. Requirements: - `from` and `to` cannot be the zero address. - `from` must have a balance of at least `amount`. - the caller must have allowance for ``from``'s tokens of at least `amount`."
      }
    },
    "title": "LegacyMintableERC20"
  },
  "ast": {
    "absolutePath": "src/legacy/LegacyMintableERC20.sol",
    "id": 59548,
    "exportedSymbols": {
      "ERC20": [
        31208
      ],
      "ILegacyMintableERC20": [
        63926
      ],
      "LegacyMintableERC20": [
        59547
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:2543:117",
    "nodes": [
      {
        "id": 59397,
        "nodeType": "PragmaDirective",
        "src": "32:23:117",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 59399,
        "nodeType": "ImportDirective",
        "src": "57:70:117",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 59548,
        "sourceUnit": 31209,
        "symbolAliases": [
          {
            "foreign": {
              "id": 59398,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 31208,
              "src": "66:5:117",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 59401,
        "nodeType": "ImportDirective",
        "src": "128:79:117",
        "nodes": [],
        "absolutePath": "src/universal/OptimismMintableERC20.sol",
        "file": "src/universal/OptimismMintableERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 59548,
        "sourceUnit": 64240,
        "symbolAliases": [
          {
            "foreign": {
              "id": 59400,
              "name": "ILegacyMintableERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 63926,
              "src": "137:20:117",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 59547,
        "nodeType": "ContractDefinition",
        "src": "378:2196:117",
        "nodes": [
          {
            "id": 59413,
            "nodeType": "EventDefinition",
            "src": "508:54:117",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 59407,
              "nodeType": "StructuredDocumentation",
              "src": "444:59:117",
              "text": "@notice Emitted when the token is minted by the bridge."
            },
            "eventSelector": "0f6798a560793a54c3bcfe86a93cde1e73087d944c0ea20544137d4121396885",
            "name": "Mint",
            "nameLocation": "514:4:117",
            "parameters": {
              "id": 59412,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59409,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "535:8:117",
                  "nodeType": "VariableDeclaration",
                  "scope": 59413,
                  "src": "519:24:117",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59408,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "519:7:117",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59411,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "553:7:117",
                  "nodeType": "VariableDeclaration",
                  "scope": 59413,
                  "src": "545:15:117",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59410,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "545:7:117",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "518:43:117"
            }
          },
          {
            "id": 59420,
            "nodeType": "EventDefinition",
            "src": "630:54:117",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 59414,
              "nodeType": "StructuredDocumentation",
              "src": "568:57:117",
              "text": "@notice Emitted when a token is burned by the bridge."
            },
            "eventSelector": "cc16f5dbb4873280815c1ee09dbd06736cffcc184412cf7a71a0fdb75d397ca5",
            "name": "Burn",
            "nameLocation": "636:4:117",
            "parameters": {
              "id": 59419,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59416,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "_account",
                  "nameLocation": "657:8:117",
                  "nodeType": "VariableDeclaration",
                  "scope": 59420,
                  "src": "641:24:117",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59415,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "641:7:117",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59418,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "675:7:117",
                  "nodeType": "VariableDeclaration",
                  "scope": 59420,
                  "src": "667:15:117",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59417,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "667:7:117",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "640:43:117"
            }
          },
          {
            "id": 59423,
            "nodeType": "VariableDeclaration",
            "src": "738:22:117",
            "nodes": [],
            "baseFunctions": [
              63911
            ],
            "constant": false,
            "documentation": {
              "id": 59421,
              "nodeType": "StructuredDocumentation",
              "src": "690:43:117",
              "text": "@notice The token on the remote domain."
            },
            "functionSelector": "c01e1bd6",
            "mutability": "mutable",
            "name": "l1Token",
            "nameLocation": "753:7:117",
            "scope": 59547,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 59422,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "738:7:117",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 59426,
            "nodeType": "VariableDeclaration",
            "src": "801:23:117",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 59424,
              "nodeType": "StructuredDocumentation",
              "src": "767:29:117",
              "text": "@notice The local bridge."
            },
            "functionSelector": "ae1f6aaf",
            "mutability": "mutable",
            "name": "l2Bridge",
            "nameLocation": "816:8:117",
            "scope": 59547,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 59425,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "801:7:117",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 59451,
            "nodeType": "FunctionDefinition",
            "src": "1024:230:117",
            "nodes": [],
            "body": {
              "id": 59450,
              "nodeType": "Block",
              "src": "1189:65:117",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 59444,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 59442,
                      "name": "l1Token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59423,
                      "src": "1199:7:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 59443,
                      "name": "_l1Token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59431,
                      "src": "1209:8:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1199:18:117",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 59445,
                  "nodeType": "ExpressionStatement",
                  "src": "1199:18:117"
                },
                {
                  "expression": {
                    "id": 59448,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 59446,
                      "name": "l2Bridge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59426,
                      "src": "1227:8:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 59447,
                      "name": "_l2Bridge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59429,
                      "src": "1238:9:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1227:20:117",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 59449,
                  "nodeType": "ExpressionStatement",
                  "src": "1227:20:117"
                }
              ]
            },
            "documentation": {
              "id": 59427,
              "nodeType": "StructuredDocumentation",
              "src": "831:188:117",
              "text": "@param _l2Bridge Address of the L2 standard bridge.\n @param _l1Token Address of the corresponding L1 token.\n @param _name ERC20 name.\n @param _symbol ERC20 symbol."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 59438,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 59433,
                    "src": "1169:5:117",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 59439,
                    "name": "_symbol",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 59435,
                    "src": "1176:7:117",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 59440,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 59437,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 31208,
                  "src": "1163:5:117"
                },
                "nodeType": "ModifierInvocation",
                "src": "1163:21:117"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 59436,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59429,
                  "mutability": "mutable",
                  "name": "_l2Bridge",
                  "nameLocation": "1053:9:117",
                  "nodeType": "VariableDeclaration",
                  "scope": 59451,
                  "src": "1045:17:117",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59428,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1045:7:117",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59431,
                  "mutability": "mutable",
                  "name": "_l1Token",
                  "nameLocation": "1080:8:117",
                  "nodeType": "VariableDeclaration",
                  "scope": 59451,
                  "src": "1072:16:117",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59430,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1072:7:117",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59433,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1112:5:117",
                  "nodeType": "VariableDeclaration",
                  "scope": 59451,
                  "src": "1098:19:117",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 59432,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1098:6:117",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59435,
                  "mutability": "mutable",
                  "name": "_symbol",
                  "nameLocation": "1141:7:117",
                  "nodeType": "VariableDeclaration",
                  "scope": 59451,
                  "src": "1127:21:117",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 59434,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1127:6:117",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1035:119:117"
            },
            "returnParameters": {
              "id": 59441,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1189:0:117"
            },
            "scope": 59547,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 59464,
            "nodeType": "ModifierDefinition",
            "src": "1338:119:117",
            "nodes": [],
            "body": {
              "id": 59463,
              "nodeType": "Block",
              "src": "1362:95:117",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 59458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 59455,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1380:3:117",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 59456,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1380:10:117",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 59457,
                          "name": "l2Bridge",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 59426,
                          "src": "1394:8:117",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1380:22:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f6e6c79204c32204272696467652063616e206d696e7420616e64206275726e",
                        "id": 59459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1404:34:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_155bdfad265e7cfc706c69be0ed5b37b34e9134e4e1c6a489a853c7516058df6",
                          "typeString": "literal_string \"Only L2 Bridge can mint and burn\""
                        },
                        "value": "Only L2 Bridge can mint and burn"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_155bdfad265e7cfc706c69be0ed5b37b34e9134e4e1c6a489a853c7516058df6",
                          "typeString": "literal_string \"Only L2 Bridge can mint and burn\""
                        }
                      ],
                      "id": 59454,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1372:7:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 59460,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1372:67:117",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59461,
                  "nodeType": "ExpressionStatement",
                  "src": "1372:67:117"
                },
                {
                  "id": 59462,
                  "nodeType": "PlaceholderStatement",
                  "src": "1449:1:117"
                }
              ]
            },
            "documentation": {
              "id": 59452,
              "nodeType": "StructuredDocumentation",
              "src": "1260:73:117",
              "text": "@notice Modifier that requires the contract was called by the bridge."
            },
            "name": "onlyL2Bridge",
            "nameLocation": "1347:12:117",
            "parameters": {
              "id": 59453,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1359:2:117"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 59504,
            "nodeType": "FunctionDefinition",
            "src": "1502:448:117",
            "nodes": [],
            "body": {
              "id": 59503,
              "nodeType": "Block",
              "src": "1577:373:117",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    59473
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59473,
                      "mutability": "mutable",
                      "name": "firstSupportedInterface",
                      "nameLocation": "1594:23:117",
                      "nodeType": "VariableDeclaration",
                      "scope": 59503,
                      "src": "1587:30:117",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "typeName": {
                        "id": 59472,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "1587:6:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59480,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "737570706f727473496e746572666163652862797465733429",
                            "id": 59477,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1637:27:117",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_01ffc9a7a5cef8baa21ed3c5c0d7e23accb804b619e9333b597f47a0d84076e2",
                              "typeString": "literal_string \"supportsInterface(bytes4)\""
                            },
                            "value": "supportsInterface(bytes4)"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_01ffc9a7a5cef8baa21ed3c5c0d7e23accb804b619e9333b597f47a0d84076e2",
                              "typeString": "literal_string \"supportsInterface(bytes4)\""
                            }
                          ],
                          "id": 59476,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "1627:9:117",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 59478,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1627:38:117",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 59475,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "1620:6:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes4_$",
                        "typeString": "type(bytes4)"
                      },
                      "typeName": {
                        "id": 59474,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "1620:6:117",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 59479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1620:46:117",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1587:79:117"
                },
                {
                  "assignments": [
                    59482
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 59482,
                      "mutability": "mutable",
                      "name": "secondSupportedInterface",
                      "nameLocation": "1693:24:117",
                      "nodeType": "VariableDeclaration",
                      "scope": 59503,
                      "src": "1686:31:117",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "typeName": {
                        "id": 59481,
                        "name": "bytes4",
                        "nodeType": "ElementaryTypeName",
                        "src": "1686:6:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 59494,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    },
                    "id": 59493,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 59489,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "expression": {
                            "id": 59483,
                            "name": "ILegacyMintableERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63926,
                            "src": "1720:20:117",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ILegacyMintableERC20_$63926_$",
                              "typeString": "type(contract ILegacyMintableERC20)"
                            }
                          },
                          "id": 59484,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "l1Token",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 63911,
                          "src": "1720:28:117",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_declaration_view$__$returns$_t_address_$",
                            "typeString": "function ILegacyMintableERC20.l1Token() view returns (address)"
                          }
                        },
                        "id": 59485,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "1720:37:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "^",
                      "rightExpression": {
                        "expression": {
                          "expression": {
                            "id": 59486,
                            "name": "ILegacyMintableERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 63926,
                            "src": "1760:20:117",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ILegacyMintableERC20_$63926_$",
                              "typeString": "type(contract ILegacyMintableERC20)"
                            }
                          },
                          "id": 59487,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "mint",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 63918,
                          "src": "1760:25:117",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$__$",
                            "typeString": "function ILegacyMintableERC20.mint(address,uint256)"
                          }
                        },
                        "id": 59488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "selector",
                        "nodeType": "MemberAccess",
                        "src": "1760:34:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "1720:74:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "^",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 59490,
                          "name": "ILegacyMintableERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63926,
                          "src": "1809:20:117",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ILegacyMintableERC20_$63926_$",
                            "typeString": "type(contract ILegacyMintableERC20)"
                          }
                        },
                        "id": 59491,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "burn",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 63925,
                        "src": "1809:25:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_declaration_nonpayable$_t_address_$_t_uint256_$returns$__$",
                          "typeString": "function ILegacyMintableERC20.burn(address,uint256)"
                        }
                      },
                      "id": 59492,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "src": "1809:34:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "1720:123:117",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1686:157:117"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 59501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 59497,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 59495,
                        "name": "_interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59467,
                        "src": "1860:12:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 59496,
                        "name": "firstSupportedInterface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59473,
                        "src": "1876:23:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "1860:39:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      },
                      "id": 59500,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 59498,
                        "name": "_interfaceId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59467,
                        "src": "1903:12:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 59499,
                        "name": "secondSupportedInterface",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59482,
                        "src": "1919:24:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      },
                      "src": "1903:40:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1860:83:117",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 59471,
                  "id": 59502,
                  "nodeType": "Return",
                  "src": "1853:90:117"
                }
              ]
            },
            "baseFunctions": [
              33797
            ],
            "documentation": {
              "id": 59465,
              "nodeType": "StructuredDocumentation",
              "src": "1463:34:117",
              "text": "@notice EIP165 implementation."
            },
            "functionSelector": "01ffc9a7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "supportsInterface",
            "nameLocation": "1511:17:117",
            "parameters": {
              "id": 59468,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59467,
                  "mutability": "mutable",
                  "name": "_interfaceId",
                  "nameLocation": "1536:12:117",
                  "nodeType": "VariableDeclaration",
                  "scope": 59504,
                  "src": "1529:19:117",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 59466,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "1529:6:117",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1528:21:117"
            },
            "returnParameters": {
              "id": 59471,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59470,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 59504,
                  "src": "1571:4:117",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 59469,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1571:4:117",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1570:6:117"
            },
            "scope": 59547,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 59525,
            "nodeType": "FunctionDefinition",
            "src": "2114:142:117",
            "nodes": [],
            "body": {
              "id": 59524,
              "nodeType": "Block",
              "src": "2186:70:117",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 59515,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59507,
                        "src": "2202:3:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 59516,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59509,
                        "src": "2207:7:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 59514,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31025,
                      "src": "2196:5:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 59517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2196:19:117",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59518,
                  "nodeType": "ExpressionStatement",
                  "src": "2196:19:117"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 59520,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59507,
                        "src": "2236:3:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 59521,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59509,
                        "src": "2241:7:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 59519,
                      "name": "Mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59413,
                      "src": "2231:4:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 59522,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2231:18:117",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59523,
                  "nodeType": "EmitStatement",
                  "src": "2226:23:117"
                }
              ]
            },
            "baseFunctions": [
              63918
            ],
            "documentation": {
              "id": 59505,
              "nodeType": "StructuredDocumentation",
              "src": "1956:153:117",
              "text": "@notice Only the bridge can mint tokens.\n @param _to     The account receiving tokens.\n @param _amount The amount of tokens to receive."
            },
            "functionSelector": "40c10f19",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 59512,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 59511,
                  "name": "onlyL2Bridge",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 59464,
                  "src": "2173:12:117"
                },
                "nodeType": "ModifierInvocation",
                "src": "2173:12:117"
              }
            ],
            "name": "mint",
            "nameLocation": "2123:4:117",
            "parameters": {
              "id": 59510,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59507,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "2136:3:117",
                  "nodeType": "VariableDeclaration",
                  "scope": 59525,
                  "src": "2128:11:117",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59506,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2128:7:117",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59509,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2149:7:117",
                  "nodeType": "VariableDeclaration",
                  "scope": 59525,
                  "src": "2141:15:117",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59508,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2141:7:117",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2127:30:117"
            },
            "returnParameters": {
              "id": 59513,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2186:0:117"
            },
            "scope": 59547,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 59546,
            "nodeType": "FunctionDefinition",
            "src": "2424:148:117",
            "nodes": [],
            "body": {
              "id": 59545,
              "nodeType": "Block",
              "src": "2498:74:117",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 59536,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59528,
                        "src": "2514:5:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 59537,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59530,
                        "src": "2521:7:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 59535,
                      "name": "_burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31097,
                      "src": "2508:5:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 59538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2508:21:117",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59539,
                  "nodeType": "ExpressionStatement",
                  "src": "2508:21:117"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 59541,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59528,
                        "src": "2550:5:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 59542,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 59530,
                        "src": "2557:7:117",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 59540,
                      "name": "Burn",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 59420,
                      "src": "2545:4:117",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 59543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2545:20:117",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 59544,
                  "nodeType": "EmitStatement",
                  "src": "2540:25:117"
                }
              ]
            },
            "baseFunctions": [
              63925
            ],
            "documentation": {
              "id": 59526,
              "nodeType": "StructuredDocumentation",
              "src": "2262:157:117",
              "text": "@notice Only the bridge can burn tokens.\n @param _from   The account having tokens burnt.\n @param _amount The amount of tokens being burnt."
            },
            "functionSelector": "9dc29fac",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 59533,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 59532,
                  "name": "onlyL2Bridge",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 59464,
                  "src": "2485:12:117"
                },
                "nodeType": "ModifierInvocation",
                "src": "2485:12:117"
              }
            ],
            "name": "burn",
            "nameLocation": "2433:4:117",
            "parameters": {
              "id": 59531,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 59528,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "2446:5:117",
                  "nodeType": "VariableDeclaration",
                  "scope": 59546,
                  "src": "2438:13:117",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 59527,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2438:7:117",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 59530,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "2461:7:117",
                  "nodeType": "VariableDeclaration",
                  "scope": 59546,
                  "src": "2453:15:117",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 59529,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2453:7:117",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2437:32:117"
            },
            "returnParameters": {
              "id": 59534,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2498:0:117"
            },
            "scope": 59547,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 59403,
              "name": "ILegacyMintableERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 63926,
              "src": "410:20:117"
            },
            "id": 59404,
            "nodeType": "InheritanceSpecifier",
            "src": "410:20:117"
          },
          {
            "baseName": {
              "id": 59405,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 31208,
              "src": "432:5:117"
            },
            "id": 59406,
            "nodeType": "InheritanceSpecifier",
            "src": "432:5:117"
          }
        ],
        "canonicalName": "LegacyMintableERC20",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 59402,
          "nodeType": "StructuredDocumentation",
          "src": "209:169:117",
          "text": "@title LegacyMintableERC20\n @notice The legacy implementation of the OptimismMintableERC20. This\n         contract is deprecated and should no longer be used."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          59547,
          31208,
          31311,
          31286,
          33342,
          63926,
          33798
        ],
        "name": "LegacyMintableERC20",
        "nameLocation": "387:19:117",
        "scope": 59548,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 117
}