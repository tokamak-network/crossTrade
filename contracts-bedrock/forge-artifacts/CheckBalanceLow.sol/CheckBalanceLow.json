{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "threshold",
              "type": "uint256"
            }
          ],
          "indexed": false,
          "internalType": "struct CheckBalanceLow.Params",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "_EventToExposeStructInABI__Params",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_params",
          "type": "bytes"
        }
      ],
      "name": "check",
      "outputs": [
        {
          "internalType": "bool",
          "name": "execute_",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50610210806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c64b3bb514610030575b600080fd5b61004361003e3660046100c3565b610057565b604051901515815260200160405180910390f35b6000808280602001905181019061006e9190610192565b6020810151905173ffffffffffffffffffffffffffffffffffffffff1631109392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000602082840312156100d557600080fd5b813567ffffffffffffffff808211156100ed57600080fd5b818401915084601f83011261010157600080fd5b81358181111561011357610113610094565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190838211818310171561015957610159610094565b8160405282815287602084870101111561017257600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000604082840312156101a457600080fd5b6040516040810181811067ffffffffffffffff821117156101c7576101c7610094565b604052825173ffffffffffffffffffffffffffffffffffffffff811681146101ee57600080fd5b8152602092830151928101929092525091905056fea164736f6c634300080f000a",
    "sourceMap": "220:606:208:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c64b3bb514610030575b600080fd5b61004361003e3660046100c3565b610057565b604051901515815260200160405180910390f35b6000808280602001905181019061006e9190610192565b6020810151905173ffffffffffffffffffffffffffffffffffffffff1631109392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6000602082840312156100d557600080fd5b813567ffffffffffffffff808211156100ed57600080fd5b818401915084601f83011261010157600080fd5b81358181111561011357610113610094565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190838211818310171561015957610159610094565b8160405282815287602084870101111561017257600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000604082840312156101a457600080fd5b6040516040810181811067ffffffffffffffff821117156101c7576101c7610094565b604052825173ffffffffffffffffffffffffffffffffffffffff811681146101ee57600080fd5b8152602092830151928101929092525091905056fea164736f6c634300080f000a",
    "sourceMap": "220:606:208:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;562:262;;;;;;:::i;:::-;;:::i;:::-;;;1353:14:322;;1346:22;1328:41;;1316:2;1301:18;562:262:208;;;;;;;;622:13;647:20;681:7;670:29;;;;;;;;;;;;:::i;:::-;801:16;;;;777:13;;:21;;;:40;;562:262;-1:-1:-1;;;562:262:208:o;14:184:322:-;66:77;63:1;56:88;163:4;160:1;153:15;187:4;184:1;177:15;203:980;271:6;324:2;312:9;303:7;299:23;295:32;292:52;;;340:1;337;330:12;292:52;380:9;367:23;409:18;450:2;442:6;439:14;436:34;;;466:1;463;456:12;436:34;504:6;493:9;489:22;479:32;;549:7;542:4;538:2;534:13;530:27;520:55;;571:1;568;561:12;520:55;607:2;594:16;629:2;625;622:10;619:36;;;635:18;;:::i;:::-;769:2;763:9;831:4;823:13;;674:66;819:22;;;843:2;815:31;811:40;799:53;;;867:18;;;887:22;;;864:46;861:72;;;913:18;;:::i;:::-;953:10;949:2;942:22;988:2;980:6;973:18;1028:7;1023:2;1018;1014;1010:11;1006:20;1003:33;1000:53;;;1049:1;1046;1039:12;1000:53;1105:2;1100;1096;1092:11;1087:2;1079:6;1075:15;1062:46;1150:1;1128:15;;;1145:2;1124:24;1117:35;;;;-1:-1:-1;1132:6:322;203:980;-1:-1:-1;;;;;203:980:322:o;1380:630::-;1475:6;1528:2;1516:9;1507:7;1503:23;1499:32;1496:52;;;1544:1;1541;1534:12;1496:52;1577:2;1571:9;1619:2;1611:6;1607:15;1688:6;1676:10;1673:22;1652:18;1640:10;1637:34;1634:62;1631:88;;;1699:18;;:::i;:::-;1735:2;1728:22;1772:16;;1828:42;1817:54;;1807:65;;1797:93;;1886:1;1883;1876:12;1797:93;1899:21;;1974:2;1959:18;;;1953:25;1936:15;;;1929:50;;;;-1:-1:-1;1906:6:322;1380:630;-1:-1:-1;1380:630:322:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "check(bytes)": "c64b3bb5"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"indexed\":false,\"internalType\":\"struct CheckBalanceLow.Params\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"_EventToExposeStructInABI__Params\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_params\",\"type\":\"bytes\"}],\"name\":\"check\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"execute_\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"_EventToExposeStructInABI__Params((address,uint256))\":{\"params\":{\"params\":\"Parameters to encode.\"}}},\"kind\":\"dev\",\"methods\":{\"check(bytes)\":{\"params\":{\"_params\":\"Encoded parameters for the drip check.\"},\"returns\":{\"execute_\":\"Whether the drip should be executed.\"}}},\"title\":\"CheckBalanceLow\",\"version\":1},\"userdoc\":{\"events\":{\"_EventToExposeStructInABI__Params((address,uint256))\":{\"notice\":\"External event used to help client-side tooling encode parameters.\"}},\"kind\":\"user\",\"methods\":{\"check(bytes)\":{\"notice\":\"Checks whether a drip should be executable.\"}},\"notice\":\"DripCheck for checking if an account's balance is below a given threshold.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/periphery/drippie/dripchecks/CheckBalanceLow.sol\":\"CheckBalanceLow\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@cwia/=lib/clones-with-immutable-args/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/solmate/\",\":clones-with-immutable-args/=lib/clones-with-immutable-args/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"src/periphery/drippie/IDripCheck.sol\":{\"keccak256\":\"0x4db01d51dc47813980a9a8d76e5f14783b6cfed23e4237260281edbe06dad628\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ce87d7ed0e12be217066aafdc0d16ff563cdc6807ecbe2eb58b751d00e984d6\",\"dweb:/ipfs/QmNWzTdxGk6ZDagpbz5RHCTWBkoSoPzaNtcSHppw3rBsmN\"]},\"src/periphery/drippie/dripchecks/CheckBalanceLow.sol\":{\"keccak256\":\"0x72ed5ca6c16ff34b2131634cd2851713312b31cfa2a9a92f4ffdf8abcba1724e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5217c07c62d91054a9e7ce39242e240506a6045ed9433c8152e28f04c271fda1\",\"dweb:/ipfs/QmNyt4VXhHi7wkKPPPiaXhFF7fHMcoNn2D8MZXzDsEyHF2\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "struct CheckBalanceLow.Params",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "threshold",
                  "type": "uint256"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "_EventToExposeStructInABI__Params",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "_params",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "check",
          "outputs": [
            {
              "internalType": "bool",
              "name": "execute_",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "check(bytes)": {
            "params": {
              "_params": "Encoded parameters for the drip check."
            },
            "returns": {
              "execute_": "Whether the drip should be executed."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "check(bytes)": {
            "notice": "Checks whether a drip should be executable."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@cwia/=lib/clones-with-immutable-args/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@rari-capital/solmate/=lib/solmate/",
        "clones-with-immutable-args/=lib/clones-with-immutable-args/src/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "safe-contracts/=lib/safe-contracts/contracts/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 999999
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "src/periphery/drippie/dripchecks/CheckBalanceLow.sol": "CheckBalanceLow"
      },
      "libraries": {}
    },
    "sources": {
      "src/periphery/drippie/IDripCheck.sol": {
        "keccak256": "0x4db01d51dc47813980a9a8d76e5f14783b6cfed23e4237260281edbe06dad628",
        "urls": [
          "bzz-raw://0ce87d7ed0e12be217066aafdc0d16ff563cdc6807ecbe2eb58b751d00e984d6",
          "dweb:/ipfs/QmNWzTdxGk6ZDagpbz5RHCTWBkoSoPzaNtcSHppw3rBsmN"
        ],
        "license": "MIT"
      },
      "src/periphery/drippie/dripchecks/CheckBalanceLow.sol": {
        "keccak256": "0x72ed5ca6c16ff34b2131634cd2851713312b31cfa2a9a92f4ffdf8abcba1724e",
        "urls": [
          "bzz-raw://5217c07c62d91054a9e7ce39242e240506a6045ed9433c8152e28f04c271fda1",
          "dweb:/ipfs/QmNyt4VXhHi7wkKPPPiaXhFF7fHMcoNn2D8MZXzDsEyHF2"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": {}
  },
  "userdoc": {
    "version": 1,
    "kind": "user",
    "methods": {
      "check(bytes)": {
        "notice": "Checks whether a drip should be executable."
      }
    },
    "events": {
      "_EventToExposeStructInABI__Params((address,uint256))": {
        "notice": "External event used to help client-side tooling encode parameters."
      }
    },
    "notice": "DripCheck for checking if an account's balance is below a given threshold."
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "methods": {
      "check(bytes)": {
        "params": {
          "_params": "Encoded parameters for the drip check."
        },
        "returns": {
          "execute_": "Whether the drip should be executed."
        }
      }
    },
    "events": {
      "_EventToExposeStructInABI__Params((address,uint256))": {
        "params": {
          "params": "Parameters to encode."
        }
      }
    },
    "title": "CheckBalanceLow"
  },
  "ast": {
    "absolutePath": "src/periphery/drippie/dripchecks/CheckBalanceLow.sol",
    "id": 80601,
    "exportedSymbols": {
      "CheckBalanceLow": [
        80600
      ],
      "IDripCheck": [
        80506
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:795:208",
    "nodes": [
      {
        "id": 80555,
        "nodeType": "PragmaDirective",
        "src": "32:23:208",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 80557,
        "nodeType": "ImportDirective",
        "src": "57:47:208",
        "nodes": [],
        "absolutePath": "src/periphery/drippie/IDripCheck.sol",
        "file": "../IDripCheck.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 80601,
        "sourceUnit": 80507,
        "symbolAliases": [
          {
            "foreign": {
              "id": 80556,
              "name": "IDripCheck",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 80506,
              "src": "66:10:208",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 80600,
        "nodeType": "ContractDefinition",
        "src": "220:606:208",
        "nodes": [
          {
            "id": 80565,
            "nodeType": "StructDefinition",
            "src": "265:72:208",
            "nodes": [],
            "canonicalName": "CheckBalanceLow.Params",
            "members": [
              {
                "constant": false,
                "id": 80562,
                "mutability": "mutable",
                "name": "target",
                "nameLocation": "297:6:208",
                "nodeType": "VariableDeclaration",
                "scope": 80565,
                "src": "289:14:208",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 80561,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "289:7:208",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 80564,
                "mutability": "mutable",
                "name": "threshold",
                "nameLocation": "321:9:208",
                "nodeType": "VariableDeclaration",
                "scope": 80565,
                "src": "313:17:208",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 80563,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "313:7:208",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Params",
            "nameLocation": "272:6:208",
            "scope": 80600,
            "visibility": "public"
          },
          {
            "id": 80571,
            "nodeType": "EventDefinition",
            "src": "470:55:208",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 80566,
              "nodeType": "StructuredDocumentation",
              "src": "343:122:208",
              "text": "@notice External event used to help client-side tooling encode parameters.\n @param params Parameters to encode."
            },
            "eventSelector": "d675e8c1bf2f28f052b74c311412663dd60576c00ce3346b9a6d614df2b0b60b",
            "name": "_EventToExposeStructInABI__Params",
            "nameLocation": "476:33:208",
            "parameters": {
              "id": 80570,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80569,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "517:6:208",
                  "nodeType": "VariableDeclaration",
                  "scope": 80571,
                  "src": "510:13:208",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Params_$80565_memory_ptr",
                    "typeString": "struct CheckBalanceLow.Params"
                  },
                  "typeName": {
                    "id": 80568,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 80567,
                      "name": "Params",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 80565,
                      "src": "510:6:208"
                    },
                    "referencedDeclaration": 80565,
                    "src": "510:6:208",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Params_$80565_storage_ptr",
                      "typeString": "struct CheckBalanceLow.Params"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "509:15:208"
            }
          },
          {
            "id": 80599,
            "nodeType": "FunctionDefinition",
            "src": "562:262:208",
            "nodes": [],
            "body": {
              "id": 80598,
              "nodeType": "Block",
              "src": "637:187:208",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    80581
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80581,
                      "mutability": "mutable",
                      "name": "params",
                      "nameLocation": "661:6:208",
                      "nodeType": "VariableDeclaration",
                      "scope": 80598,
                      "src": "647:20:208",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Params_$80565_memory_ptr",
                        "typeString": "struct CheckBalanceLow.Params"
                      },
                      "typeName": {
                        "id": 80580,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 80579,
                          "name": "Params",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 80565,
                          "src": "647:6:208"
                        },
                        "referencedDeclaration": 80565,
                        "src": "647:6:208",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Params_$80565_storage_ptr",
                          "typeString": "struct CheckBalanceLow.Params"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80588,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 80584,
                        "name": "_params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80574,
                        "src": "681:7:208",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 80585,
                            "name": "Params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80565,
                            "src": "691:6:208",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Params_$80565_storage_ptr_$",
                              "typeString": "type(struct CheckBalanceLow.Params storage pointer)"
                            }
                          }
                        ],
                        "id": 80586,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "690:8:208",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Params_$80565_storage_ptr_$",
                          "typeString": "type(struct CheckBalanceLow.Params storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_struct$_Params_$80565_storage_ptr_$",
                          "typeString": "type(struct CheckBalanceLow.Params storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 80582,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "670:3:208",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 80583,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "670:10:208",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 80587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "670:29:208",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Params_$80565_memory_ptr",
                      "typeString": "struct CheckBalanceLow.Params memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "647:52:208"
                },
                {
                  "expression": {
                    "id": 80596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 80589,
                      "name": "execute_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80577,
                      "src": "766:8:208",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 80595,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "expression": {
                            "id": 80590,
                            "name": "params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80581,
                            "src": "777:6:208",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Params_$80565_memory_ptr",
                              "typeString": "struct CheckBalanceLow.Params memory"
                            }
                          },
                          "id": 80591,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "target",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 80562,
                          "src": "777:13:208",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 80592,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "777:21:208",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "expression": {
                          "id": 80593,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80581,
                          "src": "801:6:208",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Params_$80565_memory_ptr",
                            "typeString": "struct CheckBalanceLow.Params memory"
                          }
                        },
                        "id": 80594,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "threshold",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 80564,
                        "src": "801:16:208",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "777:40:208",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "766:51:208",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 80597,
                  "nodeType": "ExpressionStatement",
                  "src": "766:51:208"
                }
              ]
            },
            "baseFunctions": [
              80505
            ],
            "documentation": {
              "id": 80572,
              "nodeType": "StructuredDocumentation",
              "src": "531:26:208",
              "text": "@inheritdoc IDripCheck"
            },
            "functionSelector": "c64b3bb5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "check",
            "nameLocation": "571:5:208",
            "parameters": {
              "id": 80575,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80574,
                  "mutability": "mutable",
                  "name": "_params",
                  "nameLocation": "590:7:208",
                  "nodeType": "VariableDeclaration",
                  "scope": 80599,
                  "src": "577:20:208",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 80573,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "577:5:208",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "576:22:208"
            },
            "returnParameters": {
              "id": 80578,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80577,
                  "mutability": "mutable",
                  "name": "execute_",
                  "nameLocation": "627:8:208",
                  "nodeType": "VariableDeclaration",
                  "scope": 80599,
                  "src": "622:13:208",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 80576,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "622:4:208",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "621:15:208"
            },
            "scope": 80600,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 80559,
              "name": "IDripCheck",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 80506,
              "src": "248:10:208"
            },
            "id": 80560,
            "nodeType": "InheritanceSpecifier",
            "src": "248:10:208"
          }
        ],
        "canonicalName": "CheckBalanceLow",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 80558,
          "nodeType": "StructuredDocumentation",
          "src": "106:114:208",
          "text": "@title CheckBalanceLow\n @notice DripCheck for checking if an account's balance is below a given threshold."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          80600,
          80506
        ],
        "name": "CheckBalanceLow",
        "nameLocation": "229:15:208",
        "scope": 80601,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 208
}