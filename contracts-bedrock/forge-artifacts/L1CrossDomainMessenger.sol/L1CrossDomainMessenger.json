{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "msgHash",
          "type": "bytes32"
        }
      ],
      "name": "FailedRelayedMessage",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "msgHash",
          "type": "bytes32"
        }
      ],
      "name": "RelayedMessage",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "target",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "message",
          "type": "bytes"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "messageNonce",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "gasLimit",
          "type": "uint256"
        }
      ],
      "name": "SentMessage",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "SentMessageExtension1",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MESSAGE_VERSION",
      "outputs": [
        {
          "internalType": "uint16",
          "name": "",
          "type": "uint16"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MIN_GAS_CALLDATA_OVERHEAD",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MIN_GAS_DYNAMIC_OVERHEAD_DENOMINATOR",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MIN_GAS_DYNAMIC_OVERHEAD_NUMERATOR",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "OTHER_MESSENGER",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PORTAL",
      "outputs": [
        {
          "internalType": "contract OptimismPortal",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "RELAY_CALL_OVERHEAD",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "RELAY_CONSTANT_OVERHEAD",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "RELAY_GAS_CHECK_BUFFER",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "RELAY_RESERVED_GAS",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_message",
          "type": "bytes"
        },
        {
          "internalType": "uint32",
          "name": "_minGasLimit",
          "type": "uint32"
        }
      ],
      "name": "baseGas",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "failedMessages",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract OptimismPortal",
          "name": "_portal",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_nativeTokenAddress",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "messageNonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nativeTokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "onApprove",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "portal",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_nonce",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_minGasLimit",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_message",
          "type": "bytes"
        }
      ],
      "name": "relayMessage",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_message",
          "type": "bytes"
        },
        {
          "internalType": "uint32",
          "name": "_minGasLimit",
          "type": "uint32"
        }
      ],
      "name": "sendMessage",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_message",
          "type": "bytes"
        },
        {
          "internalType": "uint32",
          "name": "_minGasLimit",
          "type": "uint32"
        }
      ],
      "name": "sendNativeTokenMessage",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "successfulMessages",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "unpackOnApproveData",
      "outputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "_minGasLimit",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "_message",
          "type": "bytes"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "xDomainMessageSender",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a06040523480156200001157600080fd5b50734200000000000000000000000000000000000007608052620000376000806200003d565b62000201565b600054600390600160a81b900460ff1615801562000069575060005460ff808316600160a01b90920416105b620000d25760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805460ff60a81b1960ff8416600160a01b021661ffff60a01b1990911617600160a81b17905560f980546001600160a01b038086166001600160a01b03199283161790925560fa805492851692909116919091179055620001346200017c565b6000805460ff60a81b1916905560405160ff821681527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050565b600054600160a81b900460ff16620001eb5760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401620000c9565b60cc80546001600160a01b03191661dead179055565b608051612acb62000232600039600081816104410152818161061901528181611a3b0152611db80152612acb6000f3fe6080604052600436106101965760003560e01c80635644cfdf116100e15780639fce812c1161008a578063b28ade2511610064578063b28ade25146104c3578063d764ad0b146104e3578063e0e593c5146104f6578063ecc704281461051657600080fd5b80639fce812c1461042f578063a4e7f8bd14610463578063b1b1b2091461049357600080fd5b806383a74074116100bb57806383a74074146103e65780638cbeeef2146102f757806392a162cf146103fd57600080fd5b80635644cfdf146103905780636425666b146103a65780636e296e45146103d157600080fd5b80633f827a5a116101435780634c1d6a691161011d5780634c1d6a69146102f75780634d0047ee1461030d57806354fd4d501461033a57600080fd5b80633f827a5a1461028f5780634273ca16146102b7578063485cc955146102d757600080fd5b80630ff754ea116101745780630ff754ea146102135780632828d7e8146102655780633dbb202b1461027a57600080fd5b806301ffc9a71461019b578063028f85f7146101d05780630c568498146101fe575b600080fd5b3480156101a757600080fd5b506101bb6101b6366004612307565b61057b565b60405190151581526020015b60405180910390f35b3480156101dc57600080fd5b506101e5601081565b60405167ffffffffffffffff90911681526020016101c7565b34801561020a57600080fd5b506101e5603f81565b34801561021f57600080fd5b5060f9546102409073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101c7565b34801561027157600080fd5b506101e5604081565b61028d6102883660046123d0565b610614565b005b34801561029b57600080fd5b506102a4600181565b60405161ffff90911681526020016101c7565b3480156102c357600080fd5b506101bb6102d2366004612437565b610878565b3480156102e357600080fd5b5061028d6102f23660046124aa565b610a12565b34801561030357600080fd5b506101e5619c4081565b34801561031957600080fd5b5060fa546102409073ffffffffffffffffffffffffffffffffffffffff1681565b34801561034657600080fd5b506103836040518060400160405280600581526020017f312e372e3100000000000000000000000000000000000000000000000000000081525081565b6040516101c79190612559565b34801561039c57600080fd5b506101e561138881565b3480156103b257600080fd5b5060f95473ffffffffffffffffffffffffffffffffffffffff16610240565b3480156103dd57600080fd5b50610240610c2c565b3480156103f257600080fd5b506101e562030d4081565b34801561040957600080fd5b5061041d61041836600461256c565b610d13565b6040516101c7969594939291906125f7565b34801561043b57600080fd5b506102407f000000000000000000000000000000000000000000000000000000000000000081565b34801561046f57600080fd5b506101bb61047e36600461264f565b60ce6020526000908152604090205460ff1681565b34801561049f57600080fd5b506101bb6104ae36600461264f565b60cb6020526000908152604090205460ff1681565b3480156104cf57600080fd5b506101e56104de366004612668565b610dfc565b61028d6104f13660046126bc565b610e6c565b34801561050257600080fd5b5061028d610511366004612742565b611854565b34801561052257600080fd5b5061056d60cd547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff167e010000000000000000000000000000000000000000000000000000000000001790565b6040519081526020016101c7565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f4273ca1600000000000000000000000000000000000000000000000000000000148061060e57507fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b61074d7f0000000000000000000000000000000000000000000000000000000000000000610643858585610dfc565b347fd764ad0b000000000000000000000000000000000000000000000000000000006106af60cd547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff167e010000000000000000000000000000000000000000000000000000000000001790565b338a34898c8c6040516024016106cb97969594939291906127b3565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009093169290921790915261186e565b8373ffffffffffffffffffffffffffffffffffffffff167fcb0f7ffd78f9aee47a248fae8db181db6eee833039123e026dcbff529522e52a3385856107d260cd547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff167e010000000000000000000000000000000000000000000000000000000000001790565b866040516107e4959493929190612812565b60405180910390a260405134815233907f8ebb2ec2465bdb2a06a66fc37a0963af8a2a6a1479d81d56fdb8cbb98096d5469060200160405180910390a2505060cd80547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff808216600101167fffff0000000000000000000000000000000000000000000000000000000000009091161790555050565b60fa5460009073ffffffffffffffffffffffffffffffffffffffff163314610927576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f6f6e6c7920616363657074206e617469766520746f6b656e20617070726f766560448201527f2063616c6c6261636b000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b60008060008036600061093a8989610d13565b9550955095509550955095508573ffffffffffffffffffffffffffffffffffffffff168c73ffffffffffffffffffffffffffffffffffffffff161480156109805750838a145b801561098c5750600084115b6109f2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f696e76616c6964206f6e417070726f7665206461746100000000000000000000604482015260640161091e565b610a0086868686868661196a565b5060019b9a5050505050505050505050565b6000546003907501000000000000000000000000000000000000000000900460ff16158015610a60575060005460ff8083167401000000000000000000000000000000000000000090920416105b610aec576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a6564000000000000000000000000000000000000606482015260840161091e565b600080547fffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff60ff84167401000000000000000000000000000000000000000002167fffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff90911617750100000000000000000000000000000000000000000017905560f9805473ffffffffffffffffffffffffffffffffffffffff8086167fffffffffffffffffffffffff00000000000000000000000000000000000000009283161790925560fa805492851692909116919091179055610bc9611c35565b600080547fffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff16905560405160ff821681527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050565b60cc5460009073ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff215301610cf6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603560248201527f43726f7373446f6d61696e4d657373656e6765723a2078446f6d61696e4d657360448201527f7361676553656e646572206973206e6f74207365740000000000000000000000606482015260840161091e565b5060cc5473ffffffffffffffffffffffffffffffffffffffff1690565b60008080803681604c871015610dab576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603160248201527f496e76616c6964206f6e417070726f7665206461746120666f72204c3143726f60448201527f7373446f6d61696e4d657373656e676572000000000000000000000000000000606482015260840161091e565b5050508435606090811c96601487013590911c95602881013595604882013560e01c9550604c90910193507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb4019150565b6000611388619c4080603f610e18604063ffffffff881661288f565b610e2291906128bf565b610e2d60108861288f565b610e3a9062030d4061290d565b610e44919061290d565b610e4e919061290d565b610e58919061290d565b610e62919061290d565b90505b9392505050565b3415610efa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f43726f7373446f6d61696e4d657373656e6765723a2076616c7565206d75737460448201527f206265207a65726f000000000000000000000000000000000000000000000000606482015260840161091e565b60f087901c60028110610fb5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604d60248201527f43726f7373446f6d61696e4d657373656e6765723a206f6e6c7920766572736960448201527f6f6e2030206f722031206d657373616765732061726520737570706f7274656460648201527f20617420746869732074696d6500000000000000000000000000000000000000608482015260a40161091e565b8061ffff166000036110aa576000611006878986868080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508f9250611d0e915050565b600081815260cb602052604090205490915060ff16156110a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603760248201527f43726f7373446f6d61696e4d657373656e6765723a206c65676163792077697460448201527f6864726177616c20616c72656164792072656c61796564000000000000000000606482015260840161091e565b505b60006110f0898989898989898080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611d2d92505050565b90506110fa611d50565b1561115457600081815260ce602052604090205460ff161561111e5761111e612939565b851561114f5760f95460fa5461114f9173ffffffffffffffffffffffffffffffffffffffff91821691163089611e46565b6111f2565b600081815260ce602052604090205460ff166111f2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603060248201527f43726f7373446f6d61696e4d657373656e6765723a206d65737361676520636160448201527f6e6e6f74206265207265706c6179656400000000000000000000000000000000606482015260840161091e565b6111fb87611ee1565b156112ae576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604360248201527f43726f7373446f6d61696e4d657373656e6765723a2063616e6e6f742073656e60448201527f64206d65737361676520746f20626c6f636b65642073797374656d206164647260648201527f6573730000000000000000000000000000000000000000000000000000000000608482015260a40161091e565b600081815260cb602052604090205460ff161561134d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f43726f7373446f6d61696e4d657373656e6765723a206d65737361676520686160448201527f7320616c7265616479206265656e2072656c6179656400000000000000000000606482015260840161091e565b61136e8561135f611388619c4061290d565b67ffffffffffffffff16611f24565b1580611394575060cc5473ffffffffffffffffffffffffffffffffffffffff1661dead14155b156114ad57600081815260ce602052604080822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790555182917f99d0e048484baa1b1540b1367cb128acd7ab2946d1ed91ec10e3c85e4bf51b8f91a27fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff32016114a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f43726f7373446f6d61696e4d657373656e6765723a206661696c656420746f2060448201527f72656c6179206d65737361676500000000000000000000000000000000000000606482015260840161091e565b505061184b565b60cc80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8a16179055600186156115955760fa546040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8a81166004830152602482018a90529091169063095ea7b3906044016020604051808303816000875af115801561156e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115929190612968565b90505b60006115e789619c405a6115a9919061298a565b600089898080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611f4292505050565b60cc80547fffffffffffffffffffffffff00000000000000000000000000000000000000001661dead17905590508715801590611622575080155b156116c75760fa546040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8b81166004830152600060248301529091169063095ea7b3906044016020604051808303816000875af11580156116a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116c49190612968565b91505b8080156116d15750815b1561173957600083815260cb602052604080822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790555184917f4641df4a962071e12719d8c8c8e5ac7fc4d97b927346a3d7a335b1f7517e133c91a2611846565b600083815260ce602052604080822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790555184917f99d0e048484baa1b1540b1367cb128acd7ab2946d1ed91ec10e3c85e4bf51b8f91a27fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff3201611846576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f43726f7373446f6d61696e4d657373656e6765723a206661696c656420746f2060448201527f72656c6179206d65737361676500000000000000000000000000000000000000606482015260840161091e565b505050505b50505050505050565b61186233868684878761196a565b5050505050565b905090565b34156118d6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f44656e79206465706f736974696e672045544800000000000000000000000000604482015260640161091e565b60f9546040517f06e2b8b900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116906306e2b8b9906119329087908690889087906004016129a1565b600060405180830381600087803b15801561194c57600080fd5b505af1158015611960573d6000803e3d6000fd5b5050505050505050565b8315611a365760fa546119959073ffffffffffffffffffffffffffffffffffffffff16873087611e46565b60fa5460f9546040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff91821660048201526024810187905291169063095ea7b3906044016020604051808303816000875af1158015611a10573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a349190612968565b505b611aed7f0000000000000000000000000000000000000000000000000000000000000000611a65848487610dfc565b867fd764ad0b00000000000000000000000000000000000000000000000000000000611ad160cd547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff167e010000000000000000000000000000000000000000000000000000000000001790565b8b8b8b8b8b8b6040516024016106cb97969594939291906127b3565b8473ffffffffffffffffffffffffffffffffffffffff167fcb0f7ffd78f9aee47a248fae8db181db6eee833039123e026dcbff529522e52a878484611b7260cd547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff167e010000000000000000000000000000000000000000000000000000000000001790565b88604051611b84959493929190612812565b60405180910390a28573ffffffffffffffffffffffffffffffffffffffff167f8ebb2ec2465bdb2a06a66fc37a0963af8a2a6a1479d81d56fdb8cbb98096d54685604051611bd491815260200190565b60405180910390a2505060cd80547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff808216600101167fffff00000000000000000000000000000000000000000000000000000000000090911617905550505050565b6000547501000000000000000000000000000000000000000000900460ff16611ce0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e67000000000000000000000000000000000000000000606482015260840161091e565b60cc80547fffffffffffffffffffffffff00000000000000000000000000000000000000001661dead179055565b6000611d1c85858585611f5c565b805190602001209050949350505050565b6000611d3d878787878787611ff5565b8051906020012090509695505050505050565b60f95460009073ffffffffffffffffffffffffffffffffffffffff1633148015611869575060f954604080517f9bf62d82000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000008116931691639bf62d829160048083019260209291908290030181865afa158015611e06573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e2a91906129f0565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b6040805173ffffffffffffffffffffffffffffffffffffffff85811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd00000000000000000000000000000000000000000000000000000000179052611edb908590612094565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff821630148061060e57505060f95473ffffffffffffffffffffffffffffffffffffffff90811691161490565b600080603f83619c4001026040850201603f5a021015949350505050565b600080600080845160208601878a8af19695505050505050565b606084848484604051602401611f759493929190612a0d565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fcbd4ece9000000000000000000000000000000000000000000000000000000001790529050949350505050565b606086868686868660405160240161201296959493929190612a57565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fd764ad0b0000000000000000000000000000000000000000000000000000000017905290509695505050505050565b60006120f6826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166121a59092919063ffffffff16565b8051909150156121a057808060200190518101906121149190612968565b6121a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161091e565b505050565b6060610e6284846000858573ffffffffffffffffffffffffffffffffffffffff85163b61222e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161091e565b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516122579190612aa2565b60006040518083038185875af1925050503d8060008114612294576040519150601f19603f3d011682016040523d82523d6000602084013e612299565b606091505b50915091506122a98282866122b4565b979650505050505050565b606083156122c3575081610e65565b8251156122d35782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091e9190612559565b60006020828403121561231957600080fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114610e6557600080fd5b73ffffffffffffffffffffffffffffffffffffffff8116811461236b57600080fd5b50565b60008083601f84011261238057600080fd5b50813567ffffffffffffffff81111561239857600080fd5b6020830191508360208285010111156123b057600080fd5b9250929050565b803563ffffffff811681146123cb57600080fd5b919050565b600080600080606085870312156123e657600080fd5b84356123f181612349565b9350602085013567ffffffffffffffff81111561240d57600080fd5b6124198782880161236e565b909450925061242c9050604086016123b7565b905092959194509250565b60008060008060006080868803121561244f57600080fd5b853561245a81612349565b9450602086013561246a81612349565b935060408601359250606086013567ffffffffffffffff81111561248d57600080fd5b6124998882890161236e565b969995985093965092949392505050565b600080604083850312156124bd57600080fd5b82356124c881612349565b915060208301356124d881612349565b809150509250929050565b60005b838110156124fe5781810151838201526020016124e6565b83811115611edb5750506000910152565b600081518084526125278160208601602086016124e3565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081526000610e65602083018461250f565b6000806020838503121561257f57600080fd5b823567ffffffffffffffff81111561259657600080fd5b6125a28582860161236e565b90969095509350505050565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b600073ffffffffffffffffffffffffffffffffffffffff808916835280881660208401525085604083015263ffffffff8516606083015260a0608083015261264360a0830184866125ae565b98975050505050505050565b60006020828403121561266157600080fd5b5035919050565b60008060006040848603121561267d57600080fd5b833567ffffffffffffffff81111561269457600080fd5b6126a08682870161236e565b90945092506126b39050602085016123b7565b90509250925092565b600080600080600080600060c0888a0312156126d757600080fd5b8735965060208801356126e981612349565b955060408801356126f981612349565b9450606088013593506080880135925060a088013567ffffffffffffffff81111561272357600080fd5b61272f8a828b0161236e565b989b979a50959850939692959293505050565b60008060008060006080868803121561275a57600080fd5b853561276581612349565b945060208601359350604086013567ffffffffffffffff81111561278857600080fd5b6127948882890161236e565b90945092506127a79050606087016123b7565b90509295509295909350565b878152600073ffffffffffffffffffffffffffffffffffffffff808916602084015280881660408401525085606083015263ffffffff8516608083015260c060a083015261280560c0830184866125ae565b9998505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff861681526080602082015260006128426080830186886125ae565b905083604083015263ffffffff831660608301529695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600067ffffffffffffffff808316818516818304811182151516156128b6576128b6612860565b02949350505050565b600067ffffffffffffffff80841680612901577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b92169190910492915050565b600067ffffffffffffffff80831681851680830382111561293057612930612860565b01949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b60006020828403121561297a57600080fd5b81518015158114610e6557600080fd5b60008282101561299c5761299c612860565b500390565b73ffffffffffffffffffffffffffffffffffffffff8516815283602082015267ffffffffffffffff831660408201526080606082015260006129e6608083018461250f565b9695505050505050565b600060208284031215612a0257600080fd5b8151610e6581612349565b600073ffffffffffffffffffffffffffffffffffffffff808716835280861660208401525060806040830152612a46608083018561250f565b905082606083015295945050505050565b868152600073ffffffffffffffffffffffffffffffffffffffff808816602084015280871660408401525084606083015283608083015260c060a083015261264360c083018461250f565b60008251612ab48184602087016124e3565b919091019291505056fea164736f6c634300080f000a",
    "sourceMap": "1060:13161:87:-:0;;;1694:174;;;;;;;;;-1:-1:-1;480:42:148;8156:33:156;;1777:84:87::1;1822:1;::::0;1777:10:::1;:84::i;:::-;1060:13161:::0;;1995:281;4418:13:20;;2762:1:142;;-1:-1:-1;;;4418:13:20;;;;4417:14;:40;;;;-1:-1:-1;4435:12:20;;:22;;;;-1:-1:-1;;;4435:12:20;;;;:22;4417:40;4409:99;;;;-1:-1:-1;;;4409:99:20;;216:2:219;4409:99:20;;;198:21:219;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:219;;;338:44;399:19;;4409:99:20;;;;;;;;;4518:12;:22;;-1:-1:-1;;;;4518:22:20;;;-1:-1:-1;;;4518:22:20;4550:20;-1:-1:-1;;;;4550:20:20;;;;-1:-1:-1;;;4550:20:20;;;2164:6:87::1;:16:::0;;-1:-1:-1;;;;;2164:16:87;;::::1;-1:-1:-1::0;;;;;;2164:16:87;;::::1;;::::0;;;2190:18:::1;:40:::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;2240:29:::1;:27;:29::i;:::-;4607:5:20::0;4591:21;;-1:-1:-1;;;;4591:21:20;;;4627:20;;601:4:219;589:17;;571:36;;4627:20:20;;559:2:219;544:18;4627:20:20;;;;;;;1995:281:87;;;:::o;17709:128:156:-;4910:13:20;;-1:-1:-1;;;4910:13:20;;;;4902:69;;;;-1:-1:-1;;;4902:69:20;;820:2:219;4902:69:20;;;802:21:219;859:2;839:18;;;832:30;898:34;878:18;;;871:62;-1:-1:-1;;;949:18:219;;;942:41;1000:19;;4902:69:20;618:407:219;4902:69:20;17784:16:156::1;:46:::0;;-1:-1:-1;;;;;;17784:46:156::1;1337:42:142;17784:46:156;::::0;;17709:128::o;618:407:219:-;1060:13161:87;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106101965760003560e01c80635644cfdf116100e15780639fce812c1161008a578063b28ade2511610064578063b28ade25146104c3578063d764ad0b146104e3578063e0e593c5146104f6578063ecc704281461051657600080fd5b80639fce812c1461042f578063a4e7f8bd14610463578063b1b1b2091461049357600080fd5b806383a74074116100bb57806383a74074146103e65780638cbeeef2146102f757806392a162cf146103fd57600080fd5b80635644cfdf146103905780636425666b146103a65780636e296e45146103d157600080fd5b80633f827a5a116101435780634c1d6a691161011d5780634c1d6a69146102f75780634d0047ee1461030d57806354fd4d501461033a57600080fd5b80633f827a5a1461028f5780634273ca16146102b7578063485cc955146102d757600080fd5b80630ff754ea116101745780630ff754ea146102135780632828d7e8146102655780633dbb202b1461027a57600080fd5b806301ffc9a71461019b578063028f85f7146101d05780630c568498146101fe575b600080fd5b3480156101a757600080fd5b506101bb6101b6366004612307565b61057b565b60405190151581526020015b60405180910390f35b3480156101dc57600080fd5b506101e5601081565b60405167ffffffffffffffff90911681526020016101c7565b34801561020a57600080fd5b506101e5603f81565b34801561021f57600080fd5b5060f9546102409073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016101c7565b34801561027157600080fd5b506101e5604081565b61028d6102883660046123d0565b610614565b005b34801561029b57600080fd5b506102a4600181565b60405161ffff90911681526020016101c7565b3480156102c357600080fd5b506101bb6102d2366004612437565b610878565b3480156102e357600080fd5b5061028d6102f23660046124aa565b610a12565b34801561030357600080fd5b506101e5619c4081565b34801561031957600080fd5b5060fa546102409073ffffffffffffffffffffffffffffffffffffffff1681565b34801561034657600080fd5b506103836040518060400160405280600581526020017f312e372e3100000000000000000000000000000000000000000000000000000081525081565b6040516101c79190612559565b34801561039c57600080fd5b506101e561138881565b3480156103b257600080fd5b5060f95473ffffffffffffffffffffffffffffffffffffffff16610240565b3480156103dd57600080fd5b50610240610c2c565b3480156103f257600080fd5b506101e562030d4081565b34801561040957600080fd5b5061041d61041836600461256c565b610d13565b6040516101c7969594939291906125f7565b34801561043b57600080fd5b506102407f000000000000000000000000000000000000000000000000000000000000000081565b34801561046f57600080fd5b506101bb61047e36600461264f565b60ce6020526000908152604090205460ff1681565b34801561049f57600080fd5b506101bb6104ae36600461264f565b60cb6020526000908152604090205460ff1681565b3480156104cf57600080fd5b506101e56104de366004612668565b610dfc565b61028d6104f13660046126bc565b610e6c565b34801561050257600080fd5b5061028d610511366004612742565b611854565b34801561052257600080fd5b5061056d60cd547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff167e010000000000000000000000000000000000000000000000000000000000001790565b6040519081526020016101c7565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f4273ca1600000000000000000000000000000000000000000000000000000000148061060e57507fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b61074d7f0000000000000000000000000000000000000000000000000000000000000000610643858585610dfc565b347fd764ad0b000000000000000000000000000000000000000000000000000000006106af60cd547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff167e010000000000000000000000000000000000000000000000000000000000001790565b338a34898c8c6040516024016106cb97969594939291906127b3565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009093169290921790915261186e565b8373ffffffffffffffffffffffffffffffffffffffff167fcb0f7ffd78f9aee47a248fae8db181db6eee833039123e026dcbff529522e52a3385856107d260cd547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff167e010000000000000000000000000000000000000000000000000000000000001790565b866040516107e4959493929190612812565b60405180910390a260405134815233907f8ebb2ec2465bdb2a06a66fc37a0963af8a2a6a1479d81d56fdb8cbb98096d5469060200160405180910390a2505060cd80547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff808216600101167fffff0000000000000000000000000000000000000000000000000000000000009091161790555050565b60fa5460009073ffffffffffffffffffffffffffffffffffffffff163314610927576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f6f6e6c7920616363657074206e617469766520746f6b656e20617070726f766560448201527f2063616c6c6261636b000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b60008060008036600061093a8989610d13565b9550955095509550955095508573ffffffffffffffffffffffffffffffffffffffff168c73ffffffffffffffffffffffffffffffffffffffff161480156109805750838a145b801561098c5750600084115b6109f2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f696e76616c6964206f6e417070726f7665206461746100000000000000000000604482015260640161091e565b610a0086868686868661196a565b5060019b9a5050505050505050505050565b6000546003907501000000000000000000000000000000000000000000900460ff16158015610a60575060005460ff8083167401000000000000000000000000000000000000000090920416105b610aec576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a6564000000000000000000000000000000000000606482015260840161091e565b600080547fffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff60ff84167401000000000000000000000000000000000000000002167fffffffffffffffffffff0000ffffffffffffffffffffffffffffffffffffffff90911617750100000000000000000000000000000000000000000017905560f9805473ffffffffffffffffffffffffffffffffffffffff8086167fffffffffffffffffffffffff00000000000000000000000000000000000000009283161790925560fa805492851692909116919091179055610bc9611c35565b600080547fffffffffffffffffffff00ffffffffffffffffffffffffffffffffffffffffff16905560405160ff821681527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050565b60cc5460009073ffffffffffffffffffffffffffffffffffffffff167fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff215301610cf6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603560248201527f43726f7373446f6d61696e4d657373656e6765723a2078446f6d61696e4d657360448201527f7361676553656e646572206973206e6f74207365740000000000000000000000606482015260840161091e565b5060cc5473ffffffffffffffffffffffffffffffffffffffff1690565b60008080803681604c871015610dab576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603160248201527f496e76616c6964206f6e417070726f7665206461746120666f72204c3143726f60448201527f7373446f6d61696e4d657373656e676572000000000000000000000000000000606482015260840161091e565b5050508435606090811c96601487013590911c95602881013595604882013560e01c9550604c90910193507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffb4019150565b6000611388619c4080603f610e18604063ffffffff881661288f565b610e2291906128bf565b610e2d60108861288f565b610e3a9062030d4061290d565b610e44919061290d565b610e4e919061290d565b610e58919061290d565b610e62919061290d565b90505b9392505050565b3415610efa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f43726f7373446f6d61696e4d657373656e6765723a2076616c7565206d75737460448201527f206265207a65726f000000000000000000000000000000000000000000000000606482015260840161091e565b60f087901c60028110610fb5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604d60248201527f43726f7373446f6d61696e4d657373656e6765723a206f6e6c7920766572736960448201527f6f6e2030206f722031206d657373616765732061726520737570706f7274656460648201527f20617420746869732074696d6500000000000000000000000000000000000000608482015260a40161091e565b8061ffff166000036110aa576000611006878986868080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152508f9250611d0e915050565b600081815260cb602052604090205490915060ff16156110a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603760248201527f43726f7373446f6d61696e4d657373656e6765723a206c65676163792077697460448201527f6864726177616c20616c72656164792072656c61796564000000000000000000606482015260840161091e565b505b60006110f0898989898989898080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611d2d92505050565b90506110fa611d50565b1561115457600081815260ce602052604090205460ff161561111e5761111e612939565b851561114f5760f95460fa5461114f9173ffffffffffffffffffffffffffffffffffffffff91821691163089611e46565b6111f2565b600081815260ce602052604090205460ff166111f2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603060248201527f43726f7373446f6d61696e4d657373656e6765723a206d65737361676520636160448201527f6e6e6f74206265207265706c6179656400000000000000000000000000000000606482015260840161091e565b6111fb87611ee1565b156112ae576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604360248201527f43726f7373446f6d61696e4d657373656e6765723a2063616e6e6f742073656e60448201527f64206d65737361676520746f20626c6f636b65642073797374656d206164647260648201527f6573730000000000000000000000000000000000000000000000000000000000608482015260a40161091e565b600081815260cb602052604090205460ff161561134d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f43726f7373446f6d61696e4d657373656e6765723a206d65737361676520686160448201527f7320616c7265616479206265656e2072656c6179656400000000000000000000606482015260840161091e565b61136e8561135f611388619c4061290d565b67ffffffffffffffff16611f24565b1580611394575060cc5473ffffffffffffffffffffffffffffffffffffffff1661dead14155b156114ad57600081815260ce602052604080822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790555182917f99d0e048484baa1b1540b1367cb128acd7ab2946d1ed91ec10e3c85e4bf51b8f91a27fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff32016114a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f43726f7373446f6d61696e4d657373656e6765723a206661696c656420746f2060448201527f72656c6179206d65737361676500000000000000000000000000000000000000606482015260840161091e565b505061184b565b60cc80547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8a16179055600186156115955760fa546040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8a81166004830152602482018a90529091169063095ea7b3906044016020604051808303816000875af115801561156e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115929190612968565b90505b60006115e789619c405a6115a9919061298a565b600089898080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611f4292505050565b60cc80547fffffffffffffffffffffffff00000000000000000000000000000000000000001661dead17905590508715801590611622575080155b156116c75760fa546040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8b81166004830152600060248301529091169063095ea7b3906044016020604051808303816000875af11580156116a0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116c49190612968565b91505b8080156116d15750815b1561173957600083815260cb602052604080822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790555184917f4641df4a962071e12719d8c8c8e5ac7fc4d97b927346a3d7a335b1f7517e133c91a2611846565b600083815260ce602052604080822080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790555184917f99d0e048484baa1b1540b1367cb128acd7ab2946d1ed91ec10e3c85e4bf51b8f91a27fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff3201611846576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602d60248201527f43726f7373446f6d61696e4d657373656e6765723a206661696c656420746f2060448201527f72656c6179206d65737361676500000000000000000000000000000000000000606482015260840161091e565b505050505b50505050505050565b61186233868684878761196a565b5050505050565b905090565b34156118d6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f44656e79206465706f736974696e672045544800000000000000000000000000604482015260640161091e565b60f9546040517f06e2b8b900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff909116906306e2b8b9906119329087908690889087906004016129a1565b600060405180830381600087803b15801561194c57600080fd5b505af1158015611960573d6000803e3d6000fd5b5050505050505050565b8315611a365760fa546119959073ffffffffffffffffffffffffffffffffffffffff16873087611e46565b60fa5460f9546040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff91821660048201526024810187905291169063095ea7b3906044016020604051808303816000875af1158015611a10573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a349190612968565b505b611aed7f0000000000000000000000000000000000000000000000000000000000000000611a65848487610dfc565b867fd764ad0b00000000000000000000000000000000000000000000000000000000611ad160cd547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff167e010000000000000000000000000000000000000000000000000000000000001790565b8b8b8b8b8b8b6040516024016106cb97969594939291906127b3565b8473ffffffffffffffffffffffffffffffffffffffff167fcb0f7ffd78f9aee47a248fae8db181db6eee833039123e026dcbff529522e52a878484611b7260cd547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff167e010000000000000000000000000000000000000000000000000000000000001790565b88604051611b84959493929190612812565b60405180910390a28573ffffffffffffffffffffffffffffffffffffffff167f8ebb2ec2465bdb2a06a66fc37a0963af8a2a6a1479d81d56fdb8cbb98096d54685604051611bd491815260200190565b60405180910390a2505060cd80547dffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff808216600101167fffff00000000000000000000000000000000000000000000000000000000000090911617905550505050565b6000547501000000000000000000000000000000000000000000900460ff16611ce0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e67000000000000000000000000000000000000000000606482015260840161091e565b60cc80547fffffffffffffffffffffffff00000000000000000000000000000000000000001661dead179055565b6000611d1c85858585611f5c565b805190602001209050949350505050565b6000611d3d878787878787611ff5565b8051906020012090509695505050505050565b60f95460009073ffffffffffffffffffffffffffffffffffffffff1633148015611869575060f954604080517f9bf62d82000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000008116931691639bf62d829160048083019260209291908290030181865afa158015611e06573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611e2a91906129f0565b73ffffffffffffffffffffffffffffffffffffffff1614905090565b6040805173ffffffffffffffffffffffffffffffffffffffff85811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd00000000000000000000000000000000000000000000000000000000179052611edb908590612094565b50505050565b600073ffffffffffffffffffffffffffffffffffffffff821630148061060e57505060f95473ffffffffffffffffffffffffffffffffffffffff90811691161490565b600080603f83619c4001026040850201603f5a021015949350505050565b600080600080845160208601878a8af19695505050505050565b606084848484604051602401611f759493929190612a0d565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fcbd4ece9000000000000000000000000000000000000000000000000000000001790529050949350505050565b606086868686868660405160240161201296959493929190612a57565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fd764ad0b0000000000000000000000000000000000000000000000000000000017905290509695505050505050565b60006120f6826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166121a59092919063ffffffff16565b8051909150156121a057808060200190518101906121149190612968565b6121a0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161091e565b505050565b6060610e6284846000858573ffffffffffffffffffffffffffffffffffffffff85163b61222e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161091e565b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516122579190612aa2565b60006040518083038185875af1925050503d8060008114612294576040519150601f19603f3d011682016040523d82523d6000602084013e612299565b606091505b50915091506122a98282866122b4565b979650505050505050565b606083156122c3575081610e65565b8251156122d35782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161091e9190612559565b60006020828403121561231957600080fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114610e6557600080fd5b73ffffffffffffffffffffffffffffffffffffffff8116811461236b57600080fd5b50565b60008083601f84011261238057600080fd5b50813567ffffffffffffffff81111561239857600080fd5b6020830191508360208285010111156123b057600080fd5b9250929050565b803563ffffffff811681146123cb57600080fd5b919050565b600080600080606085870312156123e657600080fd5b84356123f181612349565b9350602085013567ffffffffffffffff81111561240d57600080fd5b6124198782880161236e565b909450925061242c9050604086016123b7565b905092959194509250565b60008060008060006080868803121561244f57600080fd5b853561245a81612349565b9450602086013561246a81612349565b935060408601359250606086013567ffffffffffffffff81111561248d57600080fd5b6124998882890161236e565b969995985093965092949392505050565b600080604083850312156124bd57600080fd5b82356124c881612349565b915060208301356124d881612349565b809150509250929050565b60005b838110156124fe5781810151838201526020016124e6565b83811115611edb5750506000910152565b600081518084526125278160208601602086016124e3565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081526000610e65602083018461250f565b6000806020838503121561257f57600080fd5b823567ffffffffffffffff81111561259657600080fd5b6125a28582860161236e565b90969095509350505050565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b600073ffffffffffffffffffffffffffffffffffffffff808916835280881660208401525085604083015263ffffffff8516606083015260a0608083015261264360a0830184866125ae565b98975050505050505050565b60006020828403121561266157600080fd5b5035919050565b60008060006040848603121561267d57600080fd5b833567ffffffffffffffff81111561269457600080fd5b6126a08682870161236e565b90945092506126b39050602085016123b7565b90509250925092565b600080600080600080600060c0888a0312156126d757600080fd5b8735965060208801356126e981612349565b955060408801356126f981612349565b9450606088013593506080880135925060a088013567ffffffffffffffff81111561272357600080fd5b61272f8a828b0161236e565b989b979a50959850939692959293505050565b60008060008060006080868803121561275a57600080fd5b853561276581612349565b945060208601359350604086013567ffffffffffffffff81111561278857600080fd5b6127948882890161236e565b90945092506127a79050606087016123b7565b90509295509295909350565b878152600073ffffffffffffffffffffffffffffffffffffffff808916602084015280881660408401525085606083015263ffffffff8516608083015260c060a083015261280560c0830184866125ae565b9998505050505050505050565b73ffffffffffffffffffffffffffffffffffffffff861681526080602082015260006128426080830186886125ae565b905083604083015263ffffffff831660608301529695505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600067ffffffffffffffff808316818516818304811182151516156128b6576128b6612860565b02949350505050565b600067ffffffffffffffff80841680612901577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b92169190910492915050565b600067ffffffffffffffff80831681851680830382111561293057612930612860565b01949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052600160045260246000fd5b60006020828403121561297a57600080fd5b81518015158114610e6557600080fd5b60008282101561299c5761299c612860565b500390565b73ffffffffffffffffffffffffffffffffffffffff8516815283602082015267ffffffffffffffff831660408201526080606082015260006129e6608083018461250f565b9695505050505050565b600060208284031215612a0257600080fd5b8151610e6581612349565b600073ffffffffffffffffffffffffffffffffffffffff808716835280861660208401525060806040830152612a46608083018561250f565b905082606083015295945050505050565b868152600073ffffffffffffffffffffffffffffffffffffffff808816602084015280871660408401525084606083015283608083015260c060a083015261264360c083018461250f565b60008251612ab48184602087016124e3565b919091019291505056fea164736f6c634300080f000a",
    "sourceMap": "1060:13161:87:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;91:198:92;;;;;;;;;;-1:-1:-1;91:198:92;;;;;:::i;:::-;;:::i;:::-;;;516:14:219;;509:22;491:41;;479:2;464:18;91:198:92;;;;;;;;4456:53:156;;;;;;;;;;;;4507:2;4456:53;;;;;717:18:219;705:31;;;687:50;;675:2;660:18;4456:53:156;543:200:219;4301:64:156;;;;;;;;;;;;4363:2;4301:64;;1390:28:87;;;;;;;;;;-1:-1:-1;1390:28:87;;;;;;;;;;;956:42:219;944:55;;;926:74;;914:2;899:18;1390:28:87;748:258:219;4146:62:156;;;;;;;;;;;;4206:2;4146:62;;8778:954;;;;;;:::i;:::-;;:::i;:::-;;3879:42;;;;;;;;;;;;3920:1;3879:42;;;;;2485:6:219;2473:19;;;2455:38;;2443:2;2428:18;3879:42:156;2311:188:219;4245:619:87;;;;;;;;;;-1:-1:-1;4245:619:87;;;;;:::i;:::-;;:::i;1995:281::-;;;;;;;;;;-1:-1:-1;1995:281:87;;;;;:::i;:::-;;:::i;4597:51:156:-;;;;;;;;;;;;4642:6;4597:51;;1480:33:87;;;;;;;;;;-1:-1:-1;1480:33:87;;;;;;;;1583:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;4943:53:156:-;;;;;;;;;;;;4991:5;4943:53;;2337:89:87;;;;;;;;;;-1:-1:-1;2412:6:87;;;;2337:89;;15409:250:156;;;;;;;;;;;;;:::i;3999:56::-;;;;;;;;;;;;4048:7;3999:56;;3110:930:87;;;;;;;;;;-1:-1:-1;3110:930:87;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;;;:::i;5091:40:156:-;;;;;;;;;;;;;;;6369:46;;;;;;;;;;-1:-1:-1;6369:46:156;;;;;:::i;:::-;;;;;;;;;;;;;;;;5387:50;;;;;;;;;;-1:-1:-1;5387:50:156;;;;;:::i;:::-;;;;;;;;;;;;;;;;16727:894;;;;;;;;;;-1:-1:-1;16727:894:156;;;;;:::i;:::-;;:::i;9245:4974:87:-;;;;;;:::i;:::-;;:::i;5939:614::-;;;;;;;;;;-1:-1:-1;5939:614:87;;;;;:::i;:::-;;:::i;15980:134:156:-;;;;;;;;;;;;16081:8;;;;4819:18:145;4816:30;;15980:134:156;;;;8499:25:219;;;8487:2;8472:18;15980:134:156;8353:177:219;91:198:92;161:4;184:43;;;199:28;184:43;;:98;;-1:-1:-1;231:51:92;;;246:36;231:51;184:98;177:105;91:198;-1:-1:-1;;91:198:92:o;8778:954:156:-;9238:285;9264:15;9293:31;9301:8;;9311:12;9293:7;:31::i;:::-;9338:9;9401:26;9429:14;16081:8;;;;4819:18:145;4816:30;;15980:134:156;9429:14;9445:10;9457:7;9466:9;9477:12;9491:8;;9361:152;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9238:12;:285::i;:::-;9551:7;9539:72;;;9560:10;9572:8;;9582:14;16081:8;;;;4819:18:145;4816:30;;15980:134:156;9582:14;9598:12;9539:72;;;;;;;;;;:::i;:::-;;;;;;;;9626:44;;9660:9;8499:25:219;;9648:10:156;;9626:44;;8487:2:219;8472:18;9626:44:156;;;;;;;-1:-1:-1;;9707:8:156;9705:10;;;;;;;;;;;;;;;;-1:-1:-1;;8778:954:156:o;4245:619:87:-;4467:18;;4417:4;;4467:18;;4445:10;:41;4437:95;;;;;;;9968:2:219;4437:95:87;;;9950:21:219;10007:2;9987:18;;;9980:30;10046:34;10026:18;;;10019:62;10117:11;10097:18;;;10090:39;10146:19;;4437:95:87;;;;;;;;;4543:12;4557:10;4569:14;4585:18;4605:22;;4643:26;4663:5;;4643:19;:26::i;:::-;4542:127;;;;;;;;;;;;4697:4;4687:14;;:6;:14;;;:35;;;;;4716:6;4705:7;:17;4687:35;:49;;;;;4735:1;4726:6;:10;4687:49;4679:84;;;;;;;10378:2:219;4679:84:87;;;10360:21:219;10417:2;10397:18;;;10390:30;10456:24;10436:18;;;10429:52;10498:18;;4679:84:87;10176:346:219;4679:84:87;4773:63;4797:4;4803:2;4807:6;4815:11;4828:7;;4773:23;:63::i;:::-;-1:-1:-1;4853:4:87;;4245:619;-1:-1:-1;;;;;;;;;;;4245:619:87:o;1995:281::-;4418:13:20;;2762:1:142;;4418:13:20;;;;;4417:14;:40;;;;-1:-1:-1;4435:12:20;;:22;;;;:12;;;;;:22;4417:40;4409:99;;;;;;;10729:2:219;4409:99:20;;;10711:21:219;10768:2;10748:18;;;10741:30;10807:34;10787:18;;;10780:62;10878:16;10858:18;;;10851:44;10912:19;;4409:99:20;10527:410:219;4409:99:20;4518:12;:22;;4550:20;4518:22;;;;;4550:20;;;;;;;;;;2164:6:87::1;:16:::0;;::::1;::::0;;::::1;::::0;;;::::1;;::::0;;;2190:18:::1;:40:::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;2240:29:::1;:27;:29::i;:::-;4607:5:20::0;4591:21;;;;;;4627:20;;11114:4:219;11102:17;;11084:36;;4627:20:20;;11072:2:219;11057:18;4627:20:20;;;;;;;1995:281:87;;;:::o;15409:250:156:-;15504:16;;15464:7;;15504:47;:16;:47;;15483:135;;;;;;;11333:2:219;15483:135:156;;;11315:21:219;11372:2;11352:18;;;11345:30;11411:34;11391:18;;;11384:62;11482:23;11462:18;;;11455:51;11523:19;;15483:135:156;11131:417:219;15483:135:156;-1:-1:-1;15636:16:156;;;;;15409:250::o;3110:930:87:-;3206:13;;;;3272:23;3206:13;3335:2;3319:18;;;3311:80;;;;;;;11755:2:219;3311:80:87;;;11737:21:219;11794:2;11774:18;;;11767:30;11833:34;11813:18;;;11806:62;11904:19;11884:18;;;11877:47;11941:19;;3311:80:87;11553:413:219;3311:80:87;-1:-1:-1;;;3694:26:87;;3690:2;3686:35;;;;3780:2;3762:21;;3749:35;3741:44;;;;3840:2;3822:21;;3809:35;;3913:2;3895:21;;3882:35;3877:3;3873:45;;-1:-1:-1;3968:2:87;3950:21;;;;-1:-1:-1;4003:21:87;;;-1:-1:-1;3110:930:87:o;16727:894:156:-;16811:6;4991:5;4796:6;;4363:2;17040:49;4206:2;17040:49;;;;:::i;:::-;17039:90;;;;:::i;:::-;16937:51;4507:2;16944:8;16937:51;:::i;:::-;16873:116;;4048:7;16873:116;:::i;:::-;:257;;;;:::i;:::-;:412;;;;:::i;:::-;:587;;;;:::i;:::-;:741;;;;:::i;:::-;16829:785;;16727:894;;;;;;:::o;9245:4974:87:-;9506:9;:14;9498:67;;;;;;;13236:2:219;9498:67:87;;;13218:21:219;13275:2;13255:18;;;13248:30;13314:34;13294:18;;;13287:62;13385:10;13365:18;;;13358:38;13413:19;;9498:67:87;13034:404:219;9498:67:87;5408:3:145;5404:16;;;9674:1:87;9658:17;;9650:107;;;;;;;13645:2:219;9650:107:87;;;13627:21:219;13684:2;13664:18;;;13657:30;13723:34;13703:18;;;13696:62;13794:34;13774:18;;;13767:62;13866:15;13845:19;;;13838:44;13899:19;;9650:107:87;13443:481:219;9650:107:87;9959:13;:18;;9976:1;9959:18;9955:253;;9993:15;10011:68;10044:7;10053;10062:8;;10011:68;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10072:6:87;;-1:-1:-1;10011:32:87;;-1:-1:-1;;10011:68:87:i;:::-;10101:27;;;;:18;:27;;;;;;9993:86;;-1:-1:-1;10101:27:87;;:36;10093:104;;;;;;;14131:2:219;10093:104:87;;;14113:21:219;14170:2;14150:18;;;14143:30;14209:34;14189:18;;;14182:62;14280:25;14260:18;;;14253:53;14323:19;;10093:104:87;13929:419:219;10093:104:87;9979:229;9955:253;10378:21;10414:90;10447:6;10455:7;10464;10473:6;10481:12;10495:8;;10414:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10414:32:87;;-1:-1:-1;;;10414:90:87:i;:::-;10378:126;;10519:19;:17;:19::i;:::-;10515:488;;;10696:29;;;;:14;:29;;;;;;;;10695:30;10688:38;;;;:::i;:::-;10744:10;;10740:132;;10826:6;;10781:18;;10774:83;;10826:6;10781:18;;;;10826:6;10843:4;10850:6;10774:43;:83::i;:::-;10515:488;;;10910:29;;;;:14;:29;;;;;;;;10902:90;;;;;;;14744:2:219;10902:90:87;;;14726:21:219;14783:2;14763:18;;;14756:30;14822:34;14802:18;;;14795:62;14893:18;14873;;;14866:46;14929:19;;10902:90:87;14542:412:219;10902:90:87;11034:24;11050:7;11034:15;:24::i;:::-;:33;11013:135;;;;;;;15161:2:219;11013:135:87;;;15143:21:219;15200:2;15180:18;;;15173:30;15239:34;15219:18;;;15212:62;15310:34;15290:18;;;15283:62;15382:5;15361:19;;;15354:34;15405:19;;11013:135:87;14959:471:219;11013:135:87;11167:33;;;;:18;:33;;;;;;;;:42;11159:109;;;;;;;15637:2:219;11159:109:87;;;15619:21:219;15676:2;15656:18;;;15649:30;15715:34;15695:18;;;15688:62;15786:24;15766:18;;;15759:52;15828:19;;11159:109:87;15435:418:219;11159:109:87;11962:77;11981:12;11995:43;4991:5:156;4796:6;11995:43:87;:::i;:::-;11962:77;;:18;:77::i;:::-;11961:78;:145;;;-1:-1:-1;12059:16:87;;:47;:16;1337:42:142;12059:47:87;;11961:145;11944:918;;;12131:29;;;;:14;:29;;;;;;:36;;;;12163:4;12131:36;;;12186:35;12146:13;;12186:35;;;12701:41;:9;:41;12697:135;;12762:55;;;;;16060:2:219;12762:55:87;;;16042:21:219;16099:2;16079:18;;;16072:30;16138:34;16118:18;;;16111:62;16209:15;16189:18;;;16182:43;16242:19;;12762:55:87;15858:409:219;12697:135:87;12845:7;;;;11944:918;12872:16;:26;;;;;;;;;;-1:-1:-1;12948:11:87;;12944:110;;12999:18;;12992:51;;;;;12999:18;16464:55:219;;;12992:51:87;;;16446:74:219;16536:18;;;16529:34;;;12999:18:87;;;;12992:34;;16419:18:219;;12992:51:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;12975:68;;12944:110;13063:12;13078:67;13092:7;4796:6:156;13101:9:87;:30;;;;:::i;:::-;13133:1;13136:8;;13078:67;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13078:13:87;;-1:-1:-1;;;13078:67:87:i;:::-;13155:16;:46;;;;1337:42:142;13155:46:87;;;13063:82;-1:-1:-1;13215:11:87;;;;;:23;;;13231:7;13230:8;13215:23;13211:117;;;13278:18;;13271:46;;;;;13278:18;16464:55:219;;;13271:46:87;;;16446:74:219;13278:18:87;16536::219;;;16529:34;13278:18:87;;;;13271:34;;16419:18:219;;13271:46:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;13254:63;;13211:117;13342:7;:25;;;;;13353:14;13342:25;13338:875;;;13383:33;;;;:18;:33;;;;;;:40;;;;13419:4;13383:40;;;13442:29;13402:13;;13442:29;;;13338:875;;;13502:29;;;;:14;:29;;;;;;:36;;;;13534:4;13502:36;;;13557:35;13517:13;;13557:35;;;14072:41;:9;:41;14068:135;;14133:55;;;;;16060:2:219;14133:55:87;;;16042:21:219;16099:2;16079:18;;;16072:30;16138:34;16118:18;;;16111:62;16209:15;16189:18;;;16182:43;16242:19;;14133:55:87;15858:409:219;14068:135:87;9488:4731;;;;9245:4974;;;;;;;;:::o;5939:614::-;6469:77;6493:10;6505:7;6514;6523:12;6537:8;;6469:23;:77::i;:::-;5939:614;;;;;:::o;16051:56:156:-;16044:63;;15980:134;:::o;2773:236:87:-;2898:9;:14;2890:46;;;;;;;17498:2:219;2890:46:87;;;17480:21:219;17537:2;17517:18;;;17510:30;17576:21;17556:18;;;17549:49;17615:18;;2890:46:87;17296:343:219;2890:46:87;2946:6;;:56;;;;;:6;;;;;:25;;:56;;2972:3;;2977:6;;2985:9;;2996:5;;2946:56;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2773:236;;;;:::o;7279:1269::-;7522:11;;7518:192;;7556:18;;7549:76;;7556:18;;7593:7;7610:4;7617:7;7549:43;:76::i;:::-;7646:18;;7682:6;;7639:60;;;;;7646:18;7682:6;;;7639:60;;;16446:74:219;16536:18;;;16529:34;;;7646:18:87;;;7639:34;;16419:18:219;;7639:60:87;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;7518:192;8069:278;8095:15;8124:31;8132:8;;8142:12;8124:7;:31::i;:::-;8169:7;8230:26;8258:14;16081:8:156;;;;4819:18:145;4816:30;;15980:134:156;8258:14:87;8274:7;8283;8292;8301:12;8315:8;;8190:147;;;;;;;;;;;;;;:::i;8069:278::-;8375:7;8363:69;;;8384:7;8393:8;;8403:14;16081:8:156;;;;4819:18:145;4816:30;;15980:134:156;8403:14:87;8419:12;8363:69;;;;;;;;;;:::i;:::-;;;;;;;;8469:7;8447:39;;;8478:7;8447:39;;;;8499:25:219;;8487:2;8472:18;;8353:177;8447:39:87;;;;;;;;-1:-1:-1;;8523:8:87;8521:10;;;;;;;;;;;;;;;;-1:-1:-1;;;;7279:1269:87:o;17709:128:156:-;4910:13:20;;;;;;;4902:69;;;;;;;18356:2:219;4902:69:20;;;18338:21:219;18395:2;18375:18;;;18368:30;18434:34;18414:18;;;18407:62;18505:13;18485:18;;;18478:41;18536:19;;4902:69:20;18154:407:219;4902:69:20;17784:16:156::1;:46:::0;;;::::1;1337:42:142;17784:46:156;::::0;;17709:128::o;3076:305:146:-;3265:7;3305:68;3341:7;3350;3359:5;3366:6;3305:35;:68::i;:::-;3295:79;;;;;;3288:86;;3076:305;;;;;;:::o;3853:375::-;4093:7;4133:87;4169:6;4177:7;4186;4195:6;4203:9;4214:5;4133:35;:87::i;:::-;4123:98;;;;;;4116:105;;3853:375;;;;;;;;:::o;4911:160:87:-;5017:6;;4972:4;;5017:6;;4995:10;:29;:69;;;;-1:-1:-1;5028:6:87;;:17;;;;;;;;:36;5049:15;5028:36;;;:6;;:15;;:17;;;;;;;;;;;;;;:6;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:36;;;4988:76;;4911:160;:::o;974:241:33:-;1139:68;;;19034:42:219;19103:15;;;1139:68:33;;;19085:34:219;19155:15;;19135:18;;;19128:43;19187:18;;;;19180:34;;;1139:68:33;;;;;;;;;;18997:18:219;;;;1139:68:33;;;;;;;;;;1162:27;1139:68;;;1112:96;;1132:5;;1112:19;:96::i;:::-;974:241;;;;:::o;5118:158:87:-;5192:4;5215:24;;;5234:4;5215:24;;:54;;-1:-1:-1;;5262:6:87;;;;;;5243:26;;;;5118:158::o;3615:365:149:-;3696:4;3712:15;3931:2;3916:12;3909:5;3905:24;3901:33;3896:2;3887:7;3883:16;3879:56;3874:2;3867:5;3863:14;3860:76;3853:84;;3615:365;-1:-1:-1;;;;3615:365:149:o;1202:536::-;1305:4;1321:13;1668:1;1635;1594:9;1588:16;1554:2;1543:9;1539:18;1496:6;1454:7;1421:4;1395:302;1367:330;1202:536;-1:-1:-1;;;;;;1202:536:149:o;3037:336:145:-;3228:12;3334:7;3343;3352:5;3359:6;3263:103;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3037:336:145;;;;;;:::o;3847:516::-;4089:12;4236:6;4256:7;4277;4298:6;4318:9;4341:5;4124:232;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3847:516:145;;;;;;;;:::o;3747:706:33:-;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;4192:27;;;;:69;;;;;:::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:33;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;;;;20605:2:219;4351:85:33;;;20587:21:219;20644:2;20624:18;;;20617:30;20683:34;20663:18;;;20656:62;20754:12;20734:18;;;20727:40;20784:19;;4351:85:33;20403:406:219;4351:85:33;3817:636;3747:706;;:::o;3861:223:40:-;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;3994;1465:19;;;;5228:60;;;;;;;21423:2:219;5228:60:40;;;21405:21:219;21462:2;21442:18;;;21435:30;21501:31;21481:18;;;21474:59;21550:18;;5228:60:40;21221:353:219;5228:60:40;5300:12;5314:23;5341:6;:11;;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:40:o;7561:742::-;7707:12;7735:7;7731:566;;;-1:-1:-1;7765:10:40;7758:17;;7731:566;7876:17;;:21;7872:415;;8120:10;8114:17;8180:15;8167:10;8163:2;8159:19;8152:44;7872:415;8259:12;8252:20;;;;;;;;;;;:::i;14:332:219:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;180:9;167:23;230:66;223:5;219:78;212:5;209:89;199:117;;312:1;309;302:12;1011:154;1097:42;1090:5;1086:54;1079:5;1076:65;1066:93;;1155:1;1152;1145:12;1066:93;1011:154;:::o;1170:347::-;1221:8;1231:6;1285:3;1278:4;1270:6;1266:17;1262:27;1252:55;;1303:1;1300;1293:12;1252:55;-1:-1:-1;1326:20:219;;1369:18;1358:30;;1355:50;;;1401:1;1398;1391:12;1355:50;1438:4;1430:6;1426:17;1414:29;;1490:3;1483:4;1474:6;1466;1462:19;1458:30;1455:39;1452:59;;;1507:1;1504;1497:12;1452:59;1170:347;;;;;:::o;1522:163::-;1589:20;;1649:10;1638:22;;1628:33;;1618:61;;1675:1;1672;1665:12;1618:61;1522:163;;;:::o;1690:616::-;1777:6;1785;1793;1801;1854:2;1842:9;1833:7;1829:23;1825:32;1822:52;;;1870:1;1867;1860:12;1822:52;1909:9;1896:23;1928:31;1953:5;1928:31;:::i;:::-;1978:5;-1:-1:-1;2034:2:219;2019:18;;2006:32;2061:18;2050:30;;2047:50;;;2093:1;2090;2083:12;2047:50;2132:58;2182:7;2173:6;2162:9;2158:22;2132:58;:::i;:::-;2209:8;;-1:-1:-1;2106:84:219;-1:-1:-1;2263:37:219;;-1:-1:-1;2296:2:219;2281:18;;2263:37;:::i;:::-;2253:47;;1690:616;;;;;;;:::o;2504:754::-;2601:6;2609;2617;2625;2633;2686:3;2674:9;2665:7;2661:23;2657:33;2654:53;;;2703:1;2700;2693:12;2654:53;2742:9;2729:23;2761:31;2786:5;2761:31;:::i;:::-;2811:5;-1:-1:-1;2868:2:219;2853:18;;2840:32;2881:33;2840:32;2881:33;:::i;:::-;2933:7;-1:-1:-1;2987:2:219;2972:18;;2959:32;;-1:-1:-1;3042:2:219;3027:18;;3014:32;3069:18;3058:30;;3055:50;;;3101:1;3098;3091:12;3055:50;3140:58;3190:7;3181:6;3170:9;3166:22;3140:58;:::i;:::-;2504:754;;;;-1:-1:-1;2504:754:219;;-1:-1:-1;3217:8:219;;3114:84;2504:754;-1:-1:-1;;;2504:754:219:o;3263:412::-;3355:6;3363;3416:2;3404:9;3395:7;3391:23;3387:32;3384:52;;;3432:1;3429;3422:12;3384:52;3471:9;3458:23;3490:31;3515:5;3490:31;:::i;:::-;3540:5;-1:-1:-1;3597:2:219;3582:18;;3569:32;3610:33;3569:32;3610:33;:::i;:::-;3662:7;3652:17;;;3263:412;;;;;:::o;3911:258::-;3983:1;3993:113;4007:6;4004:1;4001:13;3993:113;;;4083:11;;;4077:18;4064:11;;;4057:39;4029:2;4022:10;3993:113;;;4124:6;4121:1;4118:13;4115:48;;;-1:-1:-1;;4159:1:219;4141:16;;4134:27;3911:258::o;4174:317::-;4216:3;4254:5;4248:12;4281:6;4276:3;4269:19;4297:63;4353:6;4346:4;4341:3;4337:14;4330:4;4323:5;4319:16;4297:63;:::i;:::-;4405:2;4393:15;4410:66;4389:88;4380:98;;;;4480:4;4376:109;;4174:317;-1:-1:-1;;4174:317:219:o;4496:220::-;4645:2;4634:9;4627:21;4608:4;4665:45;4706:2;4695:9;4691:18;4683:6;4665:45;:::i;4721:409::-;4791:6;4799;4852:2;4840:9;4831:7;4827:23;4823:32;4820:52;;;4868:1;4865;4858:12;4820:52;4908:9;4895:23;4941:18;4933:6;4930:30;4927:50;;;4973:1;4970;4963:12;4927:50;5012:58;5062:7;5053:6;5042:9;5038:22;5012:58;:::i;:::-;5089:8;;4986:84;;-1:-1:-1;4721:409:219;-1:-1:-1;;;;4721:409:219:o;5135:325::-;5223:6;5218:3;5211:19;5275:6;5268:5;5261:4;5256:3;5252:14;5239:43;;5327:1;5320:4;5311:6;5306:3;5302:16;5298:27;5291:38;5193:3;5449:4;5379:66;5374:2;5366:6;5362:15;5358:88;5353:3;5349:98;5345:109;5338:116;;5135:325;;;;:::o;5465:625::-;5695:4;5724:42;5805:2;5797:6;5793:15;5782:9;5775:34;5857:2;5849:6;5845:15;5840:2;5829:9;5825:18;5818:43;;5897:6;5892:2;5881:9;5877:18;5870:34;5952:10;5944:6;5940:23;5935:2;5924:9;5920:18;5913:51;6001:3;5995;5984:9;5980:19;5973:32;6022:62;6079:3;6068:9;6064:19;6056:6;6048;6022:62;:::i;:::-;6014:70;5465:625;-1:-1:-1;;;;;;;;5465:625:219:o;6095:180::-;6154:6;6207:2;6195:9;6186:7;6182:23;6178:32;6175:52;;;6223:1;6220;6213:12;6175:52;-1:-1:-1;6246:23:219;;6095:180;-1:-1:-1;6095:180:219:o;6280:481::-;6358:6;6366;6374;6427:2;6415:9;6406:7;6402:23;6398:32;6395:52;;;6443:1;6440;6433:12;6395:52;6483:9;6470:23;6516:18;6508:6;6505:30;6502:50;;;6548:1;6545;6538:12;6502:50;6587:58;6637:7;6628:6;6617:9;6613:22;6587:58;:::i;:::-;6664:8;;-1:-1:-1;6561:84:219;-1:-1:-1;6718:37:219;;-1:-1:-1;6751:2:219;6736:18;;6718:37;:::i;:::-;6708:47;;6280:481;;;;;:::o;6766:892::-;6881:6;6889;6897;6905;6913;6921;6929;6982:3;6970:9;6961:7;6957:23;6953:33;6950:53;;;6999:1;6996;6989:12;6950:53;7035:9;7022:23;7012:33;;7095:2;7084:9;7080:18;7067:32;7108:31;7133:5;7108:31;:::i;:::-;7158:5;-1:-1:-1;7215:2:219;7200:18;;7187:32;7228:33;7187:32;7228:33;:::i;:::-;7280:7;-1:-1:-1;7334:2:219;7319:18;;7306:32;;-1:-1:-1;7385:3:219;7370:19;;7357:33;;-1:-1:-1;7441:3:219;7426:19;;7413:33;7469:18;7458:30;;7455:50;;;7501:1;7498;7491:12;7455:50;7540:58;7590:7;7581:6;7570:9;7566:22;7540:58;:::i;:::-;6766:892;;;;-1:-1:-1;6766:892:219;;-1:-1:-1;6766:892:219;;;;7514:84;;-1:-1:-1;;;6766:892:219:o;7663:685::-;7759:6;7767;7775;7783;7791;7844:3;7832:9;7823:7;7819:23;7815:33;7812:53;;;7861:1;7858;7851:12;7812:53;7900:9;7887:23;7919:31;7944:5;7919:31;:::i;:::-;7969:5;-1:-1:-1;8021:2:219;8006:18;;7993:32;;-1:-1:-1;8076:2:219;8061:18;;8048:32;8103:18;8092:30;;8089:50;;;8135:1;8132;8125:12;8089:50;8174:58;8224:7;8215:6;8204:9;8200:22;8174:58;:::i;:::-;8251:8;;-1:-1:-1;8148:84:219;-1:-1:-1;8305:37:219;;-1:-1:-1;8338:2:219;8323:18;;8305:37;:::i;:::-;8295:47;;7663:685;;;;;;;;:::o;8535:697::-;8830:6;8819:9;8812:25;8793:4;8856:42;8946:2;8938:6;8934:15;8929:2;8918:9;8914:18;8907:43;8998:2;8990:6;8986:15;8981:2;8970:9;8966:18;8959:43;;9038:6;9033:2;9022:9;9018:18;9011:34;9094:10;9086:6;9082:23;9076:3;9065:9;9061:19;9054:52;9143:3;9137;9126:9;9122:19;9115:32;9164:62;9221:3;9210:9;9206:19;9198:6;9190;9164:62;:::i;:::-;9156:70;8535:697;-1:-1:-1;;;;;;;;;8535:697:219:o;9237:524::-;9489:42;9481:6;9477:55;9466:9;9459:74;9569:3;9564:2;9553:9;9549:18;9542:31;9440:4;9590:62;9647:3;9636:9;9632:19;9624:6;9616;9590:62;:::i;:::-;9582:70;;9688:6;9683:2;9672:9;9668:18;9661:34;9743:10;9735:6;9731:23;9726:2;9715:9;9711:18;9704:51;9237:524;;;;;;;;:::o;11971:184::-;12023:77;12020:1;12013:88;12120:4;12117:1;12110:15;12144:4;12141:1;12134:15;12160:270;12199:7;12231:18;12276:2;12273:1;12269:10;12306:2;12303:1;12299:10;12362:3;12358:2;12354:12;12349:3;12346:21;12339:3;12332:11;12325:19;12321:47;12318:73;;;12371:18;;:::i;:::-;12411:13;;12160:270;-1:-1:-1;;;;12160:270:219:o;12435:353::-;12474:1;12500:18;12545:2;12542:1;12538:10;12567:3;12557:191;;12604:77;12601:1;12594:88;12705:4;12702:1;12695:15;12733:4;12730:1;12723:15;12557:191;12766:10;;12762:20;;;;;12435:353;-1:-1:-1;;12435:353:219:o;12793:236::-;12832:3;12860:18;12905:2;12902:1;12898:10;12935:2;12932:1;12928:10;12966:3;12962:2;12958:12;12953:3;12950:21;12947:47;;;12974:18;;:::i;:::-;13010:13;;12793:236;-1:-1:-1;;;;12793:236:219:o;14353:184::-;14405:77;14402:1;14395:88;14502:4;14499:1;14492:15;14526:4;14523:1;14516:15;16574:277;16641:6;16694:2;16682:9;16673:7;16669:23;16665:32;16662:52;;;16710:1;16707;16700:12;16662:52;16742:9;16736:16;16795:5;16788:13;16781:21;16774:5;16771:32;16761:60;;16817:1;16814;16807:12;16856:125;16896:4;16924:1;16921;16918:8;16915:34;;;16929:18;;:::i;:::-;-1:-1:-1;16966:9:219;;16856:125::o;17644:505::-;17885:42;17877:6;17873:55;17862:9;17855:74;17965:6;17960:2;17949:9;17945:18;17938:34;18020:18;18012:6;18008:31;18003:2;17992:9;17988:18;17981:59;18076:3;18071:2;18060:9;18056:18;18049:31;17836:4;18097:46;18138:3;18127:9;18123:19;18115:6;18097:46;:::i;:::-;18089:54;17644:505;-1:-1:-1;;;;;;17644:505:219:o;18566:251::-;18636:6;18689:2;18677:9;18668:7;18664:23;18660:32;18657:52;;;18705:1;18702;18695:12;18657:52;18737:9;18731:16;18756:31;18781:5;18756:31;:::i;19225:512::-;19419:4;19448:42;19529:2;19521:6;19517:15;19506:9;19499:34;19581:2;19573:6;19569:15;19564:2;19553:9;19549:18;19542:43;;19621:3;19616:2;19605:9;19601:18;19594:31;19642:46;19683:3;19672:9;19668:19;19660:6;19642:46;:::i;:::-;19634:54;;19724:6;19719:2;19708:9;19704:18;19697:34;19225:512;;;;;;;:::o;19742:656::-;20029:6;20018:9;20011:25;19992:4;20055:42;20145:2;20137:6;20133:15;20128:2;20117:9;20113:18;20106:43;20197:2;20189:6;20185:15;20180:2;20169:9;20165:18;20158:43;;20237:6;20232:2;20221:9;20217:18;20210:34;20281:6;20275:3;20264:9;20260:19;20253:35;20325:3;20319;20308:9;20304:19;20297:32;20346:46;20387:3;20376:9;20372:19;20364:6;20346:46;:::i;21579:274::-;21708:3;21746:6;21740:13;21762:53;21808:6;21803:3;21796:4;21788:6;21784:17;21762:53;:::i;:::-;21831:16;;;;;21579:274;-1:-1:-1;;21579:274:219:o",
    "linkReferences": {},
    "immutableReferences": {
      "70884": [
        {
          "start": 1089,
          "length": 32
        },
        {
          "start": 1561,
          "length": 32
        },
        {
          "start": 6715,
          "length": 32
        },
        {
          "start": 7608,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "MESSAGE_VERSION()": "3f827a5a",
    "MIN_GAS_CALLDATA_OVERHEAD()": "028f85f7",
    "MIN_GAS_DYNAMIC_OVERHEAD_DENOMINATOR()": "0c568498",
    "MIN_GAS_DYNAMIC_OVERHEAD_NUMERATOR()": "2828d7e8",
    "OTHER_MESSENGER()": "9fce812c",
    "PORTAL()": "0ff754ea",
    "RELAY_CALL_OVERHEAD()": "4c1d6a69",
    "RELAY_CONSTANT_OVERHEAD()": "83a74074",
    "RELAY_GAS_CHECK_BUFFER()": "5644cfdf",
    "RELAY_RESERVED_GAS()": "8cbeeef2",
    "baseGas(bytes,uint32)": "b28ade25",
    "failedMessages(bytes32)": "a4e7f8bd",
    "initialize(address,address)": "485cc955",
    "messageNonce()": "ecc70428",
    "nativeTokenAddress()": "4d0047ee",
    "onApprove(address,address,uint256,bytes)": "4273ca16",
    "portal()": "6425666b",
    "relayMessage(uint256,address,address,uint256,uint256,bytes)": "d764ad0b",
    "sendMessage(address,bytes,uint32)": "3dbb202b",
    "sendNativeTokenMessage(address,uint256,bytes,uint32)": "e0e593c5",
    "successfulMessages(bytes32)": "b1b1b209",
    "supportsInterface(bytes4)": "01ffc9a7",
    "unpackOnApproveData(bytes)": "92a162cf",
    "version()": "54fd4d50",
    "xDomainMessageSender()": "6e296e45"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"msgHash\",\"type\":\"bytes32\"}],\"name\":\"FailedRelayedMessage\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"msgHash\",\"type\":\"bytes32\"}],\"name\":\"RelayedMessage\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"message\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"messageNonce\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"}],\"name\":\"SentMessage\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"SentMessageExtension1\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MESSAGE_VERSION\",\"outputs\":[{\"internalType\":\"uint16\",\"name\":\"\",\"type\":\"uint16\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_GAS_CALLDATA_OVERHEAD\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_GAS_DYNAMIC_OVERHEAD_DENOMINATOR\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MIN_GAS_DYNAMIC_OVERHEAD_NUMERATOR\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OTHER_MESSENGER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PORTAL\",\"outputs\":[{\"internalType\":\"contract OptimismPortal\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RELAY_CALL_OVERHEAD\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RELAY_CONSTANT_OVERHEAD\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RELAY_GAS_CHECK_BUFFER\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"RELAY_RESERVED_GAS\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"_minGasLimit\",\"type\":\"uint32\"}],\"name\":\"baseGas\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"failedMessages\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract OptimismPortal\",\"name\":\"_portal\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_nativeTokenAddress\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"messageNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nativeTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"onApprove\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"portal\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_nonce\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_minGasLimit\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"}],\"name\":\"relayMessage\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"_minGasLimit\",\"type\":\"uint32\"}],\"name\":\"sendMessage\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"},{\"internalType\":\"uint32\",\"name\":\"_minGasLimit\",\"type\":\"uint32\"}],\"name\":\"sendNativeTokenMessage\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"successfulMessages\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"unpackOnApproveData\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_minGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"xDomainMessageSender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:proxied\":\"@title L1CrossDomainMessenger\",\"kind\":\"dev\",\"methods\":{\"baseGas(bytes,uint32)\":{\"params\":{\"_message\":\"Message to compute the amount of required gas for.\",\"_minGasLimit\":\"Minimum desired gas limit when message goes to target.\"},\"returns\":{\"_0\":\"Amount of gas required to guarantee message receipt.\"}},\"initialize(address,address)\":{\"params\":{\"_portal\":\"Address of the OptimismPortal contract on this network.\"}},\"messageNonce()\":{\"returns\":{\"_0\":\"Nonce of the next message to be sent, with added message version.\"}},\"onApprove(address,address,uint256,bytes)\":{\"params\":{\"_amount\":\"Approved amount\",\"_data\":\"Data used in OnApprove contract\",\"_owner\":\"Account that called approveAndCall\"}},\"relayMessage(uint256,address,address,uint256,uint256,bytes)\":{\"params\":{\"_message\":\"Message to send to the target.\",\"_minGasLimit\":\"Minimum amount of gas that the message can be executed with.\",\"_nonce\":\"Nonce of the message being relayed.\",\"_sender\":\"Address of the user who sent the message.\",\"_target\":\"Address that the message is targeted at.\",\"_value\":\"Native token value to send with the message.\"}},\"sendMessage(address,bytes,uint32)\":{\"params\":{\"_message\":\"Message to trigger the target address with.\",\"_minGasLimit\":\"Minimum gas limit that the message can be executed with.\",\"_target\":\"Target contract or wallet address.\"}},\"sendNativeTokenMessage(address,uint256,bytes,uint32)\":{\"params\":{\"_amount\":\"Amount of deposit native token.\",\"_message\":\"Message to trigger the target address with.\",\"_minGasLimit\":\"Minimum gas limit that the message can be executed with.\",\"_target\":\"Target contract or wallet address.\"}},\"unpackOnApproveData(bytes)\":{\"params\":{\"_data\":\"Data used in OnApprove contract\"}},\"xDomainMessageSender()\":{\"returns\":{\"_0\":\"Address of the sender of the currently executing message on the other chain.\"}}},\"stateVariables\":{\"PORTAL\":{\"custom:network-specific\":\"@custom:legacy\"},\"version\":{\"custom:semver\":\"1.7.1\"}},\"version\":1},\"userdoc\":{\"events\":{\"FailedRelayedMessage(bytes32)\":{\"notice\":\"Emitted whenever a message fails to be relayed on this chain.\"},\"RelayedMessage(bytes32)\":{\"notice\":\"Emitted whenever a message is successfully relayed on this chain.\"},\"SentMessage(address,address,bytes,uint256,uint256)\":{\"notice\":\"Emitted whenever a message is sent to the other chain.\"},\"SentMessageExtension1(address,uint256)\":{\"notice\":\"Additional event data to emit, required as of Bedrock. Cannot be merged with the         SentMessage event without breaking the ABI of this contract, this is good enough.\"}},\"kind\":\"user\",\"methods\":{\"MESSAGE_VERSION()\":{\"notice\":\"Current message version identifier.\"},\"MIN_GAS_CALLDATA_OVERHEAD()\":{\"notice\":\"Extra gas added to base gas for each byte of calldata in a message.\"},\"MIN_GAS_DYNAMIC_OVERHEAD_DENOMINATOR()\":{\"notice\":\"Denominator for dynamic overhead added to the base gas for a message.\"},\"MIN_GAS_DYNAMIC_OVERHEAD_NUMERATOR()\":{\"notice\":\"Numerator for dynamic overhead added to the base gas for a message.\"},\"OTHER_MESSENGER()\":{\"notice\":\"Address of the paired CrossDomainMessenger contract on the other chain.\"},\"PORTAL()\":{\"notice\":\"Address of the OptimismPortal. The public getter for this         is legacy and will be removed in the future. Use `portal()` instead.\"},\"RELAY_CALL_OVERHEAD()\":{\"notice\":\"Gas reserved for performing the external call in `relayMessage`.\"},\"RELAY_CONSTANT_OVERHEAD()\":{\"notice\":\"Constant overhead added to the base gas for a message.\"},\"RELAY_GAS_CHECK_BUFFER()\":{\"notice\":\"Gas reserved for the execution between the `hasMinGas` check and the external         call in `relayMessage`.\"},\"RELAY_RESERVED_GAS()\":{\"notice\":\"Gas reserved for finalizing the execution of `relayMessage` after the safe call.\"},\"baseGas(bytes,uint32)\":{\"notice\":\"Computes the amount of gas required to guarantee that a given message will be         received on the other chain without running out of gas. Guaranteeing that a message         will not run out of gas is important because this ensures that a message can always         be replayed on the other chain if it fails to execute completely.\"},\"constructor\":{\"notice\":\"Constructs the L1CrossDomainMessenger contract.\"},\"failedMessages(bytes32)\":{\"notice\":\"Mapping of message hashes to a boolean if and only if the message has failed to be         executed at least once. A message will not be present in this mapping if it         successfully executed on the first attempt.\"},\"initialize(address,address)\":{\"notice\":\"Initializes the contract.\"},\"messageNonce()\":{\"notice\":\"Retrieves the next message nonce. Message version will be added to the upper two         bytes of the message nonce. Message version allows us to treat messages as having         different structures.\"},\"nativeTokenAddress()\":{\"notice\":\"Address of native token (ERC-20 token)\"},\"onApprove(address,address,uint256,bytes)\":{\"notice\":\"ERC20 onApprove callback\"},\"portal()\":{\"notice\":\"Getter for the OptimismPortal address.\"},\"relayMessage(uint256,address,address,uint256,uint256,bytes)\":{\"notice\":\"Relays a message that was sent by the other CrossDomainMessenger contract. Can only         be executed via cross-chain call from the other messenger OR if the message was         already received once and is currently being replayed.\"},\"sendMessage(address,bytes,uint32)\":{\"notice\":\"Sends a message to some target address on the other chain. Note that if the call         always reverts, then the message will be unrelayable, and any ETH sent will be         permanently locked. The same will occur if the target on the other chain is         considered unsafe (see the _isUnsafeTarget() function).\"},\"sendNativeTokenMessage(address,uint256,bytes,uint32)\":{\"notice\":\"Sends a deposit native token message to some target address on the other chain. Note that if the call         always reverts, then the message will be unrelayable, and any ETH sent will be         permanently locked. The same will occur if the target on the other chain is         considered unsafe (see the _isUnsafeTarget() function).\"},\"successfulMessages(bytes32)\":{\"notice\":\"Mapping of message hashes to boolean receipt values. Note that a message will only         be present in this mapping if it has successfully been relayed on this chain, and         can therefore not be relayed again.\"},\"unpackOnApproveData(bytes)\":{\"notice\":\"unpack onApprove data\"},\"version()\":{\"notice\":\"Semantic version.\"},\"xDomainMessageSender()\":{\"notice\":\"Retrieves the address of the contract or wallet that initiated the currently         executing message on the other chain. Will throw an error if there is no message         currently being executed. Allows the recipient of a call to see who triggered it.\"}},\"notice\":\"The L1CrossDomainMessenger is a message passing interface between L1 and L2 responsible         for sending and receiving data on the L1 side. Users are encouraged to use this         interface instead of interacting with lower-level contracts directly.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/L1/L1CrossDomainMessenger.sol\":\"L1CrossDomainMessenger\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@cwia/=lib/clones-with-immutable-args/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/solmate/\",\":clones-with-immutable-args/=lib/clones-with-immutable-args/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x2a21b14ff90012878752f230d3ffd5c3405e5938d06c97a7d89c0a64561d0d66\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3313a8f9bb1f9476857c9050067b31982bf2140b83d84f3bc0cec1f62bbe947f\",\"dweb:/ipfs/Qma17Pk8NRe7aB4UD3jjVxk7nSFaov3eQyv86hcyqkwJRV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6\",\"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929\",\"dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb3ebde1c8d27576db912d87c3560dab14adfb9cd001be95890ec4ba035e652e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a709421c4f5d4677db8216055d2d4dac96a613efdb08178a9f7041f0c5cef689\",\"dweb:/ipfs/QmYs2rStvVLDnSJs8HgaMD1ABwoKKWdiVbQyNfLfFWTjTy\"]},\"lib/solmate/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x622fcd8a49e132df5ec7651cc6ae3aaf0cf59bdcd67a9a804a1b9e2485113b7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af77088eb606427d4c55e578984a615779c86bc30646a20f7bb27299ba390f7c\",\"dweb:/ipfs/QmZGQdhdQDtHc7gZXWrKXgA3govc74X8U63BiWhPQK3mK8\"]},\"src/L1/L1CrossDomainMessenger.sol\":{\"keccak256\":\"0xfece7e037fdaf2fbb6e2cc38ace52cfba3b3fa7e0b7cd43ee1d98636ec97202e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9e41f6f2429702bfd198167d99482ef27275e2084789b3e3f119bf8bf7764569\",\"dweb:/ipfs/QmNWANGpPpWRTNMP1AowmRVkTF9QGthHisMnNp7audgEkf\"]},\"src/L1/L2OutputOracle.sol\":{\"keccak256\":\"0x60042eb3e619518cab9a8f2480b62871c2d813716e2e60d9a5e0c5f271c58705\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08538ef2aa99c508b56a8bb9b3c7b93476cba9dbf0b47783141e5e50a02156cc\",\"dweb:/ipfs/QmdvFZ1fUaTkNdmtB66rNAo73RxY7kccsgR6Uqz7psoXGN\"]},\"src/L1/OnApprove.sol\":{\"keccak256\":\"0x40cee21f13053d860ab0aaaf77ff596f7131cb39ab21963d076e9e276492d31a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b384a3225e25c0232aaa775d0f4df514ad7423228810e157ba921b736421c6b1\",\"dweb:/ipfs/QmcPTPwvhqtHLQAgntzVdqeptDDgmnEafnZwgAK7D7AoV1\"]},\"src/L1/OptimismPortal.sol\":{\"keccak256\":\"0x922dc938bc0d9856ccf410ce2276d520526512619a91dfb57bd67847c98baedf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://dbcae242c16e41bb59b8dbecd9408bfd2a7a408fee338e73d68a0ed6911f3bcb\",\"dweb:/ipfs/QmeurpyKCZDXa3CdHaZiPQA6YVcdbXctJegsiuRu2zGsF9\"]},\"src/L1/ResourceMetering.sol\":{\"keccak256\":\"0xa4d524f2a5e91a0b63a62603e712001c51c77e8371b93cbb576bcb7d074b7588\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6d8141b6c6dc72d2e684c1ae388c005fd78c9ca7fc9c15dddebd227ca4fd730\",\"dweb:/ipfs/QmPfJrR4qssu769TDWJnxdTozqKtZUxiY8fs95bhfECTvG\"]},\"src/L1/SystemConfig.sol\":{\"keccak256\":\"0x4bbbc7868e948c44f29285a69383e93251a0c330a67929fb72def01cec060d4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e7ea2f8b3d49bee9c753f107ede6eda93b2cc0e34d0643fa14ebbb26c19e71b\",\"dweb:/ipfs/QmRP81F8FRVXVZs6u2f2poEPDnbFZhNwNYxHgCVEhGpEmB\"]},\"src/libraries/Arithmetic.sol\":{\"keccak256\":\"0x06a5a8b00527843f0cfc1bb3c0661316966a6cc432f88be31f23cde78cd07560\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5209e78e5415c0bf8b350362a825cc56152811abd6fcf2df3d4fa47766d3dee\",\"dweb:/ipfs/Qmf43xyc4Um32NmccayDfhm8kSnS2mhHXpPZnwABJS7cWm\"]},\"src/libraries/Burn.sol\":{\"keccak256\":\"0x90a795bcea3ef06d6d5011256c4bd63d1a4271f519246dbf1ee3e8f1c0e21010\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f60c3aa77cf0c484ddda4754157cff4dc0e2eace4bea67990daff4c0612ab5f\",\"dweb:/ipfs/QmSYGanMFve9uBC17X7hFneSFnwnJxz86Jgh6MX9BRMweb\"]},\"src/libraries/Bytes.sol\":{\"keccak256\":\"0x827f47d123b0fdf3b08816d5b33831811704dbf4e554e53f2269354f6bba8859\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3137ac7204d30a245a8b0d67aa6da5286f1bd8c90379daab561f84963b6db782\",\"dweb:/ipfs/QmWRhisw3axJK833gUScs23ETh2MLFbVzzqzYVMKSDN3S9\"]},\"src/libraries/Constants.sol\":{\"keccak256\":\"0xe12e392f05f80d3837c9392d016471181ae1ee6b84ea91b4e125e6523e5f18a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a3509231c228b7a4352573cd422cf0260dcbb94cfd915e5b664643db5475a5b7\",\"dweb:/ipfs/QmU2QERY4mHxqWFqSE5Exsy6Ftc5MTjTtYHC11fahLJWDC\"]},\"src/libraries/Encoding.sol\":{\"keccak256\":\"0xd5bbcb7da113e69562498d9543765e03912558ad66348682c2049c31e19f9d9b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afc6656ea10062c0c9d0817bb8683636caebf9222c9c102f29ea54fff74a2f93\",\"dweb:/ipfs/QmTNWtMgrTRHM6XtdUmA8bMZcuFpXoFCXgXR5vRihZWLuW\"]},\"src/libraries/Hashing.sol\":{\"keccak256\":\"0x44e2b2dcfffc39c0fc95ccd3c2118c7e7585fadf3dca327877d5756c7d4b21c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c89e0d9cfcb08a0d3c46c85367a32bbd9703468ba4c0c5bb6e124c1d173b26b\",\"dweb:/ipfs/QmaY3nQHBBhHK1wrurVXiEeNL8hfZ1pRmhpqW44tFDJnDf\"]},\"src/libraries/Predeploys.sol\":{\"keccak256\":\"0xbdc7b26891b9b5eecd44720e941f5f4f94e5ae008087552fcae6b9a9d6305d05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://894ca1837ab580f3ba5641cf33ca2271bf6d5c60297a80a6a37c2678f9332fc4\",\"dweb:/ipfs/QmXgVnPzCYqbGT4gYwKuvDJiuRPiYjNmzYzjrnf4YXp9Cb\"]},\"src/libraries/SafeCall.sol\":{\"keccak256\":\"0x0636a7abb242bb5d6f5606967c8929e6aa7e63468c1e2ce40ad4780d4c4bf94f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4daec2ac8f9907bbf84ef0a1c48f03bae8657619bc6f42b3a672f25c516f17a\",\"dweb:/ipfs/Qmf8gfRxBv8gEmCkP8YMPb2GGfj9QUnoNUyKE7UR2SWGnq\"]},\"src/libraries/Storage.sol\":{\"keccak256\":\"0x902a0a815272a5b76c647d9e82101aca765e9835a6624d0857088b9da0f58afd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c39a697aacb0a2eac0bf1fbd7790d835a685c61006f6d3464e19cbc96a24480\",\"dweb:/ipfs/QmV3T8ZTRWPB5CNuZjxwWQNoENd7W4SoBMnFG6Y6g6xYV4\"]},\"src/libraries/Types.sol\":{\"keccak256\":\"0x75900d651301940d24c00d14f0b3b6cbd6dcf379173ceaa31d9bf5be934a9aa4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c2632c5bf4fa3982391c32110eec9fa07917b483b2442cbaf18bdde5bdb24e\",\"dweb:/ipfs/QmSUs6Amkeootf5gKGbKi4mJpvhN2U8i1ED6ef2dskV5xc\"]},\"src/libraries/rlp/RLPReader.sol\":{\"keccak256\":\"0x9ba74a3b0a11693e622380807d213d5d1250d974e18b2cd768da9cbe719a6778\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0808d721ed9e05707526ee134faa051d707a95ee6b8bd6e0b1972275da8e5723\",\"dweb:/ipfs/QmcTTPu9xgckfWdbFUAcr2RAgk3J6vzyR4FpV798TjFMeN\"]},\"src/libraries/rlp/RLPWriter.sol\":{\"keccak256\":\"0x60ac401490f321c9c55e996a2c65151cd5e60de5f8f297e7c94d541c29820bb6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://070f5814db07e4a89173d44a36d90e4261ce530f7336034c01635347f2c2d88b\",\"dweb:/ipfs/QmXqr9yW5Kc8MYgr5wSehU5AiqS9pZ4FKxv7vwiwpZCcyV\"]},\"src/libraries/trie/MerkleTrie.sol\":{\"keccak256\":\"0xf8ba770ee6666e73ae43184c700e9c704b2c4ace71f9e3c2227ddc11a8148b4c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4702ccee1fe44aea3ee01d59e6152eb755da083f786f00947fec4437c064fe74\",\"dweb:/ipfs/QmQjFj5J7hrEM1dxJjFszzW2Cs7g7eMhYNBXonF2DXBstE\"]},\"src/libraries/trie/SecureMerkleTrie.sol\":{\"keccak256\":\"0xeaff8315cfd21197bc6bc859c2decf5d4f4838c9c357c502cdf2b1eac863d288\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79dcdcaa560aea51d138da4f5dc553a1808b6de090b2dc1629f18375edbff681\",\"dweb:/ipfs/QmbE4pUPhf5fLKW4W6cEjhQs55gEDvHmbmoBqkW1yz3bnw\"]},\"src/universal/CrossDomainMessenger.sol\":{\"keccak256\":\"0x6876fa0706a4647f4247eea58228dc650a39ff42fb2495ac2f8a37dcc99075b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a61d10bd62b6f4bbc5cc2b6c765c96cfc67e132a808f691ef1d8175eaf363363\",\"dweb:/ipfs/QmdBHpzFQpxVA9L9s3jiwHpB1SDtEeN3yqDazS7wnmEpFY\"]},\"src/universal/ISemver.sol\":{\"keccak256\":\"0xba34562a8026f59886d2e07d1d58d90b9691d00e0788c6263cef6c22740cab44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0826f998632f83c103c3085bf2e872db79a69022b6d2e0444c83a64ca5283c2a\",\"dweb:/ipfs/QmcJ7PNqkAfKqbjFGRordtAg1v9DvcBSKvdTkVvciLyvQR\"]},\"src/vendor/AddressAliasHelper.sol\":{\"keccak256\":\"0x6ecb83b4ec80fbe49c22f4f95d90482de64660ef5d422a19f4d4b04df31c1237\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1d0885be6e473962f9a0622176a22300165ac0cc1a1d7f2e22b11c3d656ace88\",\"dweb:/ipfs/QmPRa3KmRpXW5P9ykveKRDgYN5zYo4cYLAYSnoqHX3KnXR\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "msgHash",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "FailedRelayedMessage",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "msgHash",
              "type": "bytes32",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "RelayedMessage",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "target",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "message",
              "type": "bytes",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "messageNonce",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "gasLimit",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SentMessage",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "SentMessageExtension1",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MESSAGE_VERSION",
          "outputs": [
            {
              "internalType": "uint16",
              "name": "",
              "type": "uint16"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MIN_GAS_CALLDATA_OVERHEAD",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MIN_GAS_DYNAMIC_OVERHEAD_DENOMINATOR",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MIN_GAS_DYNAMIC_OVERHEAD_NUMERATOR",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "OTHER_MESSENGER",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "PORTAL",
          "outputs": [
            {
              "internalType": "contract OptimismPortal",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "RELAY_CALL_OVERHEAD",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "RELAY_CONSTANT_OVERHEAD",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "RELAY_GAS_CHECK_BUFFER",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "RELAY_RESERVED_GAS",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "_message",
              "type": "bytes"
            },
            {
              "internalType": "uint32",
              "name": "_minGasLimit",
              "type": "uint32"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "baseGas",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "failedMessages",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract OptimismPortal",
              "name": "_portal",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_nativeTokenAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "messageNonce",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nativeTokenAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onApprove",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "portal",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_nonce",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_target",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_minGasLimit",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_message",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "relayMessage"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_target",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "_message",
              "type": "bytes"
            },
            {
              "internalType": "uint32",
              "name": "_minGasLimit",
              "type": "uint32"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "sendMessage"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_target",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_message",
              "type": "bytes"
            },
            {
              "internalType": "uint32",
              "name": "_minGasLimit",
              "type": "uint32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "sendNativeTokenMessage"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "successfulMessages",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "unpackOnApproveData",
          "outputs": [
            {
              "internalType": "address",
              "name": "_from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "_minGasLimit",
              "type": "uint32"
            },
            {
              "internalType": "bytes",
              "name": "_message",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "version",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "xDomainMessageSender",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "baseGas(bytes,uint32)": {
            "params": {
              "_message": "Message to compute the amount of required gas for.",
              "_minGasLimit": "Minimum desired gas limit when message goes to target."
            },
            "returns": {
              "_0": "Amount of gas required to guarantee message receipt."
            }
          },
          "initialize(address,address)": {
            "params": {
              "_portal": "Address of the OptimismPortal contract on this network."
            }
          },
          "messageNonce()": {
            "returns": {
              "_0": "Nonce of the next message to be sent, with added message version."
            }
          },
          "onApprove(address,address,uint256,bytes)": {
            "params": {
              "_amount": "Approved amount",
              "_data": "Data used in OnApprove contract",
              "_owner": "Account that called approveAndCall"
            }
          },
          "relayMessage(uint256,address,address,uint256,uint256,bytes)": {
            "params": {
              "_message": "Message to send to the target.",
              "_minGasLimit": "Minimum amount of gas that the message can be executed with.",
              "_nonce": "Nonce of the message being relayed.",
              "_sender": "Address of the user who sent the message.",
              "_target": "Address that the message is targeted at.",
              "_value": "Native token value to send with the message."
            }
          },
          "sendMessage(address,bytes,uint32)": {
            "params": {
              "_message": "Message to trigger the target address with.",
              "_minGasLimit": "Minimum gas limit that the message can be executed with.",
              "_target": "Target contract or wallet address."
            }
          },
          "sendNativeTokenMessage(address,uint256,bytes,uint32)": {
            "params": {
              "_amount": "Amount of deposit native token.",
              "_message": "Message to trigger the target address with.",
              "_minGasLimit": "Minimum gas limit that the message can be executed with.",
              "_target": "Target contract or wallet address."
            }
          },
          "unpackOnApproveData(bytes)": {
            "params": {
              "_data": "Data used in OnApprove contract"
            }
          },
          "xDomainMessageSender()": {
            "returns": {
              "_0": "Address of the sender of the currently executing message on the other chain."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "MESSAGE_VERSION()": {
            "notice": "Current message version identifier."
          },
          "MIN_GAS_CALLDATA_OVERHEAD()": {
            "notice": "Extra gas added to base gas for each byte of calldata in a message."
          },
          "MIN_GAS_DYNAMIC_OVERHEAD_DENOMINATOR()": {
            "notice": "Denominator for dynamic overhead added to the base gas for a message."
          },
          "MIN_GAS_DYNAMIC_OVERHEAD_NUMERATOR()": {
            "notice": "Numerator for dynamic overhead added to the base gas for a message."
          },
          "OTHER_MESSENGER()": {
            "notice": "Address of the paired CrossDomainMessenger contract on the other chain."
          },
          "PORTAL()": {
            "notice": "Address of the OptimismPortal. The public getter for this         is legacy and will be removed in the future. Use `portal()` instead."
          },
          "RELAY_CALL_OVERHEAD()": {
            "notice": "Gas reserved for performing the external call in `relayMessage`."
          },
          "RELAY_CONSTANT_OVERHEAD()": {
            "notice": "Constant overhead added to the base gas for a message."
          },
          "RELAY_GAS_CHECK_BUFFER()": {
            "notice": "Gas reserved for the execution between the `hasMinGas` check and the external         call in `relayMessage`."
          },
          "RELAY_RESERVED_GAS()": {
            "notice": "Gas reserved for finalizing the execution of `relayMessage` after the safe call."
          },
          "baseGas(bytes,uint32)": {
            "notice": "Computes the amount of gas required to guarantee that a given message will be         received on the other chain without running out of gas. Guaranteeing that a message         will not run out of gas is important because this ensures that a message can always         be replayed on the other chain if it fails to execute completely."
          },
          "constructor": {
            "notice": "Constructs the L1CrossDomainMessenger contract."
          },
          "failedMessages(bytes32)": {
            "notice": "Mapping of message hashes to a boolean if and only if the message has failed to be         executed at least once. A message will not be present in this mapping if it         successfully executed on the first attempt."
          },
          "initialize(address,address)": {
            "notice": "Initializes the contract."
          },
          "messageNonce()": {
            "notice": "Retrieves the next message nonce. Message version will be added to the upper two         bytes of the message nonce. Message version allows us to treat messages as having         different structures."
          },
          "nativeTokenAddress()": {
            "notice": "Address of native token (ERC-20 token)"
          },
          "onApprove(address,address,uint256,bytes)": {
            "notice": "ERC20 onApprove callback"
          },
          "portal()": {
            "notice": "Getter for the OptimismPortal address."
          },
          "relayMessage(uint256,address,address,uint256,uint256,bytes)": {
            "notice": "Relays a message that was sent by the other CrossDomainMessenger contract. Can only         be executed via cross-chain call from the other messenger OR if the message was         already received once and is currently being replayed."
          },
          "sendMessage(address,bytes,uint32)": {
            "notice": "Sends a message to some target address on the other chain. Note that if the call         always reverts, then the message will be unrelayable, and any ETH sent will be         permanently locked. The same will occur if the target on the other chain is         considered unsafe (see the _isUnsafeTarget() function)."
          },
          "sendNativeTokenMessage(address,uint256,bytes,uint32)": {
            "notice": "Sends a deposit native token message to some target address on the other chain. Note that if the call         always reverts, then the message will be unrelayable, and any ETH sent will be         permanently locked. The same will occur if the target on the other chain is         considered unsafe (see the _isUnsafeTarget() function)."
          },
          "successfulMessages(bytes32)": {
            "notice": "Mapping of message hashes to boolean receipt values. Note that a message will only         be present in this mapping if it has successfully been relayed on this chain, and         can therefore not be relayed again."
          },
          "unpackOnApproveData(bytes)": {
            "notice": "unpack onApprove data"
          },
          "version()": {
            "notice": "Semantic version."
          },
          "xDomainMessageSender()": {
            "notice": "Retrieves the address of the contract or wallet that initiated the currently         executing message on the other chain. Will throw an error if there is no message         currently being executed. Allows the recipient of a call to see who triggered it."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@cwia/=lib/clones-with-immutable-args/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@rari-capital/solmate/=lib/solmate/",
        "clones-with-immutable-args/=lib/clones-with-immutable-args/src/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "safe-contracts/=lib/safe-contracts/contracts/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 999999
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "src/L1/L1CrossDomainMessenger.sol": "L1CrossDomainMessenger"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888",
        "urls": [
          "bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a",
          "dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
        "urls": [
          "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
          "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x2a21b14ff90012878752f230d3ffd5c3405e5938d06c97a7d89c0a64561d0d66",
        "urls": [
          "bzz-raw://3313a8f9bb1f9476857c9050067b31982bf2140b83d84f3bc0cec1f62bbe947f",
          "dweb:/ipfs/Qma17Pk8NRe7aB4UD3jjVxk7nSFaov3eQyv86hcyqkwJRV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29",
        "urls": [
          "bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6",
          "dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10",
        "urls": [
          "bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487",
          "dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0",
        "urls": [
          "bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929",
          "dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xb3ebde1c8d27576db912d87c3560dab14adfb9cd001be95890ec4ba035e652e7",
        "urls": [
          "bzz-raw://a709421c4f5d4677db8216055d2d4dac96a613efdb08178a9f7041f0c5cef689",
          "dweb:/ipfs/QmYs2rStvVLDnSJs8HgaMD1ABwoKKWdiVbQyNfLfFWTjTy"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/utils/FixedPointMathLib.sol": {
        "keccak256": "0x622fcd8a49e132df5ec7651cc6ae3aaf0cf59bdcd67a9a804a1b9e2485113b7d",
        "urls": [
          "bzz-raw://af77088eb606427d4c55e578984a615779c86bc30646a20f7bb27299ba390f7c",
          "dweb:/ipfs/QmZGQdhdQDtHc7gZXWrKXgA3govc74X8U63BiWhPQK3mK8"
        ],
        "license": "MIT"
      },
      "src/L1/L1CrossDomainMessenger.sol": {
        "keccak256": "0xfece7e037fdaf2fbb6e2cc38ace52cfba3b3fa7e0b7cd43ee1d98636ec97202e",
        "urls": [
          "bzz-raw://9e41f6f2429702bfd198167d99482ef27275e2084789b3e3f119bf8bf7764569",
          "dweb:/ipfs/QmNWANGpPpWRTNMP1AowmRVkTF9QGthHisMnNp7audgEkf"
        ],
        "license": "MIT"
      },
      "src/L1/L2OutputOracle.sol": {
        "keccak256": "0x60042eb3e619518cab9a8f2480b62871c2d813716e2e60d9a5e0c5f271c58705",
        "urls": [
          "bzz-raw://08538ef2aa99c508b56a8bb9b3c7b93476cba9dbf0b47783141e5e50a02156cc",
          "dweb:/ipfs/QmdvFZ1fUaTkNdmtB66rNAo73RxY7kccsgR6Uqz7psoXGN"
        ],
        "license": "MIT"
      },
      "src/L1/OnApprove.sol": {
        "keccak256": "0x40cee21f13053d860ab0aaaf77ff596f7131cb39ab21963d076e9e276492d31a",
        "urls": [
          "bzz-raw://b384a3225e25c0232aaa775d0f4df514ad7423228810e157ba921b736421c6b1",
          "dweb:/ipfs/QmcPTPwvhqtHLQAgntzVdqeptDDgmnEafnZwgAK7D7AoV1"
        ],
        "license": "MIT"
      },
      "src/L1/OptimismPortal.sol": {
        "keccak256": "0x922dc938bc0d9856ccf410ce2276d520526512619a91dfb57bd67847c98baedf",
        "urls": [
          "bzz-raw://dbcae242c16e41bb59b8dbecd9408bfd2a7a408fee338e73d68a0ed6911f3bcb",
          "dweb:/ipfs/QmeurpyKCZDXa3CdHaZiPQA6YVcdbXctJegsiuRu2zGsF9"
        ],
        "license": "MIT"
      },
      "src/L1/ResourceMetering.sol": {
        "keccak256": "0xa4d524f2a5e91a0b63a62603e712001c51c77e8371b93cbb576bcb7d074b7588",
        "urls": [
          "bzz-raw://d6d8141b6c6dc72d2e684c1ae388c005fd78c9ca7fc9c15dddebd227ca4fd730",
          "dweb:/ipfs/QmPfJrR4qssu769TDWJnxdTozqKtZUxiY8fs95bhfECTvG"
        ],
        "license": "MIT"
      },
      "src/L1/SystemConfig.sol": {
        "keccak256": "0x4bbbc7868e948c44f29285a69383e93251a0c330a67929fb72def01cec060d4e",
        "urls": [
          "bzz-raw://1e7ea2f8b3d49bee9c753f107ede6eda93b2cc0e34d0643fa14ebbb26c19e71b",
          "dweb:/ipfs/QmRP81F8FRVXVZs6u2f2poEPDnbFZhNwNYxHgCVEhGpEmB"
        ],
        "license": "MIT"
      },
      "src/libraries/Arithmetic.sol": {
        "keccak256": "0x06a5a8b00527843f0cfc1bb3c0661316966a6cc432f88be31f23cde78cd07560",
        "urls": [
          "bzz-raw://d5209e78e5415c0bf8b350362a825cc56152811abd6fcf2df3d4fa47766d3dee",
          "dweb:/ipfs/Qmf43xyc4Um32NmccayDfhm8kSnS2mhHXpPZnwABJS7cWm"
        ],
        "license": "MIT"
      },
      "src/libraries/Burn.sol": {
        "keccak256": "0x90a795bcea3ef06d6d5011256c4bd63d1a4271f519246dbf1ee3e8f1c0e21010",
        "urls": [
          "bzz-raw://9f60c3aa77cf0c484ddda4754157cff4dc0e2eace4bea67990daff4c0612ab5f",
          "dweb:/ipfs/QmSYGanMFve9uBC17X7hFneSFnwnJxz86Jgh6MX9BRMweb"
        ],
        "license": "MIT"
      },
      "src/libraries/Bytes.sol": {
        "keccak256": "0x827f47d123b0fdf3b08816d5b33831811704dbf4e554e53f2269354f6bba8859",
        "urls": [
          "bzz-raw://3137ac7204d30a245a8b0d67aa6da5286f1bd8c90379daab561f84963b6db782",
          "dweb:/ipfs/QmWRhisw3axJK833gUScs23ETh2MLFbVzzqzYVMKSDN3S9"
        ],
        "license": "MIT"
      },
      "src/libraries/Constants.sol": {
        "keccak256": "0xe12e392f05f80d3837c9392d016471181ae1ee6b84ea91b4e125e6523e5f18a2",
        "urls": [
          "bzz-raw://a3509231c228b7a4352573cd422cf0260dcbb94cfd915e5b664643db5475a5b7",
          "dweb:/ipfs/QmU2QERY4mHxqWFqSE5Exsy6Ftc5MTjTtYHC11fahLJWDC"
        ],
        "license": "MIT"
      },
      "src/libraries/Encoding.sol": {
        "keccak256": "0xd5bbcb7da113e69562498d9543765e03912558ad66348682c2049c31e19f9d9b",
        "urls": [
          "bzz-raw://afc6656ea10062c0c9d0817bb8683636caebf9222c9c102f29ea54fff74a2f93",
          "dweb:/ipfs/QmTNWtMgrTRHM6XtdUmA8bMZcuFpXoFCXgXR5vRihZWLuW"
        ],
        "license": "MIT"
      },
      "src/libraries/Hashing.sol": {
        "keccak256": "0x44e2b2dcfffc39c0fc95ccd3c2118c7e7585fadf3dca327877d5756c7d4b21c3",
        "urls": [
          "bzz-raw://6c89e0d9cfcb08a0d3c46c85367a32bbd9703468ba4c0c5bb6e124c1d173b26b",
          "dweb:/ipfs/QmaY3nQHBBhHK1wrurVXiEeNL8hfZ1pRmhpqW44tFDJnDf"
        ],
        "license": "MIT"
      },
      "src/libraries/Predeploys.sol": {
        "keccak256": "0xbdc7b26891b9b5eecd44720e941f5f4f94e5ae008087552fcae6b9a9d6305d05",
        "urls": [
          "bzz-raw://894ca1837ab580f3ba5641cf33ca2271bf6d5c60297a80a6a37c2678f9332fc4",
          "dweb:/ipfs/QmXgVnPzCYqbGT4gYwKuvDJiuRPiYjNmzYzjrnf4YXp9Cb"
        ],
        "license": "MIT"
      },
      "src/libraries/SafeCall.sol": {
        "keccak256": "0x0636a7abb242bb5d6f5606967c8929e6aa7e63468c1e2ce40ad4780d4c4bf94f",
        "urls": [
          "bzz-raw://a4daec2ac8f9907bbf84ef0a1c48f03bae8657619bc6f42b3a672f25c516f17a",
          "dweb:/ipfs/Qmf8gfRxBv8gEmCkP8YMPb2GGfj9QUnoNUyKE7UR2SWGnq"
        ],
        "license": "MIT"
      },
      "src/libraries/Storage.sol": {
        "keccak256": "0x902a0a815272a5b76c647d9e82101aca765e9835a6624d0857088b9da0f58afd",
        "urls": [
          "bzz-raw://9c39a697aacb0a2eac0bf1fbd7790d835a685c61006f6d3464e19cbc96a24480",
          "dweb:/ipfs/QmV3T8ZTRWPB5CNuZjxwWQNoENd7W4SoBMnFG6Y6g6xYV4"
        ],
        "license": "MIT"
      },
      "src/libraries/Types.sol": {
        "keccak256": "0x75900d651301940d24c00d14f0b3b6cbd6dcf379173ceaa31d9bf5be934a9aa4",
        "urls": [
          "bzz-raw://99c2632c5bf4fa3982391c32110eec9fa07917b483b2442cbaf18bdde5bdb24e",
          "dweb:/ipfs/QmSUs6Amkeootf5gKGbKi4mJpvhN2U8i1ED6ef2dskV5xc"
        ],
        "license": "MIT"
      },
      "src/libraries/rlp/RLPReader.sol": {
        "keccak256": "0x9ba74a3b0a11693e622380807d213d5d1250d974e18b2cd768da9cbe719a6778",
        "urls": [
          "bzz-raw://0808d721ed9e05707526ee134faa051d707a95ee6b8bd6e0b1972275da8e5723",
          "dweb:/ipfs/QmcTTPu9xgckfWdbFUAcr2RAgk3J6vzyR4FpV798TjFMeN"
        ],
        "license": "MIT"
      },
      "src/libraries/rlp/RLPWriter.sol": {
        "keccak256": "0x60ac401490f321c9c55e996a2c65151cd5e60de5f8f297e7c94d541c29820bb6",
        "urls": [
          "bzz-raw://070f5814db07e4a89173d44a36d90e4261ce530f7336034c01635347f2c2d88b",
          "dweb:/ipfs/QmXqr9yW5Kc8MYgr5wSehU5AiqS9pZ4FKxv7vwiwpZCcyV"
        ],
        "license": "MIT"
      },
      "src/libraries/trie/MerkleTrie.sol": {
        "keccak256": "0xf8ba770ee6666e73ae43184c700e9c704b2c4ace71f9e3c2227ddc11a8148b4c",
        "urls": [
          "bzz-raw://4702ccee1fe44aea3ee01d59e6152eb755da083f786f00947fec4437c064fe74",
          "dweb:/ipfs/QmQjFj5J7hrEM1dxJjFszzW2Cs7g7eMhYNBXonF2DXBstE"
        ],
        "license": "MIT"
      },
      "src/libraries/trie/SecureMerkleTrie.sol": {
        "keccak256": "0xeaff8315cfd21197bc6bc859c2decf5d4f4838c9c357c502cdf2b1eac863d288",
        "urls": [
          "bzz-raw://79dcdcaa560aea51d138da4f5dc553a1808b6de090b2dc1629f18375edbff681",
          "dweb:/ipfs/QmbE4pUPhf5fLKW4W6cEjhQs55gEDvHmbmoBqkW1yz3bnw"
        ],
        "license": "MIT"
      },
      "src/universal/CrossDomainMessenger.sol": {
        "keccak256": "0x6876fa0706a4647f4247eea58228dc650a39ff42fb2495ac2f8a37dcc99075b6",
        "urls": [
          "bzz-raw://a61d10bd62b6f4bbc5cc2b6c765c96cfc67e132a808f691ef1d8175eaf363363",
          "dweb:/ipfs/QmdBHpzFQpxVA9L9s3jiwHpB1SDtEeN3yqDazS7wnmEpFY"
        ],
        "license": "MIT"
      },
      "src/universal/ISemver.sol": {
        "keccak256": "0xba34562a8026f59886d2e07d1d58d90b9691d00e0788c6263cef6c22740cab44",
        "urls": [
          "bzz-raw://0826f998632f83c103c3085bf2e872db79a69022b6d2e0444c83a64ca5283c2a",
          "dweb:/ipfs/QmcJ7PNqkAfKqbjFGRordtAg1v9DvcBSKvdTkVvciLyvQR"
        ],
        "license": "MIT"
      },
      "src/vendor/AddressAliasHelper.sol": {
        "keccak256": "0x6ecb83b4ec80fbe49c22f4f95d90482de64660ef5d422a19f4d4b04df31c1237",
        "urls": [
          "bzz-raw://1d0885be6e473962f9a0622176a22300165ac0cc1a1d7f2e22b11c3d656ace88",
          "dweb:/ipfs/QmPRa3KmRpXW5P9ykveKRDgYN5zYo4cYLAYSnoqHX3KnXR"
        ],
        "license": "Apache-2.0"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 70800,
        "contract": "src/L1/L1CrossDomainMessenger.sol:L1CrossDomainMessenger",
        "label": "spacer_0_0_20",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 29536,
        "contract": "src/L1/L1CrossDomainMessenger.sol:L1CrossDomainMessenger",
        "label": "_initialized",
        "offset": 20,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 29539,
        "contract": "src/L1/L1CrossDomainMessenger.sol:L1CrossDomainMessenger",
        "label": "_initializing",
        "offset": 21,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 70807,
        "contract": "src/L1/L1CrossDomainMessenger.sol:L1CrossDomainMessenger",
        "label": "spacer_1_0_1600",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)50_storage"
      },
      {
        "astId": 70810,
        "contract": "src/L1/L1CrossDomainMessenger.sol:L1CrossDomainMessenger",
        "label": "spacer_51_0_20",
        "offset": 0,
        "slot": "51",
        "type": "t_address"
      },
      {
        "astId": 70815,
        "contract": "src/L1/L1CrossDomainMessenger.sol:L1CrossDomainMessenger",
        "label": "spacer_52_0_1568",
        "offset": 0,
        "slot": "52",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 70818,
        "contract": "src/L1/L1CrossDomainMessenger.sol:L1CrossDomainMessenger",
        "label": "spacer_101_0_1",
        "offset": 0,
        "slot": "101",
        "type": "t_bool"
      },
      {
        "astId": 70823,
        "contract": "src/L1/L1CrossDomainMessenger.sol:L1CrossDomainMessenger",
        "label": "spacer_102_0_1568",
        "offset": 0,
        "slot": "102",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 70826,
        "contract": "src/L1/L1CrossDomainMessenger.sol:L1CrossDomainMessenger",
        "label": "spacer_151_0_32",
        "offset": 0,
        "slot": "151",
        "type": "t_uint256"
      },
      {
        "astId": 70831,
        "contract": "src/L1/L1CrossDomainMessenger.sol:L1CrossDomainMessenger",
        "label": "spacer_152_0_1568",
        "offset": 0,
        "slot": "152",
        "type": "t_array(t_uint256)49_storage"
      },
      {
        "astId": 70836,
        "contract": "src/L1/L1CrossDomainMessenger.sol:L1CrossDomainMessenger",
        "label": "spacer_201_0_32",
        "offset": 0,
        "slot": "201",
        "type": "t_mapping(t_bytes32,t_bool)"
      },
      {
        "astId": 70841,
        "contract": "src/L1/L1CrossDomainMessenger.sol:L1CrossDomainMessenger",
        "label": "spacer_202_0_32",
        "offset": 0,
        "slot": "202",
        "type": "t_mapping(t_bytes32,t_bool)"
      },
      {
        "astId": 70889,
        "contract": "src/L1/L1CrossDomainMessenger.sol:L1CrossDomainMessenger",
        "label": "successfulMessages",
        "offset": 0,
        "slot": "203",
        "type": "t_mapping(t_bytes32,t_bool)"
      },
      {
        "astId": 70892,
        "contract": "src/L1/L1CrossDomainMessenger.sol:L1CrossDomainMessenger",
        "label": "xDomainMsgSender",
        "offset": 0,
        "slot": "204",
        "type": "t_address"
      },
      {
        "astId": 70895,
        "contract": "src/L1/L1CrossDomainMessenger.sol:L1CrossDomainMessenger",
        "label": "msgNonce",
        "offset": 0,
        "slot": "205",
        "type": "t_uint240"
      },
      {
        "astId": 70900,
        "contract": "src/L1/L1CrossDomainMessenger.sol:L1CrossDomainMessenger",
        "label": "failedMessages",
        "offset": 0,
        "slot": "206",
        "type": "t_mapping(t_bytes32,t_bool)"
      },
      {
        "astId": 70905,
        "contract": "src/L1/L1CrossDomainMessenger.sol:L1CrossDomainMessenger",
        "label": "__gap",
        "offset": 0,
        "slot": "207",
        "type": "t_array(t_uint256)42_storage"
      },
      {
        "astId": 53146,
        "contract": "src/L1/L1CrossDomainMessenger.sol:L1CrossDomainMessenger",
        "label": "PORTAL",
        "offset": 0,
        "slot": "249",
        "type": "t_contract(OptimismPortal)58425"
      },
      {
        "astId": 53149,
        "contract": "src/L1/L1CrossDomainMessenger.sol:L1CrossDomainMessenger",
        "label": "nativeTokenAddress",
        "offset": 0,
        "slot": "250",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)42_storage": {
        "encoding": "inplace",
        "label": "uint256[42]",
        "numberOfBytes": "1344",
        "base": "t_uint256"
      },
      "t_array(t_uint256)49_storage": {
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568",
        "base": "t_uint256"
      },
      "t_array(t_uint256)50_storage": {
        "encoding": "inplace",
        "label": "uint256[50]",
        "numberOfBytes": "1600",
        "base": "t_uint256"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_contract(OptimismPortal)58425": {
        "encoding": "inplace",
        "label": "contract OptimismPortal",
        "numberOfBytes": "20"
      },
      "t_mapping(t_bytes32,t_bool)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_uint240": {
        "encoding": "inplace",
        "label": "uint240",
        "numberOfBytes": "30"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  },
  "userdoc": {
    "version": 1,
    "kind": "user",
    "methods": {
      "MESSAGE_VERSION()": {
        "notice": "Current message version identifier."
      },
      "MIN_GAS_CALLDATA_OVERHEAD()": {
        "notice": "Extra gas added to base gas for each byte of calldata in a message."
      },
      "MIN_GAS_DYNAMIC_OVERHEAD_DENOMINATOR()": {
        "notice": "Denominator for dynamic overhead added to the base gas for a message."
      },
      "MIN_GAS_DYNAMIC_OVERHEAD_NUMERATOR()": {
        "notice": "Numerator for dynamic overhead added to the base gas for a message."
      },
      "OTHER_MESSENGER()": {
        "notice": "Address of the paired CrossDomainMessenger contract on the other chain."
      },
      "PORTAL()": {
        "notice": "Address of the OptimismPortal. The public getter for this         is legacy and will be removed in the future. Use `portal()` instead."
      },
      "RELAY_CALL_OVERHEAD()": {
        "notice": "Gas reserved for performing the external call in `relayMessage`."
      },
      "RELAY_CONSTANT_OVERHEAD()": {
        "notice": "Constant overhead added to the base gas for a message."
      },
      "RELAY_GAS_CHECK_BUFFER()": {
        "notice": "Gas reserved for the execution between the `hasMinGas` check and the external         call in `relayMessage`."
      },
      "RELAY_RESERVED_GAS()": {
        "notice": "Gas reserved for finalizing the execution of `relayMessage` after the safe call."
      },
      "baseGas(bytes,uint32)": {
        "notice": "Computes the amount of gas required to guarantee that a given message will be         received on the other chain without running out of gas. Guaranteeing that a message         will not run out of gas is important because this ensures that a message can always         be replayed on the other chain if it fails to execute completely."
      },
      "constructor": {
        "notice": "Constructs the L1CrossDomainMessenger contract."
      },
      "failedMessages(bytes32)": {
        "notice": "Mapping of message hashes to a boolean if and only if the message has failed to be         executed at least once. A message will not be present in this mapping if it         successfully executed on the first attempt."
      },
      "initialize(address,address)": {
        "notice": "Initializes the contract."
      },
      "messageNonce()": {
        "notice": "Retrieves the next message nonce. Message version will be added to the upper two         bytes of the message nonce. Message version allows us to treat messages as having         different structures."
      },
      "nativeTokenAddress()": {
        "notice": "Address of native token (ERC-20 token)"
      },
      "onApprove(address,address,uint256,bytes)": {
        "notice": "ERC20 onApprove callback"
      },
      "portal()": {
        "notice": "Getter for the OptimismPortal address."
      },
      "relayMessage(uint256,address,address,uint256,uint256,bytes)": {
        "notice": "Relays a message that was sent by the other CrossDomainMessenger contract. Can only         be executed via cross-chain call from the other messenger OR if the message was         already received once and is currently being replayed."
      },
      "sendMessage(address,bytes,uint32)": {
        "notice": "Sends a message to some target address on the other chain. Note that if the call         always reverts, then the message will be unrelayable, and any ETH sent will be         permanently locked. The same will occur if the target on the other chain is         considered unsafe (see the _isUnsafeTarget() function)."
      },
      "sendNativeTokenMessage(address,uint256,bytes,uint32)": {
        "notice": "Sends a deposit native token message to some target address on the other chain. Note that if the call         always reverts, then the message will be unrelayable, and any ETH sent will be         permanently locked. The same will occur if the target on the other chain is         considered unsafe (see the _isUnsafeTarget() function)."
      },
      "successfulMessages(bytes32)": {
        "notice": "Mapping of message hashes to boolean receipt values. Note that a message will only         be present in this mapping if it has successfully been relayed on this chain, and         can therefore not be relayed again."
      },
      "unpackOnApproveData(bytes)": {
        "notice": "unpack onApprove data"
      },
      "version()": {
        "notice": "Semantic version."
      },
      "xDomainMessageSender()": {
        "notice": "Retrieves the address of the contract or wallet that initiated the currently         executing message on the other chain. Will throw an error if there is no message         currently being executed. Allows the recipient of a call to see who triggered it."
      }
    },
    "events": {
      "FailedRelayedMessage(bytes32)": {
        "notice": "Emitted whenever a message fails to be relayed on this chain."
      },
      "RelayedMessage(bytes32)": {
        "notice": "Emitted whenever a message is successfully relayed on this chain."
      },
      "SentMessage(address,address,bytes,uint256,uint256)": {
        "notice": "Emitted whenever a message is sent to the other chain."
      },
      "SentMessageExtension1(address,uint256)": {
        "notice": "Additional event data to emit, required as of Bedrock. Cannot be merged with the         SentMessage event without breaking the ABI of this contract, this is good enough."
      }
    },
    "notice": "The L1CrossDomainMessenger is a message passing interface between L1 and L2 responsible         for sending and receiving data on the L1 side. Users are encouraged to use this         interface instead of interacting with lower-level contracts directly."
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "methods": {
      "baseGas(bytes,uint32)": {
        "params": {
          "_message": "Message to compute the amount of required gas for.",
          "_minGasLimit": "Minimum desired gas limit when message goes to target."
        },
        "returns": {
          "_0": "Amount of gas required to guarantee message receipt."
        }
      },
      "initialize(address,address)": {
        "params": {
          "_portal": "Address of the OptimismPortal contract on this network."
        }
      },
      "messageNonce()": {
        "returns": {
          "_0": "Nonce of the next message to be sent, with added message version."
        }
      },
      "onApprove(address,address,uint256,bytes)": {
        "params": {
          "_amount": "Approved amount",
          "_data": "Data used in OnApprove contract",
          "_owner": "Account that called approveAndCall"
        }
      },
      "relayMessage(uint256,address,address,uint256,uint256,bytes)": {
        "params": {
          "_message": "Message to send to the target.",
          "_minGasLimit": "Minimum amount of gas that the message can be executed with.",
          "_nonce": "Nonce of the message being relayed.",
          "_sender": "Address of the user who sent the message.",
          "_target": "Address that the message is targeted at.",
          "_value": "Native token value to send with the message."
        }
      },
      "sendMessage(address,bytes,uint32)": {
        "params": {
          "_message": "Message to trigger the target address with.",
          "_minGasLimit": "Minimum gas limit that the message can be executed with.",
          "_target": "Target contract or wallet address."
        }
      },
      "sendNativeTokenMessage(address,uint256,bytes,uint32)": {
        "params": {
          "_amount": "Amount of deposit native token.",
          "_message": "Message to trigger the target address with.",
          "_minGasLimit": "Minimum gas limit that the message can be executed with.",
          "_target": "Target contract or wallet address."
        }
      },
      "unpackOnApproveData(bytes)": {
        "params": {
          "_data": "Data used in OnApprove contract"
        }
      },
      "xDomainMessageSender()": {
        "returns": {
          "_0": "Address of the sender of the currently executing message on the other chain."
        }
      }
    }
  },
  "ast": {
    "absolutePath": "src/L1/L1CrossDomainMessenger.sol",
    "id": 53754,
    "exportedSymbols": {
      "Constants": [
        68072
      ],
      "CrossDomainMessenger": [
        71321
      ],
      "Encoding": [
        68558
      ],
      "Hashing": [
        68780
      ],
      "IERC20": [
        30971
      ],
      "ISemver": [
        71843
      ],
      "L1CrossDomainMessenger": [
        53753
      ],
      "OnApprove": [
        57527
      ],
      "OptimismPortal": [
        58425
      ],
      "Predeploys": [
        68895
      ],
      "SafeCall": [
        68984
      ],
      "SafeERC20": [
        32166
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:14190:87",
    "nodes": [
      {
        "id": 53109,
        "nodeType": "PragmaDirective",
        "src": "32:23:87",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 53111,
        "nodeType": "ImportDirective",
        "src": "57:72:87",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 53754,
        "sourceUnit": 30972,
        "symbolAliases": [
          {
            "foreign": {
              "id": 53110,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30971,
              "src": "66:6:87",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 53113,
        "nodeType": "ImportDirective",
        "src": "130:84:87",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 53754,
        "sourceUnit": 32167,
        "symbolAliases": [
          {
            "foreign": {
              "id": 53112,
              "name": "SafeERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 32166,
              "src": "139:9:87",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 53115,
        "nodeType": "ImportDirective",
        "src": "215:58:87",
        "nodes": [],
        "absolutePath": "src/libraries/Predeploys.sol",
        "file": "src/libraries/Predeploys.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 53754,
        "sourceUnit": 68896,
        "symbolAliases": [
          {
            "foreign": {
              "id": 53114,
              "name": "Predeploys",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 68895,
              "src": "224:10:87",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 53117,
        "nodeType": "ImportDirective",
        "src": "274:59:87",
        "nodes": [],
        "absolutePath": "src/L1/OptimismPortal.sol",
        "file": "src/L1/OptimismPortal.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 53754,
        "sourceUnit": 58426,
        "symbolAliases": [
          {
            "foreign": {
              "id": 53116,
              "name": "OptimismPortal",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 58425,
              "src": "283:14:87",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 53119,
        "nodeType": "ImportDirective",
        "src": "334:78:87",
        "nodes": [],
        "absolutePath": "src/universal/CrossDomainMessenger.sol",
        "file": "src/universal/CrossDomainMessenger.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 53754,
        "sourceUnit": 71322,
        "symbolAliases": [
          {
            "foreign": {
              "id": 53118,
              "name": "CrossDomainMessenger",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 71321,
              "src": "343:20:87",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 53121,
        "nodeType": "ImportDirective",
        "src": "413:52:87",
        "nodes": [],
        "absolutePath": "src/universal/ISemver.sol",
        "file": "src/universal/ISemver.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 53754,
        "sourceUnit": 71844,
        "symbolAliases": [
          {
            "foreign": {
              "id": 53120,
              "name": "ISemver",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 71843,
              "src": "422:7:87",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 53123,
        "nodeType": "ImportDirective",
        "src": "466:56:87",
        "nodes": [],
        "absolutePath": "src/libraries/Constants.sol",
        "file": "src/libraries/Constants.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 53754,
        "sourceUnit": 68073,
        "symbolAliases": [
          {
            "foreign": {
              "id": 53122,
              "name": "Constants",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 68072,
              "src": "475:9:87",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 53125,
        "nodeType": "ImportDirective",
        "src": "523:54:87",
        "nodes": [],
        "absolutePath": "src/libraries/SafeCall.sol",
        "file": "src/libraries/SafeCall.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 53754,
        "sourceUnit": 68985,
        "symbolAliases": [
          {
            "foreign": {
              "id": 53124,
              "name": "SafeCall",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 68984,
              "src": "532:8:87",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 53127,
        "nodeType": "ImportDirective",
        "src": "578:52:87",
        "nodes": [],
        "absolutePath": "src/libraries/Hashing.sol",
        "file": "src/libraries/Hashing.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 53754,
        "sourceUnit": 68781,
        "symbolAliases": [
          {
            "foreign": {
              "id": 53126,
              "name": "Hashing",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 68780,
              "src": "587:7:87",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 53129,
        "nodeType": "ImportDirective",
        "src": "631:54:87",
        "nodes": [],
        "absolutePath": "src/libraries/Encoding.sol",
        "file": "src/libraries/Encoding.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 53754,
        "sourceUnit": 68559,
        "symbolAliases": [
          {
            "foreign": {
              "id": 53128,
              "name": "Encoding",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 68558,
              "src": "640:8:87",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 53131,
        "nodeType": "ImportDirective",
        "src": "686:44:87",
        "nodes": [],
        "absolutePath": "src/L1/OnApprove.sol",
        "file": "./OnApprove.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 53754,
        "sourceUnit": 57528,
        "symbolAliases": [
          {
            "foreign": {
              "id": 53130,
              "name": "OnApprove",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 57527,
              "src": "695:9:87",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 53753,
        "nodeType": "ContractDefinition",
        "src": "1060:13161:87",
        "nodes": [
          {
            "id": 53142,
            "nodeType": "UsingForDirective",
            "src": "1142:27:87",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 53139,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 32166,
              "src": "1148:9:87"
            },
            "typeName": {
              "id": 53141,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 53140,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 30971,
                "src": "1162:6:87"
              },
              "referencedDeclaration": 30971,
              "src": "1162:6:87",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$30971",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 53146,
            "nodeType": "VariableDeclaration",
            "src": "1390:28:87",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 53143,
              "nodeType": "StructuredDocumentation",
              "src": "1175:210:87",
              "text": "@notice Address of the OptimismPortal. The public getter for this\n         is legacy and will be removed in the future. Use `portal()` instead.\n @custom:network-specific\n @custom:legacy"
            },
            "functionSelector": "0ff754ea",
            "mutability": "mutable",
            "name": "PORTAL",
            "nameLocation": "1412:6:87",
            "scope": 53753,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_OptimismPortal_$58425",
              "typeString": "contract OptimismPortal"
            },
            "typeName": {
              "id": 53145,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 53144,
                "name": "OptimismPortal",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 58425,
                "src": "1390:14:87"
              },
              "referencedDeclaration": 58425,
              "src": "1390:14:87",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OptimismPortal_$58425",
                "typeString": "contract OptimismPortal"
              }
            },
            "visibility": "public"
          },
          {
            "id": 53149,
            "nodeType": "VariableDeclaration",
            "src": "1480:33:87",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 53147,
              "nodeType": "StructuredDocumentation",
              "src": "1425:50:87",
              "text": "@notice Address of native token (ERC-20 token)"
            },
            "functionSelector": "4d0047ee",
            "mutability": "mutable",
            "name": "nativeTokenAddress",
            "nameLocation": "1495:18:87",
            "scope": 53753,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 53148,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1480:7:87",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 53153,
            "nodeType": "VariableDeclaration",
            "src": "1583:40:87",
            "nodes": [],
            "baseFunctions": [
              71842
            ],
            "constant": true,
            "documentation": {
              "id": 53150,
              "nodeType": "StructuredDocumentation",
              "src": "1520:58:87",
              "text": "@notice Semantic version.\n @custom:semver 1.7.1"
            },
            "functionSelector": "54fd4d50",
            "mutability": "constant",
            "name": "version",
            "nameLocation": "1606:7:87",
            "scope": 53753,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 53151,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1583:6:87",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "312e372e31",
              "id": 53152,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1616:7:87",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_31a7fbae8cd9be657055192eac3963c4f9e6c68aa2cc67ca44d28b9479dbfe5e",
                "typeString": "literal_string \"1.7.1\""
              },
              "value": "1.7.1"
            },
            "visibility": "public"
          },
          {
            "id": 53175,
            "nodeType": "FunctionDefinition",
            "src": "1694:174:87",
            "nodes": [],
            "body": {
              "id": 53174,
              "nodeType": "Block",
              "src": "1767:101:87",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 53165,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "1822:1:87",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 53164,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "1814:8:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_payable_$",
                                "typeString": "type(address payable)"
                              },
                              "typeName": {
                                "id": 53163,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "1814:8:87",
                                "stateMutability": "payable",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 53166,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1814:10:87",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 53162,
                          "name": "OptimismPortal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 58425,
                          "src": "1799:14:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_OptimismPortal_$58425_$",
                            "typeString": "type(contract OptimismPortal)"
                          }
                        },
                        "id": 53167,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1799:26:87",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimismPortal_$58425",
                          "typeString": "contract OptimismPortal"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 53170,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1856:1:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 53169,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1848:7:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53168,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1848:7:87",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53171,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1848:10:87",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_OptimismPortal_$58425",
                          "typeString": "contract OptimismPortal"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 53161,
                      "name": "initialize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53200,
                      "src": "1777:10:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_OptimismPortal_$58425_$_t_address_$returns$__$",
                        "typeString": "function (contract OptimismPortal,address)"
                      }
                    },
                    "id": 53172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [
                      "_portal",
                      "_nativeTokenAddress"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "1777:84:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53173,
                  "nodeType": "ExpressionStatement",
                  "src": "1777:84:87"
                }
              ]
            },
            "documentation": {
              "id": 53154,
              "nodeType": "StructuredDocumentation",
              "src": "1630:59:87",
              "text": "@notice Constructs the L1CrossDomainMessenger contract."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 53157,
                      "name": "Predeploys",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68895,
                      "src": "1729:10:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Predeploys_$68895_$",
                        "typeString": "type(library Predeploys)"
                      }
                    },
                    "id": 53158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "L2_CROSS_DOMAIN_MESSENGER",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 68819,
                    "src": "1729:36:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 53159,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 53156,
                  "name": "CrossDomainMessenger",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 71321,
                  "src": "1708:20:87"
                },
                "nodeType": "ModifierInvocation",
                "src": "1708:58:87"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 53155,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1705:2:87"
            },
            "returnParameters": {
              "id": 53160,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1767:0:87"
            },
            "scope": 53753,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 53200,
            "nodeType": "FunctionDefinition",
            "src": "1995:281:87",
            "nodes": [],
            "body": {
              "id": 53199,
              "nodeType": "Block",
              "src": "2154:122:87",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 53190,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 53188,
                      "name": "PORTAL",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53146,
                      "src": "2164:6:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OptimismPortal_$58425",
                        "typeString": "contract OptimismPortal"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 53189,
                      "name": "_portal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53179,
                      "src": "2173:7:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OptimismPortal_$58425",
                        "typeString": "contract OptimismPortal"
                      }
                    },
                    "src": "2164:16:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OptimismPortal_$58425",
                      "typeString": "contract OptimismPortal"
                    }
                  },
                  "id": 53191,
                  "nodeType": "ExpressionStatement",
                  "src": "2164:16:87"
                },
                {
                  "expression": {
                    "id": 53194,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 53192,
                      "name": "nativeTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53149,
                      "src": "2190:18:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 53193,
                      "name": "_nativeTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53181,
                      "src": "2211:19:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2190:40:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 53195,
                  "nodeType": "ExpressionStatement",
                  "src": "2190:40:87"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 53196,
                      "name": "__CrossDomainMessenger_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 71294,
                      "src": "2240:27:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 53197,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2240:29:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53198,
                  "nodeType": "ExpressionStatement",
                  "src": "2240:29:87"
                }
              ]
            },
            "documentation": {
              "id": 53176,
              "nodeType": "StructuredDocumentation",
              "src": "1874:116:87",
              "text": "@notice Initializes the contract.\n @param _portal Address of the OptimismPortal contract on this network."
            },
            "functionSelector": "485cc955",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 53184,
                      "name": "Constants",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68072,
                      "src": "2127:9:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Constants_$68072_$",
                        "typeString": "type(library Constants)"
                      }
                    },
                    "id": 53185,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "INITIALIZER",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 68071,
                    "src": "2127:21:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 53186,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 53183,
                  "name": "reinitializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29633,
                  "src": "2113:13:87"
                },
                "nodeType": "ModifierInvocation",
                "src": "2113:36:87"
              }
            ],
            "name": "initialize",
            "nameLocation": "2004:10:87",
            "parameters": {
              "id": 53182,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53179,
                  "mutability": "mutable",
                  "name": "_portal",
                  "nameLocation": "2039:7:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 53200,
                  "src": "2024:22:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_OptimismPortal_$58425",
                    "typeString": "contract OptimismPortal"
                  },
                  "typeName": {
                    "id": 53178,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 53177,
                      "name": "OptimismPortal",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 58425,
                      "src": "2024:14:87"
                    },
                    "referencedDeclaration": 58425,
                    "src": "2024:14:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OptimismPortal_$58425",
                      "typeString": "contract OptimismPortal"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53181,
                  "mutability": "mutable",
                  "name": "_nativeTokenAddress",
                  "nameLocation": "2064:19:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 53200,
                  "src": "2056:27:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53180,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2056:7:87",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2014:75:87"
            },
            "returnParameters": {
              "id": 53187,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2154:0:87"
            },
            "scope": 53753,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 53212,
            "nodeType": "FunctionDefinition",
            "src": "2337:89:87",
            "nodes": [],
            "body": {
              "id": 53211,
              "nodeType": "Block",
              "src": "2387:39:87",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53208,
                        "name": "PORTAL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53146,
                        "src": "2412:6:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimismPortal_$58425",
                          "typeString": "contract OptimismPortal"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_OptimismPortal_$58425",
                          "typeString": "contract OptimismPortal"
                        }
                      ],
                      "id": 53207,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "2404:7:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 53206,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "2404:7:87",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 53209,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2404:15:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 53205,
                  "id": 53210,
                  "nodeType": "Return",
                  "src": "2397:22:87"
                }
              ]
            },
            "documentation": {
              "id": 53201,
              "nodeType": "StructuredDocumentation",
              "src": "2282:50:87",
              "text": "@notice Getter for the OptimismPortal address."
            },
            "functionSelector": "6425666b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "portal",
            "nameLocation": "2346:6:87",
            "parameters": {
              "id": 53202,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2352:2:87"
            },
            "returnParameters": {
              "id": 53205,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53204,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 53212,
                  "src": "2378:7:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53203,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2378:7:87",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2377:9:87"
            },
            "scope": 53753,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53243,
            "nodeType": "FunctionDefinition",
            "src": "2773:236:87",
            "nodes": [],
            "body": {
              "id": 53242,
              "nodeType": "Block",
              "src": "2880:129:87",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 53229,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 53226,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2898:3:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 53227,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "2898:9:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 53228,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2911:1:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "2898:14:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "44656e79206465706f736974696e6720455448",
                        "id": 53230,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2914:21:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_adb25132a00c328f301fefa9fb7b266dfffd65b40d797162a6bec5effb51aa28",
                          "typeString": "literal_string \"Deny depositing ETH\""
                        },
                        "value": "Deny depositing ETH"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_adb25132a00c328f301fefa9fb7b266dfffd65b40d797162a6bec5effb51aa28",
                          "typeString": "literal_string \"Deny depositing ETH\""
                        }
                      ],
                      "id": 53225,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2890:7:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 53231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2890:46:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53232,
                  "nodeType": "ExpressionStatement",
                  "src": "2890:46:87"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53236,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53215,
                        "src": "2972:3:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 53237,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53219,
                        "src": "2977:6:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 53238,
                        "name": "_gasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53217,
                        "src": "2985:9:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 53239,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53221,
                        "src": "2996:5:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 53233,
                        "name": "PORTAL",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53146,
                        "src": "2946:6:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimismPortal_$58425",
                          "typeString": "contract OptimismPortal"
                        }
                      },
                      "id": 53235,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "depositTransaction",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 58283,
                      "src": "2946:25:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_uint64_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint256,uint64,bytes memory) external"
                      }
                    },
                    "id": 53240,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2946:56:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53241,
                  "nodeType": "ExpressionStatement",
                  "src": "2946:56:87"
                }
              ]
            },
            "baseFunctions": [
              71306
            ],
            "documentation": {
              "id": 53213,
              "nodeType": "StructuredDocumentation",
              "src": "2732:36:87",
              "text": "@inheritdoc CrossDomainMessenger"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_sendMessage",
            "nameLocation": "2782:12:87",
            "overrides": {
              "id": 53223,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2871:8:87"
            },
            "parameters": {
              "id": 53222,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53215,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "2803:3:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 53243,
                  "src": "2795:11:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53214,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2795:7:87",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53217,
                  "mutability": "mutable",
                  "name": "_gasLimit",
                  "nameLocation": "2815:9:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 53243,
                  "src": "2808:16:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 53216,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "2808:6:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53219,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "2834:6:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 53243,
                  "src": "2826:14:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53218,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2826:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53221,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "2855:5:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 53243,
                  "src": "2842:18:87",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 53220,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2842:5:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2794:67:87"
            },
            "returnParameters": {
              "id": 53224,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2880:0:87"
            },
            "scope": 53753,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 53269,
            "nodeType": "FunctionDefinition",
            "src": "3110:930:87",
            "nodes": [],
            "body": {
              "id": 53268,
              "nodeType": "Block",
              "src": "3301:739:87",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 53263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 53260,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53246,
                            "src": "3319:5:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          "id": 53261,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "3319:12:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "hexValue": "3736",
                          "id": 53262,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3335:2:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_76_by_1",
                            "typeString": "int_const 76"
                          },
                          "value": "76"
                        },
                        "src": "3319:18:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c6964206f6e417070726f7665206461746120666f72204c3143726f7373446f6d61696e4d657373656e676572",
                        "id": 53264,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3339:51:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_8247fc35cdb85f66bc01ac335fca11d5bce4058c7ce5ddf3ece87ad7e4f5c31e",
                          "typeString": "literal_string \"Invalid onApprove data for L1CrossDomainMessenger\""
                        },
                        "value": "Invalid onApprove data for L1CrossDomainMessenger"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_8247fc35cdb85f66bc01ac335fca11d5bce4058c7ce5ddf3ece87ad7e4f5c31e",
                          "typeString": "literal_string \"Invalid onApprove data for L1CrossDomainMessenger\""
                        }
                      ],
                      "id": 53259,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "3311:7:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 53265,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3311:80:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53266,
                  "nodeType": "ExpressionStatement",
                  "src": "3311:80:87"
                },
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "3410:624:87",
                    "statements": [
                      {
                        "nodeType": "YulAssignment",
                        "src": "3677:44:87",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3690:2:87",
                              "type": "",
                              "value": "96"
                            },
                            {
                              "arguments": [
                                {
                                  "name": "_data.offset",
                                  "nodeType": "YulIdentifier",
                                  "src": "3707:12:87"
                                }
                              ],
                              "functionName": {
                                "name": "calldataload",
                                "nodeType": "YulIdentifier",
                                "src": "3694:12:87"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3694:26:87"
                            }
                          ],
                          "functionName": {
                            "name": "shr",
                            "nodeType": "YulIdentifier",
                            "src": "3686:3:87"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3686:35:87"
                        },
                        "variableNames": [
                          {
                            "name": "_from",
                            "nodeType": "YulIdentifier",
                            "src": "3677:5:87"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "3734:51:87",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3745:2:87",
                              "type": "",
                              "value": "96"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "_data.offset",
                                      "nodeType": "YulIdentifier",
                                      "src": "3766:12:87"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3780:2:87",
                                      "type": "",
                                      "value": "20"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "3762:3:87"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3762:21:87"
                                }
                              ],
                              "functionName": {
                                "name": "calldataload",
                                "nodeType": "YulIdentifier",
                                "src": "3749:12:87"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3749:35:87"
                            }
                          ],
                          "functionName": {
                            "name": "shr",
                            "nodeType": "YulIdentifier",
                            "src": "3741:3:87"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3741:44:87"
                        },
                        "variableNames": [
                          {
                            "name": "_to",
                            "nodeType": "YulIdentifier",
                            "src": "3734:3:87"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "3798:46:87",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "name": "_data.offset",
                                  "nodeType": "YulIdentifier",
                                  "src": "3826:12:87"
                                },
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "3840:2:87",
                                  "type": "",
                                  "value": "40"
                                }
                              ],
                              "functionName": {
                                "name": "add",
                                "nodeType": "YulIdentifier",
                                "src": "3822:3:87"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3822:21:87"
                            }
                          ],
                          "functionName": {
                            "name": "calldataload",
                            "nodeType": "YulIdentifier",
                            "src": "3809:12:87"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3809:35:87"
                        },
                        "variableNames": [
                          {
                            "name": "_amount",
                            "nodeType": "YulIdentifier",
                            "src": "3798:7:87"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "3857:61:87",
                        "value": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3877:3:87",
                              "type": "",
                              "value": "224"
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "name": "_data.offset",
                                      "nodeType": "YulIdentifier",
                                      "src": "3899:12:87"
                                    },
                                    {
                                      "kind": "number",
                                      "nodeType": "YulLiteral",
                                      "src": "3913:2:87",
                                      "type": "",
                                      "value": "72"
                                    }
                                  ],
                                  "functionName": {
                                    "name": "add",
                                    "nodeType": "YulIdentifier",
                                    "src": "3895:3:87"
                                  },
                                  "nodeType": "YulFunctionCall",
                                  "src": "3895:21:87"
                                }
                              ],
                              "functionName": {
                                "name": "calldataload",
                                "nodeType": "YulIdentifier",
                                "src": "3882:12:87"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "3882:35:87"
                            }
                          ],
                          "functionName": {
                            "name": "shr",
                            "nodeType": "YulIdentifier",
                            "src": "3873:3:87"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3873:45:87"
                        },
                        "variableNames": [
                          {
                            "name": "_minGasLimit",
                            "nodeType": "YulIdentifier",
                            "src": "3857:12:87"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "3931:40:87",
                        "value": {
                          "arguments": [
                            {
                              "name": "_data.offset",
                              "nodeType": "YulIdentifier",
                              "src": "3954:12:87"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "3968:2:87",
                              "type": "",
                              "value": "76"
                            }
                          ],
                          "functionName": {
                            "name": "add",
                            "nodeType": "YulIdentifier",
                            "src": "3950:3:87"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "3950:21:87"
                        },
                        "variableNames": [
                          {
                            "name": "_message.offset",
                            "nodeType": "YulIdentifier",
                            "src": "3931:15:87"
                          }
                        ]
                      },
                      {
                        "nodeType": "YulAssignment",
                        "src": "3984:40:87",
                        "value": {
                          "arguments": [
                            {
                              "name": "_data.length",
                              "nodeType": "YulIdentifier",
                              "src": "4007:12:87"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "4021:2:87",
                              "type": "",
                              "value": "76"
                            }
                          ],
                          "functionName": {
                            "name": "sub",
                            "nodeType": "YulIdentifier",
                            "src": "4003:3:87"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "4003:21:87"
                        },
                        "variableNames": [
                          {
                            "name": "_message.length",
                            "nodeType": "YulIdentifier",
                            "src": "3984:15:87"
                          }
                        ]
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [
                    {
                      "declaration": 53253,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3798:7:87",
                      "valueSize": 1
                    },
                    {
                      "declaration": 53246,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "4007:12:87",
                      "suffix": "length",
                      "valueSize": 1
                    },
                    {
                      "declaration": 53246,
                      "isOffset": true,
                      "isSlot": false,
                      "src": "3707:12:87",
                      "suffix": "offset",
                      "valueSize": 1
                    },
                    {
                      "declaration": 53246,
                      "isOffset": true,
                      "isSlot": false,
                      "src": "3766:12:87",
                      "suffix": "offset",
                      "valueSize": 1
                    },
                    {
                      "declaration": 53246,
                      "isOffset": true,
                      "isSlot": false,
                      "src": "3826:12:87",
                      "suffix": "offset",
                      "valueSize": 1
                    },
                    {
                      "declaration": 53246,
                      "isOffset": true,
                      "isSlot": false,
                      "src": "3899:12:87",
                      "suffix": "offset",
                      "valueSize": 1
                    },
                    {
                      "declaration": 53246,
                      "isOffset": true,
                      "isSlot": false,
                      "src": "3954:12:87",
                      "suffix": "offset",
                      "valueSize": 1
                    },
                    {
                      "declaration": 53249,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3677:5:87",
                      "valueSize": 1
                    },
                    {
                      "declaration": 53257,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3984:15:87",
                      "suffix": "length",
                      "valueSize": 1
                    },
                    {
                      "declaration": 53257,
                      "isOffset": true,
                      "isSlot": false,
                      "src": "3931:15:87",
                      "suffix": "offset",
                      "valueSize": 1
                    },
                    {
                      "declaration": 53255,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3857:12:87",
                      "valueSize": 1
                    },
                    {
                      "declaration": 53251,
                      "isOffset": false,
                      "isSlot": false,
                      "src": "3734:3:87",
                      "valueSize": 1
                    }
                  ],
                  "id": 53267,
                  "nodeType": "InlineAssembly",
                  "src": "3401:633:87"
                }
              ]
            },
            "documentation": {
              "id": 53244,
              "nodeType": "StructuredDocumentation",
              "src": "3015:90:87",
              "text": "@notice unpack onApprove data\n @param _data     Data used in OnApprove contract"
            },
            "functionSelector": "92a162cf",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unpackOnApproveData",
            "nameLocation": "3119:19:87",
            "parameters": {
              "id": 53247,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53246,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "3154:5:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 53269,
                  "src": "3139:20:87",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 53245,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3139:5:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3138:22:87"
            },
            "returnParameters": {
              "id": 53258,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53249,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "3214:5:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 53269,
                  "src": "3206:13:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53248,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3206:7:87",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53251,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "3229:3:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 53269,
                  "src": "3221:11:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53250,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3221:7:87",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53253,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "3242:7:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 53269,
                  "src": "3234:15:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53252,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3234:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53255,
                  "mutability": "mutable",
                  "name": "_minGasLimit",
                  "nameLocation": "3258:12:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 53269,
                  "src": "3251:19:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 53254,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3251:6:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53257,
                  "mutability": "mutable",
                  "name": "_message",
                  "nameLocation": "3287:8:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 53269,
                  "src": "3272:23:87",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 53256,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3272:5:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3205:91:87"
            },
            "scope": 53753,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 53335,
            "nodeType": "FunctionDefinition",
            "src": "4245:619:87",
            "nodes": [],
            "body": {
              "id": 53334,
              "nodeType": "Block",
              "src": "4427:437:87",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 53291,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 53285,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4445:3:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 53286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4445:10:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 53289,
                              "name": "nativeTokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53149,
                              "src": "4467:18:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 53288,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4459:7:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 53287,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4459:7:87",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 53290,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4459:27:87",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4445:41:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c7920616363657074206e617469766520746f6b656e20617070726f76652063616c6c6261636b",
                        "id": 53292,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4488:43:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f4b297da633e18be624edab084175711757920feabe27679f12a2f3de3c46fb8",
                          "typeString": "literal_string \"only accept native token approve callback\""
                        },
                        "value": "only accept native token approve callback"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f4b297da633e18be624edab084175711757920feabe27679f12a2f3de3c46fb8",
                          "typeString": "literal_string \"only accept native token approve callback\""
                        }
                      ],
                      "id": 53284,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4437:7:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 53293,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4437:95:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53294,
                  "nodeType": "ExpressionStatement",
                  "src": "4437:95:87"
                },
                {
                  "assignments": [
                    53296,
                    53298,
                    53300,
                    53302,
                    53304
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53296,
                      "mutability": "mutable",
                      "name": "from",
                      "nameLocation": "4551:4:87",
                      "nodeType": "VariableDeclaration",
                      "scope": 53334,
                      "src": "4543:12:87",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 53295,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4543:7:87",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 53298,
                      "mutability": "mutable",
                      "name": "to",
                      "nameLocation": "4565:2:87",
                      "nodeType": "VariableDeclaration",
                      "scope": 53334,
                      "src": "4557:10:87",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 53297,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "4557:7:87",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 53300,
                      "mutability": "mutable",
                      "name": "amount",
                      "nameLocation": "4577:6:87",
                      "nodeType": "VariableDeclaration",
                      "scope": 53334,
                      "src": "4569:14:87",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 53299,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4569:7:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 53302,
                      "mutability": "mutable",
                      "name": "minGasLimit",
                      "nameLocation": "4592:11:87",
                      "nodeType": "VariableDeclaration",
                      "scope": 53334,
                      "src": "4585:18:87",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 53301,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4585:6:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 53304,
                      "mutability": "mutable",
                      "name": "message",
                      "nameLocation": "4620:7:87",
                      "nodeType": "VariableDeclaration",
                      "scope": 53334,
                      "src": "4605:22:87",
                      "stateVariable": false,
                      "storageLocation": "calldata",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 53303,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "4605:5:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53308,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 53306,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53278,
                        "src": "4663:5:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 53305,
                      "name": "unpackOnApproveData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53269,
                      "src": "4643:19:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$returns$_t_address_$_t_address_$_t_uint256_$_t_uint32_$_t_bytes_calldata_ptr_$",
                        "typeString": "function (bytes calldata) pure returns (address,address,uint256,uint32,bytes calldata)"
                      }
                    },
                    "id": 53307,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4643:26:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_address_$_t_address_$_t_uint256_$_t_uint32_$_t_bytes_calldata_ptr_$",
                      "typeString": "tuple(address,address,uint256,uint32,bytes calldata)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4542:127:87"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 53320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 53316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 53312,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 53310,
                              "name": "_owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53272,
                              "src": "4687:6:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 53311,
                              "name": "from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53296,
                              "src": "4697:4:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "4687:14:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 53315,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 53313,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53276,
                              "src": "4705:7:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 53314,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53300,
                              "src": "4716:6:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "4705:17:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "4687:35:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 53319,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 53317,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53300,
                            "src": "4726:6:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 53318,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4735:1:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "4726:10:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "4687:49:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "696e76616c6964206f6e417070726f76652064617461",
                        "id": 53321,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4738:24:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_447b40c60b012cad5610110d58d966fd088f8e426c998c51c11992719a7e2ddf",
                          "typeString": "literal_string \"invalid onApprove data\""
                        },
                        "value": "invalid onApprove data"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_447b40c60b012cad5610110d58d966fd088f8e426c998c51c11992719a7e2ddf",
                          "typeString": "literal_string \"invalid onApprove data\""
                        }
                      ],
                      "id": 53309,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4679:7:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 53322,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4679:84:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53323,
                  "nodeType": "ExpressionStatement",
                  "src": "4679:84:87"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53325,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53296,
                        "src": "4797:4:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 53326,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53298,
                        "src": "4803:2:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 53327,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53300,
                        "src": "4807:6:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 53328,
                        "name": "minGasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53302,
                        "src": "4815:11:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 53329,
                        "name": "message",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53304,
                        "src": "4828:7:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 53324,
                      "name": "_sendNativeTokenMessage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53486,
                      "src": "4773:23:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint32_$_t_bytes_calldata_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,uint32,bytes calldata)"
                      }
                    },
                    "id": 53330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4773:63:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53331,
                  "nodeType": "ExpressionStatement",
                  "src": "4773:63:87"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 53332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "4853:4:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 53283,
                  "id": 53333,
                  "nodeType": "Return",
                  "src": "4846:11:87"
                }
              ]
            },
            "baseFunctions": [
              57526
            ],
            "documentation": {
              "id": 53270,
              "nodeType": "StructuredDocumentation",
              "src": "4046:194:87",
              "text": "@notice ERC20 onApprove callback\n @param _owner    Account that called approveAndCall\n @param _amount   Approved amount\n @param _data     Data used in OnApprove contract"
            },
            "functionSelector": "4273ca16",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onApprove",
            "nameLocation": "4254:9:87",
            "overrides": {
              "id": 53280,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4391:8:87"
            },
            "parameters": {
              "id": 53279,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53272,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "4281:6:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 53335,
                  "src": "4273:14:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53271,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4273:7:87",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53274,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 53335,
                  "src": "4297:7:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53273,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4297:7:87",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53276,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "4322:7:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 53335,
                  "src": "4314:15:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53275,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4314:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53278,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "4354:5:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 53335,
                  "src": "4339:20:87",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 53277,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4339:5:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4263:102:87"
            },
            "returnParameters": {
              "id": 53283,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53282,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 53335,
                  "src": "4417:4:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 53281,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4417:4:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4416:6:87"
            },
            "scope": 53753,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53357,
            "nodeType": "FunctionDefinition",
            "src": "4911:160:87",
            "nodes": [],
            "body": {
              "id": 53356,
              "nodeType": "Block",
              "src": "4978:93:87",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 53354,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 53348,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 53342,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4995:3:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 53343,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4995:10:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "id": 53346,
                            "name": "PORTAL",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53146,
                            "src": "5017:6:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimismPortal_$58425",
                              "typeString": "contract OptimismPortal"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OptimismPortal_$58425",
                              "typeString": "contract OptimismPortal"
                            }
                          ],
                          "id": 53345,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5009:7:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53344,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5009:7:87",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53347,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5009:15:87",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "4995:29:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 53353,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 53349,
                            "name": "PORTAL",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53146,
                            "src": "5028:6:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimismPortal_$58425",
                              "typeString": "contract OptimismPortal"
                            }
                          },
                          "id": 53350,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "l2Sender",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 57588,
                          "src": "5028:15:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 53351,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5028:17:87",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "id": 53352,
                        "name": "OTHER_MESSENGER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70884,
                        "src": "5049:15:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "5028:36:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "4995:69:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 53341,
                  "id": 53355,
                  "nodeType": "Return",
                  "src": "4988:76:87"
                }
              ]
            },
            "baseFunctions": [
              71312
            ],
            "documentation": {
              "id": 53336,
              "nodeType": "StructuredDocumentation",
              "src": "4870:36:87",
              "text": "@inheritdoc CrossDomainMessenger"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isOtherMessenger",
            "nameLocation": "4920:17:87",
            "overrides": {
              "id": 53338,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4954:8:87"
            },
            "parameters": {
              "id": 53337,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4937:2:87"
            },
            "returnParameters": {
              "id": 53341,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53340,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 53357,
                  "src": "4972:4:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 53339,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4972:4:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4971:6:87"
            },
            "scope": 53753,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 53381,
            "nodeType": "FunctionDefinition",
            "src": "5118:158:87",
            "nodes": [],
            "body": {
              "id": 53380,
              "nodeType": "Block",
              "src": "5198:78:87",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 53378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 53371,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 53366,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53360,
                        "src": "5215:7:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "id": 53369,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "5234:4:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_L1CrossDomainMessenger_$53753",
                              "typeString": "contract L1CrossDomainMessenger"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_L1CrossDomainMessenger_$53753",
                              "typeString": "contract L1CrossDomainMessenger"
                            }
                          ],
                          "id": 53368,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5226:7:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53367,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5226:7:87",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53370,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5226:13:87",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "5215:24:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 53377,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 53372,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53360,
                        "src": "5243:7:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "id": 53375,
                            "name": "PORTAL",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53146,
                            "src": "5262:6:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimismPortal_$58425",
                              "typeString": "contract OptimismPortal"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OptimismPortal_$58425",
                              "typeString": "contract OptimismPortal"
                            }
                          ],
                          "id": 53374,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5254:7:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 53373,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5254:7:87",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 53376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5254:15:87",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "5243:26:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5215:54:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 53365,
                  "id": 53379,
                  "nodeType": "Return",
                  "src": "5208:61:87"
                }
              ]
            },
            "baseFunctions": [
              71320
            ],
            "documentation": {
              "id": 53358,
              "nodeType": "StructuredDocumentation",
              "src": "5077:36:87",
              "text": "@inheritdoc CrossDomainMessenger"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isUnsafeTarget",
            "nameLocation": "5127:15:87",
            "overrides": {
              "id": 53362,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5174:8:87"
            },
            "parameters": {
              "id": 53361,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53360,
                  "mutability": "mutable",
                  "name": "_target",
                  "nameLocation": "5151:7:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 53381,
                  "src": "5143:15:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53359,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5143:7:87",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5142:17:87"
            },
            "returnParameters": {
              "id": 53365,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53364,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 53381,
                  "src": "5192:4:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 53363,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5192:4:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5191:6:87"
            },
            "scope": 53753,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 53403,
            "nodeType": "FunctionDefinition",
            "src": "5939:614:87",
            "nodes": [],
            "body": {
              "id": 53402,
              "nodeType": "Block",
              "src": "6110:443:87",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 53394,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6493:3:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 53395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6493:10:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 53396,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53384,
                        "src": "6505:7:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 53397,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53386,
                        "src": "6514:7:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 53398,
                        "name": "_minGasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53390,
                        "src": "6523:12:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 53399,
                        "name": "_message",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53388,
                        "src": "6537:8:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 53393,
                      "name": "_sendNativeTokenMessage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53486,
                      "src": "6469:23:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint32_$_t_bytes_calldata_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,uint32,bytes calldata)"
                      }
                    },
                    "id": 53400,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6469:77:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53401,
                  "nodeType": "ExpressionStatement",
                  "src": "6469:77:87"
                }
              ]
            },
            "documentation": {
              "id": 53382,
              "nodeType": "StructuredDocumentation",
              "src": "5282:652:87",
              "text": "@notice Sends a deposit native token message to some target address on the other chain. Note that if the call\n         always reverts, then the message will be unrelayable, and any ETH sent will be\n         permanently locked. The same will occur if the target on the other chain is\n         considered unsafe (see the _isUnsafeTarget() function).\n @param _target      Target contract or wallet address.\n @param _amount      Amount of deposit native token.\n @param _message     Message to trigger the target address with.\n @param _minGasLimit Minimum gas limit that the message can be executed with."
            },
            "functionSelector": "e0e593c5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sendNativeTokenMessage",
            "nameLocation": "5948:22:87",
            "parameters": {
              "id": 53391,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53384,
                  "mutability": "mutable",
                  "name": "_target",
                  "nameLocation": "5988:7:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 53403,
                  "src": "5980:15:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53383,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5980:7:87",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53386,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "6013:7:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 53403,
                  "src": "6005:15:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53385,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6005:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53388,
                  "mutability": "mutable",
                  "name": "_message",
                  "nameLocation": "6045:8:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 53403,
                  "src": "6030:23:87",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 53387,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6030:5:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53390,
                  "mutability": "mutable",
                  "name": "_minGasLimit",
                  "nameLocation": "6070:12:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 53403,
                  "src": "6063:19:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 53389,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6063:6:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5970:118:87"
            },
            "returnParameters": {
              "id": 53392,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6110:0:87"
            },
            "scope": 53753,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 53486,
            "nodeType": "FunctionDefinition",
            "src": "7279:1269:87",
            "nodes": [],
            "body": {
              "id": 53485,
              "nodeType": "Block",
              "src": "7476:1072:87",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 53419,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 53417,
                      "name": "_amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53410,
                      "src": "7522:7:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 53418,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7532:1:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "7522:11:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 53444,
                  "nodeType": "IfStatement",
                  "src": "7518:192:87",
                  "trueBody": {
                    "id": 53443,
                    "nodeType": "Block",
                    "src": "7535:175:87",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 53424,
                              "name": "_sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53406,
                              "src": "7593:7:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 53427,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "7610:4:87",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_L1CrossDomainMessenger_$53753",
                                    "typeString": "contract L1CrossDomainMessenger"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_L1CrossDomainMessenger_$53753",
                                    "typeString": "contract L1CrossDomainMessenger"
                                  }
                                ],
                                "id": 53426,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7602:7:87",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 53425,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7602:7:87",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 53428,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7602:13:87",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 53429,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53410,
                              "src": "7617:7:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 53421,
                                  "name": "nativeTokenAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 53149,
                                  "src": "7556:18:87",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 53420,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30971,
                                "src": "7549:6:87",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$30971_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 53422,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7549:26:87",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$30971",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 53423,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 31943,
                            "src": "7549:43:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$30971_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$30971_$",
                              "typeString": "function (contract IERC20,address,address,uint256)"
                            }
                          },
                          "id": 53430,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7549:76:87",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 53431,
                        "nodeType": "ExpressionStatement",
                        "src": "7549:76:87"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 53438,
                                  "name": "PORTAL",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 53146,
                                  "src": "7682:6:87",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_OptimismPortal_$58425",
                                    "typeString": "contract OptimismPortal"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_OptimismPortal_$58425",
                                    "typeString": "contract OptimismPortal"
                                  }
                                ],
                                "id": 53437,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "7674:7:87",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 53436,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "7674:7:87",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 53439,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7674:15:87",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 53440,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53410,
                              "src": "7691:7:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 53433,
                                  "name": "nativeTokenAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 53149,
                                  "src": "7646:18:87",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 53432,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30971,
                                "src": "7639:6:87",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$30971_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 53434,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "7639:26:87",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$30971",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 53435,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "approve",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30958,
                            "src": "7639:34:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256) external returns (bool)"
                            }
                          },
                          "id": 53441,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7639:60:87",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 53442,
                        "nodeType": "ExpressionStatement",
                        "src": "7639:60:87"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 53446,
                        "name": "OTHER_MESSENGER",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70884,
                        "src": "8095:15:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 53448,
                            "name": "_message",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53414,
                            "src": "8132:8:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          },
                          {
                            "id": 53449,
                            "name": "_minGasLimit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53412,
                            "src": "8142:12:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            },
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          ],
                          "id": 53447,
                          "name": "baseGas",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 71282,
                          "src": "8124:7:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_bytes_calldata_ptr_$_t_uint32_$returns$_t_uint64_$",
                            "typeString": "function (bytes calldata,uint32) pure returns (uint64)"
                          }
                        },
                        "id": 53450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8124:31:87",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 53451,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53410,
                        "src": "8169:7:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 53454,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "8230:4:87",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_L1CrossDomainMessenger_$53753",
                                  "typeString": "contract L1CrossDomainMessenger"
                                }
                              },
                              "id": 53455,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "relayMessage",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 53752,
                              "src": "8230:17:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                                "typeString": "function (uint256,address,address,uint256,uint256,bytes memory) payable external"
                              }
                            },
                            "id": 53456,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "8230:26:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "id": 53457,
                              "name": "messageNonce",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 71246,
                              "src": "8258:12:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                                "typeString": "function () view returns (uint256)"
                              }
                            },
                            "id": 53458,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8258:14:87",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 53459,
                            "name": "_sender",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53406,
                            "src": "8274:7:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 53460,
                            "name": "_target",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53408,
                            "src": "8283:7:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 53461,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53410,
                            "src": "8292:7:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 53462,
                            "name": "_minGasLimit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53412,
                            "src": "8301:12:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          {
                            "id": 53463,
                            "name": "_message",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53414,
                            "src": "8315:8:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            {
                              "typeIdentifier": "t_bytes_calldata_ptr",
                              "typeString": "bytes calldata"
                            }
                          ],
                          "expression": {
                            "id": 53452,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "8190:3:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 53453,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "8190:22:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 53464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8190:147:87",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 53445,
                      "name": "_sendMessage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        53243
                      ],
                      "referencedDeclaration": 53243,
                      "src": "8069:12:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint64_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,uint64,uint256,bytes memory)"
                      }
                    },
                    "id": 53465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8069:278:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53466,
                  "nodeType": "ExpressionStatement",
                  "src": "8069:278:87"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 53468,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53408,
                        "src": "8375:7:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 53469,
                        "name": "_sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53406,
                        "src": "8384:7:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 53470,
                        "name": "_message",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53414,
                        "src": "8393:8:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 53471,
                          "name": "messageNonce",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 71246,
                          "src": "8403:12:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 53472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8403:14:87",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 53473,
                        "name": "_minGasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53412,
                        "src": "8419:12:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "id": 53467,
                      "name": "SentMessage",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70918,
                      "src": "8363:11:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,bytes memory,uint256,uint256)"
                      }
                    },
                    "id": 53474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8363:69:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53475,
                  "nodeType": "EmitStatement",
                  "src": "8358:74:87"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 53477,
                        "name": "_sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53406,
                        "src": "8469:7:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 53478,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53410,
                        "src": "8478:7:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 53476,
                      "name": "SentMessageExtension1",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70925,
                      "src": "8447:21:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 53479,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8447:39:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53480,
                  "nodeType": "EmitStatement",
                  "src": "8442:44:87"
                },
                {
                  "id": 53484,
                  "nodeType": "UncheckedBlock",
                  "src": "8497:45:87",
                  "statements": [
                    {
                      "expression": {
                        "id": 53482,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "++",
                        "prefix": true,
                        "src": "8521:10:87",
                        "subExpression": {
                          "id": 53481,
                          "name": "msgNonce",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 70895,
                          "src": "8523:8:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint240",
                            "typeString": "uint240"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint240",
                          "typeString": "uint240"
                        }
                      },
                      "id": 53483,
                      "nodeType": "ExpressionStatement",
                      "src": "8521:10:87"
                    }
                  ]
                }
              ]
            },
            "documentation": {
              "id": 53404,
              "nodeType": "StructuredDocumentation",
              "src": "6559:715:87",
              "text": "@notice Sends a deposit native token message internally to some target address on the other chain. Note that if\n the call\n         always reverts, then the message will be unrelayable, and any ETH sent will be\n         permanently locked. The same will occur if the target on the other chain is\n         considered unsafe (see the _isUnsafeTarget() function).\n @param _sender      Sender address.\n @param _target      Target contract or wallet address.\n @param _amount      Amount of deposit native token.\n @param _message     Message to trigger the target address with.\n @param _minGasLimit Minimum gas limit that the message can be executed with."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_sendNativeTokenMessage",
            "nameLocation": "7288:23:87",
            "parameters": {
              "id": 53415,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53406,
                  "mutability": "mutable",
                  "name": "_sender",
                  "nameLocation": "7329:7:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 53486,
                  "src": "7321:15:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53405,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7321:7:87",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53408,
                  "mutability": "mutable",
                  "name": "_target",
                  "nameLocation": "7354:7:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 53486,
                  "src": "7346:15:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53407,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7346:7:87",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53410,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "7379:7:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 53486,
                  "src": "7371:15:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53409,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7371:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53412,
                  "mutability": "mutable",
                  "name": "_minGasLimit",
                  "nameLocation": "7403:12:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 53486,
                  "src": "7396:19:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 53411,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7396:6:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53414,
                  "mutability": "mutable",
                  "name": "_message",
                  "nameLocation": "7440:8:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 53486,
                  "src": "7425:23:87",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 53413,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7425:5:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7311:143:87"
            },
            "returnParameters": {
              "id": 53416,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7476:0:87"
            },
            "scope": 53753,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 53752,
            "nodeType": "FunctionDefinition",
            "src": "9245:4974:87",
            "nodes": [],
            "body": {
              "id": 53751,
              "nodeType": "Block",
              "src": "9488:4731:87",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 53507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 53504,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "9506:3:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 53505,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "9506:9:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 53506,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9519:1:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "9506:14:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43726f7373446f6d61696e4d657373656e6765723a2076616c7565206d757374206265207a65726f",
                        "id": 53508,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9522:42:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a91fe74ebf15473b513e9d3bee1535fa356cb7b3225420e5bb94f49a254b9c1e",
                          "typeString": "literal_string \"CrossDomainMessenger: value must be zero\""
                        },
                        "value": "CrossDomainMessenger: value must be zero"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a91fe74ebf15473b513e9d3bee1535fa356cb7b3225420e5bb94f49a254b9c1e",
                          "typeString": "literal_string \"CrossDomainMessenger: value must be zero\""
                        }
                      ],
                      "id": 53503,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9498:7:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 53509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9498:67:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53510,
                  "nodeType": "ExpressionStatement",
                  "src": "9498:67:87"
                },
                {
                  "assignments": [
                    null,
                    53512
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 53512,
                      "mutability": "mutable",
                      "name": "_nonceVersion",
                      "nameLocation": "9586:13:87",
                      "nodeType": "VariableDeclaration",
                      "scope": 53751,
                      "src": "9579:20:87",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      },
                      "typeName": {
                        "id": 53511,
                        "name": "uint16",
                        "nodeType": "ElementaryTypeName",
                        "src": "9579:6:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53517,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 53515,
                        "name": "_nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53489,
                        "src": "9633:6:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 53513,
                        "name": "Encoding",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68558,
                        "src": "9603:8:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Encoding_$68558_$",
                          "typeString": "type(library Encoding)"
                        }
                      },
                      "id": 53514,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "decodeVersionedNonce",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 68557,
                      "src": "9603:29:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_uint240_$_t_uint16_$",
                        "typeString": "function (uint256) pure returns (uint240,uint16)"
                      }
                    },
                    "id": 53516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9603:37:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint240_$_t_uint16_$",
                      "typeString": "tuple(uint240,uint16)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9576:64:87"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint16",
                          "typeString": "uint16"
                        },
                        "id": 53521,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 53519,
                          "name": "_nonceVersion",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 53512,
                          "src": "9658:13:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint16",
                            "typeString": "uint16"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<",
                        "rightExpression": {
                          "hexValue": "32",
                          "id": 53520,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "9674:1:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_2_by_1",
                            "typeString": "int_const 2"
                          },
                          "value": "2"
                        },
                        "src": "9658:17:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43726f7373446f6d61696e4d657373656e6765723a206f6e6c792076657273696f6e2030206f722031206d657373616765732061726520737570706f7274656420617420746869732074696d65",
                        "id": 53522,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9677:79:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_613c3f25ff5f199e4ef46f528b3fdb1db106536665e79fc5664217d5ace5b032",
                          "typeString": "literal_string \"CrossDomainMessenger: only version 0 or 1 messages are supported at this time\""
                        },
                        "value": "CrossDomainMessenger: only version 0 or 1 messages are supported at this time"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_613c3f25ff5f199e4ef46f528b3fdb1db106536665e79fc5664217d5ace5b032",
                          "typeString": "literal_string \"CrossDomainMessenger: only version 0 or 1 messages are supported at this time\""
                        }
                      ],
                      "id": 53518,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9650:7:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 53523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9650:107:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53524,
                  "nodeType": "ExpressionStatement",
                  "src": "9650:107:87"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint16",
                      "typeString": "uint16"
                    },
                    "id": 53527,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 53525,
                      "name": "_nonceVersion",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53512,
                      "src": "9959:13:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint16",
                        "typeString": "uint16"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 53526,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9976:1:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9959:18:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 53548,
                  "nodeType": "IfStatement",
                  "src": "9955:253:87",
                  "trueBody": {
                    "id": 53547,
                    "nodeType": "Block",
                    "src": "9979:229:87",
                    "statements": [
                      {
                        "assignments": [
                          53529
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 53529,
                            "mutability": "mutable",
                            "name": "oldHash",
                            "nameLocation": "10001:7:87",
                            "nodeType": "VariableDeclaration",
                            "scope": 53547,
                            "src": "9993:15:87",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 53528,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "9993:7:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 53537,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 53532,
                              "name": "_target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53493,
                              "src": "10044:7:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 53533,
                              "name": "_sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53491,
                              "src": "10053:7:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 53534,
                              "name": "_message",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53499,
                              "src": "10062:8:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            },
                            {
                              "id": 53535,
                              "name": "_nonce",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53489,
                              "src": "10072:6:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 53530,
                              "name": "Hashing",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68780,
                              "src": "10011:7:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Hashing_$68780_$",
                                "typeString": "type(library Hashing)"
                              }
                            },
                            "id": 53531,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "hashCrossDomainMessageV0",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 68696,
                            "src": "10011:32:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_address_$_t_address_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_bytes32_$",
                              "typeString": "function (address,address,bytes memory,uint256) pure returns (bytes32)"
                            }
                          },
                          "id": 53536,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10011:68:87",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "9993:86:87"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              "id": 53543,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "baseExpression": {
                                  "id": 53539,
                                  "name": "successfulMessages",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 70889,
                                  "src": "10101:18:87",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                    "typeString": "mapping(bytes32 => bool)"
                                  }
                                },
                                "id": 53541,
                                "indexExpression": {
                                  "id": 53540,
                                  "name": "oldHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 53529,
                                  "src": "10120:7:87",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "10101:27:87",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "66616c7365",
                                "id": 53542,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "bool",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "10132:5:87",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                },
                                "value": "false"
                              },
                              "src": "10101:36:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43726f7373446f6d61696e4d657373656e6765723a206c6567616379207769746864726177616c20616c72656164792072656c61796564",
                              "id": 53544,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10139:57:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6165e2ee174e7d1b46e40c12e0e6c5db7f29bb3c3a0e89cfb28416bcac9452e1",
                                "typeString": "literal_string \"CrossDomainMessenger: legacy withdrawal already relayed\""
                              },
                              "value": "CrossDomainMessenger: legacy withdrawal already relayed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_6165e2ee174e7d1b46e40c12e0e6c5db7f29bb3c3a0e89cfb28416bcac9452e1",
                                "typeString": "literal_string \"CrossDomainMessenger: legacy withdrawal already relayed\""
                              }
                            ],
                            "id": 53538,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10093:7:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 53545,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10093:104:87",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 53546,
                        "nodeType": "ExpressionStatement",
                        "src": "10093:104:87"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    53550
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53550,
                      "mutability": "mutable",
                      "name": "versionedHash",
                      "nameLocation": "10386:13:87",
                      "nodeType": "VariableDeclaration",
                      "scope": 53751,
                      "src": "10378:21:87",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 53549,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "10378:7:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53560,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 53553,
                        "name": "_nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53489,
                        "src": "10447:6:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 53554,
                        "name": "_sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53491,
                        "src": "10455:7:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 53555,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53493,
                        "src": "10464:7:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 53556,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53495,
                        "src": "10473:6:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 53557,
                        "name": "_minGasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53497,
                        "src": "10481:12:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 53558,
                        "name": "_message",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53499,
                        "src": "10495:8:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "id": 53551,
                        "name": "Hashing",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68780,
                        "src": "10414:7:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Hashing_$68780_$",
                          "typeString": "type(library Hashing)"
                        }
                      },
                      "id": 53552,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "hashCrossDomainMessageV1",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 68727,
                      "src": "10414:32:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_address_$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (uint256,address,address,uint256,uint256,bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 53559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10414:90:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10378:126:87"
                },
                {
                  "condition": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 53561,
                      "name": "_isOtherMessenger",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        53357
                      ],
                      "referencedDeclaration": 53357,
                      "src": "10519:17:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$_t_bool_$",
                        "typeString": "function () view returns (bool)"
                      }
                    },
                    "id": 53562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10519:19:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 53598,
                    "nodeType": "Block",
                    "src": "10888:115:87",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 53592,
                                "name": "failedMessages",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 70900,
                                "src": "10910:14:87",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                  "typeString": "mapping(bytes32 => bool)"
                                }
                              },
                              "id": 53594,
                              "indexExpression": {
                                "id": 53593,
                                "name": "versionedHash",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 53550,
                                "src": "10925:13:87",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "10910:29:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "43726f7373446f6d61696e4d657373656e6765723a206d6573736167652063616e6e6f74206265207265706c61796564",
                              "id": 53595,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "10941:50:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_bb745f097737872dff3bf4ce31c0d843f5adae9f5f676df9824da91fd83c421d",
                                "typeString": "literal_string \"CrossDomainMessenger: message cannot be replayed\""
                              },
                              "value": "CrossDomainMessenger: message cannot be replayed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_bb745f097737872dff3bf4ce31c0d843f5adae9f5f676df9824da91fd83c421d",
                                "typeString": "literal_string \"CrossDomainMessenger: message cannot be replayed\""
                              }
                            ],
                            "id": 53591,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "10902:7:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 53596,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10902:90:87",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 53597,
                        "nodeType": "ExpressionStatement",
                        "src": "10902:90:87"
                      }
                    ]
                  },
                  "id": 53599,
                  "nodeType": "IfStatement",
                  "src": "10515:488:87",
                  "trueBody": {
                    "id": 53590,
                    "nodeType": "Block",
                    "src": "10540:342:87",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 53567,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "!",
                              "prefix": true,
                              "src": "10695:30:87",
                              "subExpression": {
                                "baseExpression": {
                                  "id": 53564,
                                  "name": "failedMessages",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 70900,
                                  "src": "10696:14:87",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                    "typeString": "mapping(bytes32 => bool)"
                                  }
                                },
                                "id": 53566,
                                "indexExpression": {
                                  "id": 53565,
                                  "name": "versionedHash",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 53550,
                                  "src": "10711:13:87",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "10696:29:87",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 53563,
                            "name": "assert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -3,
                            "src": "10688:6:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_assert_pure$_t_bool_$returns$__$",
                              "typeString": "function (bool) pure"
                            }
                          },
                          "id": 53568,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10688:38:87",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 53569,
                        "nodeType": "ExpressionStatement",
                        "src": "10688:38:87"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 53572,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 53570,
                            "name": "_value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53495,
                            "src": "10744:6:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 53571,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "10753:1:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "10744:10:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 53589,
                        "nodeType": "IfStatement",
                        "src": "10740:132:87",
                        "trueBody": {
                          "id": 53588,
                          "nodeType": "Block",
                          "src": "10756:116:87",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 53579,
                                        "name": "PORTAL",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 53146,
                                        "src": "10826:6:87",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_OptimismPortal_$58425",
                                          "typeString": "contract OptimismPortal"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_OptimismPortal_$58425",
                                          "typeString": "contract OptimismPortal"
                                        }
                                      ],
                                      "id": 53578,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "10818:7:87",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 53577,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "10818:7:87",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 53580,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10818:15:87",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "id": 53583,
                                        "name": "this",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -28,
                                        "src": "10843:4:87",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_L1CrossDomainMessenger_$53753",
                                          "typeString": "contract L1CrossDomainMessenger"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_contract$_L1CrossDomainMessenger_$53753",
                                          "typeString": "contract L1CrossDomainMessenger"
                                        }
                                      ],
                                      "id": 53582,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "10835:7:87",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_address_$",
                                        "typeString": "type(address)"
                                      },
                                      "typeName": {
                                        "id": 53581,
                                        "name": "address",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "10835:7:87",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 53584,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10835:13:87",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 53585,
                                    "name": "_value",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 53495,
                                    "src": "10850:6:87",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 53574,
                                        "name": "nativeTokenAddress",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 53149,
                                        "src": "10781:18:87",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 53573,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 30971,
                                      "src": "10774:6:87",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$30971_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 53575,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "10774:26:87",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$30971",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 53576,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "safeTransferFrom",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 31943,
                                  "src": "10774:43:87",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$30971_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$30971_$",
                                    "typeString": "function (contract IERC20,address,address,uint256)"
                                  }
                                },
                                "id": 53586,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "10774:83:87",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 53587,
                              "nodeType": "ExpressionStatement",
                              "src": "10774:83:87"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 53605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 53602,
                              "name": "_target",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53493,
                              "src": "11050:7:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 53601,
                            "name": "_isUnsafeTarget",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              53381
                            ],
                            "referencedDeclaration": 53381,
                            "src": "11034:15:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 53603,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11034:24:87",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 53604,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11062:5:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "11034:33:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43726f7373446f6d61696e4d657373656e6765723a2063616e6e6f742073656e64206d65737361676520746f20626c6f636b65642073797374656d2061646472657373",
                        "id": 53606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11069:69:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9a217cd91d5c986f3948516e02c31b8cd18c7bbfae68d3da54d71a8829a66cb5",
                          "typeString": "literal_string \"CrossDomainMessenger: cannot send message to blocked system address\""
                        },
                        "value": "CrossDomainMessenger: cannot send message to blocked system address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9a217cd91d5c986f3948516e02c31b8cd18c7bbfae68d3da54d71a8829a66cb5",
                          "typeString": "literal_string \"CrossDomainMessenger: cannot send message to blocked system address\""
                        }
                      ],
                      "id": 53600,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11013:7:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 53607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11013:135:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53608,
                  "nodeType": "ExpressionStatement",
                  "src": "11013:135:87"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 53614,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 53610,
                            "name": "successfulMessages",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70889,
                            "src": "11167:18:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                              "typeString": "mapping(bytes32 => bool)"
                            }
                          },
                          "id": 53612,
                          "indexExpression": {
                            "id": 53611,
                            "name": "versionedHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53550,
                            "src": "11186:13:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11167:33:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 53613,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "11204:5:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "11167:42:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "43726f7373446f6d61696e4d657373656e6765723a206d6573736167652068617320616c7265616479206265656e2072656c61796564",
                        "id": 53615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11211:56:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b63bfd5e0ee046bfdc0487044ba9676f2ee5e11cc19a24dacb9c46682e5c7150",
                          "typeString": "literal_string \"CrossDomainMessenger: message has already been relayed\""
                        },
                        "value": "CrossDomainMessenger: message has already been relayed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b63bfd5e0ee046bfdc0487044ba9676f2ee5e11cc19a24dacb9c46682e5c7150",
                          "typeString": "literal_string \"CrossDomainMessenger: message has already been relayed\""
                        }
                      ],
                      "id": 53609,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11159:7:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 53616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11159:109:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 53617,
                  "nodeType": "ExpressionStatement",
                  "src": "11159:109:87"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 53630,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 53625,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "11961:78:87",
                      "subExpression": {
                        "arguments": [
                          {
                            "id": 53620,
                            "name": "_minGasLimit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53497,
                            "src": "11981:12:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "commonType": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            },
                            "id": 53623,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 53621,
                              "name": "RELAY_RESERVED_GAS",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 70877,
                              "src": "11995:18:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 53622,
                              "name": "RELAY_GAS_CHECK_BUFFER",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 70881,
                              "src": "12016:22:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            },
                            "src": "11995:43:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint64",
                              "typeString": "uint64"
                            }
                          ],
                          "expression": {
                            "id": 53618,
                            "name": "SafeCall",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68984,
                            "src": "11962:8:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_SafeCall_$68984_$",
                              "typeString": "type(library SafeCall)"
                            }
                          },
                          "id": 53619,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "hasMinGas",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 68955,
                          "src": "11962:18:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256,uint256) view returns (bool)"
                          }
                        },
                        "id": 53624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11962:77:87",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 53629,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 53626,
                        "name": "xDomainMsgSender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 70892,
                        "src": "12059:16:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "expression": {
                          "id": 53627,
                          "name": "Constants",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68072,
                          "src": "12079:9:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Constants_$68072_$",
                            "typeString": "type(library Constants)"
                          }
                        },
                        "id": 53628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "DEFAULT_L2_SENDER",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 68030,
                        "src": "12079:27:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "12059:47:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "11961:145:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 53654,
                  "nodeType": "IfStatement",
                  "src": "11944:918:87",
                  "trueBody": {
                    "id": 53653,
                    "nodeType": "Block",
                    "src": "12117:745:87",
                    "statements": [
                      {
                        "expression": {
                          "id": 53635,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 53631,
                              "name": "failedMessages",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 70900,
                              "src": "12131:14:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                "typeString": "mapping(bytes32 => bool)"
                              }
                            },
                            "id": 53633,
                            "indexExpression": {
                              "id": 53632,
                              "name": "versionedHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53550,
                              "src": "12146:13:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "12131:29:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 53634,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12163:4:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "12131:36:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 53636,
                        "nodeType": "ExpressionStatement",
                        "src": "12131:36:87"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 53638,
                              "name": "versionedHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53550,
                              "src": "12207:13:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 53637,
                            "name": "FailedRelayedMessage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70935,
                            "src": "12186:20:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32)"
                            }
                          },
                          "id": 53639,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12186:35:87",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 53640,
                        "nodeType": "EmitStatement",
                        "src": "12181:40:87"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 53645,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 53641,
                              "name": "tx",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -26,
                              "src": "12701:2:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_transaction",
                                "typeString": "tx"
                              }
                            },
                            "id": 53642,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "origin",
                            "nodeType": "MemberAccess",
                            "src": "12701:9:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 53643,
                              "name": "Constants",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68072,
                              "src": "12714:9:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Constants_$68072_$",
                                "typeString": "type(library Constants)"
                              }
                            },
                            "id": 53644,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ESTIMATION_ADDRESS",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 68026,
                            "src": "12714:28:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "12701:41:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 53651,
                        "nodeType": "IfStatement",
                        "src": "12697:135:87",
                        "trueBody": {
                          "id": 53650,
                          "nodeType": "Block",
                          "src": "12744:88:87",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "43726f7373446f6d61696e4d657373656e6765723a206661696c656420746f2072656c6179206d657373616765",
                                    "id": 53647,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "12769:47:87",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c31d7113cd2cbba5d595fec2c0ea3cff3ab3bbe5f2eb02ef2bc82397a0578288",
                                      "typeString": "literal_string \"CrossDomainMessenger: failed to relay message\""
                                    },
                                    "value": "CrossDomainMessenger: failed to relay message"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_c31d7113cd2cbba5d595fec2c0ea3cff3ab3bbe5f2eb02ef2bc82397a0578288",
                                      "typeString": "literal_string \"CrossDomainMessenger: failed to relay message\""
                                    }
                                  ],
                                  "id": 53646,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -19,
                                    -19
                                  ],
                                  "referencedDeclaration": -19,
                                  "src": "12762:6:87",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory) pure"
                                  }
                                },
                                "id": 53648,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12762:55:87",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 53649,
                              "nodeType": "ExpressionStatement",
                              "src": "12762:55:87"
                            }
                          ]
                        }
                      },
                      {
                        "functionReturnParameters": 53502,
                        "id": 53652,
                        "nodeType": "Return",
                        "src": "12845:7:87"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 53657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 53655,
                      "name": "xDomainMsgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70892,
                      "src": "12872:16:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 53656,
                      "name": "_sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53491,
                      "src": "12891:7:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "12872:26:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 53658,
                  "nodeType": "ExpressionStatement",
                  "src": "12872:26:87"
                },
                {
                  "assignments": [
                    53660
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53660,
                      "mutability": "mutable",
                      "name": "approvalStatus",
                      "nameLocation": "12913:14:87",
                      "nodeType": "VariableDeclaration",
                      "scope": 53751,
                      "src": "12908:19:87",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 53659,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "12908:4:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53662,
                  "initialValue": {
                    "hexValue": "74727565",
                    "id": 53661,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "12930:4:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12908:26:87"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 53665,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 53663,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53495,
                      "src": "12948:6:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 53664,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "12958:1:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "12948:11:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 53677,
                  "nodeType": "IfStatement",
                  "src": "12944:110:87",
                  "trueBody": {
                    "id": 53676,
                    "nodeType": "Block",
                    "src": "12961:93:87",
                    "statements": [
                      {
                        "expression": {
                          "id": 53674,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 53666,
                            "name": "approvalStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53660,
                            "src": "12975:14:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 53671,
                                "name": "_target",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 53493,
                                "src": "13027:7:87",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "id": 53672,
                                "name": "_value",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 53495,
                                "src": "13036:6:87",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 53668,
                                    "name": "nativeTokenAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 53149,
                                    "src": "12999:18:87",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 53667,
                                  "name": "IERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30971,
                                  "src": "12992:6:87",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC20_$30971_$",
                                    "typeString": "type(contract IERC20)"
                                  }
                                },
                                "id": 53669,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "12992:26:87",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$30971",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 53670,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "approve",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 30958,
                              "src": "12992:34:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (address,uint256) external returns (bool)"
                              }
                            },
                            "id": 53673,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12992:51:87",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "12975:68:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 53675,
                        "nodeType": "ExpressionStatement",
                        "src": "12975:68:87"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    53679
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 53679,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "13068:7:87",
                      "nodeType": "VariableDeclaration",
                      "scope": 53751,
                      "src": "13063:12:87",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 53678,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "13063:4:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 53690,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 53682,
                        "name": "_target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53493,
                        "src": "13092:7:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 53686,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 53683,
                            "name": "gasleft",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -7,
                            "src": "13101:7:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
                              "typeString": "function () view returns (uint256)"
                            }
                          },
                          "id": 53684,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13101:9:87",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "id": 53685,
                          "name": "RELAY_RESERVED_GAS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 70877,
                          "src": "13113:18:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "src": "13101:30:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 53687,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13133:1:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "id": 53688,
                        "name": "_message",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53499,
                        "src": "13136:8:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "id": 53680,
                        "name": "SafeCall",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68984,
                        "src": "13078:8:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeCall_$68984_$",
                          "typeString": "type(library SafeCall)"
                        }
                      },
                      "id": 53681,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "call",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 68938,
                      "src": "13078:13:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (address,uint256,uint256,bytes memory) returns (bool)"
                      }
                    },
                    "id": 53689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13078:67:87",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13063:82:87"
                },
                {
                  "expression": {
                    "id": 53694,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 53691,
                      "name": "xDomainMsgSender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 70892,
                      "src": "13155:16:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 53692,
                        "name": "Constants",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68072,
                        "src": "13174:9:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Constants_$68072_$",
                          "typeString": "type(library Constants)"
                        }
                      },
                      "id": 53693,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "DEFAULT_L2_SENDER",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 68030,
                      "src": "13174:27:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "13155:46:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 53695,
                  "nodeType": "ExpressionStatement",
                  "src": "13155:46:87"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 53701,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 53698,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 53696,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53495,
                        "src": "13215:6:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 53697,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13225:1:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "13215:11:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "id": 53700,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "!",
                      "prefix": true,
                      "src": "13230:8:87",
                      "subExpression": {
                        "id": 53699,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 53679,
                        "src": "13231:7:87",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "13215:23:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 53713,
                  "nodeType": "IfStatement",
                  "src": "13211:117:87",
                  "trueBody": {
                    "id": 53712,
                    "nodeType": "Block",
                    "src": "13240:88:87",
                    "statements": [
                      {
                        "expression": {
                          "id": 53710,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 53702,
                            "name": "approvalStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 53660,
                            "src": "13254:14:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 53707,
                                "name": "_target",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 53493,
                                "src": "13306:7:87",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "hexValue": "30",
                                "id": 53708,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "13315:1:87",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 53704,
                                    "name": "nativeTokenAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 53149,
                                    "src": "13278:18:87",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 53703,
                                  "name": "IERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 30971,
                                  "src": "13271:6:87",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IERC20_$30971_$",
                                    "typeString": "type(contract IERC20)"
                                  }
                                },
                                "id": 53705,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13271:26:87",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IERC20_$30971",
                                  "typeString": "contract IERC20"
                                }
                              },
                              "id": 53706,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "approve",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 30958,
                              "src": "13271:34:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                "typeString": "function (address,uint256) external returns (bool)"
                              }
                            },
                            "id": 53709,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13271:46:87",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "13254:63:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 53711,
                        "nodeType": "ExpressionStatement",
                        "src": "13254:63:87"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 53716,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 53714,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53679,
                      "src": "13342:7:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "id": 53715,
                      "name": "approvalStatus",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53660,
                      "src": "13353:14:87",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "13342:25:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 53749,
                    "nodeType": "Block",
                    "src": "13488:725:87",
                    "statements": [
                      {
                        "expression": {
                          "id": 53732,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 53728,
                              "name": "failedMessages",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 70900,
                              "src": "13502:14:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                "typeString": "mapping(bytes32 => bool)"
                              }
                            },
                            "id": 53730,
                            "indexExpression": {
                              "id": 53729,
                              "name": "versionedHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53550,
                              "src": "13517:13:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "13502:29:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 53731,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13534:4:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "13502:36:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 53733,
                        "nodeType": "ExpressionStatement",
                        "src": "13502:36:87"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 53735,
                              "name": "versionedHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53550,
                              "src": "13578:13:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 53734,
                            "name": "FailedRelayedMessage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70935,
                            "src": "13557:20:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32)"
                            }
                          },
                          "id": 53736,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13557:35:87",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 53737,
                        "nodeType": "EmitStatement",
                        "src": "13552:40:87"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 53742,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 53738,
                              "name": "tx",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -26,
                              "src": "14072:2:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_transaction",
                                "typeString": "tx"
                              }
                            },
                            "id": 53739,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "origin",
                            "nodeType": "MemberAccess",
                            "src": "14072:9:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 53740,
                              "name": "Constants",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68072,
                              "src": "14085:9:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Constants_$68072_$",
                                "typeString": "type(library Constants)"
                              }
                            },
                            "id": 53741,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ESTIMATION_ADDRESS",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 68026,
                            "src": "14085:28:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "14072:41:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 53748,
                        "nodeType": "IfStatement",
                        "src": "14068:135:87",
                        "trueBody": {
                          "id": 53747,
                          "nodeType": "Block",
                          "src": "14115:88:87",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "hexValue": "43726f7373446f6d61696e4d657373656e6765723a206661696c656420746f2072656c6179206d657373616765",
                                    "id": 53744,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "14140:47:87",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c31d7113cd2cbba5d595fec2c0ea3cff3ab3bbe5f2eb02ef2bc82397a0578288",
                                      "typeString": "literal_string \"CrossDomainMessenger: failed to relay message\""
                                    },
                                    "value": "CrossDomainMessenger: failed to relay message"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_c31d7113cd2cbba5d595fec2c0ea3cff3ab3bbe5f2eb02ef2bc82397a0578288",
                                      "typeString": "literal_string \"CrossDomainMessenger: failed to relay message\""
                                    }
                                  ],
                                  "id": 53743,
                                  "name": "revert",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -19,
                                    -19
                                  ],
                                  "referencedDeclaration": -19,
                                  "src": "14133:6:87",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory) pure"
                                  }
                                },
                                "id": 53745,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14133:55:87",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 53746,
                              "nodeType": "ExpressionStatement",
                              "src": "14133:55:87"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "id": 53750,
                  "nodeType": "IfStatement",
                  "src": "13338:875:87",
                  "trueBody": {
                    "id": 53727,
                    "nodeType": "Block",
                    "src": "13369:113:87",
                    "statements": [
                      {
                        "expression": {
                          "id": 53721,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 53717,
                              "name": "successfulMessages",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 70889,
                              "src": "13383:18:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                                "typeString": "mapping(bytes32 => bool)"
                              }
                            },
                            "id": 53719,
                            "indexExpression": {
                              "id": 53718,
                              "name": "versionedHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53550,
                              "src": "13402:13:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "13383:33:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 53720,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13419:4:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "13383:40:87",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 53722,
                        "nodeType": "ExpressionStatement",
                        "src": "13383:40:87"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 53724,
                              "name": "versionedHash",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 53550,
                              "src": "13457:13:87",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 53723,
                            "name": "RelayedMessage",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 70930,
                            "src": "13442:14:87",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                              "typeString": "function (bytes32)"
                            }
                          },
                          "id": 53725,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13442:29:87",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 53726,
                        "nodeType": "EmitStatement",
                        "src": "13437:34:87"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              71216
            ],
            "documentation": {
              "id": 53487,
              "nodeType": "StructuredDocumentation",
              "src": "8554:686:87",
              "text": "@notice Relays a message that was sent by the other CrossDomainMessenger contract. Can only\n         be executed via cross-chain call from the other messenger OR if the message was\n         already received once and is currently being replayed.\n @param _nonce       Nonce of the message being relayed.\n @param _sender      Address of the user who sent the message.\n @param _target      Address that the message is targeted at.\n @param _value       Native token value to send with the message.\n @param _minGasLimit Minimum amount of gas that the message can be executed with.\n @param _message     Message to send to the target."
            },
            "functionSelector": "d764ad0b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "relayMessage",
            "nameLocation": "9254:12:87",
            "overrides": {
              "id": 53501,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9475:8:87"
            },
            "parameters": {
              "id": 53500,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 53489,
                  "mutability": "mutable",
                  "name": "_nonce",
                  "nameLocation": "9284:6:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 53752,
                  "src": "9276:14:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53488,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9276:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53491,
                  "mutability": "mutable",
                  "name": "_sender",
                  "nameLocation": "9308:7:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 53752,
                  "src": "9300:15:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53490,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9300:7:87",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53493,
                  "mutability": "mutable",
                  "name": "_target",
                  "nameLocation": "9333:7:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 53752,
                  "src": "9325:15:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 53492,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9325:7:87",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53495,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "9358:6:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 53752,
                  "src": "9350:14:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53494,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9350:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53497,
                  "mutability": "mutable",
                  "name": "_minGasLimit",
                  "nameLocation": "9382:12:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 53752,
                  "src": "9374:20:87",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 53496,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9374:7:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 53499,
                  "mutability": "mutable",
                  "name": "_message",
                  "nameLocation": "9419:8:87",
                  "nodeType": "VariableDeclaration",
                  "scope": 53752,
                  "src": "9404:23:87",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 53498,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9404:5:87",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9266:167:87"
            },
            "returnParameters": {
              "id": 53502,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9488:0:87"
            },
            "scope": 53753,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 53133,
              "name": "CrossDomainMessenger",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 71321,
              "src": "1095:20:87"
            },
            "id": 53134,
            "nodeType": "InheritanceSpecifier",
            "src": "1095:20:87"
          },
          {
            "baseName": {
              "id": 53135,
              "name": "OnApprove",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 57527,
              "src": "1117:9:87"
            },
            "id": 53136,
            "nodeType": "InheritanceSpecifier",
            "src": "1117:9:87"
          },
          {
            "baseName": {
              "id": 53137,
              "name": "ISemver",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 71843,
              "src": "1128:7:87"
            },
            "id": 53138,
            "nodeType": "InheritanceSpecifier",
            "src": "1128:7:87"
          }
        ],
        "canonicalName": "L1CrossDomainMessenger",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 53132,
          "nodeType": "StructuredDocumentation",
          "src": "732:328:87",
          "text": "@custom:proxied\n @title L1CrossDomainMessenger\n @notice The L1CrossDomainMessenger is a message passing interface between L1 and L2 responsible\n         for sending and receiving data on the L1 side. Users are encouraged to use this\n         interface instead of interacting with lower-level contracts directly."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          53753,
          71843,
          57527,
          71321,
          70842,
          29680,
          70801
        ],
        "name": "L1CrossDomainMessenger",
        "nameLocation": "1069:22:87",
        "scope": 53754,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 87
}