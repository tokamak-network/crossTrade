{
  "abi": [
    {
      "inputs": [],
      "name": "AlreadyExists",
      "type": "error"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "uid",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "registerer",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            },
            {
              "internalType": "contract ISchemaResolver",
              "name": "resolver",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "revocable",
              "type": "bool"
            },
            {
              "internalType": "string",
              "name": "schema",
              "type": "string"
            }
          ],
          "indexed": false,
          "internalType": "struct SchemaRecord",
          "name": "schema",
          "type": "tuple"
        }
      ],
      "name": "Registered",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "uid",
          "type": "bytes32"
        }
      ],
      "name": "getSchema",
      "outputs": [
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            },
            {
              "internalType": "contract ISchemaResolver",
              "name": "resolver",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "revocable",
              "type": "bool"
            },
            {
              "internalType": "string",
              "name": "schema",
              "type": "string"
            }
          ],
          "internalType": "struct SchemaRecord",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "schema",
          "type": "string"
        },
        {
          "internalType": "contract ISchemaResolver",
          "name": "resolver",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "revocable",
          "type": "bool"
        }
      ],
      "name": "register",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b506107fe806100206000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c806354fd4d501461004657806360d7a27814610098578063a2ea7c6e146100b9575b600080fd5b6100826040518060400160405280600581526020017f312e332e3000000000000000000000000000000000000000000000000000000081525081565b60405161008f9190610473565b60405180910390f35b6100ab6100a636600461048d565b6100d9565b60405190815260200161008f565b6100cc6100c736600461053f565b61029d565b60405161008f9190610558565b60008060405180608001604052806000801b81526020018573ffffffffffffffffffffffffffffffffffffffff168152602001841515815260200187878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509390945250929350915061015b9050826103c5565b600081815260208190526040902054909150156101a4576040517f23369fa600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80825260008181526020818152604091829020845181559084015160018201805493860151151574010000000000000000000000000000000000000000027fffffffffffffffffffffff00000000000000000000000000000000000000000090941673ffffffffffffffffffffffffffffffffffffffff9092169190911792909217909155606083015183919060028201906102409082610682565b509050503373ffffffffffffffffffffffffffffffffffffffff16817fd0b86852e21f9e5fa4bc3b0cff9757ffe243d50c4b43968a42202153d651ea5e8460405161028b9190610558565b60405180910390a39695505050505050565b604080516080810182526000808252602082018190529181019190915260608082015260008281526020818152604091829020825160808101845281548152600182015473ffffffffffffffffffffffffffffffffffffffff8116938201939093527401000000000000000000000000000000000000000090920460ff1615159282019290925260028201805491929160608401919061033c906105e0565b80601f0160208091040260200160405190810160405280929190818152602001828054610368906105e0565b80156103b55780601f1061038a576101008083540402835291602001916103b5565b820191906000526020600020905b81548152906001019060200180831161039857829003601f168201915b5050505050815250509050919050565b60008160600151826020015183604001516040516020016103e89392919061079c565b604051602081830303815290604052805190602001209050919050565b60005b83811015610420578181015183820152602001610408565b50506000910152565b60008151808452610441816020860160208601610405565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006104866020830184610429565b9392505050565b600080600080606085870312156104a357600080fd5b843567ffffffffffffffff808211156104bb57600080fd5b818701915087601f8301126104cf57600080fd5b8135818111156104de57600080fd5b8860208285010111156104f057600080fd5b6020928301965094505085013573ffffffffffffffffffffffffffffffffffffffff8116811461051f57600080fd5b91506040850135801515811461053457600080fd5b939692955090935050565b60006020828403121561055157600080fd5b5035919050565b602081528151602082015273ffffffffffffffffffffffffffffffffffffffff6020830151166040820152604082015115156060820152600060608301516080808401526105a960a0840182610429565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600181811c908216806105f457607f821691505b60208210810361062d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b601f82111561067d57600081815260208120601f850160051c8101602086101561065a5750805b601f850160051c820191505b8181101561067957828155600101610666565b5050505b505050565b815167ffffffffffffffff81111561069c5761069c6105b1565b6106b0816106aa84546105e0565b84610633565b602080601f83116001811461070357600084156106cd5750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b178555610679565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b8281101561075057888601518255948401946001909101908401610731565b508582101561078c57878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b600084516107ae818460208901610405565b60609490941b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000169190930190815290151560f81b60148201526015019291505056fea164736f6c6343000813000a",
    "sourceMap": "518:1503:27:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c806354fd4d501461004657806360d7a27814610098578063a2ea7c6e146100b9575b600080fd5b6100826040518060400160405280600581526020017f312e332e3000000000000000000000000000000000000000000000000000000081525081565b60405161008f9190610473565b60405180910390f35b6100ab6100a636600461048d565b6100d9565b60405190815260200161008f565b6100cc6100c736600461053f565b61029d565b60405161008f9190610558565b60008060405180608001604052806000801b81526020018573ffffffffffffffffffffffffffffffffffffffff168152602001841515815260200187878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052509390945250929350915061015b9050826103c5565b600081815260208190526040902054909150156101a4576040517f23369fa600000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b80825260008181526020818152604091829020845181559084015160018201805493860151151574010000000000000000000000000000000000000000027fffffffffffffffffffffff00000000000000000000000000000000000000000090941673ffffffffffffffffffffffffffffffffffffffff9092169190911792909217909155606083015183919060028201906102409082610682565b509050503373ffffffffffffffffffffffffffffffffffffffff16817fd0b86852e21f9e5fa4bc3b0cff9757ffe243d50c4b43968a42202153d651ea5e8460405161028b9190610558565b60405180910390a39695505050505050565b604080516080810182526000808252602082018190529181019190915260608082015260008281526020818152604091829020825160808101845281548152600182015473ffffffffffffffffffffffffffffffffffffffff8116938201939093527401000000000000000000000000000000000000000090920460ff1615159282019290925260028201805491929160608401919061033c906105e0565b80601f0160208091040260200160405190810160405280929190818152602001828054610368906105e0565b80156103b55780601f1061038a576101008083540402835291602001916103b5565b820191906000526020600020905b81548152906001019060200180831161039857829003601f168201915b5050505050815250509050919050565b60008160600151826020015183604001516040516020016103e89392919061079c565b604051602081830303815290604052805190602001209050919050565b60005b83811015610420578181015183820152602001610408565b50506000910152565b60008151808452610441816020860160208601610405565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006104866020830184610429565b9392505050565b600080600080606085870312156104a357600080fd5b843567ffffffffffffffff808211156104bb57600080fd5b818701915087601f8301126104cf57600080fd5b8135818111156104de57600080fd5b8860208285010111156104f057600080fd5b6020928301965094505085013573ffffffffffffffffffffffffffffffffffffffff8116811461051f57600080fd5b91506040850135801515811461053457600080fd5b939692955090935050565b60006020828403121561055157600080fd5b5035919050565b602081528151602082015273ffffffffffffffffffffffffffffffffffffffff6020830151166040820152604082015115156060820152600060608301516080808401526105a960a0840182610429565b949350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600181811c908216806105f457607f821691505b60208210810361062d577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b601f82111561067d57600081815260208120601f850160051c8101602086101561065a5750805b601f850160051c820191505b8181101561067957828155600101610666565b5050505b505050565b815167ffffffffffffffff81111561069c5761069c6105b1565b6106b0816106aa84546105e0565b84610633565b602080601f83116001811461070357600084156106cd5750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b178555610679565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b8281101561075057888601518255948401946001909101908401610731565b508582101561078c57878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b600084516107ae818460208901610405565b60609490941b7fffffffffffffffffffffffffffffffffffffffff000000000000000000000000169190930190815290151560f81b60148201526015019291505056fea164736f6c6343000813000a",
    "sourceMap": "518:1503:27:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;895:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;978:554;;;;;;:::i;:::-;;:::i;:::-;;;1969:25:32;;;1957:2;1942:18;978:554:27;1823:177:32;1574:114:27;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;978:554::-;1080:7;1099:32;1146:90;;;;;;;;137:1:23;1166:9:27;;1146:90;;;;1203:8;1146:90;;;;;;1224:9;1146:90;;;;;;1185:6;;1146:90;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1146:90:27;;;;-1:-1:-1;1099:137:27;;-1:-1:-1;1146:90:27;-1:-1:-1;1261:21:27;;-1:-1:-1;1099:137:27;1261:7;:21::i;:::-;137:1:23;1296:14:27;;;;;;;;;;:18;1247:35;;-1:-1:-1;1296:31:27;1292:84;;1350:15;;;;;;;;;;;;;;1292:84;1386:22;;;:16;1418:14;;;;;;;;;;;;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1386:12;;1418:14;:29;;;;;;;;:::i;:::-;;;;;1479:10;1463:41;;1474:3;1463:41;1491:12;1463:41;;;;;;:::i;:::-;;;;;;;;1522:3;978:554;-1:-1:-1;;;;;;978:554:27:o;1574:114::-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1667:9:27;:14;;;;;;;;;;;;1660:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1667:14;1660:21;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1574:114;;;:::o;1818:201::-;1891:7;1944:12;:19;;;1965:12;:21;;;1988:12;:22;;;1927:84;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1917:95;;;;;;1910:102;;1818:201;;;:::o;14:250:32:-;99:1;109:113;123:6;120:1;117:13;109:113;;;199:11;;;193:18;180:11;;;173:39;145:2;138:10;109:113;;;-1:-1:-1;;256:1:32;238:16;;231:27;14:250::o;269:330::-;311:3;349:5;343:12;376:6;371:3;364:19;392:76;461:6;454:4;449:3;445:14;438:4;431:5;427:16;392:76;:::i;:::-;513:2;501:15;518:66;497:88;488:98;;;;588:4;484:109;;269:330;-1:-1:-1;;269:330:32:o;604:220::-;753:2;742:9;735:21;716:4;773:45;814:2;803:9;799:18;791:6;773:45;:::i;:::-;765:53;604:220;-1:-1:-1;;;604:220:32:o;829:989::-;940:6;948;956;964;1017:2;1005:9;996:7;992:23;988:32;985:52;;;1033:1;1030;1023:12;985:52;1073:9;1060:23;1102:18;1143:2;1135:6;1132:14;1129:34;;;1159:1;1156;1149:12;1129:34;1197:6;1186:9;1182:22;1172:32;;1242:7;1235:4;1231:2;1227:13;1223:27;1213:55;;1264:1;1261;1254:12;1213:55;1304:2;1291:16;1330:2;1322:6;1319:14;1316:34;;;1346:1;1343;1336:12;1316:34;1393:7;1386:4;1377:6;1373:2;1369:15;1365:26;1362:39;1359:59;;;1414:1;1411;1404:12;1359:59;1445:4;1437:13;;;;-1:-1:-1;1469:6:32;-1:-1:-1;;1510:20:32;;1497:34;1571:42;1560:54;;1550:65;;1540:93;;1629:1;1626;1619:12;1540:93;1652:5;-1:-1:-1;1709:2:32;1694:18;;1681:32;1751:15;;1744:23;1732:36;;1722:64;;1782:1;1779;1772:12;1722:64;829:989;;;;-1:-1:-1;829:989:32;;-1:-1:-1;;829:989:32:o;2005:180::-;2064:6;2117:2;2105:9;2096:7;2092:23;2088:32;2085:52;;;2133:1;2130;2123:12;2085:52;-1:-1:-1;2156:23:32;;2005:180;-1:-1:-1;2005:180:32:o;2190:596::-;2381:2;2370:9;2363:21;2426:6;2420:13;2415:2;2404:9;2400:18;2393:41;2498:42;2492:2;2484:6;2480:15;2474:22;2470:71;2465:2;2454:9;2450:18;2443:99;2610:2;2602:6;2598:15;2592:22;2585:30;2578:38;2573:2;2562:9;2558:18;2551:66;2344:4;2664:2;2656:6;2652:15;2646:22;2706:4;2699;2688:9;2684:20;2677:34;2728:52;2775:3;2764:9;2760:19;2746:12;2728:52;:::i;:::-;2720:60;2190:596;-1:-1:-1;;;;2190:596:32:o;2791:184::-;2843:77;2840:1;2833:88;2940:4;2937:1;2930:15;2964:4;2961:1;2954:15;2980:437;3059:1;3055:12;;;;3102;;;3123:61;;3177:4;3169:6;3165:17;3155:27;;3123:61;3230:2;3222:6;3219:14;3199:18;3196:38;3193:218;;3267:77;3264:1;3257:88;3368:4;3365:1;3358:15;3396:4;3393:1;3386:15;3193:218;;2980:437;;;:::o;3548:545::-;3650:2;3645:3;3642:11;3639:448;;;3686:1;3711:5;3707:2;3700:17;3756:4;3752:2;3742:19;3826:2;3814:10;3810:19;3807:1;3803:27;3797:4;3793:38;3862:4;3850:10;3847:20;3844:47;;;-1:-1:-1;3885:4:32;3844:47;3940:2;3935:3;3931:12;3928:1;3924:20;3918:4;3914:31;3904:41;;3995:82;4013:2;4006:5;4003:13;3995:82;;;4058:17;;;4039:1;4028:13;3995:82;;;3999:3;;;3639:448;3548:545;;;:::o;4329:1471::-;4455:3;4449:10;4482:18;4474:6;4471:30;4468:56;;;4504:18;;:::i;:::-;4533:97;4623:6;4583:38;4615:4;4609:11;4583:38;:::i;:::-;4577:4;4533:97;:::i;:::-;4685:4;;4749:2;4738:14;;4766:1;4761:782;;;;5587:1;5604:6;5601:89;;;-1:-1:-1;5656:19:32;;;5650:26;5601:89;4235:66;4226:1;4222:11;;;4218:84;4214:89;4204:100;4310:1;4306:11;;;4201:117;5703:81;;4731:1063;;4761:782;3495:1;3488:14;;;3532:4;3519:18;;4809:66;4797:79;;;4974:236;4988:7;4985:1;4982:14;4974:236;;;5077:19;;;5071:26;5056:42;;5169:27;;;;5137:1;5125:14;;;;5004:19;;4974:236;;;4978:3;5238:6;5229:7;5226:19;5223:261;;;5299:19;;;5293:26;5400:66;5382:1;5378:14;;;5394:3;5374:24;5370:97;5366:102;5351:118;5336:134;;5223:261;-1:-1:-1;;;;;5530:1:32;5514:14;;;5510:22;5497:36;;-1:-1:-1;4329:1471:32:o;5805:577::-;6011:3;6049:6;6043:13;6065:66;6124:6;6119:3;6112:4;6104:6;6100:17;6065:66;:::i;:::-;6200:2;6196:15;;;;6213:66;6192:88;6153:16;;;;6178:103;;;6329:14;;6322:22;6317:3;6313:32;6308:2;6297:14;;6290:56;6373:2;6362:14;;5805:577;-1:-1:-1;;5805:577:32:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "getSchema(bytes32)": "a2ea7c6e",
    "register(string,address,bool)": "60d7a278",
    "version()": "54fd4d50"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"AlreadyExists\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"registerer\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"contract ISchemaResolver\",\"name\":\"resolver\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"schema\",\"type\":\"string\"}],\"indexed\":false,\"internalType\":\"struct SchemaRecord\",\"name\":\"schema\",\"type\":\"tuple\"}],\"name\":\"Registered\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"}],\"name\":\"getSchema\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"uid\",\"type\":\"bytes32\"},{\"internalType\":\"contract ISchemaResolver\",\"name\":\"resolver\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"},{\"internalType\":\"string\",\"name\":\"schema\",\"type\":\"string\"}],\"internalType\":\"struct SchemaRecord\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"schema\",\"type\":\"string\"},{\"internalType\":\"contract ISchemaResolver\",\"name\":\"resolver\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"revocable\",\"type\":\"bool\"}],\"name\":\"register\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:proxied\":\"@custom:predeploy 0x4200000000000000000000000000000000000020\",\"events\":{\"Registered(bytes32,address,(bytes32,address,bool,string))\":{\"details\":\"Emitted when a new schema has been registered\",\"params\":{\"registerer\":\"The address of the account used to register the schema.\",\"schema\":\"The schema data.\",\"uid\":\"The schema UID.\"}}},\"kind\":\"dev\",\"methods\":{\"getSchema(bytes32)\":{\"details\":\"Returns an existing schema by UID\",\"params\":{\"uid\":\"The UID of the schema to retrieve.\"},\"returns\":{\"_0\":\"The schema data members.\"}},\"register(string,address,bool)\":{\"details\":\"Submits and reserves a new schema\",\"params\":{\"resolver\":\"An optional schema resolver.\",\"revocable\":\"Whether the schema allows revocations explicitly.\",\"schema\":\"The schema data schema.\"},\"returns\":{\"_0\":\"The UID of the new schema.\"}}},\"stateVariables\":{\"version\":{\"custom:semver\":\"1.3.0\"}},\"title\":\"SchemaRegistry\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"version()\":{\"notice\":\"Semantic version.\"}},\"notice\":\"The global attestation schemas for the Ethereum Attestation Service protocol.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/EAS/SchemaRegistry.sol\":\"SchemaRegistry\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@cwia/=lib/clones-with-immutable-args/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/solmate/\",\":clones-with-immutable-args/=lib/clones-with-immutable-args/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"src/EAS/Common.sol\":{\"keccak256\":\"0xf9ddc182aaf50d620d3cbca8037ee32ae5062bfc495524f91b677668176f9309\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef8a29db6fb14f26b81e3ccc33f96ee25395383da00933af8799342260e76efe\",\"dweb:/ipfs/QmQc3WmVZhpoRcNsFMD5Jcw2vR4HidX4NQhMCtAvmNLMJd\"]},\"src/EAS/ISchemaRegistry.sol\":{\"keccak256\":\"0x68385349bbe43887f9c2541b6fddebaab309e5401e31ac46081460a812a2127b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://767a618229f8e5fc4dd4f268a2e5f545e249039032ca17772dda206032c55125\",\"dweb:/ipfs/QmWQTxkUHJtZxYHa3MBCLGcm8f5Kxc2saDYPifKEdCiquq\"]},\"src/EAS/SchemaRegistry.sol\":{\"keccak256\":\"0xce55204139cfaede75d511e372e94fdb17a8b03bcff87bed34ddeaa31b123fdd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f96648cea0c4567e08ffaf5f1b96b35b61ccfe01e9f30c27c89d3c472a87bb68\",\"dweb:/ipfs/Qmdep2mSAGNwxtbMEUGmH5SMPGP4fEDGM2yeJc8fk6rQHT\"]},\"src/EAS/resolver/ISchemaResolver.sol\":{\"keccak256\":\"0xf4712a6685599bd284b0c3808e7f6e08ab5e28919647404f26ca372917ddd000\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://17b31b0109cd3c1a1550738b24aa77541cc48b2ade5189bcec7808c9c9ce2c61\",\"dweb:/ipfs/QmeyKMMWsgQBeJkpr1Uugxw9bpg6oCjptyLmbR2TUqRLHB\"]},\"src/universal/ISemver.sol\":{\"keccak256\":\"0xba34562a8026f59886d2e07d1d58d90b9691d00e0788c6263cef6c22740cab44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0826f998632f83c103c3085bf2e872db79a69022b6d2e0444c83a64ca5283c2a\",\"dweb:/ipfs/QmcJ7PNqkAfKqbjFGRordtAg1v9DvcBSKvdTkVvciLyvQR\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "type": "error",
          "name": "AlreadyExists"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "registerer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "struct SchemaRecord",
              "name": "schema",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                },
                {
                  "internalType": "contract ISchemaResolver",
                  "name": "resolver",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "revocable",
                  "type": "bool"
                },
                {
                  "internalType": "string",
                  "name": "schema",
                  "type": "string"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Registered",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "uid",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getSchema",
          "outputs": [
            {
              "internalType": "struct SchemaRecord",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "uid",
                  "type": "bytes32"
                },
                {
                  "internalType": "contract ISchemaResolver",
                  "name": "resolver",
                  "type": "address"
                },
                {
                  "internalType": "bool",
                  "name": "revocable",
                  "type": "bool"
                },
                {
                  "internalType": "string",
                  "name": "schema",
                  "type": "string"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "schema",
              "type": "string"
            },
            {
              "internalType": "contract ISchemaResolver",
              "name": "resolver",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "revocable",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "register",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "version",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "getSchema(bytes32)": {
            "details": "Returns an existing schema by UID",
            "params": {
              "uid": "The UID of the schema to retrieve."
            },
            "returns": {
              "_0": "The schema data members."
            }
          },
          "register(string,address,bool)": {
            "details": "Submits and reserves a new schema",
            "params": {
              "resolver": "An optional schema resolver.",
              "revocable": "Whether the schema allows revocations explicitly.",
              "schema": "The schema data schema."
            },
            "returns": {
              "_0": "The UID of the new schema."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "version()": {
            "notice": "Semantic version."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@cwia/=lib/clones-with-immutable-args/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@rari-capital/solmate/=lib/solmate/",
        "clones-with-immutable-args/=lib/clones-with-immutable-args/src/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "safe-contracts/=lib/safe-contracts/contracts/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 999999
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "src/EAS/SchemaRegistry.sol": "SchemaRegistry"
      },
      "libraries": {}
    },
    "sources": {
      "src/EAS/Common.sol": {
        "keccak256": "0xf9ddc182aaf50d620d3cbca8037ee32ae5062bfc495524f91b677668176f9309",
        "urls": [
          "bzz-raw://ef8a29db6fb14f26b81e3ccc33f96ee25395383da00933af8799342260e76efe",
          "dweb:/ipfs/QmQc3WmVZhpoRcNsFMD5Jcw2vR4HidX4NQhMCtAvmNLMJd"
        ],
        "license": "MIT"
      },
      "src/EAS/ISchemaRegistry.sol": {
        "keccak256": "0x68385349bbe43887f9c2541b6fddebaab309e5401e31ac46081460a812a2127b",
        "urls": [
          "bzz-raw://767a618229f8e5fc4dd4f268a2e5f545e249039032ca17772dda206032c55125",
          "dweb:/ipfs/QmWQTxkUHJtZxYHa3MBCLGcm8f5Kxc2saDYPifKEdCiquq"
        ],
        "license": "MIT"
      },
      "src/EAS/SchemaRegistry.sol": {
        "keccak256": "0xce55204139cfaede75d511e372e94fdb17a8b03bcff87bed34ddeaa31b123fdd",
        "urls": [
          "bzz-raw://f96648cea0c4567e08ffaf5f1b96b35b61ccfe01e9f30c27c89d3c472a87bb68",
          "dweb:/ipfs/Qmdep2mSAGNwxtbMEUGmH5SMPGP4fEDGM2yeJc8fk6rQHT"
        ],
        "license": "MIT"
      },
      "src/EAS/resolver/ISchemaResolver.sol": {
        "keccak256": "0xf4712a6685599bd284b0c3808e7f6e08ab5e28919647404f26ca372917ddd000",
        "urls": [
          "bzz-raw://17b31b0109cd3c1a1550738b24aa77541cc48b2ade5189bcec7808c9c9ce2c61",
          "dweb:/ipfs/QmeyKMMWsgQBeJkpr1Uugxw9bpg6oCjptyLmbR2TUqRLHB"
        ],
        "license": "MIT"
      },
      "src/universal/ISemver.sol": {
        "keccak256": "0xba34562a8026f59886d2e07d1d58d90b9691d00e0788c6263cef6c22740cab44",
        "urls": [
          "bzz-raw://0826f998632f83c103c3085bf2e872db79a69022b6d2e0444c83a64ca5283c2a",
          "dweb:/ipfs/QmcJ7PNqkAfKqbjFGRordtAg1v9DvcBSKvdTkVvciLyvQR"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 30754,
        "contract": "src/EAS/SchemaRegistry.sol:SchemaRegistry",
        "label": "_registry",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_bytes32,t_struct(SchemaRecord)30696_storage)"
      },
      {
        "astId": 30760,
        "contract": "src/EAS/SchemaRegistry.sol:SchemaRegistry",
        "label": "__gap",
        "offset": 0,
        "slot": "1",
        "type": "t_array(t_uint256)49_storage"
      }
    ],
    "types": {
      "t_array(t_uint256)49_storage": {
        "encoding": "inplace",
        "label": "uint256[49]",
        "numberOfBytes": "1568",
        "base": "t_uint256"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_contract(ISchemaResolver)31262": {
        "encoding": "inplace",
        "label": "contract ISchemaResolver",
        "numberOfBytes": "20"
      },
      "t_mapping(t_bytes32,t_struct(SchemaRecord)30696_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct SchemaRecord)",
        "numberOfBytes": "32",
        "value": "t_struct(SchemaRecord)30696_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(SchemaRecord)30696_storage": {
        "encoding": "inplace",
        "label": "struct SchemaRecord",
        "numberOfBytes": "96",
        "members": [
          {
            "astId": 30688,
            "contract": "src/EAS/SchemaRegistry.sol:SchemaRegistry",
            "label": "uid",
            "offset": 0,
            "slot": "0",
            "type": "t_bytes32"
          },
          {
            "astId": 30691,
            "contract": "src/EAS/SchemaRegistry.sol:SchemaRegistry",
            "label": "resolver",
            "offset": 0,
            "slot": "1",
            "type": "t_contract(ISchemaResolver)31262"
          },
          {
            "astId": 30693,
            "contract": "src/EAS/SchemaRegistry.sol:SchemaRegistry",
            "label": "revocable",
            "offset": 20,
            "slot": "1",
            "type": "t_bool"
          },
          {
            "astId": 30695,
            "contract": "src/EAS/SchemaRegistry.sol:SchemaRegistry",
            "label": "schema",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          }
        ]
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  },
  "userdoc": {
    "version": 1,
    "kind": "user",
    "methods": {
      "version()": {
        "notice": "Semantic version."
      }
    },
    "notice": "The global attestation schemas for the Ethereum Attestation Service protocol."
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "methods": {
      "getSchema(bytes32)": {
        "details": "Returns an existing schema by UID",
        "params": {
          "uid": "The UID of the schema to retrieve."
        },
        "returns": {
          "_0": "The schema data members."
        }
      },
      "register(string,address,bool)": {
        "details": "Submits and reserves a new schema",
        "params": {
          "resolver": "An optional schema resolver.",
          "revocable": "Whether the schema allows revocations explicitly.",
          "schema": "The schema data schema."
        },
        "returns": {
          "_0": "The UID of the new schema."
        }
      }
    },
    "events": {
      "Registered(bytes32,address,(bytes32,address,bool,string))": {
        "details": "Emitted when a new schema has been registered",
        "params": {
          "registerer": "The address of the account used to register the schema.",
          "schema": "The schema data.",
          "uid": "The schema UID."
        }
      }
    },
    "title": "SchemaRegistry"
  },
  "ast": {
    "absolutePath": "src/EAS/SchemaRegistry.sol",
    "id": 30864,
    "exportedSymbols": {
      "EMPTY_UID": [
        28273
      ],
      "ISchemaRegistry": [
        30730
      ],
      "ISchemaResolver": [
        31262
      ],
      "ISemver": [
        31359
      ],
      "MAX_GAP": [
        28319
      ],
      "SchemaRecord": [
        30696
      ],
      "SchemaRegistry": [
        30863
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:1990:27",
    "nodes": [
      {
        "id": 30732,
        "nodeType": "PragmaDirective",
        "src": "32:23:27",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".19"
        ]
      },
      {
        "id": 30734,
        "nodeType": "ImportDirective",
        "src": "57:52:27",
        "nodes": [],
        "absolutePath": "src/universal/ISemver.sol",
        "file": "src/universal/ISemver.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30864,
        "sourceUnit": 31360,
        "symbolAliases": [
          {
            "foreign": {
              "id": 30733,
              "name": "ISemver",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 31359,
              "src": "66:7:27",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 30736,
        "nodeType": "ImportDirective",
        "src": "110:71:27",
        "nodes": [],
        "absolutePath": "src/EAS/resolver/ISchemaResolver.sol",
        "file": "src/EAS/resolver/ISchemaResolver.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30864,
        "sourceUnit": 31263,
        "symbolAliases": [
          {
            "foreign": {
              "id": 30735,
              "name": "ISchemaResolver",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 31262,
              "src": "119:15:27",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 30739,
        "nodeType": "ImportDirective",
        "src": "182:56:27",
        "nodes": [],
        "absolutePath": "src/EAS/Common.sol",
        "file": "src/EAS/Common.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30864,
        "sourceUnit": 28445,
        "symbolAliases": [
          {
            "foreign": {
              "id": 30737,
              "name": "EMPTY_UID",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 28273,
              "src": "191:9:27",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 30738,
              "name": "MAX_GAP",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 28319,
              "src": "202:7:27",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 30742,
        "nodeType": "ImportDirective",
        "src": "239:76:27",
        "nodes": [],
        "absolutePath": "src/EAS/ISchemaRegistry.sol",
        "file": "src/EAS/ISchemaRegistry.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 30864,
        "sourceUnit": 30731,
        "symbolAliases": [
          {
            "foreign": {
              "id": 30740,
              "name": "ISchemaRegistry",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30730,
              "src": "248:15:27",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 30741,
              "name": "SchemaRecord",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30696,
              "src": "265:12:27",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 30863,
        "nodeType": "ContractDefinition",
        "src": "518:1503:27",
        "nodes": [
          {
            "id": 30749,
            "nodeType": "ErrorDefinition",
            "src": "576:22:27",
            "nodes": [],
            "errorSelector": "23369fa6",
            "name": "AlreadyExists",
            "nameLocation": "582:13:27",
            "parameters": {
              "id": 30748,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "595:2:27"
            }
          },
          {
            "id": 30754,
            "nodeType": "VariableDeclaration",
            "src": "668:67:27",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "_registry",
            "nameLocation": "726:9:27",
            "scope": 30863,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_SchemaRecord_$30696_storage_$",
              "typeString": "mapping(bytes32 => struct SchemaRecord)"
            },
            "typeName": {
              "id": 30753,
              "keyName": "uid",
              "keyNameLocation": "684:3:27",
              "keyType": {
                "id": 30750,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "676:7:27",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "668:49:27",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_SchemaRecord_$30696_storage_$",
                "typeString": "mapping(bytes32 => struct SchemaRecord)"
              },
              "valueName": "schemaRecord",
              "valueNameLocation": "704:12:27",
              "valueType": {
                "id": 30752,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 30751,
                  "name": "SchemaRecord",
                  "nameLocations": [
                    "691:12:27"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 30696,
                  "src": "691:12:27"
                },
                "referencedDeclaration": 30696,
                "src": "691:12:27",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_SchemaRecord_$30696_storage_ptr",
                  "typeString": "struct SchemaRecord"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 30760,
            "nodeType": "VariableDeclaration",
            "src": "791:34:27",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "__gap",
            "nameLocation": "820:5:27",
            "scope": 30863,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$49_storage",
              "typeString": "uint256[49]"
            },
            "typeName": {
              "baseType": {
                "id": 30755,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "791:7:27",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 30759,
              "length": {
                "commonType": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                },
                "id": 30758,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "leftExpression": {
                  "id": 30756,
                  "name": "MAX_GAP",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 28319,
                  "src": "799:7:27",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  }
                },
                "nodeType": "BinaryOperation",
                "operator": "-",
                "rightExpression": {
                  "hexValue": "31",
                  "id": 30757,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "809:1:27",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_1_by_1",
                    "typeString": "int_const 1"
                  },
                  "value": "1"
                },
                "src": "799:11:27",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint32",
                  "typeString": "uint32"
                }
              },
              "nodeType": "ArrayTypeName",
              "src": "791:20:27",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
                "typeString": "uint256[49]"
              }
            },
            "visibility": "private"
          },
          {
            "id": 30764,
            "nodeType": "VariableDeclaration",
            "src": "895:40:27",
            "nodes": [],
            "baseFunctions": [
              31358
            ],
            "constant": true,
            "documentation": {
              "id": 30761,
              "nodeType": "StructuredDocumentation",
              "src": "832:58:27",
              "text": "@notice Semantic version.\n @custom:semver 1.3.0"
            },
            "functionSelector": "54fd4d50",
            "mutability": "constant",
            "name": "version",
            "nameLocation": "918:7:27",
            "scope": 30863,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 30762,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "895:6:27",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "312e332e30",
              "id": 30763,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "928:7:27",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_6a08c3e203132c561752255a4d52ffae85bb9c5d33cb3291520dea1b84356389",
                "typeString": "literal_string \"1.3.0\""
              },
              "value": "1.3.0"
            },
            "visibility": "public"
          },
          {
            "id": 30826,
            "nodeType": "FunctionDefinition",
            "src": "978:554:27",
            "nodes": [],
            "body": {
              "id": 30825,
              "nodeType": "Block",
              "src": "1089:443:27",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    30779
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30779,
                      "mutability": "mutable",
                      "name": "schemaRecord",
                      "nameLocation": "1119:12:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 30825,
                      "src": "1099:32:27",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SchemaRecord_$30696_memory_ptr",
                        "typeString": "struct SchemaRecord"
                      },
                      "typeName": {
                        "id": 30778,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 30777,
                          "name": "SchemaRecord",
                          "nameLocations": [
                            "1099:12:27"
                          ],
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 30696,
                          "src": "1099:12:27"
                        },
                        "referencedDeclaration": 30696,
                        "src": "1099:12:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SchemaRecord_$30696_storage_ptr",
                          "typeString": "struct SchemaRecord"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30786,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 30781,
                        "name": "EMPTY_UID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 28273,
                        "src": "1166:9:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 30782,
                        "name": "schema",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30767,
                        "src": "1185:6:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 30783,
                        "name": "resolver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30770,
                        "src": "1203:8:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_ISchemaResolver_$31262",
                          "typeString": "contract ISchemaResolver"
                        }
                      },
                      {
                        "id": 30784,
                        "name": "revocable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30772,
                        "src": "1224:9:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_contract$_ISchemaResolver_$31262",
                          "typeString": "contract ISchemaResolver"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 30780,
                      "name": "SchemaRecord",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30696,
                      "src": "1146:12:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_SchemaRecord_$30696_storage_ptr_$",
                        "typeString": "type(struct SchemaRecord storage pointer)"
                      }
                    },
                    "id": 30785,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "nameLocations": [
                      "1161:3:27",
                      "1177:6:27",
                      "1193:8:27",
                      "1213:9:27"
                    ],
                    "names": [
                      "uid",
                      "schema",
                      "resolver",
                      "revocable"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "1146:90:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SchemaRecord_$30696_memory_ptr",
                      "typeString": "struct SchemaRecord memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1099:137:27"
                },
                {
                  "assignments": [
                    30788
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 30788,
                      "mutability": "mutable",
                      "name": "uid",
                      "nameLocation": "1255:3:27",
                      "nodeType": "VariableDeclaration",
                      "scope": 30825,
                      "src": "1247:11:27",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 30787,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1247:7:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 30792,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 30790,
                        "name": "schemaRecord",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30779,
                        "src": "1269:12:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SchemaRecord_$30696_memory_ptr",
                          "typeString": "struct SchemaRecord memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_SchemaRecord_$30696_memory_ptr",
                          "typeString": "struct SchemaRecord memory"
                        }
                      ],
                      "id": 30789,
                      "name": "_getUID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30862,
                      "src": "1261:7:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_SchemaRecord_$30696_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (struct SchemaRecord memory) pure returns (bytes32)"
                      }
                    },
                    "id": 30791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1261:21:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1247:35:27"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    },
                    "id": 30798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "baseExpression": {
                          "id": 30793,
                          "name": "_registry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30754,
                          "src": "1296:9:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_SchemaRecord_$30696_storage_$",
                            "typeString": "mapping(bytes32 => struct SchemaRecord storage ref)"
                          }
                        },
                        "id": 30795,
                        "indexExpression": {
                          "id": 30794,
                          "name": "uid",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 30788,
                          "src": "1306:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1296:14:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SchemaRecord_$30696_storage",
                          "typeString": "struct SchemaRecord storage ref"
                        }
                      },
                      "id": 30796,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberLocation": "1311:3:27",
                      "memberName": "uid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30688,
                      "src": "1296:18:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 30797,
                      "name": "EMPTY_UID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 28273,
                      "src": "1318:9:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1296:31:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 30803,
                  "nodeType": "IfStatement",
                  "src": "1292:84:27",
                  "trueBody": {
                    "id": 30802,
                    "nodeType": "Block",
                    "src": "1329:47:27",
                    "statements": [
                      {
                        "errorCall": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "id": 30799,
                            "name": "AlreadyExists",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 30749,
                            "src": "1350:13:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_error_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 30800,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1350:15:27",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 30801,
                        "nodeType": "RevertStatement",
                        "src": "1343:22:27"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 30808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 30804,
                        "name": "schemaRecord",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30779,
                        "src": "1386:12:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SchemaRecord_$30696_memory_ptr",
                          "typeString": "struct SchemaRecord memory"
                        }
                      },
                      "id": 30806,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberLocation": "1399:3:27",
                      "memberName": "uid",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 30688,
                      "src": "1386:16:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 30807,
                      "name": "uid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30788,
                      "src": "1405:3:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1386:22:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 30809,
                  "nodeType": "ExpressionStatement",
                  "src": "1386:22:27"
                },
                {
                  "expression": {
                    "id": 30814,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 30810,
                        "name": "_registry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30754,
                        "src": "1418:9:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_SchemaRecord_$30696_storage_$",
                          "typeString": "mapping(bytes32 => struct SchemaRecord storage ref)"
                        }
                      },
                      "id": 30812,
                      "indexExpression": {
                        "id": 30811,
                        "name": "uid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30788,
                        "src": "1428:3:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1418:14:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SchemaRecord_$30696_storage",
                        "typeString": "struct SchemaRecord storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 30813,
                      "name": "schemaRecord",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30779,
                      "src": "1435:12:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SchemaRecord_$30696_memory_ptr",
                        "typeString": "struct SchemaRecord memory"
                      }
                    },
                    "src": "1418:29:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SchemaRecord_$30696_storage",
                      "typeString": "struct SchemaRecord storage ref"
                    }
                  },
                  "id": 30815,
                  "nodeType": "ExpressionStatement",
                  "src": "1418:29:27"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 30817,
                        "name": "uid",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30788,
                        "src": "1474:3:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 30818,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "1479:3:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 30819,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberLocation": "1483:6:27",
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "1479:10:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 30820,
                        "name": "schemaRecord",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 30779,
                        "src": "1491:12:27",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SchemaRecord_$30696_memory_ptr",
                          "typeString": "struct SchemaRecord memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_SchemaRecord_$30696_memory_ptr",
                          "typeString": "struct SchemaRecord memory"
                        }
                      ],
                      "id": 30816,
                      "name": "Registered",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30707,
                      "src": "1463:10:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_struct$_SchemaRecord_$30696_memory_ptr_$returns$__$",
                        "typeString": "function (bytes32,address,struct SchemaRecord memory)"
                      }
                    },
                    "id": 30821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1463:41:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 30822,
                  "nodeType": "EmitStatement",
                  "src": "1458:46:27"
                },
                {
                  "expression": {
                    "id": 30823,
                    "name": "uid",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 30788,
                    "src": "1522:3:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 30776,
                  "id": 30824,
                  "nodeType": "Return",
                  "src": "1515:10:27"
                }
              ]
            },
            "baseFunctions": [
              30720
            ],
            "documentation": {
              "id": 30765,
              "nodeType": "StructuredDocumentation",
              "src": "942:31:27",
              "text": "@inheritdoc ISchemaRegistry"
            },
            "functionSelector": "60d7a278",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "register",
            "nameLocation": "987:8:27",
            "parameters": {
              "id": 30773,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30767,
                  "mutability": "mutable",
                  "name": "schema",
                  "nameLocation": "1012:6:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 30826,
                  "src": "996:22:27",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 30766,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "996:6:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30770,
                  "mutability": "mutable",
                  "name": "resolver",
                  "nameLocation": "1036:8:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 30826,
                  "src": "1020:24:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISchemaResolver_$31262",
                    "typeString": "contract ISchemaResolver"
                  },
                  "typeName": {
                    "id": 30769,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 30768,
                      "name": "ISchemaResolver",
                      "nameLocations": [
                        "1020:15:27"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 31262,
                      "src": "1020:15:27"
                    },
                    "referencedDeclaration": 31262,
                    "src": "1020:15:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISchemaResolver_$31262",
                      "typeString": "contract ISchemaResolver"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 30772,
                  "mutability": "mutable",
                  "name": "revocable",
                  "nameLocation": "1051:9:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 30826,
                  "src": "1046:14:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 30771,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1046:4:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "995:66:27"
            },
            "returnParameters": {
              "id": 30776,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30775,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 30826,
                  "src": "1080:7:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 30774,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1080:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1079:9:27"
            },
            "scope": 30863,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 30840,
            "nodeType": "FunctionDefinition",
            "src": "1574:114:27",
            "nodes": [],
            "body": {
              "id": 30839,
              "nodeType": "Block",
              "src": "1650:38:27",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 30835,
                      "name": "_registry",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30754,
                      "src": "1667:9:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_SchemaRecord_$30696_storage_$",
                        "typeString": "mapping(bytes32 => struct SchemaRecord storage ref)"
                      }
                    },
                    "id": 30837,
                    "indexExpression": {
                      "id": 30836,
                      "name": "uid",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 30829,
                      "src": "1677:3:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1667:14:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SchemaRecord_$30696_storage",
                      "typeString": "struct SchemaRecord storage ref"
                    }
                  },
                  "functionReturnParameters": 30834,
                  "id": 30838,
                  "nodeType": "Return",
                  "src": "1660:21:27"
                }
              ]
            },
            "baseFunctions": [
              30729
            ],
            "documentation": {
              "id": 30827,
              "nodeType": "StructuredDocumentation",
              "src": "1538:31:27",
              "text": "@inheritdoc ISchemaRegistry"
            },
            "functionSelector": "a2ea7c6e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getSchema",
            "nameLocation": "1583:9:27",
            "parameters": {
              "id": 30830,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30829,
                  "mutability": "mutable",
                  "name": "uid",
                  "nameLocation": "1601:3:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 30840,
                  "src": "1593:11:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 30828,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1593:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1592:13:27"
            },
            "returnParameters": {
              "id": 30834,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30833,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 30840,
                  "src": "1629:19:27",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SchemaRecord_$30696_memory_ptr",
                    "typeString": "struct SchemaRecord"
                  },
                  "typeName": {
                    "id": 30832,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 30831,
                      "name": "SchemaRecord",
                      "nameLocations": [
                        "1629:12:27"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 30696,
                      "src": "1629:12:27"
                    },
                    "referencedDeclaration": 30696,
                    "src": "1629:12:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SchemaRecord_$30696_storage_ptr",
                      "typeString": "struct SchemaRecord"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1628:21:27"
            },
            "scope": 30863,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 30862,
            "nodeType": "FunctionDefinition",
            "src": "1818:201:27",
            "nodes": [],
            "body": {
              "id": 30861,
              "nodeType": "Block",
              "src": "1900:119:27",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 30852,
                              "name": "schemaRecord",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30844,
                              "src": "1944:12:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_SchemaRecord_$30696_memory_ptr",
                                "typeString": "struct SchemaRecord memory"
                              }
                            },
                            "id": 30853,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1957:6:27",
                            "memberName": "schema",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30695,
                            "src": "1944:19:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          },
                          {
                            "expression": {
                              "id": 30854,
                              "name": "schemaRecord",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30844,
                              "src": "1965:12:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_SchemaRecord_$30696_memory_ptr",
                                "typeString": "struct SchemaRecord memory"
                              }
                            },
                            "id": 30855,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "1978:8:27",
                            "memberName": "resolver",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30691,
                            "src": "1965:21:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISchemaResolver_$31262",
                              "typeString": "contract ISchemaResolver"
                            }
                          },
                          {
                            "expression": {
                              "id": 30856,
                              "name": "schemaRecord",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 30844,
                              "src": "1988:12:27",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_SchemaRecord_$30696_memory_ptr",
                                "typeString": "struct SchemaRecord memory"
                              }
                            },
                            "id": 30857,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberLocation": "2001:9:27",
                            "memberName": "revocable",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 30693,
                            "src": "1988:22:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            },
                            {
                              "typeIdentifier": "t_contract$_ISchemaResolver_$31262",
                              "typeString": "contract ISchemaResolver"
                            },
                            {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          ],
                          "expression": {
                            "id": 30850,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "1927:3:27",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 30851,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberLocation": "1931:12:27",
                          "memberName": "encodePacked",
                          "nodeType": "MemberAccess",
                          "src": "1927:16:27",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 30858,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "nameLocations": [],
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1927:84:27",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 30849,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "1917:9:27",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 30859,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1917:95:27",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 30848,
                  "id": 30860,
                  "nodeType": "Return",
                  "src": "1910:102:27"
                }
              ]
            },
            "documentation": {
              "id": 30841,
              "nodeType": "StructuredDocumentation",
              "src": "1694:119:27",
              "text": "@dev Calculates a UID for a given schema.\n @param schemaRecord The input schema.\n @return schema UID."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getUID",
            "nameLocation": "1827:7:27",
            "parameters": {
              "id": 30845,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30844,
                  "mutability": "mutable",
                  "name": "schemaRecord",
                  "nameLocation": "1855:12:27",
                  "nodeType": "VariableDeclaration",
                  "scope": 30862,
                  "src": "1835:32:27",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_SchemaRecord_$30696_memory_ptr",
                    "typeString": "struct SchemaRecord"
                  },
                  "typeName": {
                    "id": 30843,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 30842,
                      "name": "SchemaRecord",
                      "nameLocations": [
                        "1835:12:27"
                      ],
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 30696,
                      "src": "1835:12:27"
                    },
                    "referencedDeclaration": 30696,
                    "src": "1835:12:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SchemaRecord_$30696_storage_ptr",
                      "typeString": "struct SchemaRecord"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1834:34:27"
            },
            "returnParameters": {
              "id": 30848,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 30847,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 30862,
                  "src": "1891:7:27",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 30846,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1891:7:27",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1890:9:27"
            },
            "scope": 30863,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "private"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 30744,
              "name": "ISchemaRegistry",
              "nameLocations": [
                "545:15:27"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 30730,
              "src": "545:15:27"
            },
            "id": 30745,
            "nodeType": "InheritanceSpecifier",
            "src": "545:15:27"
          },
          {
            "baseName": {
              "id": 30746,
              "name": "ISemver",
              "nameLocations": [
                "562:7:27"
              ],
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 31359,
              "src": "562:7:27"
            },
            "id": 30747,
            "nodeType": "InheritanceSpecifier",
            "src": "562:7:27"
          }
        ],
        "canonicalName": "SchemaRegistry",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 30743,
          "nodeType": "StructuredDocumentation",
          "src": "317:201:27",
          "text": "@custom:proxied\n @custom:predeploy 0x4200000000000000000000000000000000000020\n @title SchemaRegistry\n @notice The global attestation schemas for the Ethereum Attestation Service protocol."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          30863,
          31359,
          30730
        ],
        "name": "SchemaRegistry",
        "nameLocation": "527:14:27",
        "scope": 30864,
        "usedErrors": [
          30749
        ]
      }
    ],
    "license": "MIT"
  },
  "id": 27
}