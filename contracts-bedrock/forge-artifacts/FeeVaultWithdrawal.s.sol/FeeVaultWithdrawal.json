{
  "abi": [
    {
      "inputs": [],
      "name": "IS_SCRIPT",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "run",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405260048054600160ff199182168117909255600c8054909116909117905534801561002d57600080fd5b506112698061003d6000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063c04062261461003b578063f8ccbf4714610045575b600080fd5b610043610066565b005b600c546100529060ff1681565b604051901515815260200160405180910390f35b73ca11bde05977b3631167028862be2a173976ca113b61008557600080fd5b6040805160038082526080820190925260009160208201606080368337019050509050734200000000000000000000000000000000000011816000815181106100d0576100d0610a54565b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250507342000000000000000000000000000000000000198160018151811061013257610132610a54565b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505073420000000000000000000000000000000000001a8160028151811061019457610194610a54565b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060005b81518110156104f45760008282815181106101ee576101ee610a54565b60200260200101519050600061020382610678565b905080156103ec576040805160608101825273ffffffffffffffffffffffffffffffffffffffff80851682526000602080840182815285516004815260248101875291820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f3ccfd60b00000000000000000000000000000000000000000000000000000000179052948401908152600d80546001810182559252835160029092027fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb5810180549651151574010000000000000000000000000000000000000000027fffffffffffffffffffffff00000000000000000000000000000000000000000090971693909416929092179490941782559251919290917fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb69091019061034c9082610b25565b50505060008273ffffffffffffffffffffffffffffffffffffffff16630d9019e16040518163ffffffff1660e01b8152600401602060405180830381865afa15801561039c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c09190610c3f565b905073ffffffffffffffffffffffffffffffffffffffff8316316103e581838661070e565b50506104df565b6040517f56ca623e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83166004820152600090737109709ecfa91a80626ff3989d68f67f5b1dd12d906356ca623e90602401600060405180830381865afa15801561046d573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526104b39190810190610d8d565b6040516020016104c39190610dde565b60405160208183030381529060405290506104dd8161097a565b505b505080806104ec90610e45565b9150506101d1565b50600d5415610675577f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c73ffffffffffffffffffffffffffffffffffffffff1663afc980406040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561056857600080fd5b505af115801561057c573d6000803e3d6000fd5b50506040517f82ad56cb00000000000000000000000000000000000000000000000000000000815273ca11bde05977b3631167028862be2a173976ca1192506382ad56cb91506105d190600d90600401610ea4565b6000604051808303816000875af11580156105f0573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526106369190810190610fed565b506106756040518060400160405280600881526020017f537563636573732e00000000000000000000000000000000000000000000000081525061097a565b50565b6000808273ffffffffffffffffffffffffffffffffffffffff1663d3e5792b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ea9190611132565b73ffffffffffffffffffffffffffffffffffffffff90931631929092101592915050565b6040517f6900a3ae00000000000000000000000000000000000000000000000000000000815260048101849052600090737109709ecfa91a80626ff3989d68f67f5b1dd12d90636900a3ae90602401600060405180830381865afa15801561077a573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526107c09190810190610d8d565b6040517f56ca623e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d906356ca623e90602401600060405180830381865afa15801561083e573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526108849190810190610d8d565b6040517f56ca623e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d906356ca623e90602401600060405180830381865afa158015610902573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526109489190810190610d8d565b60405160200161095a9392919061114b565b60405160208183030381529060405290506109748161097a565b50505050565b6106758160405160240161098e919061120b565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f41304fac0000000000000000000000000000000000000000000000000000000017905280516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600181811c90821680610a9757607f821691505b602082108103610ad0577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b601f821115610b2057600081815260208120601f850160051c81016020861015610afd5750805b601f850160051c820191505b81811015610b1c57828155600101610b09565b5050505b505050565b815167ffffffffffffffff811115610b3f57610b3f610a25565b610b5381610b4d8454610a83565b84610ad6565b602080601f831160018114610ba65760008415610b705750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b178555610b1c565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b82811015610bf357888601518255948401946001909101908401610bd4565b5085821015610c2f57878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b600060208284031215610c5157600080fd5b815173ffffffffffffffffffffffffffffffffffffffff81168114610c7557600080fd5b9392505050565b6040805190810167ffffffffffffffff81118282101715610c9f57610c9f610a25565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610cec57610cec610a25565b604052919050565b60005b83811015610d0f578181015183820152602001610cf7565b838111156109745750506000910152565b600067ffffffffffffffff831115610d3a57610d3a610a25565b610d6b60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f86011601610ca5565b9050828152838383011115610d7f57600080fd5b610c75836020830184610cf4565b600060208284031215610d9f57600080fd5b815167ffffffffffffffff811115610db657600080fd5b8201601f81018413610dc757600080fd5b610dd684825160208401610d20565b949350505050565b60008251610df0818460208701610cf4565b7f20646f6573206e6f7420686176652061206c6172676520656e6f7567682062619201918252507f6c616e636520746f2077697468647261772e00000000000000000000000000006020820152603201919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610e9d577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b6000602080830181845280855480835260408601915060408160051b87010192506000878152848120815b83811015610fdf578886037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0018552815473ffffffffffffffffffffffffffffffffffffffff8116875260a01c60ff16151587870152606060408701526001820180548490610f3d81610a83565b8060608b01526001821660008114610f5c5760018114610f9657610fc5565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00831660808c0152608082151560051b8c01019350610fc5565b8488528b8820885b83811015610fbc5781548d8201608001526001909101908d01610f9e565b8c016080019450505b509198505050948701945060029190910190600101610ecf565b509398975050505050505050565b6000602080838503121561100057600080fd5b825167ffffffffffffffff8082111561101857600080fd5b818501915085601f83011261102c57600080fd5b81518181111561103e5761103e610a25565b8060051b61104d858201610ca5565b918252838101850191858101908984111561106757600080fd5b86860192505b83831015611125578251858111156110855760008081fd5b86016040818c037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0018113156110bb5760008081fd5b6110c3610c7c565b8983015180151581146110d65760008081fd5b815282820151888111156110ea5760008081fd5b8084019350508c603f8401126111005760008081fd5b6111108d8b850151848601610d20565b818b015284525050918601919086019061106d565b9998505050505050505050565b60006020828403121561114457600080fd5b5051919050565b7f5769746864726177696e6720000000000000000000000000000000000000000081526000845161118381600c850160208901610cf4565b7f20746f2000000000000000000000000000000000000000000000000000000000600c9184019182015284516111c0816010840160208901610cf4565b7f2066726f6d2000000000000000000000000000000000000000000000000000006010929091019182015283516111fe816016840160208801610cf4565b0160160195945050505050565b602081526000825180602084015261122a816040850160208701610cf4565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fea164736f6c634300080f000a",
    "sourceMap": "644:2406:102:-:0;;;3161:44:5;;;3201:4;-1:-1:-1;;3161:44:5;;;;;;;;758:28:3;;;;;;;;;;;644:2406:102;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c8063c04062261461003b578063f8ccbf4714610045575b600080fd5b610043610066565b005b600c546100529060ff1681565b604051901515815260200160405180910390f35b73ca11bde05977b3631167028862be2a173976ca113b61008557600080fd5b6040805160038082526080820190925260009160208201606080368337019050509050734200000000000000000000000000000000000011816000815181106100d0576100d0610a54565b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250507342000000000000000000000000000000000000198160018151811061013257610132610a54565b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505073420000000000000000000000000000000000001a8160028151811061019457610194610a54565b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff168152505060005b81518110156104f45760008282815181106101ee576101ee610a54565b60200260200101519050600061020382610678565b905080156103ec576040805160608101825273ffffffffffffffffffffffffffffffffffffffff80851682526000602080840182815285516004815260248101875291820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f3ccfd60b00000000000000000000000000000000000000000000000000000000179052948401908152600d80546001810182559252835160029092027fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb5810180549651151574010000000000000000000000000000000000000000027fffffffffffffffffffffff00000000000000000000000000000000000000000090971693909416929092179490941782559251919290917fd7b6990105719101dabeb77144f2a3385c8033acd3af97e9423a695e81ad1eb69091019061034c9082610b25565b50505060008273ffffffffffffffffffffffffffffffffffffffff16630d9019e16040518163ffffffff1660e01b8152600401602060405180830381865afa15801561039c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906103c09190610c3f565b905073ffffffffffffffffffffffffffffffffffffffff8316316103e581838661070e565b50506104df565b6040517f56ca623e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83166004820152600090737109709ecfa91a80626ff3989d68f67f5b1dd12d906356ca623e90602401600060405180830381865afa15801561046d573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526104b39190810190610d8d565b6040516020016104c39190610dde565b60405160208183030381529060405290506104dd8161097a565b505b505080806104ec90610e45565b9150506101d1565b50600d5415610675577f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c73ffffffffffffffffffffffffffffffffffffffff1663afc980406040518163ffffffff1660e01b8152600401600060405180830381600087803b15801561056857600080fd5b505af115801561057c573d6000803e3d6000fd5b50506040517f82ad56cb00000000000000000000000000000000000000000000000000000000815273ca11bde05977b3631167028862be2a173976ca1192506382ad56cb91506105d190600d90600401610ea4565b6000604051808303816000875af11580156105f0573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526106369190810190610fed565b506106756040518060400160405280600881526020017f537563636573732e00000000000000000000000000000000000000000000000081525061097a565b50565b6000808273ffffffffffffffffffffffffffffffffffffffff1663d3e5792b6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156106c6573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106ea9190611132565b73ffffffffffffffffffffffffffffffffffffffff90931631929092101592915050565b6040517f6900a3ae00000000000000000000000000000000000000000000000000000000815260048101849052600090737109709ecfa91a80626ff3989d68f67f5b1dd12d90636900a3ae90602401600060405180830381865afa15801561077a573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526107c09190810190610d8d565b6040517f56ca623e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d906356ca623e90602401600060405180830381865afa15801561083e573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526108849190810190610d8d565b6040517f56ca623e00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff85166004820152737109709ecfa91a80626ff3989d68f67f5b1dd12d906356ca623e90602401600060405180830381865afa158015610902573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526109489190810190610d8d565b60405160200161095a9392919061114b565b60405160208183030381529060405290506109748161097a565b50505050565b6106758160405160240161098e919061120b565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f41304fac0000000000000000000000000000000000000000000000000000000017905280516a636f6e736f6c652e6c6f67602083016000808483855afa5050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600181811c90821680610a9757607f821691505b602082108103610ad0577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b601f821115610b2057600081815260208120601f850160051c81016020861015610afd5750805b601f850160051c820191505b81811015610b1c57828155600101610b09565b5050505b505050565b815167ffffffffffffffff811115610b3f57610b3f610a25565b610b5381610b4d8454610a83565b84610ad6565b602080601f831160018114610ba65760008415610b705750858301515b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600386901b1c1916600185901b178555610b1c565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b82811015610bf357888601518255948401946001909101908401610bd4565b5085821015610c2f57878501517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600388901b60f8161c191681555b5050505050600190811b01905550565b600060208284031215610c5157600080fd5b815173ffffffffffffffffffffffffffffffffffffffff81168114610c7557600080fd5b9392505050565b6040805190810167ffffffffffffffff81118282101715610c9f57610c9f610a25565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610cec57610cec610a25565b604052919050565b60005b83811015610d0f578181015183820152602001610cf7565b838111156109745750506000910152565b600067ffffffffffffffff831115610d3a57610d3a610a25565b610d6b60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f86011601610ca5565b9050828152838383011115610d7f57600080fd5b610c75836020830184610cf4565b600060208284031215610d9f57600080fd5b815167ffffffffffffffff811115610db657600080fd5b8201601f81018413610dc757600080fd5b610dd684825160208401610d20565b949350505050565b60008251610df0818460208701610cf4565b7f20646f6573206e6f7420686176652061206c6172676520656e6f7567682062619201918252507f6c616e636520746f2077697468647261772e00000000000000000000000000006020820152603201919050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610e9d577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b5060010190565b6000602080830181845280855480835260408601915060408160051b87010192506000878152848120815b83811015610fdf578886037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0018552815473ffffffffffffffffffffffffffffffffffffffff8116875260a01c60ff16151587870152606060408701526001820180548490610f3d81610a83565b8060608b01526001821660008114610f5c5760018114610f9657610fc5565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00831660808c0152608082151560051b8c01019350610fc5565b8488528b8820885b83811015610fbc5781548d8201608001526001909101908d01610f9e565b8c016080019450505b509198505050948701945060029190910190600101610ecf565b509398975050505050505050565b6000602080838503121561100057600080fd5b825167ffffffffffffffff8082111561101857600080fd5b818501915085601f83011261102c57600080fd5b81518181111561103e5761103e610a25565b8060051b61104d858201610ca5565b918252838101850191858101908984111561106757600080fd5b86860192505b83831015611125578251858111156110855760008081fd5b86016040818c037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0018113156110bb5760008081fd5b6110c3610c7c565b8983015180151581146110d65760008081fd5b815282820151888111156110ea5760008081fd5b8084019350508c603f8401126111005760008081fd5b6111108d8b850151848601610d20565b818b015284525050918601919086019061106d565b9998505050505050505050565b60006020828403121561114457600080fd5b5051919050565b7f5769746864726177696e6720000000000000000000000000000000000000000081526000845161118381600c850160208901610cf4565b7f20746f2000000000000000000000000000000000000000000000000000000000600c9184019182015284516111c0816010840160208901610cf4565b7f2066726f6d2000000000000000000000000000000000000000000000000000006010929091019182015283516111fe816016840160208801610cf4565b0160160195945050505050565b602081526000825180602084015261122a816040850160208701610cf4565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fea164736f6c634300080f000a",
    "sourceMap": "644:2406:102:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;989:1286;;;:::i;:::-;;758:28:3;;;;;;;;;;;;179:14:302;;172:22;154:41;;142:2;127:18;758:28:3;;;;;;;989:1286:102;1205:42:2;1031:30:102;1023:43;;;;;;1103:16;;;1117:1;1103:16;;;;;;;;;1077:23;;1103:16;;;;;;;;;;-1:-1:-1;1103:16:102;1077:42;;946::176;1129:6:102;1136:1;1129:9;;;;;;;;:::i;:::-;;;;;;:43;;;;;;;;;;;3408:42:176;1182:6:102;1189:1;1182:9;;;;;;;;:::i;:::-;;;;;;:37;;;;;;;;;;;3551:42:176;1229:6:102;1236:1;1229:9;;;;;;;;:::i;:::-;;;;;;:35;;;;;;;;;;;1280:9;1275:845;1295:6;:13;1291:1;:17;1275:845;;;1329:13;1345:6;1352:1;1345:9;;;;;;;;:::i;:::-;;;;;;;1329:25;;1368:15;1386:20;1400:5;1386:13;:20::i;:::-;1368:38;;1424:10;1420:690;;;1486:211;;;;;;;;;;;;;;-1:-1:-1;1486:211:102;;;;;;;1624:50;;;;;;;;;;;;;;;;;1647:26;1624:50;;;1486:211;;;;;;1454:5;:261;;1486:211;1454:261;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1486:211;;1454:261;;;;;;;;;;;:::i;:::-;;;;1734:17;1771:5;1754:34;;;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1734:56;-1:-1:-1;1826:13:102;;;;1857:30;1826:13;1734:56;1826:5;1857:3;:30::i;:::-;1436:466;;1420:690;;;1984:18;;;;;3897:42:302;3885:55;;1984:18:102;;;3867:74:302;1926:21:102;;1984:11;;;;3840:18:302;;1984::102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1970:87;;;;;;;;:::i;:::-;;;;;;;;;;;;;1926:131;;2075:20;2087:7;2075:11;:20::i;:::-;1908:202;1420:690;1315:805;;1310:3;;;;;:::i;:::-;;;;1275:845;;;-1:-1:-1;2134:5:102;:12;:16;2130:139;;317:28:2;309:37;;2166:12:102;;;:14;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2194:27:102;;;;;1205:42:2;;-1:-1:-1;2194:20:102;;-1:-1:-1;2194:27:102;;2215:5;;2194:27;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;2235:23;;;;;;;;;;;;;;;;;;:11;:23::i;:::-;1013:1262;989:1286::o;2440:253::-;2502:4;2518:27;2565:6;2548:47;;;:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2625:14;;;;;2656:30;;;;;;2440:253;-1:-1:-1;;2440:253:102:o;2758:290::-;2916:21;;;;;;;;11197:25:302;;;2849:21:102;;2916:11;;;;11170:18:302;;2916:21:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2947:23;;;;;3897:42:302;3885:55;;2947:23:102;;;3867:74:302;2947:11:102;;;;3840:18:302;;2947:23:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2982:19;;;;;3897:42:302;3885:55;;2982:19:102;;;3867:74:302;2982:11:102;;;;3840:18:302;;2982:19:102;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2873:138;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2849:162;;3021:20;3033:7;3021:11;:20::i;:::-;2839:209;2758:290;;;:::o;5630:121:16:-;5685:59;5740:2;5701:42;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;275:14;;131:42;448:2;435:16;;251:21;;275:14;435:16;131:42;484:5;473:68;464:77;;401:150;;181:376;:::o;206:184:302:-;258:77;255:1;248:88;355:4;352:1;345:15;379:4;376:1;369:15;395:184;447:77;444:1;437:88;544:4;541:1;534:15;568:4;565:1;558:15;584:437;663:1;659:12;;;;706;;;727:61;;781:4;773:6;769:17;759:27;;727:61;834:2;826:6;823:14;803:18;800:38;797:218;;871:77;868:1;861:88;972:4;969:1;962:15;1000:4;997:1;990:15;797:218;;584:437;;;:::o;1151:544::-;1252:2;1247:3;1244:11;1241:448;;;1288:1;1313:5;1309:2;1302:17;1358:4;1354:2;1344:19;1428:2;1416:10;1412:19;1409:1;1405:27;1399:4;1395:38;1464:4;1452:10;1449:20;1446:47;;;-1:-1:-1;1487:4:302;1446:47;1542:2;1537:3;1533:12;1530:1;1526:20;1520:4;1516:31;1506:41;;1597:82;1615:2;1608:5;1605:13;1597:82;;;1660:17;;;1641:1;1630:13;1597:82;;;1601:3;;;1241:448;1151:544;;;:::o;1931:1467::-;2055:3;2049:10;2082:18;2074:6;2071:30;2068:56;;;2104:18;;:::i;:::-;2133:96;2222:6;2182:38;2214:4;2208:11;2182:38;:::i;:::-;2176:4;2133:96;:::i;:::-;2284:4;;2348:2;2337:14;;2365:1;2360:781;;;;3185:1;3202:6;3199:89;;;-1:-1:-1;3254:19:302;;;3248:26;3199:89;1837:66;1828:1;1824:11;;;1820:84;1816:89;1806:100;1912:1;1908:11;;;1803:117;3301:81;;2330:1062;;2360:781;1098:1;1091:14;;;1135:4;1122:18;;2408:66;2396:79;;;2572:236;2586:7;2583:1;2580:14;2572:236;;;2675:19;;;2669:26;2654:42;;2767:27;;;;2735:1;2723:14;;;;2602:19;;2572:236;;;2576:3;2836:6;2827:7;2824:19;2821:261;;;2897:19;;;2891:26;2998:66;2980:1;2976:14;;;2992:3;2972:24;2968:97;2964:102;2949:118;2934:134;;2821:261;-1:-1:-1;;;;;3128:1:302;3112:14;;;3108:22;3095:36;;-1:-1:-1;1931:1467:302:o;3403:313::-;3473:6;3526:2;3514:9;3505:7;3501:23;3497:32;3494:52;;;3542:1;3539;3532:12;3494:52;3574:9;3568:16;3624:42;3617:5;3613:54;3606:5;3603:65;3593:93;;3682:1;3679;3672:12;3593:93;3705:5;3403:313;-1:-1:-1;;;3403:313:302:o;3952:257::-;4024:4;4018:11;;;4056:17;;4103:18;4088:34;;4124:22;;;4085:62;4082:88;;;4150:18;;:::i;:::-;4186:4;4179:24;3952:257;:::o;4214:334::-;4285:2;4279:9;4341:2;4331:13;;4346:66;4327:86;4315:99;;4444:18;4429:34;;4465:22;;;4426:62;4423:88;;;4491:18;;:::i;:::-;4527:2;4520:22;4214:334;;-1:-1:-1;4214:334:302:o;4553:258::-;4625:1;4635:113;4649:6;4646:1;4643:13;4635:113;;;4725:11;;;4719:18;4706:11;;;4699:39;4671:2;4664:10;4635:113;;;4766:6;4763:1;4760:13;4757:48;;;-1:-1:-1;;4801:1:302;4783:16;;4776:27;4553:258::o;4816:437::-;4892:5;4926:18;4918:6;4915:30;4912:56;;;4948:18;;:::i;:::-;4986:116;5096:4;5027:66;5022:2;5014:6;5010:15;5006:88;5002:99;4986:116;:::i;:::-;4977:125;;5125:6;5118:5;5111:21;5165:3;5156:6;5151:3;5147:16;5144:25;5141:45;;;5182:1;5179;5172:12;5141:45;5195:52;5240:6;5233:4;5226:5;5222:16;5217:3;5195:52;:::i;5258:459::-;5338:6;5391:2;5379:9;5370:7;5366:23;5362:32;5359:52;;;5407:1;5404;5397:12;5359:52;5440:9;5434:16;5473:18;5465:6;5462:30;5459:50;;;5505:1;5502;5495:12;5459:50;5528:22;;5581:4;5573:13;;5569:27;-1:-1:-1;5559:55:302;;5610:1;5607;5600:12;5559:55;5633:78;5703:7;5698:2;5692:9;5687:2;5683;5679:11;5633:78;:::i;:::-;5623:88;5258:459;-1:-1:-1;;;;5258:459:302:o;5722:526::-;5954:3;5992:6;5986:13;6008:53;6054:6;6049:3;6042:4;6034:6;6030:17;6008:53;:::i;:::-;6122:34;6083:16;;6108:49;;;-1:-1:-1;6191:20:302;6184:4;6173:16;;6166:46;6239:2;6228:14;;5722:526;-1:-1:-1;5722:526:302:o;6253:349::-;6292:3;6323:66;6316:5;6313:77;6310:257;;6423:77;6420:1;6413:88;6524:4;6521:1;6514:15;6552:4;6549:1;6542:15;6310:257;-1:-1:-1;6594:1:302;6583:13;;6253:349::o;6607:2099::-;6791:4;6820:2;6860;6849:9;6845:18;6890:2;6879:9;6872:21;6913:6;6948;6942:13;6979:6;6971;6964:22;7017:2;7006:9;7002:18;6995:25;;7079:2;7069:6;7066:1;7062:14;7051:9;7047:30;7043:39;7029:53;;7101:1;7122:6;7118:2;7111:18;7166:2;7162;7152:17;7187:2;7198:1479;7212:6;7209:1;7206:13;7198:1479;;;7277:22;;;7301:66;7273:95;7261:108;;7399:13;;7455:42;7440:58;;7425:74;;7558:3;7554:19;7575:4;7550:30;7543:38;7536:46;7519:15;;;7512:71;7667:4;7662:2;7650:15;;7643:29;7628:1;7616:14;;7730:19;;7696:2;;7778:38;7730:19;7778:38;:::i;:::-;7855:8;7848:4;7840:6;7836:17;7829:35;7901:1;7888:11;7884:19;7921:1;7916:228;;;;8162:1;8157:412;;;;7877:692;;7916:228;7983:66;7970:11;7966:84;7960:3;7952:6;7948:16;7941:110;8126:3;8112:8;8105:16;8098:24;8095:1;8091:32;8083:6;8079:45;8075:55;8068:62;;7916:228;;8157:412;8193:12;8189:2;8182:24;8252:2;8248;8238:17;8283:2;8302:203;8318:8;8313:3;8310:17;8302:203;;;8425:14;;8401:16;;;8419:3;8397:26;8390:50;8485:1;8472:15;;;;8337:12;;8302:203;;;8533:16;;8551:3;8529:26;;-1:-1:-1;;7877:692:302;-1:-1:-1;8592:3:302;;-1:-1:-1;;;8655:12:302;;;;-1:-1:-1;8630:4:302;8618:17;;;;;7234:1;7227:9;7198:1479;;;-1:-1:-1;8694:6:302;;6607:2099;-1:-1:-1;;;;;;;;6607:2099:302:o;8711:2146::-;8831:6;8862:2;8905;8893:9;8884:7;8880:23;8876:32;8873:52;;;8921:1;8918;8911:12;8873:52;8954:9;8948:16;8983:18;9024:2;9016:6;9013:14;9010:34;;;9040:1;9037;9030:12;9010:34;9078:6;9067:9;9063:22;9053:32;;9123:7;9116:4;9112:2;9108:13;9104:27;9094:55;;9145:1;9142;9135:12;9094:55;9174:2;9168:9;9196:2;9192;9189:10;9186:36;;;9202:18;;:::i;:::-;9248:2;9245:1;9241:10;9271:28;9295:2;9291;9287:11;9271:28;:::i;:::-;9333:15;;;9403:11;;;9399:20;;;9364:12;;;;9431:19;;;9428:39;;;9463:1;9460;9453:12;9428:39;9495:2;9491;9487:11;9476:22;;9507:1320;9523:6;9518:3;9515:15;9507:1320;;;9602:3;9596:10;9638:2;9625:11;9622:19;9619:109;;;9682:1;9711:2;9707;9700:14;9619:109;9751:20;;9794:4;9822:16;;;9840:66;9818:89;9814:98;-1:-1:-1;9811:188:302;;;9953:1;9982:2;9978;9971:14;9811:188;10025:22;;:::i;:::-;10089:2;10085;10081:11;10075:18;10142:7;10135:15;10128:23;10119:7;10116:36;10106:137;;10195:1;10225:3;10220;10213:16;10106:137;10256:22;;10313:11;;;10307:18;10341:16;;;10338:109;;;10399:1;10429:3;10424;10417:16;10338:109;10479:8;10475:2;10471:17;10460:28;;;10529:7;10524:2;10519:3;10515:12;10511:26;10501:127;;10580:1;10610:3;10605;10598:16;10501:127;10664:89;10745:7;10739:2;10734:3;10730:12;10724:19;10719:2;10714:3;10710:12;10664:89;:::i;:::-;10648:14;;;10641:113;10767:18;;-1:-1:-1;;9540:12:302;;;;10805;;;;9507:1320;;;10846:5;8711:2146;-1:-1:-1;;;;;;;;;8711:2146:302:o;10862:184::-;10932:6;10985:2;10973:9;10964:7;10960:23;10956:32;10953:52;;;11001:1;10998;10991:12;10953:52;-1:-1:-1;11024:16:302;;10862:184;-1:-1:-1;10862:184:302:o;11233:1063::-;11761:14;11756:3;11749:27;11731:3;11805:6;11799:13;11821:62;11876:6;11871:2;11866:3;11862:12;11855:4;11847:6;11843:17;11821:62;:::i;:::-;11947:6;11942:2;11902:16;;;11934:11;;;11927:27;11979:13;;12001:63;11979:13;12050:2;12042:11;;12035:4;12023:17;;12001:63;:::i;:::-;12129:8;12124:2;12083:17;;;;12116:11;;;12109:29;12163:13;;12185:63;12163:13;12234:2;12226:11;;12219:4;12207:17;;12185:63;:::i;:::-;12268:17;12287:2;12264:26;;11233:1063;-1:-1:-1;;;;;11233:1063:302:o;12301:442::-;12450:2;12439:9;12432:21;12413:4;12482:6;12476:13;12525:6;12520:2;12509:9;12505:18;12498:34;12541:66;12600:6;12595:2;12584:9;12580:18;12575:2;12567:6;12563:15;12541:66;:::i;:::-;12659:2;12647:15;12664:66;12643:88;12628:104;;;;12734:2;12624:113;;12301:442;-1:-1:-1;;12301:442:302:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_SCRIPT()": "f8ccbf47",
    "run()": "c0406226"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"IS_SCRIPT\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"run\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"title\":\"FeeVaultWithdrawal\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"run()\":{\"notice\":\"The entrypoint function. Determines which FeeVaults can be withdrawn from and then        will send the transaction via Multicall3 to withdraw all FeeVaults.\"}},\"notice\":\"A script to make it very simple to withdraw from the fee vaults.         The usage is as follows:         $ forge script scripts/FeeVaultWithdrawal.s.sol \\\\             --rpc-url $ETH_RPC_URL --broadcast \\\\             --private-key $PRIVATE_KEY\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"scripts/FeeVaultWithdrawal.s.sol\":\"FeeVaultWithdrawal\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@cwia/=lib/clones-with-immutable-args/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/solmate/\",\":clones-with-immutable-args/=lib/clones-with-immutable-args/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/Script.sol\":{\"keccak256\":\"0xd566affaba92598bcd059dcb3714a968aeedb365ec0d666815e8b38519e0f433\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2fb5f7a97d2a7a06e10c198b60f05e64176eb4ef306b72800c168e7a7ec51693\",\"dweb:/ipfs/Qmcep4r7YEU3BwFJNTTxZsdCVzBYdtcVp8oDtmwLoZGRzP\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x9100bd38453711d5f5ae32d16b4aacef8d4e26abb3061fcc9920cd30cdb49315\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://114654e304083d3403510edd13d7df2223747337150ecf51dd36b441e50498f7\",\"dweb:/ipfs/QmQy6uvcVHyHzU2RbuvEo1hKiV7k81z21gR6DSj4DkCP8D\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xb58d624eb0922d4ab14856efb0ab558b0727ccfc28448c5779f1ab4d98cf3daf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1869fc58cb27a7b680428b79d0e0b6f45bd3c61fedb4b3f895e143fb899519d5\",\"dweb:/ipfs/QmcjECGVpQPjhL2bokDyQeGWdzM99qPFMhq5r7KqKLot7R\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c\",\"dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5\",\"dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x18ac6dcce9cdfe3bc754ce910b4b97e56963c49a92e50f57d055adb562416b86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6b29b4a814dc26c3722e994a792f4cc1be86e6b8c2b2adc352ed54fb326593d\",\"dweb:/ipfs/Qma8a7XELNmUepiitaLyxJXW66urnXsvCwx1bMLmRw2Fpn\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xb5d4816a3f37977b1efa07b5e715daa917e96fd28dec1805c4189653db4ea33a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34338fa7f079f8d64f20d976f9bf908a710c8728f18c4b361b020b24fedfedf2\",\"dweb:/ipfs/QmYhwY1wi6vVLMUsJ32L3GiSR9HRaFhGL1Y3wRDjy41KXn\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x2a21b14ff90012878752f230d3ffd5c3405e5938d06c97a7d89c0a64561d0d66\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3313a8f9bb1f9476857c9050067b31982bf2140b83d84f3bc0cec1f62bbe947f\",\"dweb:/ipfs/Qma17Pk8NRe7aB4UD3jjVxk7nSFaov3eQyv86hcyqkwJRV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6\",\"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165Checker.sol\":{\"keccak256\":\"0xc65c83c1039508fa7a42a09a3c6a32babd1c438ba4dbb23581255e784b5d5eed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1b3b38db0f76429db899909025e534c366415e9ea8b5ddc4c8901e6a7fc1461\",\"dweb:/ipfs/QmYv1KxyHjLEky9JWNSsSfpGJbiCxFyzVFgTwQKpiqYGUg\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929\",\"dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb3ebde1c8d27576db912d87c3560dab14adfb9cd001be95890ec4ba035e652e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a709421c4f5d4677db8216055d2d4dac96a613efdb08178a9f7041f0c5cef689\",\"dweb:/ipfs/QmYs2rStvVLDnSJs8HgaMD1ABwoKKWdiVbQyNfLfFWTjTy\"]},\"lib/solmate/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x622fcd8a49e132df5ec7651cc6ae3aaf0cf59bdcd67a9a804a1b9e2485113b7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af77088eb606427d4c55e578984a615779c86bc30646a20f7bb27299ba390f7c\",\"dweb:/ipfs/QmZGQdhdQDtHc7gZXWrKXgA3govc74X8U63BiWhPQK3mK8\"]},\"scripts/FeeVaultWithdrawal.s.sol\":{\"keccak256\":\"0x1ec2f78331b7ff4413dcd7447a3286218a33a1f74e0fd576289edce696c20f25\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2c33d980cf6cdeaf25ede81eb5373e56eba416da3208d214d2922d6a89c000aa\",\"dweb:/ipfs/QmSPosdtMg1qmjuuxEv6su5pfEa6s4xZWarWpvsstdGdET\"]},\"src/L1/ResourceMetering.sol\":{\"keccak256\":\"0xa4d524f2a5e91a0b63a62603e712001c51c77e8371b93cbb576bcb7d074b7588\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6d8141b6c6dc72d2e684c1ae388c005fd78c9ca7fc9c15dddebd227ca4fd730\",\"dweb:/ipfs/QmPfJrR4qssu769TDWJnxdTozqKtZUxiY8fs95bhfECTvG\"]},\"src/L2/L2StandardBridge.sol\":{\"keccak256\":\"0x798d8afe222232b9d47dd8314570cf363d05cfd054328a72c6effa9b6df1aa04\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b4d5d570843f994edcc33394d46c68cfe2cb782cbdb7167f0fa30e8ce01cee9b\",\"dweb:/ipfs/QmUQpDCCMc9Y4PrBCZc41JHjDkPvaauEpnp9dMCpgF6Yhr\"]},\"src/libraries/Arithmetic.sol\":{\"keccak256\":\"0x06a5a8b00527843f0cfc1bb3c0661316966a6cc432f88be31f23cde78cd07560\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5209e78e5415c0bf8b350362a825cc56152811abd6fcf2df3d4fa47766d3dee\",\"dweb:/ipfs/Qmf43xyc4Um32NmccayDfhm8kSnS2mhHXpPZnwABJS7cWm\"]},\"src/libraries/Burn.sol\":{\"keccak256\":\"0x90a795bcea3ef06d6d5011256c4bd63d1a4271f519246dbf1ee3e8f1c0e21010\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f60c3aa77cf0c484ddda4754157cff4dc0e2eace4bea67990daff4c0612ab5f\",\"dweb:/ipfs/QmSYGanMFve9uBC17X7hFneSFnwnJxz86Jgh6MX9BRMweb\"]},\"src/libraries/Constants.sol\":{\"keccak256\":\"0xe12e392f05f80d3837c9392d016471181ae1ee6b84ea91b4e125e6523e5f18a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a3509231c228b7a4352573cd422cf0260dcbb94cfd915e5b664643db5475a5b7\",\"dweb:/ipfs/QmU2QERY4mHxqWFqSE5Exsy6Ftc5MTjTtYHC11fahLJWDC\"]},\"src/libraries/Encoding.sol\":{\"keccak256\":\"0xd5bbcb7da113e69562498d9543765e03912558ad66348682c2049c31e19f9d9b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afc6656ea10062c0c9d0817bb8683636caebf9222c9c102f29ea54fff74a2f93\",\"dweb:/ipfs/QmTNWtMgrTRHM6XtdUmA8bMZcuFpXoFCXgXR5vRihZWLuW\"]},\"src/libraries/Hashing.sol\":{\"keccak256\":\"0x44e2b2dcfffc39c0fc95ccd3c2118c7e7585fadf3dca327877d5756c7d4b21c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c89e0d9cfcb08a0d3c46c85367a32bbd9703468ba4c0c5bb6e124c1d173b26b\",\"dweb:/ipfs/QmaY3nQHBBhHK1wrurVXiEeNL8hfZ1pRmhpqW44tFDJnDf\"]},\"src/libraries/Predeploys.sol\":{\"keccak256\":\"0x551ea124b7ffe63c4715e165de13709fb91044c2bac2b5a3a13397e7ed579b0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36fa2454dc8f597780f7caf024263a45d66c5e267ab5f3715764f0d2b8e7fb32\",\"dweb:/ipfs/QmY45MpqrJEeE3KCGdnF2WDK3Be2ddBxUHVVw97LbfK7LZ\"]},\"src/libraries/SafeCall.sol\":{\"keccak256\":\"0x0636a7abb242bb5d6f5606967c8929e6aa7e63468c1e2ce40ad4780d4c4bf94f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4daec2ac8f9907bbf84ef0a1c48f03bae8657619bc6f42b3a672f25c516f17a\",\"dweb:/ipfs/Qmf8gfRxBv8gEmCkP8YMPb2GGfj9QUnoNUyKE7UR2SWGnq\"]},\"src/libraries/Types.sol\":{\"keccak256\":\"0x75900d651301940d24c00d14f0b3b6cbd6dcf379173ceaa31d9bf5be934a9aa4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c2632c5bf4fa3982391c32110eec9fa07917b483b2442cbaf18bdde5bdb24e\",\"dweb:/ipfs/QmSUs6Amkeootf5gKGbKi4mJpvhN2U8i1ED6ef2dskV5xc\"]},\"src/libraries/rlp/RLPWriter.sol\":{\"keccak256\":\"0x60ac401490f321c9c55e996a2c65151cd5e60de5f8f297e7c94d541c29820bb6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://070f5814db07e4a89173d44a36d90e4261ce530f7336034c01635347f2c2d88b\",\"dweb:/ipfs/QmXqr9yW5Kc8MYgr5wSehU5AiqS9pZ4FKxv7vwiwpZCcyV\"]},\"src/universal/CrossDomainMessenger.sol\":{\"keccak256\":\"0x6876fa0706a4647f4247eea58228dc650a39ff42fb2495ac2f8a37dcc99075b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a61d10bd62b6f4bbc5cc2b6c765c96cfc67e132a808f691ef1d8175eaf363363\",\"dweb:/ipfs/QmdBHpzFQpxVA9L9s3jiwHpB1SDtEeN3yqDazS7wnmEpFY\"]},\"src/universal/FeeVault.sol\":{\"keccak256\":\"0x8891b995e9ccb45a8396d9c93b6337ee3dc1d2d5b87f443d39477127e324ddbe\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3bfca73e7b5dd8b27554b2b01e3c4da379b1941a20fa835ac5969b454d6b06e9\",\"dweb:/ipfs/QmcH2VXjR3M5gNEYGP1XVrJYMKh5N4sNPRhpbrB55A3wPf\"]},\"src/universal/IOptimismMintableERC20.sol\":{\"keccak256\":\"0x6f8133b39efcbcbd5088f195dfacf1bedc3146508429c3865443909af735a04c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://adc36971e2e120458769f050428d9d2b0504516660345020c2521ee46e6d8abf\",\"dweb:/ipfs/QmPbFusQkZgGKpU8Fv5JoqL4oVeJtM3yqnhRGLY9eZT5zZ\"]},\"src/universal/ISemver.sol\":{\"keccak256\":\"0xba34562a8026f59886d2e07d1d58d90b9691d00e0788c6263cef6c22740cab44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0826f998632f83c103c3085bf2e872db79a69022b6d2e0444c83a64ca5283c2a\",\"dweb:/ipfs/QmcJ7PNqkAfKqbjFGRordtAg1v9DvcBSKvdTkVvciLyvQR\"]},\"src/universal/OptimismMintableERC20.sol\":{\"keccak256\":\"0x239934f3d2f6fc94587461e080014f61c1f7f24150ef2173fd042c97eb416385\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85a184dba76a4fead2142d6b1ea7dc89efc3046b181961f8aff5f55ea9bc057f\",\"dweb:/ipfs/QmPdmrQhh6YhdK2r3969nPdjk1UUu4p1Q1BFrXutNFUHKt\"]},\"src/universal/Semver.sol\":{\"keccak256\":\"0x9de68ce536aee1aa616b4bf88d7ccc335460e6edd0e7170bdbf94c4fe3d41c60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5909c0b049b03a2bc24816ecf15b0aaf18c04a963174e1eba7624321bef330d\",\"dweb:/ipfs/QmeqdutwZWHqQMXauNR6WY8PrUpfsTiWTQyanbnGM9QqzT\"]},\"src/universal/StandardBridge.sol\":{\"keccak256\":\"0x3c566019ae8102039455fe8878bf77d4ad69d7076f4b177980ea0c070125c8d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://102cc55a435e27b3f012ae8c3a4cd7b48535f2df7db78e7b98c793983fffe347\",\"dweb:/ipfs/QmczRvGDo9H5YwTPW9wW9dkhQSXAvtpDzrmapUPSD4Be1G\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_SCRIPT",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "run"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "run()": {
            "notice": "The entrypoint function. Determines which FeeVaults can be withdrawn from and then        will send the transaction via Multicall3 to withdraw all FeeVaults."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@cwia/=lib/clones-with-immutable-args/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@rari-capital/solmate/=lib/solmate/",
        "clones-with-immutable-args/=lib/clones-with-immutable-args/src/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "safe-contracts/=lib/safe-contracts/contracts/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 999999
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "scripts/FeeVaultWithdrawal.s.sol": "FeeVaultWithdrawal"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c",
        "urls": [
          "bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224",
          "dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Script.sol": {
        "keccak256": "0xd566affaba92598bcd059dcb3714a968aeedb365ec0d666815e8b38519e0f433",
        "urls": [
          "bzz-raw://2fb5f7a97d2a7a06e10c198b60f05e64176eb4ef306b72800c168e7a7ec51693",
          "dweb:/ipfs/Qmcep4r7YEU3BwFJNTTxZsdCVzBYdtcVp8oDtmwLoZGRzP"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x9100bd38453711d5f5ae32d16b4aacef8d4e26abb3061fcc9920cd30cdb49315",
        "urls": [
          "bzz-raw://114654e304083d3403510edd13d7df2223747337150ecf51dd36b441e50498f7",
          "dweb:/ipfs/QmQy6uvcVHyHzU2RbuvEo1hKiV7k81z21gR6DSj4DkCP8D"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0xb58d624eb0922d4ab14856efb0ab558b0727ccfc28448c5779f1ab4d98cf3daf",
        "urls": [
          "bzz-raw://1869fc58cb27a7b680428b79d0e0b6f45bd3c61fedb4b3f895e143fb899519d5",
          "dweb:/ipfs/QmcjECGVpQPjhL2bokDyQeGWdzM99qPFMhq5r7KqKLot7R"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b",
        "urls": [
          "bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c",
          "dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673",
        "urls": [
          "bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5",
          "dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x18ac6dcce9cdfe3bc754ce910b4b97e56963c49a92e50f57d055adb562416b86",
        "urls": [
          "bzz-raw://d6b29b4a814dc26c3722e994a792f4cc1be86e6b8c2b2adc352ed54fb326593d",
          "dweb:/ipfs/Qma8a7XELNmUepiitaLyxJXW66urnXsvCwx1bMLmRw2Fpn"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xb5d4816a3f37977b1efa07b5e715daa917e96fd28dec1805c4189653db4ea33a",
        "urls": [
          "bzz-raw://34338fa7f079f8d64f20d976f9bf908a710c8728f18c4b361b020b24fedfedf2",
          "dweb:/ipfs/QmYhwY1wi6vVLMUsJ32L3GiSR9HRaFhGL1Y3wRDjy41KXn"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea",
        "urls": [
          "bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973",
          "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
        "urls": [
          "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
          "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x2a21b14ff90012878752f230d3ffd5c3405e5938d06c97a7d89c0a64561d0d66",
        "urls": [
          "bzz-raw://3313a8f9bb1f9476857c9050067b31982bf2140b83d84f3bc0cec1f62bbe947f",
          "dweb:/ipfs/Qma17Pk8NRe7aB4UD3jjVxk7nSFaov3eQyv86hcyqkwJRV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238",
        "urls": [
          "bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0",
          "dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29",
        "urls": [
          "bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6",
          "dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10",
        "urls": [
          "bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487",
          "dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3",
        "urls": [
          "bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638",
          "dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165Checker.sol": {
        "keccak256": "0xc65c83c1039508fa7a42a09a3c6a32babd1c438ba4dbb23581255e784b5d5eed",
        "urls": [
          "bzz-raw://a1b3b38db0f76429db899909025e534c366415e9ea8b5ddc4c8901e6a7fc1461",
          "dweb:/ipfs/QmYv1KxyHjLEky9JWNSsSfpGJbiCxFyzVFgTwQKpiqYGUg"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0",
        "urls": [
          "bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929",
          "dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xb3ebde1c8d27576db912d87c3560dab14adfb9cd001be95890ec4ba035e652e7",
        "urls": [
          "bzz-raw://a709421c4f5d4677db8216055d2d4dac96a613efdb08178a9f7041f0c5cef689",
          "dweb:/ipfs/QmYs2rStvVLDnSJs8HgaMD1ABwoKKWdiVbQyNfLfFWTjTy"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/utils/FixedPointMathLib.sol": {
        "keccak256": "0x622fcd8a49e132df5ec7651cc6ae3aaf0cf59bdcd67a9a804a1b9e2485113b7d",
        "urls": [
          "bzz-raw://af77088eb606427d4c55e578984a615779c86bc30646a20f7bb27299ba390f7c",
          "dweb:/ipfs/QmZGQdhdQDtHc7gZXWrKXgA3govc74X8U63BiWhPQK3mK8"
        ],
        "license": "MIT"
      },
      "scripts/FeeVaultWithdrawal.s.sol": {
        "keccak256": "0x1ec2f78331b7ff4413dcd7447a3286218a33a1f74e0fd576289edce696c20f25",
        "urls": [
          "bzz-raw://2c33d980cf6cdeaf25ede81eb5373e56eba416da3208d214d2922d6a89c000aa",
          "dweb:/ipfs/QmSPosdtMg1qmjuuxEv6su5pfEa6s4xZWarWpvsstdGdET"
        ],
        "license": "MIT"
      },
      "src/L1/ResourceMetering.sol": {
        "keccak256": "0xa4d524f2a5e91a0b63a62603e712001c51c77e8371b93cbb576bcb7d074b7588",
        "urls": [
          "bzz-raw://d6d8141b6c6dc72d2e684c1ae388c005fd78c9ca7fc9c15dddebd227ca4fd730",
          "dweb:/ipfs/QmPfJrR4qssu769TDWJnxdTozqKtZUxiY8fs95bhfECTvG"
        ],
        "license": "MIT"
      },
      "src/L2/L2StandardBridge.sol": {
        "keccak256": "0x798d8afe222232b9d47dd8314570cf363d05cfd054328a72c6effa9b6df1aa04",
        "urls": [
          "bzz-raw://b4d5d570843f994edcc33394d46c68cfe2cb782cbdb7167f0fa30e8ce01cee9b",
          "dweb:/ipfs/QmUQpDCCMc9Y4PrBCZc41JHjDkPvaauEpnp9dMCpgF6Yhr"
        ],
        "license": "MIT"
      },
      "src/libraries/Arithmetic.sol": {
        "keccak256": "0x06a5a8b00527843f0cfc1bb3c0661316966a6cc432f88be31f23cde78cd07560",
        "urls": [
          "bzz-raw://d5209e78e5415c0bf8b350362a825cc56152811abd6fcf2df3d4fa47766d3dee",
          "dweb:/ipfs/Qmf43xyc4Um32NmccayDfhm8kSnS2mhHXpPZnwABJS7cWm"
        ],
        "license": "MIT"
      },
      "src/libraries/Burn.sol": {
        "keccak256": "0x90a795bcea3ef06d6d5011256c4bd63d1a4271f519246dbf1ee3e8f1c0e21010",
        "urls": [
          "bzz-raw://9f60c3aa77cf0c484ddda4754157cff4dc0e2eace4bea67990daff4c0612ab5f",
          "dweb:/ipfs/QmSYGanMFve9uBC17X7hFneSFnwnJxz86Jgh6MX9BRMweb"
        ],
        "license": "MIT"
      },
      "src/libraries/Constants.sol": {
        "keccak256": "0xe12e392f05f80d3837c9392d016471181ae1ee6b84ea91b4e125e6523e5f18a2",
        "urls": [
          "bzz-raw://a3509231c228b7a4352573cd422cf0260dcbb94cfd915e5b664643db5475a5b7",
          "dweb:/ipfs/QmU2QERY4mHxqWFqSE5Exsy6Ftc5MTjTtYHC11fahLJWDC"
        ],
        "license": "MIT"
      },
      "src/libraries/Encoding.sol": {
        "keccak256": "0xd5bbcb7da113e69562498d9543765e03912558ad66348682c2049c31e19f9d9b",
        "urls": [
          "bzz-raw://afc6656ea10062c0c9d0817bb8683636caebf9222c9c102f29ea54fff74a2f93",
          "dweb:/ipfs/QmTNWtMgrTRHM6XtdUmA8bMZcuFpXoFCXgXR5vRihZWLuW"
        ],
        "license": "MIT"
      },
      "src/libraries/Hashing.sol": {
        "keccak256": "0x44e2b2dcfffc39c0fc95ccd3c2118c7e7585fadf3dca327877d5756c7d4b21c3",
        "urls": [
          "bzz-raw://6c89e0d9cfcb08a0d3c46c85367a32bbd9703468ba4c0c5bb6e124c1d173b26b",
          "dweb:/ipfs/QmaY3nQHBBhHK1wrurVXiEeNL8hfZ1pRmhpqW44tFDJnDf"
        ],
        "license": "MIT"
      },
      "src/libraries/Predeploys.sol": {
        "keccak256": "0x551ea124b7ffe63c4715e165de13709fb91044c2bac2b5a3a13397e7ed579b0f",
        "urls": [
          "bzz-raw://36fa2454dc8f597780f7caf024263a45d66c5e267ab5f3715764f0d2b8e7fb32",
          "dweb:/ipfs/QmY45MpqrJEeE3KCGdnF2WDK3Be2ddBxUHVVw97LbfK7LZ"
        ],
        "license": "MIT"
      },
      "src/libraries/SafeCall.sol": {
        "keccak256": "0x0636a7abb242bb5d6f5606967c8929e6aa7e63468c1e2ce40ad4780d4c4bf94f",
        "urls": [
          "bzz-raw://a4daec2ac8f9907bbf84ef0a1c48f03bae8657619bc6f42b3a672f25c516f17a",
          "dweb:/ipfs/Qmf8gfRxBv8gEmCkP8YMPb2GGfj9QUnoNUyKE7UR2SWGnq"
        ],
        "license": "MIT"
      },
      "src/libraries/Types.sol": {
        "keccak256": "0x75900d651301940d24c00d14f0b3b6cbd6dcf379173ceaa31d9bf5be934a9aa4",
        "urls": [
          "bzz-raw://99c2632c5bf4fa3982391c32110eec9fa07917b483b2442cbaf18bdde5bdb24e",
          "dweb:/ipfs/QmSUs6Amkeootf5gKGbKi4mJpvhN2U8i1ED6ef2dskV5xc"
        ],
        "license": "MIT"
      },
      "src/libraries/rlp/RLPWriter.sol": {
        "keccak256": "0x60ac401490f321c9c55e996a2c65151cd5e60de5f8f297e7c94d541c29820bb6",
        "urls": [
          "bzz-raw://070f5814db07e4a89173d44a36d90e4261ce530f7336034c01635347f2c2d88b",
          "dweb:/ipfs/QmXqr9yW5Kc8MYgr5wSehU5AiqS9pZ4FKxv7vwiwpZCcyV"
        ],
        "license": "MIT"
      },
      "src/universal/CrossDomainMessenger.sol": {
        "keccak256": "0x6876fa0706a4647f4247eea58228dc650a39ff42fb2495ac2f8a37dcc99075b6",
        "urls": [
          "bzz-raw://a61d10bd62b6f4bbc5cc2b6c765c96cfc67e132a808f691ef1d8175eaf363363",
          "dweb:/ipfs/QmdBHpzFQpxVA9L9s3jiwHpB1SDtEeN3yqDazS7wnmEpFY"
        ],
        "license": "MIT"
      },
      "src/universal/FeeVault.sol": {
        "keccak256": "0x8891b995e9ccb45a8396d9c93b6337ee3dc1d2d5b87f443d39477127e324ddbe",
        "urls": [
          "bzz-raw://3bfca73e7b5dd8b27554b2b01e3c4da379b1941a20fa835ac5969b454d6b06e9",
          "dweb:/ipfs/QmcH2VXjR3M5gNEYGP1XVrJYMKh5N4sNPRhpbrB55A3wPf"
        ],
        "license": "MIT"
      },
      "src/universal/IOptimismMintableERC20.sol": {
        "keccak256": "0x6f8133b39efcbcbd5088f195dfacf1bedc3146508429c3865443909af735a04c",
        "urls": [
          "bzz-raw://adc36971e2e120458769f050428d9d2b0504516660345020c2521ee46e6d8abf",
          "dweb:/ipfs/QmPbFusQkZgGKpU8Fv5JoqL4oVeJtM3yqnhRGLY9eZT5zZ"
        ],
        "license": "MIT"
      },
      "src/universal/ISemver.sol": {
        "keccak256": "0xba34562a8026f59886d2e07d1d58d90b9691d00e0788c6263cef6c22740cab44",
        "urls": [
          "bzz-raw://0826f998632f83c103c3085bf2e872db79a69022b6d2e0444c83a64ca5283c2a",
          "dweb:/ipfs/QmcJ7PNqkAfKqbjFGRordtAg1v9DvcBSKvdTkVvciLyvQR"
        ],
        "license": "MIT"
      },
      "src/universal/OptimismMintableERC20.sol": {
        "keccak256": "0x239934f3d2f6fc94587461e080014f61c1f7f24150ef2173fd042c97eb416385",
        "urls": [
          "bzz-raw://85a184dba76a4fead2142d6b1ea7dc89efc3046b181961f8aff5f55ea9bc057f",
          "dweb:/ipfs/QmPdmrQhh6YhdK2r3969nPdjk1UUu4p1Q1BFrXutNFUHKt"
        ],
        "license": "MIT"
      },
      "src/universal/Semver.sol": {
        "keccak256": "0x9de68ce536aee1aa616b4bf88d7ccc335460e6edd0e7170bdbf94c4fe3d41c60",
        "urls": [
          "bzz-raw://d5909c0b049b03a2bc24816ecf15b0aaf18c04a963174e1eba7624321bef330d",
          "dweb:/ipfs/QmeqdutwZWHqQMXauNR6WY8PrUpfsTiWTQyanbnGM9QqzT"
        ],
        "license": "MIT"
      },
      "src/universal/StandardBridge.sol": {
        "keccak256": "0x3c566019ae8102039455fe8878bf77d4ad69d7076f4b177980ea0c070125c8d8",
        "urls": [
          "bzz-raw://102cc55a435e27b3f012ae8c3a4cd7b48535f2df7db78e7b98c793983fffe347",
          "dweb:/ipfs/QmczRvGDo9H5YwTPW9wW9dkhQSXAvtpDzrmapUPSD4Be1G"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 3877,
        "contract": "scripts/FeeVaultWithdrawal.s.sol:FeeVaultWithdrawal",
        "label": "stdChainsInitialized",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 3898,
        "contract": "scripts/FeeVaultWithdrawal.s.sol:FeeVaultWithdrawal",
        "label": "chains",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_string_memory_ptr,t_struct(Chain)3893_storage)"
      },
      {
        "astId": 3902,
        "contract": "scripts/FeeVaultWithdrawal.s.sol:FeeVaultWithdrawal",
        "label": "defaultRpcUrls",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_string_memory_ptr,t_string_storage)"
      },
      {
        "astId": 3906,
        "contract": "scripts/FeeVaultWithdrawal.s.sol:FeeVaultWithdrawal",
        "label": "idToAlias",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_string_storage)"
      },
      {
        "astId": 3909,
        "contract": "scripts/FeeVaultWithdrawal.s.sol:FeeVaultWithdrawal",
        "label": "fallbackToDefaultRpcUrls",
        "offset": 0,
        "slot": "4",
        "type": "t_bool"
      },
      {
        "astId": 4575,
        "contract": "scripts/FeeVaultWithdrawal.s.sol:FeeVaultWithdrawal",
        "label": "gasMeteringOff",
        "offset": 1,
        "slot": "4",
        "type": "t_bool"
      },
      {
        "astId": 2384,
        "contract": "scripts/FeeVaultWithdrawal.s.sol:FeeVaultWithdrawal",
        "label": "stdstore",
        "offset": 0,
        "slot": "5",
        "type": "t_struct(StdStorage)7998_storage"
      },
      {
        "astId": 2433,
        "contract": "scripts/FeeVaultWithdrawal.s.sol:FeeVaultWithdrawal",
        "label": "IS_SCRIPT",
        "offset": 0,
        "slot": "12",
        "type": "t_bool"
      },
      {
        "astId": 54726,
        "contract": "scripts/FeeVaultWithdrawal.s.sol:FeeVaultWithdrawal",
        "label": "calls",
        "offset": 0,
        "slot": "13",
        "type": "t_array(t_struct(Call3)29249_storage)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_bytes32)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32",
        "base": "t_bytes32"
      },
      "t_array(t_struct(Call3)29249_storage)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "struct IMulticall3.Call3[]",
        "numberOfBytes": "32",
        "base": "t_struct(Call3)29249_storage"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_bytes4": {
        "encoding": "inplace",
        "label": "bytes4",
        "numberOfBytes": "4"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_bool)))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(bytes4 => mapping(bytes32 => bool)))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes4,t_mapping(t_bytes32,t_bool))"
      },
      "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_uint256)))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(bytes4 => mapping(bytes32 => uint256)))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes4,t_mapping(t_bytes32,t_uint256))"
      },
      "t_mapping(t_bytes32,t_bool)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_bytes32,t_uint256)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_bytes4,t_mapping(t_bytes32,t_bool))": {
        "encoding": "mapping",
        "key": "t_bytes4",
        "label": "mapping(bytes4 => mapping(bytes32 => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes32,t_bool)"
      },
      "t_mapping(t_bytes4,t_mapping(t_bytes32,t_uint256))": {
        "encoding": "mapping",
        "key": "t_bytes4",
        "label": "mapping(bytes4 => mapping(bytes32 => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes32,t_uint256)"
      },
      "t_mapping(t_string_memory_ptr,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_mapping(t_string_memory_ptr,t_struct(Chain)3893_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct StdChains.Chain)",
        "numberOfBytes": "32",
        "value": "t_struct(Chain)3893_storage"
      },
      "t_mapping(t_uint256,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Call3)29249_storage": {
        "encoding": "inplace",
        "label": "struct IMulticall3.Call3",
        "numberOfBytes": "64",
        "members": [
          {
            "astId": 29244,
            "contract": "scripts/FeeVaultWithdrawal.s.sol:FeeVaultWithdrawal",
            "label": "target",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 29246,
            "contract": "scripts/FeeVaultWithdrawal.s.sol:FeeVaultWithdrawal",
            "label": "allowFailure",
            "offset": 20,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 29248,
            "contract": "scripts/FeeVaultWithdrawal.s.sol:FeeVaultWithdrawal",
            "label": "callData",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes_storage"
          }
        ]
      },
      "t_struct(Chain)3893_storage": {
        "encoding": "inplace",
        "label": "struct StdChains.Chain",
        "numberOfBytes": "128",
        "members": [
          {
            "astId": 3886,
            "contract": "scripts/FeeVaultWithdrawal.s.sol:FeeVaultWithdrawal",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 3888,
            "contract": "scripts/FeeVaultWithdrawal.s.sol:FeeVaultWithdrawal",
            "label": "chainId",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 3890,
            "contract": "scripts/FeeVaultWithdrawal.s.sol:FeeVaultWithdrawal",
            "label": "chainAlias",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 3892,
            "contract": "scripts/FeeVaultWithdrawal.s.sol:FeeVaultWithdrawal",
            "label": "rpcUrl",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          }
        ]
      },
      "t_struct(StdStorage)7998_storage": {
        "encoding": "inplace",
        "label": "struct StdStorage",
        "numberOfBytes": "224",
        "members": [
          {
            "astId": 7978,
            "contract": "scripts/FeeVaultWithdrawal.s.sol:FeeVaultWithdrawal",
            "label": "slots",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_uint256)))"
          },
          {
            "astId": 7986,
            "contract": "scripts/FeeVaultWithdrawal.s.sol:FeeVaultWithdrawal",
            "label": "finds",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_bool)))"
          },
          {
            "astId": 7989,
            "contract": "scripts/FeeVaultWithdrawal.s.sol:FeeVaultWithdrawal",
            "label": "_keys",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_bytes32)dyn_storage"
          },
          {
            "astId": 7991,
            "contract": "scripts/FeeVaultWithdrawal.s.sol:FeeVaultWithdrawal",
            "label": "_sig",
            "offset": 0,
            "slot": "3",
            "type": "t_bytes4"
          },
          {
            "astId": 7993,
            "contract": "scripts/FeeVaultWithdrawal.s.sol:FeeVaultWithdrawal",
            "label": "_depth",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 7995,
            "contract": "scripts/FeeVaultWithdrawal.s.sol:FeeVaultWithdrawal",
            "label": "_target",
            "offset": 0,
            "slot": "5",
            "type": "t_address"
          },
          {
            "astId": 7997,
            "contract": "scripts/FeeVaultWithdrawal.s.sol:FeeVaultWithdrawal",
            "label": "_set",
            "offset": 0,
            "slot": "6",
            "type": "t_bytes32"
          }
        ]
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  },
  "userdoc": {
    "version": 1,
    "kind": "user",
    "methods": {
      "run()": {
        "notice": "The entrypoint function. Determines which FeeVaults can be withdrawn from and then        will send the transaction via Multicall3 to withdraw all FeeVaults."
      }
    },
    "notice": "A script to make it very simple to withdraw from the fee vaults.         The usage is as follows:         $ forge script scripts/FeeVaultWithdrawal.s.sol \\             --rpc-url $ETH_RPC_URL --broadcast \\             --private-key $PRIVATE_KEY"
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "title": "FeeVaultWithdrawal"
  },
  "ast": {
    "absolutePath": "scripts/FeeVaultWithdrawal.s.sol",
    "id": 54951,
    "exportedSymbols": {
      "FeeVault": [
        81257
      ],
      "FeeVaultWithdrawal": [
        54950
      ],
      "IMulticall3": [
        29397
      ],
      "Predeploys": [
        76117
      ],
      "Script": [
        2434
      ],
      "console": [
        21109
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:3019:102",
    "nodes": [
      {
        "id": 54703,
        "nodeType": "PragmaDirective",
        "src": "32:23:102",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 54705,
        "nodeType": "ImportDirective",
        "src": "57:48:102",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/console.sol",
        "file": "forge-std/console.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54951,
        "sourceUnit": 21110,
        "symbolAliases": [
          {
            "foreign": {
              "id": 54704,
              "name": "console",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 21109,
              "src": "66:7:102",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 54707,
        "nodeType": "ImportDirective",
        "src": "106:46:102",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Script.sol",
        "file": "forge-std/Script.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54951,
        "sourceUnit": 2435,
        "symbolAliases": [
          {
            "foreign": {
              "id": 54706,
              "name": "Script",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 2434,
              "src": "115:6:102",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 54709,
        "nodeType": "ImportDirective",
        "src": "153:61:102",
        "nodes": [],
        "absolutePath": "src/libraries/Predeploys.sol",
        "file": "../src/libraries/Predeploys.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54951,
        "sourceUnit": 76118,
        "symbolAliases": [
          {
            "foreign": {
              "id": 54708,
              "name": "Predeploys",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 76117,
              "src": "162:10:102",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 54711,
        "nodeType": "ImportDirective",
        "src": "215:57:102",
        "nodes": [],
        "absolutePath": "src/universal/FeeVault.sol",
        "file": "../src/universal/FeeVault.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54951,
        "sourceUnit": 81258,
        "symbolAliases": [
          {
            "foreign": {
              "id": 54710,
              "name": "FeeVault",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 81257,
              "src": "224:8:102",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 54713,
        "nodeType": "ImportDirective",
        "src": "273:67:102",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/interfaces/IMulticall3.sol",
        "file": "forge-std/interfaces/IMulticall3.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 54951,
        "sourceUnit": 29398,
        "symbolAliases": [
          {
            "foreign": {
              "id": 54712,
              "name": "IMulticall3",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 29397,
              "src": "282:11:102",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 54950,
        "nodeType": "ContractDefinition",
        "src": "644:2406:102",
        "nodes": [
          {
            "id": 54722,
            "nodeType": "VariableDeclaration",
            "src": "688:72:102",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "multicall",
            "nameLocation": "717:9:102",
            "scope": 54950,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_IMulticall3_$29397",
              "typeString": "contract IMulticall3"
            },
            "typeName": {
              "id": 54718,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 54717,
                "name": "IMulticall3",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 29397,
                "src": "688:11:102"
              },
              "referencedDeclaration": 29397,
              "src": "688:11:102",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IMulticall3_$29397",
                "typeString": "contract IMulticall3"
              }
            },
            "value": {
              "arguments": [
                {
                  "id": 54720,
                  "name": "MULTICALL3_ADDRESS",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 2369,
                  "src": "741:18:102",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                ],
                "id": 54719,
                "name": "IMulticall3",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": 29397,
                "src": "729:11:102",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_contract$_IMulticall3_$29397_$",
                  "typeString": "type(contract IMulticall3)"
                }
              },
              "id": 54721,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "729:31:102",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IMulticall3_$29397",
                "typeString": "contract IMulticall3"
              }
            },
            "visibility": "private"
          },
          {
            "id": 54726,
            "nodeType": "VariableDeclaration",
            "src": "766:34:102",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "calls",
            "nameLocation": "795:5:102",
            "scope": 54950,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_struct$_Call3_$29249_storage_$dyn_storage",
              "typeString": "struct IMulticall3.Call3[]"
            },
            "typeName": {
              "baseType": {
                "id": 54724,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 54723,
                  "name": "IMulticall3.Call3",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29249,
                  "src": "766:17:102"
                },
                "referencedDeclaration": 29249,
                "src": "766:17:102",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_Call3_$29249_storage_ptr",
                  "typeString": "struct IMulticall3.Call3"
                }
              },
              "id": 54725,
              "nodeType": "ArrayTypeName",
              "src": "766:19:102",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_struct$_Call3_$29249_storage_$dyn_storage_ptr",
                "typeString": "struct IMulticall3.Call3[]"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 54881,
            "nodeType": "FunctionDefinition",
            "src": "989:1286:102",
            "nodes": [],
            "body": {
              "id": 54880,
              "nodeType": "Block",
              "src": "1013:1262:102",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 54738,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "expression": {
                              "arguments": [
                                {
                                  "id": 54733,
                                  "name": "multicall",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 54722,
                                  "src": "1039:9:102",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IMulticall3_$29397",
                                    "typeString": "contract IMulticall3"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_IMulticall3_$29397",
                                    "typeString": "contract IMulticall3"
                                  }
                                ],
                                "id": 54732,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "1031:7:102",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 54731,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "1031:7:102",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 54734,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1031:18:102",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "id": 54735,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "code",
                            "nodeType": "MemberAccess",
                            "src": "1031:23:102",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 54736,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "1031:30:102",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 54737,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1064:1:102",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "1031:34:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 54730,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1023:7:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 54739,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1023:43:102",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54740,
                  "nodeType": "ExpressionStatement",
                  "src": "1023:43:102"
                },
                {
                  "assignments": [
                    54745
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54745,
                      "mutability": "mutable",
                      "name": "vaults",
                      "nameLocation": "1094:6:102",
                      "nodeType": "VariableDeclaration",
                      "scope": 54880,
                      "src": "1077:23:102",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 54743,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1077:7:102",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 54744,
                        "nodeType": "ArrayTypeName",
                        "src": "1077:9:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54751,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "33",
                        "id": 54749,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1117:1:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "id": 54748,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1103:13:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 54746,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "1107:7:102",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 54747,
                        "nodeType": "ArrayTypeName",
                        "src": "1107:9:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 54750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1103:16:102",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1077:42:102"
                },
                {
                  "expression": {
                    "id": 54757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 54752,
                        "name": "vaults",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54745,
                        "src": "1129:6:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 54754,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 54753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1136:1:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1129:9:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 54755,
                        "name": "Predeploys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76117,
                        "src": "1141:10:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Predeploys_$76117_$",
                          "typeString": "type(library Predeploys)"
                        }
                      },
                      "id": 54756,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "SEQUENCER_FEE_WALLET",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 76052,
                      "src": "1141:31:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1129:43:102",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 54758,
                  "nodeType": "ExpressionStatement",
                  "src": "1129:43:102"
                },
                {
                  "expression": {
                    "id": 54764,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 54759,
                        "name": "vaults",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54745,
                        "src": "1182:6:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 54761,
                      "indexExpression": {
                        "hexValue": "31",
                        "id": 54760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1189:1:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1182:9:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 54762,
                        "name": "Predeploys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76117,
                        "src": "1194:10:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Predeploys_$76117_$",
                          "typeString": "type(library Predeploys)"
                        }
                      },
                      "id": 54763,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "BASE_FEE_VAULT",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 76096,
                      "src": "1194:25:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1182:37:102",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 54765,
                  "nodeType": "ExpressionStatement",
                  "src": "1182:37:102"
                },
                {
                  "expression": {
                    "id": 54771,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 54766,
                        "name": "vaults",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54745,
                        "src": "1229:6:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 54768,
                      "indexExpression": {
                        "hexValue": "32",
                        "id": 54767,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1236:1:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2_by_1",
                          "typeString": "int_const 2"
                        },
                        "value": "2"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1229:9:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 54769,
                        "name": "Predeploys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 76117,
                        "src": "1241:10:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Predeploys_$76117_$",
                          "typeString": "type(library Predeploys)"
                        }
                      },
                      "id": 54770,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "L1_FEE_VAULT",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 76100,
                      "src": "1241:23:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1229:35:102",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 54772,
                  "nodeType": "ExpressionStatement",
                  "src": "1229:35:102"
                },
                {
                  "body": {
                    "id": 54855,
                    "nodeType": "Block",
                    "src": "1315:805:102",
                    "statements": [
                      {
                        "assignments": [
                          54784
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 54784,
                            "mutability": "mutable",
                            "name": "vault",
                            "nameLocation": "1337:5:102",
                            "nodeType": "VariableDeclaration",
                            "scope": 54855,
                            "src": "1329:13:102",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 54783,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1329:7:102",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 54788,
                        "initialValue": {
                          "baseExpression": {
                            "id": 54785,
                            "name": "vaults",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54745,
                            "src": "1345:6:102",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 54787,
                          "indexExpression": {
                            "id": 54786,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54774,
                            "src": "1352:1:102",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1345:9:102",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1329:25:102"
                      },
                      {
                        "assignments": [
                          54790
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 54790,
                            "mutability": "mutable",
                            "name": "shouldCall",
                            "nameLocation": "1373:10:102",
                            "nodeType": "VariableDeclaration",
                            "scope": 54855,
                            "src": "1368:15:102",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 54789,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "1368:4:102",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 54794,
                        "initialValue": {
                          "arguments": [
                            {
                              "id": 54792,
                              "name": "vault",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54784,
                              "src": "1400:5:102",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 54791,
                            "name": "canWithdrawal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54910,
                            "src": "1386:13:102",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 54793,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1386:20:102",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1368:38:102"
                      },
                      {
                        "condition": {
                          "id": 54795,
                          "name": "shouldCall",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 54790,
                          "src": "1424:10:102",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 54853,
                          "nodeType": "Block",
                          "src": "1908:202:102",
                          "statements": [
                            {
                              "assignments": [
                                54836
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 54836,
                                  "mutability": "mutable",
                                  "name": "logline",
                                  "nameLocation": "1940:7:102",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 54853,
                                  "src": "1926:21:102",
                                  "stateVariable": false,
                                  "storageLocation": "memory",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_string_memory_ptr",
                                    "typeString": "string"
                                  },
                                  "typeName": {
                                    "id": 54835,
                                    "name": "string",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1926:6:102",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_storage_ptr",
                                      "typeString": "string"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 54846,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 54842,
                                        "name": "vault",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 54784,
                                        "src": "1996:5:102",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "expression": {
                                        "id": 54840,
                                        "name": "vm",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2381,
                                        "src": "1984:2:102",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_Vm_$13045",
                                          "typeString": "contract Vm"
                                        }
                                      },
                                      "id": 54841,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "toString",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 12102,
                                      "src": "1984:11:102",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_pure$_t_address_$returns$_t_string_memory_ptr_$",
                                        "typeString": "function (address) pure external returns (string memory)"
                                      }
                                    },
                                    "id": 54843,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1984:18:102",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  },
                                  {
                                    "hexValue": "20646f6573206e6f7420686176652061206c6172676520656e6f7567682062616c616e636520746f2077697468647261772e",
                                    "id": 54844,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2004:52:102",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_5775c56248caf421145a37d7750f5b11816d5b1cffadfe6a5ecbb676e354dd5a",
                                      "typeString": "literal_string \" does not have a large enough balance to withdraw.\""
                                    },
                                    "value": " does not have a large enough balance to withdraw."
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_5775c56248caf421145a37d7750f5b11816d5b1cffadfe6a5ecbb676e354dd5a",
                                      "typeString": "literal_string \" does not have a large enough balance to withdraw.\""
                                    }
                                  ],
                                  "expression": {
                                    "id": 54838,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "1970:6:102",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                                      "typeString": "type(string storage pointer)"
                                    },
                                    "typeName": {
                                      "id": 54837,
                                      "name": "string",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "1970:6:102",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 54839,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "concat",
                                  "nodeType": "MemberAccess",
                                  "src": "1970:13:102",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
                                    "typeString": "function () pure returns (string memory)"
                                  }
                                },
                                "id": 54845,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1970:87:102",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_string_memory_ptr",
                                  "typeString": "string memory"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "1926:131:102"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 54850,
                                    "name": "logline",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 54836,
                                    "src": "2087:7:102",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_string_memory_ptr",
                                      "typeString": "string memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 54847,
                                    "name": "console",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 21109,
                                    "src": "2075:7:102",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_console_$21109_$",
                                      "typeString": "type(library console)"
                                    }
                                  },
                                  "id": 54849,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "log",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 13640,
                                  "src": "2075:11:102",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (string memory) view"
                                  }
                                },
                                "id": 54851,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "2075:20:102",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 54852,
                              "nodeType": "ExpressionStatement",
                              "src": "2075:20:102"
                            }
                          ]
                        },
                        "id": 54854,
                        "nodeType": "IfStatement",
                        "src": "1420:690:102",
                        "trueBody": {
                          "id": 54834,
                          "nodeType": "Block",
                          "src": "1436:466:102",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "id": 54801,
                                        "name": "vault",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 54784,
                                        "src": "1538:5:102",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "hexValue": "66616c7365",
                                        "id": 54802,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "bool",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "1583:5:102",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        "value": "false"
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "expression": {
                                              "expression": {
                                                "id": 54805,
                                                "name": "FeeVault",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 81257,
                                                "src": "1647:8:102",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_contract$_FeeVault_$81257_$",
                                                  "typeString": "type(contract FeeVault)"
                                                }
                                              },
                                              "id": 54806,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "memberName": "withdraw",
                                              "nodeType": "MemberAccess",
                                              "referencedDeclaration": 81256,
                                              "src": "1647:17:102",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_declaration_nonpayable$__$returns$__$",
                                                "typeString": "function FeeVault.withdraw()"
                                              }
                                            },
                                            "id": 54807,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberName": "selector",
                                            "nodeType": "MemberAccess",
                                            "src": "1647:26:102",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes4",
                                              "typeString": "bytes4"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_bytes4",
                                              "typeString": "bytes4"
                                            }
                                          ],
                                          "expression": {
                                            "id": 54803,
                                            "name": "abi",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -1,
                                            "src": "1624:3:102",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_abi",
                                              "typeString": "abi"
                                            }
                                          },
                                          "id": 54804,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberName": "encodeWithSelector",
                                          "nodeType": "MemberAccess",
                                          "src": "1624:22:102",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                                            "typeString": "function (bytes4) pure returns (bytes memory)"
                                          }
                                        },
                                        "id": 54808,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1624:50:102",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_bool",
                                          "typeString": "bool"
                                        },
                                        {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      ],
                                      "expression": {
                                        "id": 54799,
                                        "name": "IMulticall3",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 29397,
                                        "src": "1486:11:102",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_contract$_IMulticall3_$29397_$",
                                          "typeString": "type(contract IMulticall3)"
                                        }
                                      },
                                      "id": 54800,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "Call3",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 29249,
                                      "src": "1486:17:102",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_struct$_Call3_$29249_storage_ptr_$",
                                        "typeString": "type(struct IMulticall3.Call3 storage pointer)"
                                      }
                                    },
                                    "id": 54809,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "structConstructorCall",
                                    "lValueRequested": false,
                                    "names": [
                                      "target",
                                      "allowFailure",
                                      "callData"
                                    ],
                                    "nodeType": "FunctionCall",
                                    "src": "1486:211:102",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_Call3_$29249_memory_ptr",
                                      "typeString": "struct IMulticall3.Call3 memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_struct$_Call3_$29249_memory_ptr",
                                      "typeString": "struct IMulticall3.Call3 memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 54796,
                                    "name": "calls",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 54726,
                                    "src": "1454:5:102",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_struct$_Call3_$29249_storage_$dyn_storage",
                                      "typeString": "struct IMulticall3.Call3 storage ref[] storage ref"
                                    }
                                  },
                                  "id": 54798,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "push",
                                  "nodeType": "MemberAccess",
                                  "src": "1454:10:102",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_Call3_$29249_storage_$dyn_storage_ptr_$_t_struct$_Call3_$29249_storage_$returns$__$bound_to$_t_array$_t_struct$_Call3_$29249_storage_$dyn_storage_ptr_$",
                                    "typeString": "function (struct IMulticall3.Call3 storage ref[] storage pointer,struct IMulticall3.Call3 storage ref)"
                                  }
                                },
                                "id": 54810,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1454:261:102",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 54811,
                              "nodeType": "ExpressionStatement",
                              "src": "1454:261:102"
                            },
                            {
                              "assignments": [
                                54813
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 54813,
                                  "mutability": "mutable",
                                  "name": "recipient",
                                  "nameLocation": "1742:9:102",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 54834,
                                  "src": "1734:17:102",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  "typeName": {
                                    "id": 54812,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1734:7:102",
                                    "stateMutability": "nonpayable",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 54822,
                              "initialValue": {
                                "arguments": [],
                                "expression": {
                                  "argumentTypes": [],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "id": 54817,
                                            "name": "vault",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 54784,
                                            "src": "1771:5:102",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "id": 54816,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "1763:8:102",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_payable_$",
                                            "typeString": "type(address payable)"
                                          },
                                          "typeName": {
                                            "id": 54815,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "1763:8:102",
                                            "stateMutability": "payable",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 54818,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "1763:14:102",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address_payable",
                                          "typeString": "address payable"
                                        }
                                      ],
                                      "id": 54814,
                                      "name": "FeeVault",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 81257,
                                      "src": "1754:8:102",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_FeeVault_$81257_$",
                                        "typeString": "type(contract FeeVault)"
                                      }
                                    },
                                    "id": 54819,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1754:24:102",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_FeeVault_$81257",
                                      "typeString": "contract FeeVault"
                                    }
                                  },
                                  "id": 54820,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "RECIPIENT",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 81113,
                                  "src": "1754:34:102",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                    "typeString": "function () view external returns (address)"
                                  }
                                },
                                "id": 54821,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1754:36:102",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "1734:56:102"
                            },
                            {
                              "assignments": [
                                54824
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 54824,
                                  "mutability": "mutable",
                                  "name": "balance",
                                  "nameLocation": "1816:7:102",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 54834,
                                  "src": "1808:15:102",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "typeName": {
                                    "id": 54823,
                                    "name": "uint256",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "1808:7:102",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 54827,
                              "initialValue": {
                                "expression": {
                                  "id": 54825,
                                  "name": "vault",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 54784,
                                  "src": "1826:5:102",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "id": 54826,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "balance",
                                "nodeType": "MemberAccess",
                                "src": "1826:13:102",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "1808:31:102"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 54829,
                                    "name": "balance",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 54824,
                                    "src": "1861:7:102",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 54830,
                                    "name": "recipient",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 54813,
                                    "src": "1870:9:102",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 54831,
                                    "name": "vault",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 54784,
                                    "src": "1881:5:102",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 54828,
                                  "name": "log",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 54949,
                                  "src": "1857:3:102",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_address_$_t_address_$returns$__$",
                                    "typeString": "function (uint256,address,address) view"
                                  }
                                },
                                "id": 54832,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1857:30:102",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 54833,
                              "nodeType": "ExpressionStatement",
                              "src": "1857:30:102"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 54779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 54776,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54774,
                      "src": "1291:1:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 54777,
                        "name": "vaults",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54745,
                        "src": "1295:6:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 54778,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1295:13:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1291:17:102",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 54856,
                  "initializationExpression": {
                    "assignments": [
                      54774
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 54774,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1288:1:102",
                        "nodeType": "VariableDeclaration",
                        "scope": 54856,
                        "src": "1280:9:102",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 54773,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1280:7:102",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 54775,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1280:9:102"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 54781,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1310:3:102",
                      "subExpression": {
                        "id": 54780,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54774,
                        "src": "1310:1:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 54782,
                    "nodeType": "ExpressionStatement",
                    "src": "1310:3:102"
                  },
                  "nodeType": "ForStatement",
                  "src": "1275:845:102"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 54860,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 54857,
                        "name": "calls",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54726,
                        "src": "2134:5:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_Call3_$29249_storage_$dyn_storage",
                          "typeString": "struct IMulticall3.Call3 storage ref[] storage ref"
                        }
                      },
                      "id": 54858,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2134:12:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 54859,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2149:1:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "2134:16:102",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 54879,
                  "nodeType": "IfStatement",
                  "src": "2130:139:102",
                  "trueBody": {
                    "id": 54878,
                    "nodeType": "Block",
                    "src": "2152:117:102",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 54861,
                              "name": "vm",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 2381,
                              "src": "2166:2:102",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Vm_$13045",
                                "typeString": "contract Vm"
                              }
                            },
                            "id": 54863,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "broadcast",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 11950,
                            "src": "2166:12:102",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$__$returns$__$",
                              "typeString": "function () external"
                            }
                          },
                          "id": 54864,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2166:14:102",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 54865,
                        "nodeType": "ExpressionStatement",
                        "src": "2166:14:102"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 54869,
                              "name": "calls",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54726,
                              "src": "2215:5:102",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_Call3_$29249_storage_$dyn_storage",
                                "typeString": "struct IMulticall3.Call3 storage ref[] storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_array$_t_struct$_Call3_$29249_storage_$dyn_storage",
                                "typeString": "struct IMulticall3.Call3 storage ref[] storage ref"
                              }
                            ],
                            "expression": {
                              "id": 54866,
                              "name": "multicall",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 54722,
                              "src": "2194:9:102",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IMulticall3_$29397",
                                "typeString": "contract IMulticall3"
                              }
                            },
                            "id": 54868,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "aggregate3",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 29286,
                            "src": "2194:20:102",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_payable$_t_array$_t_struct$_Call3_$29249_memory_ptr_$dyn_memory_ptr_$returns$_t_array$_t_struct$_Result_$29263_memory_ptr_$dyn_memory_ptr_$",
                              "typeString": "function (struct IMulticall3.Call3 memory[] memory) payable external returns (struct IMulticall3.Result memory[] memory)"
                            }
                          },
                          "id": 54870,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2194:27:102",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_struct$_Result_$29263_memory_ptr_$dyn_memory_ptr",
                            "typeString": "struct IMulticall3.Result memory[] memory"
                          }
                        },
                        "id": 54871,
                        "nodeType": "ExpressionStatement",
                        "src": "2194:27:102"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "537563636573732e",
                              "id": 54875,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2247:10:102",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8fff9639e53a08e7823be7ff2d2bcc59841d3f7595ca48f72e305544d094e996",
                                "typeString": "literal_string \"Success.\""
                              },
                              "value": "Success."
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_8fff9639e53a08e7823be7ff2d2bcc59841d3f7595ca48f72e305544d094e996",
                                "typeString": "literal_string \"Success.\""
                              }
                            ],
                            "expression": {
                              "id": 54872,
                              "name": "console",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 21109,
                              "src": "2235:7:102",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_console_$21109_$",
                                "typeString": "type(library console)"
                              }
                            },
                            "id": 54874,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "log",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 13640,
                            "src": "2235:11:102",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) view"
                            }
                          },
                          "id": 54876,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2235:23:102",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 54877,
                        "nodeType": "ExpressionStatement",
                        "src": "2235:23:102"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 54727,
              "nodeType": "StructuredDocumentation",
              "src": "807:177:102",
              "text": "@notice The entrypoint function. Determines which FeeVaults can be withdrawn from and then\n        will send the transaction via Multicall3 to withdraw all FeeVaults."
            },
            "functionSelector": "c0406226",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "run",
            "nameLocation": "998:3:102",
            "parameters": {
              "id": 54728,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1001:2:102"
            },
            "returnParameters": {
              "id": 54729,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1013:0:102"
            },
            "scope": 54950,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 54910,
            "nodeType": "FunctionDefinition",
            "src": "2440:253:102",
            "nodes": [],
            "body": {
              "id": 54909,
              "nodeType": "Block",
              "src": "2508:185:102",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    54890
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54890,
                      "mutability": "mutable",
                      "name": "minWithdrawalAmount",
                      "nameLocation": "2526:19:102",
                      "nodeType": "VariableDeclaration",
                      "scope": 54909,
                      "src": "2518:27:102",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 54889,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2518:7:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54899,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 54894,
                                "name": "_vault",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 54884,
                                "src": "2565:6:102",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 54893,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "2557:8:102",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_payable_$",
                                "typeString": "type(address payable)"
                              },
                              "typeName": {
                                "id": 54892,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "2557:8:102",
                                "stateMutability": "payable",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 54895,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2557:15:102",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address_payable",
                              "typeString": "address payable"
                            }
                          ],
                          "id": 54891,
                          "name": "FeeVault",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 81257,
                          "src": "2548:8:102",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_FeeVault_$81257_$",
                            "typeString": "type(contract FeeVault)"
                          }
                        },
                        "id": 54896,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2548:25:102",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_FeeVault_$81257",
                          "typeString": "contract FeeVault"
                        }
                      },
                      "id": 54897,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "MIN_WITHDRAWAL_AMOUNT",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 81110,
                      "src": "2548:47:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 54898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2548:49:102",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2518:79:102"
                },
                {
                  "assignments": [
                    54901
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54901,
                      "mutability": "mutable",
                      "name": "balance",
                      "nameLocation": "2615:7:102",
                      "nodeType": "VariableDeclaration",
                      "scope": 54909,
                      "src": "2607:15:102",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 54900,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2607:7:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54904,
                  "initialValue": {
                    "expression": {
                      "id": 54902,
                      "name": "_vault",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54884,
                      "src": "2625:6:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "id": 54903,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "balance",
                    "nodeType": "MemberAccess",
                    "src": "2625:14:102",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2607:32:102"
                },
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 54907,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 54905,
                      "name": "balance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54901,
                      "src": "2656:7:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">=",
                    "rightExpression": {
                      "id": 54906,
                      "name": "minWithdrawalAmount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 54890,
                      "src": "2667:19:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2656:30:102",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 54888,
                  "id": 54908,
                  "nodeType": "Return",
                  "src": "2649:37:102"
                }
              ]
            },
            "documentation": {
              "id": 54882,
              "nodeType": "StructuredDocumentation",
              "src": "2281:154:102",
              "text": "@notice Checks whether or not a FeeVault can be withdrawn. The balance of the account must\n         be larger than the `MIN_WITHDRAWAL_AMOUNT`."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "canWithdrawal",
            "nameLocation": "2449:13:102",
            "parameters": {
              "id": 54885,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54884,
                  "mutability": "mutable",
                  "name": "_vault",
                  "nameLocation": "2471:6:102",
                  "nodeType": "VariableDeclaration",
                  "scope": 54910,
                  "src": "2463:14:102",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 54883,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2463:7:102",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2462:16:102"
            },
            "returnParameters": {
              "id": 54888,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54887,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 54910,
                  "src": "2502:4:102",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 54886,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2502:4:102",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2501:6:102"
            },
            "scope": 54950,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 54949,
            "nodeType": "FunctionDefinition",
            "src": "2758:290:102",
            "nodes": [],
            "body": {
              "id": 54948,
              "nodeType": "Block",
              "src": "2839:209:102",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    54921
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 54921,
                      "mutability": "mutable",
                      "name": "logline",
                      "nameLocation": "2863:7:102",
                      "nodeType": "VariableDeclaration",
                      "scope": 54948,
                      "src": "2849:21:102",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string"
                      },
                      "typeName": {
                        "id": 54920,
                        "name": "string",
                        "nodeType": "ElementaryTypeName",
                        "src": "2849:6:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage_ptr",
                          "typeString": "string"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 54941,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "5769746864726177696e6720",
                        "id": 54925,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2900:14:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7ada58671db603c80bbd5375df1ddfccb317fcb0b15f7ac99b8223e8e1920660",
                          "typeString": "literal_string \"Withdrawing \""
                        },
                        "value": "Withdrawing "
                      },
                      {
                        "arguments": [
                          {
                            "id": 54928,
                            "name": "_balance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54913,
                            "src": "2928:8:102",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 54926,
                            "name": "vm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2381,
                            "src": "2916:2:102",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Vm_$13045",
                              "typeString": "contract Vm"
                            }
                          },
                          "id": 54927,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "toString",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12130,
                          "src": "2916:11:102",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_string_memory_ptr_$",
                            "typeString": "function (uint256) pure external returns (string memory)"
                          }
                        },
                        "id": 54929,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2916:21:102",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "20746f20",
                        "id": 54930,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2939:6:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_91c1924faff98c0a82a1f4ffd45a2fbb571549dcfd813e52087fb435e601dc43",
                          "typeString": "literal_string \" to \""
                        },
                        "value": " to "
                      },
                      {
                        "arguments": [
                          {
                            "id": 54933,
                            "name": "_recipient",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54915,
                            "src": "2959:10:102",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 54931,
                            "name": "vm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2381,
                            "src": "2947:2:102",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Vm_$13045",
                              "typeString": "contract Vm"
                            }
                          },
                          "id": 54932,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "toString",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12102,
                          "src": "2947:11:102",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_address_$returns$_t_string_memory_ptr_$",
                            "typeString": "function (address) pure external returns (string memory)"
                          }
                        },
                        "id": 54934,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2947:23:102",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      },
                      {
                        "hexValue": "2066726f6d20",
                        "id": 54935,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2972:8:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5afbd3336312b41fa5f0aba762fd16cfc8f77171ea0a11e245b84a6908cb181b",
                          "typeString": "literal_string \" from \""
                        },
                        "value": " from "
                      },
                      {
                        "arguments": [
                          {
                            "id": 54938,
                            "name": "_vault",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 54917,
                            "src": "2994:6:102",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 54936,
                            "name": "vm",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 2381,
                            "src": "2982:2:102",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Vm_$13045",
                              "typeString": "contract Vm"
                            }
                          },
                          "id": 54937,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "toString",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 12102,
                          "src": "2982:11:102",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_pure$_t_address_$returns$_t_string_memory_ptr_$",
                            "typeString": "function (address) pure external returns (string memory)"
                          }
                        },
                        "id": 54939,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2982:19:102",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_7ada58671db603c80bbd5375df1ddfccb317fcb0b15f7ac99b8223e8e1920660",
                          "typeString": "literal_string \"Withdrawing \""
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_91c1924faff98c0a82a1f4ffd45a2fbb571549dcfd813e52087fb435e601dc43",
                          "typeString": "literal_string \" to \""
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5afbd3336312b41fa5f0aba762fd16cfc8f77171ea0a11e245b84a6908cb181b",
                          "typeString": "literal_string \" from \""
                        },
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 54923,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "2873:6:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_string_storage_ptr_$",
                          "typeString": "type(string storage pointer)"
                        },
                        "typeName": {
                          "id": 54922,
                          "name": "string",
                          "nodeType": "ElementaryTypeName",
                          "src": "2873:6:102",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 54924,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "concat",
                      "nodeType": "MemberAccess",
                      "src": "2873:13:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_stringconcat_pure$__$returns$_t_string_memory_ptr_$",
                        "typeString": "function () pure returns (string memory)"
                      }
                    },
                    "id": 54940,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2873:138:102",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2849:162:102"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 54945,
                        "name": "logline",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 54921,
                        "src": "3033:7:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_memory_ptr",
                          "typeString": "string memory"
                        }
                      ],
                      "expression": {
                        "id": 54942,
                        "name": "console",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21109,
                        "src": "3021:7:102",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_console_$21109_$",
                          "typeString": "type(library console)"
                        }
                      },
                      "id": 54944,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "log",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 13640,
                      "src": "3021:11:102",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) view"
                      }
                    },
                    "id": 54946,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3021:20:102",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 54947,
                  "nodeType": "ExpressionStatement",
                  "src": "3021:20:102"
                }
              ]
            },
            "documentation": {
              "id": 54911,
              "nodeType": "StructuredDocumentation",
              "src": "2699:54:102",
              "text": "@notice Logs the information relevant to the user."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "log",
            "nameLocation": "2767:3:102",
            "parameters": {
              "id": 54918,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 54913,
                  "mutability": "mutable",
                  "name": "_balance",
                  "nameLocation": "2779:8:102",
                  "nodeType": "VariableDeclaration",
                  "scope": 54949,
                  "src": "2771:16:102",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 54912,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2771:7:102",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54915,
                  "mutability": "mutable",
                  "name": "_recipient",
                  "nameLocation": "2797:10:102",
                  "nodeType": "VariableDeclaration",
                  "scope": 54949,
                  "src": "2789:18:102",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 54914,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2789:7:102",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 54917,
                  "mutability": "mutable",
                  "name": "_vault",
                  "nameLocation": "2817:6:102",
                  "nodeType": "VariableDeclaration",
                  "scope": 54949,
                  "src": "2809:14:102",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 54916,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2809:7:102",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2770:54:102"
            },
            "returnParameters": {
              "id": 54919,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2839:0:102"
            },
            "scope": 54950,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 54715,
              "name": "Script",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 2434,
              "src": "675:6:102"
            },
            "id": 54716,
            "nodeType": "InheritanceSpecifier",
            "src": "675:6:102"
          }
        ],
        "canonicalName": "FeeVaultWithdrawal",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 54714,
          "nodeType": "StructuredDocumentation",
          "src": "342:302:102",
          "text": "@title FeeVaultWithdrawal\n @notice A script to make it very simple to withdraw from the fee vaults.\n         The usage is as follows:\n         $ forge script scripts/FeeVaultWithdrawal.s.sol \\\n             --rpc-url $ETH_RPC_URL --broadcast \\\n             --private-key $PRIVATE_KEY"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          54950,
          2434,
          2397,
          2385,
          11490,
          6279,
          4546
        ],
        "name": "FeeVaultWithdrawal",
        "nameLocation": "653:18:102",
        "scope": 54951,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 102
}