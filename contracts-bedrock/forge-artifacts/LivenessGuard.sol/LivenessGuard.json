{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract Safe",
          "name": "_safe",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "name": "OwnerRecorded",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        },
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "name": "checkAfterExecution",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        },
        {
          "internalType": "enum Enum.Operation",
          "name": "operation",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "safeTxGas",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "baseGas",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "gasPrice",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "gasToken",
          "type": "address"
        },
        {
          "internalType": "address payable",
          "name": "refundReceiver",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "signatures",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "msgSender",
          "type": "address"
        }
      ],
      "name": "checkTransaction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "lastLive",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "safe",
      "outputs": [
        {
          "internalType": "contract Safe",
          "name": "safe_",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "showLiveness",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60a06040523480156200001157600080fd5b506040516200177138038062001771833981016040819052620000349162000170565b806001600160a01b03166080816001600160a01b0316815250506000816001600160a01b031663a0e67e2b6040518163ffffffff1660e01b8152600401600060405180830381865afa1580156200008f573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052620000b99190810190620001bf565b905060005b81518110156200014e576000828281518110620000df57620000df62000291565b6020908102919091018101516001600160a01b0381166000818152808452604090819020429055519081529092507f833bc129023866d52116d61e94b791eb8be46f05709362e0bcf1fe7c1a8c225c910160405180910390a150806200014581620002a7565b915050620000be565b505050620002cf565b6001600160a01b03811681146200016d57600080fd5b50565b6000602082840312156200018357600080fd5b8151620001908162000157565b9392505050565b634e487b7160e01b600052604160045260246000fd5b8051620001ba8162000157565b919050565b60006020808385031215620001d357600080fd5b82516001600160401b0380821115620001eb57600080fd5b818501915085601f8301126200020057600080fd5b81518181111562000215576200021562000197565b8060051b604051601f19603f830116810181811085821117156200023d576200023d62000197565b6040529182528482019250838101850191888311156200025c57600080fd5b938501935b8285101562000285576200027585620001ad565b8452938501939285019262000261565b98975050505050505050565b634e487b7160e01b600052603260045260246000fd5b600060018201620002c857634e487b7160e01b600052601160045260246000fd5b5060010190565b6080516114566200031b6000396000818160c40152818161025c015281816103bf015281816104c1015281816105080152818161060b015281816107ad015261098501526114566000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c806354fd4d501161005b57806354fd4d50146100f857806375f0bb52146101415780639327136814610154578063e458779b1461016757600080fd5b806301ffc9a714610082578063186f0354146100aa5780634c205d0d146100ee575b600080fd5b610095610090366004610e47565b610195565b60405190151581526020015b60405180910390f35b60405173ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001681526020016100a1565b6100f661022e565b005b6101346040518060400160405280600581526020017f312e302e3000000000000000000000000000000000000000000000000000000081525081565b6040516100a19190610ef4565b6100f661014f366004611057565b6103b3565b6100f661016236600461114a565b6107a1565b61018761017536600461117a565b60006020819052908152604090205481565b6040519081526020016100a1565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167fe6d7a83a00000000000000000000000000000000000000000000000000000000148061022857507fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b6040517f2f54bf6e0000000000000000000000000000000000000000000000000000000081523360048201527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690632f54bf6e90602401602060405180830381865afa1580156102b8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906102dc9190611197565b61036d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603860248201527f4c6976656e65737347756172643a206f6e6c792053616665206f776e6572732060448201527f6d61792064656d6f6e737472617465206c6976656e657373000000000000000060648201526084015b60405180910390fd5b336000818152602081815260409182902042905590519182527f833bc129023866d52116d61e94b791eb8be46f05709362e0bcf1fe7c1a8c225c910160405180910390a1565b6103bb61096d565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a0e67e2b6040518163ffffffff1660e01b8152600401600060405180830381865afa158015610428573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261046e91908101906111b4565b905060005b81518110156104bc576104a982828151811061049157610491611266565b60200260200101516001610a3490919063ffffffff16565b50806104b4816112c4565b915050610473565b5060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663d8d11f788e8e8e8e8e8e8e8e8e60017f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663affed0e06040518163ffffffff1660e01b8152600401602060405180830381865afa158015610571573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061059591906112fc565b61059f9190611315565b6040518b63ffffffff1660e01b81526004016105c49a9998979695949392919061132c565b602060405180830381865afa1580156105e1573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061060591906112fc565b905060007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663e75235b86040518163ffffffff1660e01b8152600401602060405180830381865afa158015610674573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061069891906112fc565b905060006106a7838784610a5d565b905060005b815181101561078f57426000808484815181106106cb576106cb611266565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055507f833bc129023866d52116d61e94b791eb8be46f05709362e0bcf1fe7c1a8c225c82828151811061074457610744611266565b6020026020010151604051610775919073ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b60405180910390a180610787816112c4565b9150506106ac565b50505050505050505050505050505050565b6107a961096d565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1663a0e67e2b6040518163ffffffff1660e01b8152600401600060405180830381865afa158015610816573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261085c91908101906111b4565b905060005b81518110156108e157600082828151811061087e5761087e611266565b6020026020010151905061089c816001610c7a90919063ffffffff16565b15156000036108ce5773ffffffffffffffffffffffffffffffffffffffff811660009081526020819052604090204290555b50806108d9816112c4565b915050610861565b5060006108ee6001610c9c565b905060005b815181101561096657600082828151811061091057610910611266565b60209081029190910181015173ffffffffffffffffffffffffffffffffffffffff811660009081529182905260408220919091559050610951600182610c7a565b5050808061095e906112c4565b9150506108f3565b5050505050565b3373ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614610a32576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602f60248201527f4c6976656e65737347756172643a206f6e6c7920536166652063616e2063616c60448201527f6c20746869732066756e6374696f6e00000000000000000000000000000000006064820152608401610364565b565b6000610a568373ffffffffffffffffffffffffffffffffffffffff8416610ca9565b9392505050565b60608167ffffffffffffffff811115610a7857610a78610f3c565b604051908082528060200260200182016040528015610aa1578160200160208202803683370190505b50905060008060008060005b86811015610c6e576041818102890160208101516040820151919092015160ff16955090935091506000849003610ae9578260001c9450610c24565b8360ff16600103610aff578260001c9450610c24565b601e8460ff161115610bc4576040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c81018a9052600190605c0160405160208183030381529060405280519060200120600486610b6491906113f7565b6040805160008152602081018083529390935260ff90911690820152606081018590526080810184905260a0016020604051602081039080840390855afa158015610bb3573d6000803e3d6000fd5b505050602060405103519450610c24565b6040805160008152602081018083528b905260ff861691810191909152606081018490526080810183905260019060a0016020604051602081039080840390855afa158015610c17573d6000803e3d6000fd5b5050506020604051035194505b84868281518110610c3757610c37611266565b73ffffffffffffffffffffffffffffffffffffffff9092166020928302919091019091015280610c66816112c4565b915050610aad565b50505050509392505050565b6000610a568373ffffffffffffffffffffffffffffffffffffffff8416610cf8565b60606000610a5683610deb565b6000818152600183016020526040812054610cf057508154600181810184556000848152602080822090930184905584548482528286019093526040902091909155610228565b506000610228565b60008181526001830160205260408120548015610de1576000610d1c600183611315565b8554909150600090610d3090600190611315565b9050818114610d95576000866000018281548110610d5057610d50611266565b9060005260206000200154905080876000018481548110610d7357610d73611266565b6000918252602080832090910192909255918252600188019052604090208390555b8554869080610da657610da661141a565b600190038181906000526020600020016000905590558560010160008681526020019081526020016000206000905560019350505050610228565b6000915050610228565b606081600001805480602002602001604051908101604052809291908181526020018280548015610e3b57602002820191906000526020600020905b815481526020019060010190808311610e27575b50505050509050919050565b600060208284031215610e5957600080fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114610a5657600080fd5b6000815180845260005b81811015610eaf57602081850181015186830182015201610e93565b81811115610ec1576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081526000610a566020830184610e89565b73ffffffffffffffffffffffffffffffffffffffff81168114610f2957600080fd5b50565b8035610f3781610f07565b919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610fb257610fb2610f3c565b604052919050565b600082601f830112610fcb57600080fd5b813567ffffffffffffffff811115610fe557610fe5610f3c565b61101660207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601610f6b565b81815284602083860101111561102b57600080fd5b816020850160208301376000918101602001919091529392505050565b803560028110610f3757600080fd5b60008060008060008060008060008060006101608c8e03121561107957600080fd5b6110828c610f2c565b9a5060208c0135995067ffffffffffffffff8060408e013511156110a557600080fd5b6110b58e60408f01358f01610fba565b99506110c360608e01611048565b985060808d0135975060a08d0135965060c08d013595506110e660e08e01610f2c565b94506110f56101008e01610f2c565b9350806101208e0135111561110957600080fd5b5061111b8d6101208e01358e01610fba565b915061112a6101408d01610f2c565b90509295989b509295989b9093969950565b8015158114610f2957600080fd5b6000806040838503121561115d57600080fd5b82359150602083013561116f8161113c565b809150509250929050565b60006020828403121561118c57600080fd5b8135610a5681610f07565b6000602082840312156111a957600080fd5b8151610a568161113c565b600060208083850312156111c757600080fd5b825167ffffffffffffffff808211156111df57600080fd5b818501915085601f8301126111f357600080fd5b81518181111561120557611205610f3c565b8060051b9150611216848301610f6b565b818152918301840191848101908884111561123057600080fd5b938501935b8385101561125a578451925061124a83610f07565b8282529385019390850190611235565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036112f5576112f5611295565b5060010190565b60006020828403121561130e57600080fd5b5051919050565b60008282101561132757611327611295565b500390565b600061014073ffffffffffffffffffffffffffffffffffffffff808e1684528c60208501528160408501526113638285018d610e89565b925060028b1061139c577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8a60608501528960808501528860a08501528760c085015280871660e085015250506113e161010083018573ffffffffffffffffffffffffffffffffffffffff169052565b826101208301529b9a5050505050505050505050565b600060ff821660ff84168082101561141157611411611295565b90039392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fdfea164736f6c634300080f000a",
    "sourceMap": "1239:5732:144:-:0;;;2298:295;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2339:5;-1:-1:-1;;;;;2332:12:144;;;-1:-1:-1;;;;;2332:12:144;;;;;2354:23;2380:5;-1:-1:-1;;;;;2380:15:144;;:17;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2380:17:144;;;;;;;;;;;;:::i;:::-;2354:43;;2412:9;2407:180;2431:6;:13;2427:1;:17;2407:180;;;2465:13;2481:6;2488:1;2481:9;;;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;2504:15:144;;:8;:15;;;;;;;;;;;2522;2504:33;;2556:20;2125:51:322;;;2481:9:144;;-1:-1:-1;2556:20:144;;2098:18:322;2556:20:144;;;;;;;-1:-1:-1;2446:3:144;;;;:::i;:::-;;;;2407:180;;;;2322:271;2298:295;1239:5732;;14:137:322;-1:-1:-1;;;;;95:31:322;;85:42;;75:70;;141:1;138;131:12;75:70;14:137;:::o;156:271::-;240:6;293:2;281:9;272:7;268:23;264:32;261:52;;;309:1;306;299:12;261:52;341:9;335:16;360:37;391:5;360:37;:::i;:::-;416:5;156:271;-1:-1:-1;;;156:271:322:o;432:127::-;493:10;488:3;484:20;481:1;474:31;524:4;521:1;514:15;548:4;545:1;538:15;564:144;643:13;;665:37;643:13;665:37;:::i;:::-;564:144;;;:::o;713:1129::-;808:6;839:2;882;870:9;861:7;857:23;853:32;850:52;;;898:1;895;888:12;850:52;925:16;;-1:-1:-1;;;;;990:14:322;;;987:34;;;1017:1;1014;1007:12;987:34;1055:6;1044:9;1040:22;1030:32;;1100:7;1093:4;1089:2;1085:13;1081:27;1071:55;;1122:1;1119;1112:12;1071:55;1151:2;1145:9;1173:2;1169;1166:10;1163:36;;;1179:18;;:::i;:::-;1225:2;1222:1;1218:10;1257:2;1251:9;1320:2;1316:7;1311:2;1307;1303:11;1299:25;1291:6;1287:38;1375:6;1363:10;1360:22;1355:2;1343:10;1340:18;1337:46;1334:72;;;1386:18;;:::i;:::-;1422:2;1415:22;1472:18;;;1506:15;;;;-1:-1:-1;1548:11:322;;;1544:20;;;1576:19;;;1573:39;;;1608:1;1605;1598:12;1573:39;1632:11;;;;1652:159;1668:6;1663:3;1660:15;1652:159;;;1734:34;1764:3;1734:34;:::i;:::-;1722:47;;1685:12;;;;1789;;;;1652:159;;;1830:6;713:1129;-1:-1:-1;;;;;;;;713:1129:322:o;1847:127::-;1908:10;1903:3;1899:20;1896:1;1889:31;1939:4;1936:1;1929:15;1963:4;1960:1;1953:15;2187:232;2226:3;2247:17;;;2244:140;;2306:10;2301:3;2297:20;2294:1;2287:31;2341:4;2338:1;2331:15;2369:4;2366:1;2359:15;2244:140;-1:-1:-1;2411:1:322;2400:13;;2187:232::o;:::-;1239:5732:144;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "1239:5732:144:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;683:251:71;;;;;;:::i;:::-;;:::i;:::-;;;516:14:322;;509:22;491:41;;479:2;464:18;683:251:71;;;;;;;;2711:78:144;;;879:42:322;2778:4:144;867:55:322;849:74;;837:2;822:18;2711:78:144;681:248:322;6737:232:144;;;:::i;:::-;;1542:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3201:1635::-;;;;;;:::i;:::-;;:::i;5290:1252::-;;;;;;:::i;:::-;;:::i;1857:43::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;5320:25:322;;;5308:2;5293:18;1857:43:144;5174:177:322;683:251:71;770:4;805:38;;;820:23;805:38;;:108;;-1:-1:-1;873:40:71;;;888:25;873:40;805:108;786:127;683:251;-1:-1:-1;;683:251:71:o;6737:232:144:-;6788:24;;;;;6801:10;6788:24;;;849:74:322;6788:4:144;:12;;;;;822:18:322;;6788:24:144;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6780:93;;;;;;;6039:2:322;6780:93:144;;;6021:21:322;6078:2;6058:18;;;6051:30;6117:34;6097:18;;;6090:62;6188:26;6168:18;;;6161:54;6232:19;;6780:93:144;;;;;;;;;6892:10;6883:8;:20;;;;;;;;;;;;6906:15;6883:38;;6937:25;;849:74:322;;;6937:25:144;;822:18:322;6937:25:144;;;;;;;6737:232::o;3201:1635::-;3626:18;:16;:18::i;:::-;3774:23;3800:4;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3774:42;;3831:9;3826:96;3850:6;:13;3846:1;:17;3826:96;;;3884:27;3901:6;3908:1;3901:9;;;;;;;;:::i;:::-;;;;;;;3884:12;:16;;:27;;;;:::i;:::-;-1:-1:-1;3865:3:144;;;;:::i;:::-;;;;3826:96;;;;4102:14;4119:4;:23;;;4161:2;4184:5;4209:4;4238:9;4272;4304:7;4335:8;4367;4405:14;4456:1;4441:4;:10;;;:12;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:16;;;;:::i;:::-;4119:349;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4102:366;;4479:17;4499:4;:17;;;:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4479:39;;4528:24;4567:100;4603:6;4623:10;4655:9;4567:23;:100::i;:::-;4528:139;;4683:9;4678:152;4702:7;:14;4698:1;:18;4678:152;;;4760:15;4737:8;:20;4746:7;4754:1;4746:10;;;;;;;;:::i;:::-;;;;;;;4737:20;;;;;;;;;;;;;;;:38;;;;4794:25;4808:7;4816:1;4808:10;;;;;;;;:::i;:::-;;;;;;;4794:25;;;;;879:42:322;867:55;;;;849:74;;837:2;822:18;;681:248;4794:25:144;;;;;;;;4718:3;;;;:::i;:::-;;;;4678:152;;;;3562:1274;;;;3201:1635;;;;;;;;;;;:::o;5290:1252::-;5353:18;:16;:18::i;:::-;5422:28;5453:4;:14;;;:16;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5422:47;;5581:9;5576:392;5600:11;:18;5596:1;:22;5576:392;;;5703:18;5724:11;5736:1;5724:14;;;;;;;;:::i;:::-;;;;;;;5703:35;;5756:31;5776:10;5756:12;:19;;:31;;;;:::i;:::-;:40;;5791:5;5756:40;5752:206;;5905:20;;;:8;:20;;;;;;;;;;5928:15;5905:38;;5752:206;-1:-1:-1;5620:3:144;;;;:::i;:::-;;;;5576:392;;;;6258:34;6295:21;:12;:19;:21::i;:::-;6258:58;;6331:9;6326:210;6350:17;:24;6346:1;:28;6326:210;;;6395:19;6417:17;6435:1;6417:20;;;;;;;;:::i;:::-;;;;;;;;;;;;6458:21;;;:8;:21;;;;;;;;;;6451:28;;;;6417:20;-1:-1:-1;6493:32:144;:12;6417:20;6493:19;:32::i;:::-;;6381:155;6376:3;;;;;:::i;:::-;;;;6326:210;;;;5343:1199;;5290:1252;;:::o;2886:146::-;2946:10;:27;2968:4;2946:27;;2938:87;;;;;;;9784:2:322;2938:87:144;;;9766:21:322;9823:2;9803:18;;;9796:30;9862:34;9842:18;;;9835:62;9933:17;9913:18;;;9906:45;9968:19;;2938:87:144;9582:411:322;2938:87:144;2886:146::o;8028:150:67:-;8098:4;8121:50;8126:3;8146:23;;;8121:4;:50::i;:::-;8114:57;8028:150;-1:-1:-1;;;8028:150:67:o;2301:1696:146:-;2470:24;2534:18;2520:33;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2520:33:146;;2510:43;;2564:20;2594:7;2611:9;2630;2649;2668:1323;2684:18;2680:1;:22;2668:1323;;;1248:4;1244:14;;;1282:40;;1316:4;1282:40;;1276:47;1381:4;1347:40;;1341:47;1699:40;;;;1693:47;1742:4;1689:58;;-1:-1:-1;1276:47:146;;-1:-1:-1;1341:47:146;-1:-1:-1;2787:1:146;2782:6;;;2778:1164;;3007:1;2999:10;;2968:43;;2778:1164;;;3036:1;:6;;3041:1;3036:6;3032:910;;3253:1;3245:10;;3214:43;;3032:910;;;3286:2;3282:1;:6;;;3278:664;;;3618:62;;10240:66:322;3618:62:146;;;10228:79:322;10323:12;;;10316:28;;;3598:97:146;;10360:12:322;;3618:62:146;;;;;;;;;;;;3608:73;;;;;;3687:1;3683;:5;;;;:::i;:::-;3598:97;;;;;;;;;;;;10810:25:322;;;;10883:4;10871:17;;;10851:18;;;10844:45;10905:18;;;10898:34;;;10948:18;;;10941:34;;;10782:19;;3598:97:146;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3563:132;;3278:664;;;3899:28;;;;;;;;;;;;10810:25:322;;;10883:4;10871:17;;10851:18;;;10844:45;;;;10905:18;;;10898:34;;;10948:18;;;10941:34;;;3899:28:146;;10782:19:322;;3899:28:146;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3884:43;;3278:664;3968:12;3955:7;3963:1;3955:10;;;;;;;;:::i;:::-;:25;;;;:10;;;;;;;;;;;:25;2704:3;;;;:::i;:::-;;;;2668:1323;;;2500:1497;;;;;2301:1696;;;;;:::o;8346:156:67:-;8419:4;8442:53;8450:3;8470:23;;;8442:7;:53::i;9982:300::-;10045:16;10073:22;10098:19;10106:3;10098:7;:19::i;2113:404::-;2176:4;4250:19;;;:12;;;:19;;;;;;2192:319;;-1:-1:-1;2234:23:67;;;;;;;;:11;:23;;;;;;;;;;;;;2414:18;;2392:19;;;:12;;;:19;;;;;;:40;;;;2446:11;;2192:319;-1:-1:-1;2495:5:67;2488:12;;2685:1388;2751:4;2888:19;;;:12;;;:19;;;;;;2922:15;;2918:1149;;3291:21;3315:14;3328:1;3315:10;:14;:::i;:::-;3363:18;;3291:38;;-1:-1:-1;3343:17:67;;3363:22;;3384:1;;3363:22;:::i;:::-;3343:42;;3417:13;3404:9;:26;3400:398;;3450:17;3470:3;:11;;3482:9;3470:22;;;;;;;;:::i;:::-;;;;;;;;;3450:42;;3621:9;3592:3;:11;;3604:13;3592:26;;;;;;;;:::i;:::-;;;;;;;;;;;;:38;;;;3704:23;;;:12;;;:23;;;;;:36;;;3400:398;3876:17;;:3;;:17;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;3968:3;:12;;:19;3981:5;3968:19;;;;;;;;;;;3961:26;;;4009:4;4002:11;;;;;;;2918:1149;4051:5;4044:12;;;;;5469:109;5525:16;5560:3;:11;;5553:18;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5469:109;;;:::o;14:332:322:-;72:6;125:2;113:9;104:7;100:23;96:32;93:52;;;141:1;138;131:12;93:52;180:9;167:23;230:66;223:5;219:78;212:5;209:89;199:117;;312:1;309;302:12;934:531;976:3;1014:5;1008:12;1041:6;1036:3;1029:19;1066:1;1076:162;1090:6;1087:1;1084:13;1076:162;;;1152:4;1208:13;;;1204:22;;1198:29;1180:11;;;1176:20;;1169:59;1105:12;1076:162;;;1256:6;1253:1;1250:13;1247:87;;;1322:1;1315:4;1306:6;1301:3;1297:16;1293:27;1286:38;1247:87;-1:-1:-1;1379:2:322;1367:15;1384:66;1363:88;1354:98;;;;1454:4;1350:109;;934:531;-1:-1:-1;;934:531:322:o;1470:220::-;1619:2;1608:9;1601:21;1582:4;1639:45;1680:2;1669:9;1665:18;1657:6;1639:45;:::i;1695:154::-;1781:42;1774:5;1770:54;1763:5;1760:65;1750:93;;1839:1;1836;1829:12;1750:93;1695:154;:::o;1854:134::-;1922:20;;1951:31;1922:20;1951:31;:::i;:::-;1854:134;;;:::o;1993:184::-;2045:77;2042:1;2035:88;2142:4;2139:1;2132:15;2166:4;2163:1;2156:15;2182:334;2253:2;2247:9;2309:2;2299:13;;2314:66;2295:86;2283:99;;2412:18;2397:34;;2433:22;;;2394:62;2391:88;;;2459:18;;:::i;:::-;2495:2;2488:22;2182:334;;-1:-1:-1;2182:334:322:o;2521:589::-;2563:5;2616:3;2609:4;2601:6;2597:17;2593:27;2583:55;;2634:1;2631;2624:12;2583:55;2670:6;2657:20;2696:18;2692:2;2689:26;2686:52;;;2718:18;;:::i;:::-;2762:114;2870:4;2801:66;2794:4;2790:2;2786:13;2782:86;2778:97;2762:114;:::i;:::-;2901:2;2892:7;2885:19;2947:3;2940:4;2935:2;2927:6;2923:15;2919:26;2916:35;2913:55;;;2964:1;2961;2954:12;2913:55;3029:2;3022:4;3014:6;3010:17;3003:4;2994:7;2990:18;2977:55;3077:1;3052:16;;;3070:4;3048:27;3041:38;;;;3056:7;2521:589;-1:-1:-1;;;2521:589:322:o;3115:150::-;3190:20;;3239:1;3229:12;;3219:40;;3255:1;3252;3245:12;3270:1210;3460:6;3468;3476;3484;3492;3500;3508;3516;3524;3532;3540:7;3594:3;3582:9;3573:7;3569:23;3565:33;3562:53;;;3611:1;3608;3601:12;3562:53;3634:29;3653:9;3634:29;:::i;:::-;3624:39;;3710:2;3699:9;3695:18;3682:32;3672:42;;3733:18;3800:2;3794;3783:9;3779:18;3766:32;3763:40;3760:60;;;3816:1;3813;3806:12;3760:60;3839:75;3906:7;3899:2;3888:9;3884:18;3871:32;3860:9;3856:48;3839:75;:::i;:::-;3829:85;;3933:45;3974:2;3963:9;3959:18;3933:45;:::i;:::-;3923:55;;4025:3;4014:9;4010:19;3997:33;3987:43;;4077:3;4066:9;4062:19;4049:33;4039:43;;4129:3;4118:9;4114:19;4101:33;4091:43;;4153:39;4187:3;4176:9;4172:19;4153:39;:::i;:::-;4143:49;;4211:39;4245:3;4234:9;4230:19;4211:39;:::i;:::-;4201:49;;4300:2;4293:3;4282:9;4278:19;4265:33;4262:41;4259:61;;;4316:1;4313;4306:12;4259:61;;4339:76;4407:7;4399:3;4388:9;4384:19;4371:33;4360:9;4356:49;4339:76;:::i;:::-;4329:86;;4435:39;4469:3;4458:9;4454:19;4435:39;:::i;:::-;4424:50;;3270:1210;;;;;;;;;;;;;;:::o;4485:118::-;4571:5;4564:13;4557:21;4550:5;4547:32;4537:60;;4593:1;4590;4583:12;4608:309;4673:6;4681;4734:2;4722:9;4713:7;4709:23;4705:32;4702:52;;;4750:1;4747;4740:12;4702:52;4786:9;4773:23;4763:33;;4846:2;4835:9;4831:18;4818:32;4859:28;4881:5;4859:28;:::i;:::-;4906:5;4896:15;;;4608:309;;;;;:::o;4922:247::-;4981:6;5034:2;5022:9;5013:7;5009:23;5005:32;5002:52;;;5050:1;5047;5040:12;5002:52;5089:9;5076:23;5108:31;5133:5;5108:31;:::i;5587:245::-;5654:6;5707:2;5695:9;5686:7;5682:23;5678:32;5675:52;;;5723:1;5720;5713:12;5675:52;5755:9;5749:16;5774:28;5796:5;5774:28;:::i;6262:1011::-;6357:6;6388:2;6431;6419:9;6410:7;6406:23;6402:32;6399:52;;;6447:1;6444;6437:12;6399:52;6480:9;6474:16;6509:18;6550:2;6542:6;6539:14;6536:34;;;6566:1;6563;6556:12;6536:34;6604:6;6593:9;6589:22;6579:32;;6649:7;6642:4;6638:2;6634:13;6630:27;6620:55;;6671:1;6668;6661:12;6620:55;6700:2;6694:9;6722:2;6718;6715:10;6712:36;;;6728:18;;:::i;:::-;6774:2;6771:1;6767:10;6757:20;;6797:28;6821:2;6817;6813:11;6797:28;:::i;:::-;6859:15;;;6929:11;;;6925:20;;;6890:12;;;;6957:19;;;6954:39;;;6989:1;6986;6979:12;6954:39;7013:11;;;;7033:210;7049:6;7044:3;7041:15;7033:210;;;7122:3;7116:10;7103:23;;7139:31;7164:5;7139:31;:::i;:::-;7183:18;;;7066:12;;;;7221;;;;7033:210;;;7262:5;6262:1011;-1:-1:-1;;;;;;;;6262:1011:322:o;7278:184::-;7330:77;7327:1;7320:88;7427:4;7424:1;7417:15;7451:4;7448:1;7441:15;7467:184;7519:77;7516:1;7509:88;7616:4;7613:1;7606:15;7640:4;7637:1;7630:15;7656:195;7695:3;7726:66;7719:5;7716:77;7713:103;;7796:18;;:::i;:::-;-1:-1:-1;7843:1:322;7832:13;;7656:195::o;7856:184::-;7926:6;7979:2;7967:9;7958:7;7954:23;7950:32;7947:52;;;7995:1;7992;7985:12;7947:52;-1:-1:-1;8018:16:322;;7856:184;-1:-1:-1;7856:184:322:o;8045:125::-;8085:4;8113:1;8110;8107:8;8104:34;;;8118:18;;:::i;:::-;-1:-1:-1;8155:9:322;;8045:125::o;8175:1213::-;8558:4;8587:3;8609:42;8690:2;8682:6;8678:15;8667:9;8660:34;8730:6;8725:2;8714:9;8710:18;8703:34;8773:2;8768;8757:9;8753:18;8746:30;8793:45;8834:2;8823:9;8819:18;8811:6;8793:45;:::i;:::-;8785:53;;8868:1;8860:6;8857:13;8847:201;;8904:77;8901:1;8894:88;9005:4;9002:1;8995:15;9033:4;9030:1;9023:15;8847:201;9084:6;9079:2;9068:9;9064:18;9057:34;9128:6;9122:3;9111:9;9107:19;9100:35;9172:6;9166:3;9155:9;9151:19;9144:35;9216:6;9210:3;9199:9;9195:19;9188:35;9272:2;9264:6;9260:15;9254:3;9243:9;9239:19;9232:44;;;9285:53;9333:3;9322:9;9318:19;9310:6;626:42;615:54;603:67;;543:133;9285:53;9375:6;9369:3;9358:9;9354:19;9347:35;8175:1213;;;;;;;;;;;;;:::o;10383:195::-;10421:4;10458;10455:1;10451:12;10490:4;10487:1;10483:12;10515:3;10510;10507:12;10504:38;;;10522:18;;:::i;:::-;10559:13;;;10383:195;-1:-1:-1;;;10383:195:322:o;10986:184::-;11038:77;11035:1;11028:88;11135:4;11132:1;11125:15;11159:4;11156:1;11149:15",
    "linkReferences": {},
    "immutableReferences": {
      "68750": [
        {
          "start": 196,
          "length": 32
        },
        {
          "start": 604,
          "length": 32
        },
        {
          "start": 959,
          "length": 32
        },
        {
          "start": 1217,
          "length": 32
        },
        {
          "start": 1288,
          "length": 32
        },
        {
          "start": 1547,
          "length": 32
        },
        {
          "start": 1965,
          "length": 32
        },
        {
          "start": 2437,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "checkAfterExecution(bytes32,bool)": "93271368",
    "checkTransaction(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,bytes,address)": "75f0bb52",
    "lastLive(address)": "e458779b",
    "safe()": "186f0354",
    "showLiveness()": "4c205d0d",
    "supportsInterface(bytes4)": "01ffc9a7",
    "version()": "54fd4d50"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract Safe\",\"name\":\"_safe\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnerRecorded\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"},{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"name\":\"checkAfterExecution\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"enum Enum.Operation\",\"name\":\"operation\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"safeTxGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"baseGas\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasPrice\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"gasToken\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"refundReceiver\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"signatures\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"msgSender\",\"type\":\"address\"}],\"name\":\"checkTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"lastLive\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"safe\",\"outputs\":[{\"internalType\":\"contract Safe\",\"name\":\"safe_\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"showLiveness\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"It keeps track of the last time each owner participated in signing a transaction.      If an owner does not participate in a transaction for a certain period of time, they are considered inactive.      This Guard is intended to be used in conjunction with the LivenessModule contract, but does      not depend on it.      Note: Both `checkTransaction` and `checkAfterExecution` are called once each by the Safe contract      before and after the execution of a transaction. It is critical that neither function revert,      otherwise the Safe contract will be unable to execute a transaction.\",\"events\":{\"OwnerRecorded(address)\":{\"params\":{\"owner\":\"The owner's address.\"}}},\"kind\":\"dev\",\"methods\":{\"checkAfterExecution(bytes32,bool)\":{\"details\":\"Called by the Safe contract after the execution of a transaction.      We use this post execution hook to compare the set of owners before and after.      If the set of owners has changed then we:      1. Add new owners to the lastLive mapping      2. Delete removed owners from the lastLive mapping\"},\"checkTransaction(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,bytes,address)\":{\"details\":\"Called by the Safe contract before execution of a transaction.\"},\"constructor\":{\"params\":{\"_safe\":\"The safe account for which this contract will be the guard.\"}},\"safe()\":{\"returns\":{\"safe_\":\"The Safe contract instance\"}},\"supportsInterface(bytes4)\":{\"details\":\"Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding EIP section https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified to learn more about how these ids are created. This function call must use less than 30 000 gas.\"}},\"stateVariables\":{\"version\":{\"custom:semver\":\"1.0.0\"}},\"title\":\"LivenessGuard\",\"version\":1},\"userdoc\":{\"events\":{\"OwnerRecorded(address)\":{\"notice\":\"Emitted when an owner is recorded.\"}},\"kind\":\"user\",\"methods\":{\"checkAfterExecution(bytes32,bool)\":{\"notice\":\"Update the lastLive mapping according to the set of owners before and after execution.\"},\"checkTransaction(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,bytes,address)\":{\"notice\":\"Records the most recent time which any owner has signed a transaction.\"},\"constructor\":{\"notice\":\"Constructor.\"},\"lastLive(address)\":{\"notice\":\"A mapping of the timestamp at which an owner last participated in signing a         an executed transaction, or called showLiveness.\"},\"safe()\":{\"notice\":\"Getter function for the Safe contract instance\"},\"showLiveness()\":{\"notice\":\"Enables an owner to demonstrate liveness by calling this method directly.         This is useful for owners who have not recently signed a transaction via the Safe.\"},\"version()\":{\"notice\":\"Semantic version.\"}},\"notice\":\"This Guard contract is used to track the liveness of Safe owners.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Safe/LivenessGuard.sol\":\"LivenessGuard\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@cwia/=lib/clones-with-immutable-args/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/solmate/\",\":clones-with-immutable-args/=lib/clones-with-immutable-args/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol\":{\"keccak256\":\"0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271\",\"dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24\"]},\"lib/safe-contracts/contracts/Safe.sol\":{\"keccak256\":\"0xfe09ad8ce3359ee997c4127c14264a94ec6f25dea38dc37997bd705e9aed9fcd\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://434e77c4ace5cefcf5a21af7eceb5b60ca45b55818e1ecf938d196345731c5e9\",\"dweb:/ipfs/QmbYFyE4okvruZZuCxeNy86Hm6W7yPR4yJWkVztbPRTosu\"]},\"lib/safe-contracts/contracts/base/Executor.sol\":{\"keccak256\":\"0xf0be832e7529e92000544170a5529d73666a9b5e836b30c6f2ed6ef7d7d8c94a\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://710022b40c9f78a5b55b97f6ce600e4834df2ddd36bf714974d953883c82d58c\",\"dweb:/ipfs/QmbdJNKH5opevm7HxQKQAe6W7dQTgSHKa4nKvbUNGRcQQp\"]},\"lib/safe-contracts/contracts/base/FallbackManager.sol\":{\"keccak256\":\"0x646b3088f15af8b4f71ac5eeffaa24ce0c1abed5f494f90368208b09e35d5165\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://7975be46d228510c70659b18076aecb3b0e7331b4d3a162444304145143bdc6e\",\"dweb:/ipfs/QmRRbZrWUnoky6pVo8zMUzCTsshR4sZ2FjR13s8vyAb8dV\"]},\"lib/safe-contracts/contracts/base/GuardManager.sol\":{\"keccak256\":\"0xedfc7c830ab35e52d1208986b253f3422c2f0ca68054c10819fb348fcc6ccf5d\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://3ff8a4194d1160d2e23142937bc9d7eac7b6b553b1ee226390a0df07ebac1b64\",\"dweb:/ipfs/QmSw8Y7z4TQrUTEosdWqcug7TUv9Tg1kxqMKHd7RuTnyzx\"]},\"lib/safe-contracts/contracts/base/ModuleManager.sol\":{\"keccak256\":\"0xd929f3cd77ab05904d7ad510d25e79a84172728c6e6f887872d7d5176ed2ada7\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://f9c3ae921990787102f8ff6e9d55b3329b6fed6b0e67ea4c8e225b53378359df\",\"dweb:/ipfs/QmbDTmeBsNLXRrM1n8jT9qEnNcNv2G3SQY7NV7kex9EtLh\"]},\"lib/safe-contracts/contracts/base/OwnerManager.sol\":{\"keccak256\":\"0xec9799093eb7a73461cd5e563198751ee222f956f754ea622a03fe953e515b2c\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://5729c58b14e7b656c71dd3377e9519c0d34ef8c04851a9a21c3d62393e4fae7a\",\"dweb:/ipfs/QmRRtfFpNqvdANny9TYBr8rA3HbT1egUCpb2uXALMHkVxK\"]},\"lib/safe-contracts/contracts/common/Enum.sol\":{\"keccak256\":\"0x4ff3008926a118e9f36e6747facc39dd13168e0d00f516888ae966ec20766453\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://385929800d1c0f92eb165fcf37a9e28b395b17d8b74f74755654d3a096a0fc34\",\"dweb:/ipfs/QmagieLuN2jrp2oJHFyZuyz65Sh1CcupnXSEKypGFS5Gvo\"]},\"lib/safe-contracts/contracts/common/NativeCurrencyPaymentFallback.sol\":{\"keccak256\":\"0x3ddcd4130c67326033dcf773d2d87d7147e3a8386993ea3ab3f1c38da406adba\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://740a729397b6a0d903f4738a50e856d4e5039555024937b148d97529525dbfa9\",\"dweb:/ipfs/QmQJuNVvHbkeJ6jjd75D8FsZBPXH6neoGBZdQgtsA82E7g\"]},\"lib/safe-contracts/contracts/common/SecuredTokenTransfer.sol\":{\"keccak256\":\"0x1eb8c3601538b73dd6a823ac4fca49bb8adc97d1302a936622156636c971eb05\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://c26495b1fe9229ea17f90b70f295030880d629b9ea3016ea20b634983865f7b3\",\"dweb:/ipfs/QmTc1UmKcynkKn8DeviLMuy6scxNvAVSdLoX4ndUtdEL9N\"]},\"lib/safe-contracts/contracts/common/SelfAuthorized.sol\":{\"keccak256\":\"0xfb0e176bb208e047a234fe757e2acd13787e27879570b8544547ac787feb5f13\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://8e9a317f0c3c02ab1d6c38039bff2b3e0c97f4dc9d229d3d9149c1af1c5023b3\",\"dweb:/ipfs/QmNcZjNChsuXF34T6f3Zu7i3tnqvKN4NyWBWZ4tXLH9kMu\"]},\"lib/safe-contracts/contracts/common/SignatureDecoder.sol\":{\"keccak256\":\"0x2a3baf0efa1585ddf2276505c6d34fa16f01cafff1288e40110d5e67fb459c7c\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://00cdded3068b9051ee0a966f40926fbc57dbe7ef8bf4285db3740f9d50468c80\",\"dweb:/ipfs/QmcP5hKmaRqBe7TpgoXtncZqsNKKdCCKxZgXoxEL4Nj5F4\"]},\"lib/safe-contracts/contracts/common/Singleton.sol\":{\"keccak256\":\"0xcab7c6e5fb6d7295a9343f72fec26a2f632ddfe220a6f267b5c5a1eb2f9bce50\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://dd1c31d5787ef590a60f6b0dbc74d09e6fe4d3ad2f0529940d662bf315521cde\",\"dweb:/ipfs/QmSAS5DYrGksJe4cPQ4wLrveXa1CjxAuEiohcLpPG5h2bo\"]},\"lib/safe-contracts/contracts/common/StorageAccessible.sol\":{\"keccak256\":\"0x2c5412a8f014db332322a6b24ee3cedce15dca17a721ae49fdef368568d4391e\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://e775f267d3e60ebe452d9533f46a0eb1f1dc4593d1bcb553e86cea205a5f361e\",\"dweb:/ipfs/QmQdYDHGQsiMx1AADWRhX7tduU9ycTzrT5q3zBWvphXzKZ\"]},\"lib/safe-contracts/contracts/external/SafeMath.sol\":{\"keccak256\":\"0x5f856674d9be11344c5899deb43364e19baa75bc881cada4c159938270b2bd89\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://351c66e5fe92c0a51f79d133521545dabdd3f756312a7b1428c1fc813c512a1c\",\"dweb:/ipfs/QmdnrRmgef8SdamEU6fVEqFD5RQwXeDFTfQuZEfX2vxC4x\"]},\"lib/safe-contracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x779ed3893a8812e383670b755f65c7727e9343dadaa4d7a4aa7f4aa35d859fdb\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://bb2039e1459ace1e68761e873632fc339866332f9f5ecb7452a0bc3a3b847e89\",\"dweb:/ipfs/QmYXvDQXJnDkXFvsvKLyZXaAv4x42qvtbtmwHftP4RKX38\"]},\"lib/safe-contracts/contracts/interfaces/ISignatureValidator.sol\":{\"keccak256\":\"0x2459cb3ed73ecb80e1e7a6508d09a58cc59570b049f77042f669dedfcc5f6457\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://3c4a1371948b11f78171bc4ae4fd169a1eec11e5c4b273eb2c54bc030a1aae25\",\"dweb:/ipfs/QmPuztatXZYVS65n8YbCyccJFZYPP6zQfBQ8tTY27pB978\"]},\"src/Safe/LivenessGuard.sol\":{\"keccak256\":\"0xc86ac81c2c59e565534550a611b539c54e39bf1ab6af28fa940a3365b74c1127\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8d75d72110178da3e643aea9b32c939bfe36ef98ad1948dd3d5d1c977f0e5eda\",\"dweb:/ipfs/QmdtmKqsg8LXYn6gjBVVd8KcwikxgQepfnSXGnsig8ACae\"]},\"src/Safe/SafeSigners.sol\":{\"keccak256\":\"0xa29a86f9d932fb5368dc722deeb9f74f46c9dee3a34d1804ef2d225cc5dbbfa2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f1b7f3228af41a9abd99430971534b71ad171138d97ef861106c15978ee0d495\",\"dweb:/ipfs/QmZZZeT3u5C7YvZTVSsdUyYmALVewSd1bxj6bWeaqT4nwN\"]},\"src/universal/ISemver.sol\":{\"keccak256\":\"0xba34562a8026f59886d2e07d1d58d90b9691d00e0788c6263cef6c22740cab44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0826f998632f83c103c3085bf2e872db79a69022b6d2e0444c83a64ca5283c2a\",\"dweb:/ipfs/QmcJ7PNqkAfKqbjFGRordtAg1v9DvcBSKvdTkVvciLyvQR\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract Safe",
              "name": "_safe",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "owner",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OwnerRecorded",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            },
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "checkAfterExecution"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            },
            {
              "internalType": "enum Enum.Operation",
              "name": "operation",
              "type": "uint8"
            },
            {
              "internalType": "uint256",
              "name": "safeTxGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "baseGas",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "gasPrice",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "gasToken",
              "type": "address"
            },
            {
              "internalType": "address payable",
              "name": "refundReceiver",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "signatures",
              "type": "bytes"
            },
            {
              "internalType": "address",
              "name": "msgSender",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "checkTransaction"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "lastLive",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "safe",
          "outputs": [
            {
              "internalType": "contract Safe",
              "name": "safe_",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "showLiveness"
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "version",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "checkAfterExecution(bytes32,bool)": {
            "details": "Called by the Safe contract after the execution of a transaction.      We use this post execution hook to compare the set of owners before and after.      If the set of owners has changed then we:      1. Add new owners to the lastLive mapping      2. Delete removed owners from the lastLive mapping"
          },
          "checkTransaction(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,bytes,address)": {
            "details": "Called by the Safe contract before execution of a transaction."
          },
          "constructor": {
            "params": {
              "_safe": "The safe account for which this contract will be the guard."
            }
          },
          "safe()": {
            "returns": {
              "safe_": "The Safe contract instance"
            }
          },
          "supportsInterface(bytes4)": {
            "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding EIP section https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified to learn more about how these ids are created. This function call must use less than 30 000 gas."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "checkAfterExecution(bytes32,bool)": {
            "notice": "Update the lastLive mapping according to the set of owners before and after execution."
          },
          "checkTransaction(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,bytes,address)": {
            "notice": "Records the most recent time which any owner has signed a transaction."
          },
          "constructor": {
            "notice": "Constructor."
          },
          "lastLive(address)": {
            "notice": "A mapping of the timestamp at which an owner last participated in signing a         an executed transaction, or called showLiveness."
          },
          "safe()": {
            "notice": "Getter function for the Safe contract instance"
          },
          "showLiveness()": {
            "notice": "Enables an owner to demonstrate liveness by calling this method directly.         This is useful for owners who have not recently signed a transaction via the Safe."
          },
          "version()": {
            "notice": "Semantic version."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@cwia/=lib/clones-with-immutable-args/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@rari-capital/solmate/=lib/solmate/",
        "clones-with-immutable-args/=lib/clones-with-immutable-args/src/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "safe-contracts/=lib/safe-contracts/contracts/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 999999
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "src/Safe/LivenessGuard.sol": "LivenessGuard"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol": {
        "keccak256": "0x5050943b32b6a8f282573d166b2e9d87ab7eb4dbba4ab6acf36ecb54fe6995e4",
        "urls": [
          "bzz-raw://d4831d777a29ebdf9f2caecd70e74b97bff1b70e53622fd0a02aed01e21c8271",
          "dweb:/ipfs/QmUqurVVnCc7XkMxb2k23TVQUtuhHZduJ3hTZarTJrqU24"
        ],
        "license": "MIT"
      },
      "lib/safe-contracts/contracts/Safe.sol": {
        "keccak256": "0xfe09ad8ce3359ee997c4127c14264a94ec6f25dea38dc37997bd705e9aed9fcd",
        "urls": [
          "bzz-raw://434e77c4ace5cefcf5a21af7eceb5b60ca45b55818e1ecf938d196345731c5e9",
          "dweb:/ipfs/QmbYFyE4okvruZZuCxeNy86Hm6W7yPR4yJWkVztbPRTosu"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/base/Executor.sol": {
        "keccak256": "0xf0be832e7529e92000544170a5529d73666a9b5e836b30c6f2ed6ef7d7d8c94a",
        "urls": [
          "bzz-raw://710022b40c9f78a5b55b97f6ce600e4834df2ddd36bf714974d953883c82d58c",
          "dweb:/ipfs/QmbdJNKH5opevm7HxQKQAe6W7dQTgSHKa4nKvbUNGRcQQp"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/base/FallbackManager.sol": {
        "keccak256": "0x646b3088f15af8b4f71ac5eeffaa24ce0c1abed5f494f90368208b09e35d5165",
        "urls": [
          "bzz-raw://7975be46d228510c70659b18076aecb3b0e7331b4d3a162444304145143bdc6e",
          "dweb:/ipfs/QmRRbZrWUnoky6pVo8zMUzCTsshR4sZ2FjR13s8vyAb8dV"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/base/GuardManager.sol": {
        "keccak256": "0xedfc7c830ab35e52d1208986b253f3422c2f0ca68054c10819fb348fcc6ccf5d",
        "urls": [
          "bzz-raw://3ff8a4194d1160d2e23142937bc9d7eac7b6b553b1ee226390a0df07ebac1b64",
          "dweb:/ipfs/QmSw8Y7z4TQrUTEosdWqcug7TUv9Tg1kxqMKHd7RuTnyzx"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/base/ModuleManager.sol": {
        "keccak256": "0xd929f3cd77ab05904d7ad510d25e79a84172728c6e6f887872d7d5176ed2ada7",
        "urls": [
          "bzz-raw://f9c3ae921990787102f8ff6e9d55b3329b6fed6b0e67ea4c8e225b53378359df",
          "dweb:/ipfs/QmbDTmeBsNLXRrM1n8jT9qEnNcNv2G3SQY7NV7kex9EtLh"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/base/OwnerManager.sol": {
        "keccak256": "0xec9799093eb7a73461cd5e563198751ee222f956f754ea622a03fe953e515b2c",
        "urls": [
          "bzz-raw://5729c58b14e7b656c71dd3377e9519c0d34ef8c04851a9a21c3d62393e4fae7a",
          "dweb:/ipfs/QmRRtfFpNqvdANny9TYBr8rA3HbT1egUCpb2uXALMHkVxK"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/common/Enum.sol": {
        "keccak256": "0x4ff3008926a118e9f36e6747facc39dd13168e0d00f516888ae966ec20766453",
        "urls": [
          "bzz-raw://385929800d1c0f92eb165fcf37a9e28b395b17d8b74f74755654d3a096a0fc34",
          "dweb:/ipfs/QmagieLuN2jrp2oJHFyZuyz65Sh1CcupnXSEKypGFS5Gvo"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/common/NativeCurrencyPaymentFallback.sol": {
        "keccak256": "0x3ddcd4130c67326033dcf773d2d87d7147e3a8386993ea3ab3f1c38da406adba",
        "urls": [
          "bzz-raw://740a729397b6a0d903f4738a50e856d4e5039555024937b148d97529525dbfa9",
          "dweb:/ipfs/QmQJuNVvHbkeJ6jjd75D8FsZBPXH6neoGBZdQgtsA82E7g"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/common/SecuredTokenTransfer.sol": {
        "keccak256": "0x1eb8c3601538b73dd6a823ac4fca49bb8adc97d1302a936622156636c971eb05",
        "urls": [
          "bzz-raw://c26495b1fe9229ea17f90b70f295030880d629b9ea3016ea20b634983865f7b3",
          "dweb:/ipfs/QmTc1UmKcynkKn8DeviLMuy6scxNvAVSdLoX4ndUtdEL9N"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/common/SelfAuthorized.sol": {
        "keccak256": "0xfb0e176bb208e047a234fe757e2acd13787e27879570b8544547ac787feb5f13",
        "urls": [
          "bzz-raw://8e9a317f0c3c02ab1d6c38039bff2b3e0c97f4dc9d229d3d9149c1af1c5023b3",
          "dweb:/ipfs/QmNcZjNChsuXF34T6f3Zu7i3tnqvKN4NyWBWZ4tXLH9kMu"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/common/SignatureDecoder.sol": {
        "keccak256": "0x2a3baf0efa1585ddf2276505c6d34fa16f01cafff1288e40110d5e67fb459c7c",
        "urls": [
          "bzz-raw://00cdded3068b9051ee0a966f40926fbc57dbe7ef8bf4285db3740f9d50468c80",
          "dweb:/ipfs/QmcP5hKmaRqBe7TpgoXtncZqsNKKdCCKxZgXoxEL4Nj5F4"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/common/Singleton.sol": {
        "keccak256": "0xcab7c6e5fb6d7295a9343f72fec26a2f632ddfe220a6f267b5c5a1eb2f9bce50",
        "urls": [
          "bzz-raw://dd1c31d5787ef590a60f6b0dbc74d09e6fe4d3ad2f0529940d662bf315521cde",
          "dweb:/ipfs/QmSAS5DYrGksJe4cPQ4wLrveXa1CjxAuEiohcLpPG5h2bo"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/common/StorageAccessible.sol": {
        "keccak256": "0x2c5412a8f014db332322a6b24ee3cedce15dca17a721ae49fdef368568d4391e",
        "urls": [
          "bzz-raw://e775f267d3e60ebe452d9533f46a0eb1f1dc4593d1bcb553e86cea205a5f361e",
          "dweb:/ipfs/QmQdYDHGQsiMx1AADWRhX7tduU9ycTzrT5q3zBWvphXzKZ"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/external/SafeMath.sol": {
        "keccak256": "0x5f856674d9be11344c5899deb43364e19baa75bc881cada4c159938270b2bd89",
        "urls": [
          "bzz-raw://351c66e5fe92c0a51f79d133521545dabdd3f756312a7b1428c1fc813c512a1c",
          "dweb:/ipfs/QmdnrRmgef8SdamEU6fVEqFD5RQwXeDFTfQuZEfX2vxC4x"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/interfaces/IERC165.sol": {
        "keccak256": "0x779ed3893a8812e383670b755f65c7727e9343dadaa4d7a4aa7f4aa35d859fdb",
        "urls": [
          "bzz-raw://bb2039e1459ace1e68761e873632fc339866332f9f5ecb7452a0bc3a3b847e89",
          "dweb:/ipfs/QmYXvDQXJnDkXFvsvKLyZXaAv4x42qvtbtmwHftP4RKX38"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/interfaces/ISignatureValidator.sol": {
        "keccak256": "0x2459cb3ed73ecb80e1e7a6508d09a58cc59570b049f77042f669dedfcc5f6457",
        "urls": [
          "bzz-raw://3c4a1371948b11f78171bc4ae4fd169a1eec11e5c4b273eb2c54bc030a1aae25",
          "dweb:/ipfs/QmPuztatXZYVS65n8YbCyccJFZYPP6zQfBQ8tTY27pB978"
        ],
        "license": "LGPL-3.0-only"
      },
      "src/Safe/LivenessGuard.sol": {
        "keccak256": "0xc86ac81c2c59e565534550a611b539c54e39bf1ab6af28fa940a3365b74c1127",
        "urls": [
          "bzz-raw://8d75d72110178da3e643aea9b32c939bfe36ef98ad1948dd3d5d1c977f0e5eda",
          "dweb:/ipfs/QmdtmKqsg8LXYn6gjBVVd8KcwikxgQepfnSXGnsig8ACae"
        ],
        "license": "MIT"
      },
      "src/Safe/SafeSigners.sol": {
        "keccak256": "0xa29a86f9d932fb5368dc722deeb9f74f46c9dee3a34d1804ef2d225cc5dbbfa2",
        "urls": [
          "bzz-raw://f1b7f3228af41a9abd99430971534b71ad171138d97ef861106c15978ee0d495",
          "dweb:/ipfs/QmZZZeT3u5C7YvZTVSsdUyYmALVewSd1bxj6bWeaqT4nwN"
        ],
        "license": "MIT"
      },
      "src/universal/ISemver.sol": {
        "keccak256": "0xba34562a8026f59886d2e07d1d58d90b9691d00e0788c6263cef6c22740cab44",
        "urls": [
          "bzz-raw://0826f998632f83c103c3085bf2e872db79a69022b6d2e0444c83a64ca5283c2a",
          "dweb:/ipfs/QmcJ7PNqkAfKqbjFGRordtAg1v9DvcBSKvdTkVvciLyvQR"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 68755,
        "contract": "src/Safe/LivenessGuard.sol:LivenessGuard",
        "label": "lastLive",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_uint256)"
      },
      {
        "astId": 68759,
        "contract": "src/Safe/LivenessGuard.sol:LivenessGuard",
        "label": "ownersBefore",
        "offset": 0,
        "slot": "1",
        "type": "t_struct(AddressSet)40177_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_bytes32)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32",
        "base": "t_bytes32"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_bytes32,t_uint256)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_struct(AddressSet)40177_storage": {
        "encoding": "inplace",
        "label": "struct EnumerableSet.AddressSet",
        "numberOfBytes": "64",
        "members": [
          {
            "astId": 40176,
            "contract": "src/Safe/LivenessGuard.sol:LivenessGuard",
            "label": "_inner",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(Set)39876_storage"
          }
        ]
      },
      "t_struct(Set)39876_storage": {
        "encoding": "inplace",
        "label": "struct EnumerableSet.Set",
        "numberOfBytes": "64",
        "members": [
          {
            "astId": 39871,
            "contract": "src/Safe/LivenessGuard.sol:LivenessGuard",
            "label": "_values",
            "offset": 0,
            "slot": "0",
            "type": "t_array(t_bytes32)dyn_storage"
          },
          {
            "astId": 39875,
            "contract": "src/Safe/LivenessGuard.sol:LivenessGuard",
            "label": "_indexes",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_bytes32,t_uint256)"
          }
        ]
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  },
  "userdoc": {
    "version": 1,
    "kind": "user",
    "methods": {
      "checkAfterExecution(bytes32,bool)": {
        "notice": "Update the lastLive mapping according to the set of owners before and after execution."
      },
      "checkTransaction(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,bytes,address)": {
        "notice": "Records the most recent time which any owner has signed a transaction."
      },
      "constructor": {
        "notice": "Constructor."
      },
      "lastLive(address)": {
        "notice": "A mapping of the timestamp at which an owner last participated in signing a         an executed transaction, or called showLiveness."
      },
      "safe()": {
        "notice": "Getter function for the Safe contract instance"
      },
      "showLiveness()": {
        "notice": "Enables an owner to demonstrate liveness by calling this method directly.         This is useful for owners who have not recently signed a transaction via the Safe."
      },
      "version()": {
        "notice": "Semantic version."
      }
    },
    "events": {
      "OwnerRecorded(address)": {
        "notice": "Emitted when an owner is recorded."
      }
    },
    "notice": "This Guard contract is used to track the liveness of Safe owners."
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "details": "It keeps track of the last time each owner participated in signing a transaction.      If an owner does not participate in a transaction for a certain period of time, they are considered inactive.      This Guard is intended to be used in conjunction with the LivenessModule contract, but does      not depend on it.      Note: Both `checkTransaction` and `checkAfterExecution` are called once each by the Safe contract      before and after the execution of a transaction. It is critical that neither function revert,      otherwise the Safe contract will be unable to execute a transaction.",
    "methods": {
      "checkAfterExecution(bytes32,bool)": {
        "details": "Called by the Safe contract after the execution of a transaction.      We use this post execution hook to compare the set of owners before and after.      If the set of owners has changed then we:      1. Add new owners to the lastLive mapping      2. Delete removed owners from the lastLive mapping"
      },
      "checkTransaction(address,uint256,bytes,uint8,uint256,uint256,uint256,address,address,bytes,address)": {
        "details": "Called by the Safe contract before execution of a transaction."
      },
      "constructor": {
        "params": {
          "_safe": "The safe account for which this contract will be the guard."
        }
      },
      "safe()": {
        "returns": {
          "safe_": "The Safe contract instance"
        }
      },
      "supportsInterface(bytes4)": {
        "details": "Returns true if this contract implements the interface defined by `interfaceId`. See the corresponding EIP section https://eips.ethereum.org/EIPS/eip-165#how-interfaces-are-identified to learn more about how these ids are created. This function call must use less than 30 000 gas."
      }
    },
    "events": {
      "OwnerRecorded(address)": {
        "params": {
          "owner": "The owner's address."
        }
      }
    },
    "title": "LivenessGuard"
  },
  "ast": {
    "absolutePath": "src/Safe/LivenessGuard.sol",
    "id": 69090,
    "exportedSymbols": {
      "BaseGuard": [
        41541
      ],
      "Enum": [
        42546
      ],
      "EnumerableSet": [
        40464
      ],
      "GuardManager": [
        41603
      ],
      "ISemver": [
        83398
      ],
      "LivenessGuard": [
        69089
      ],
      "ModuleManager": [
        42026
      ],
      "Safe": [
        41379
      ],
      "SafeSigners": [
        69714
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:6940:144",
    "nodes": [
      {
        "id": 68713,
        "nodeType": "PragmaDirective",
        "src": "32:23:144",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 68715,
        "nodeType": "ImportDirective",
        "src": "57:47:144",
        "nodes": [],
        "absolutePath": "lib/safe-contracts/contracts/Safe.sol",
        "file": "safe-contracts/Safe.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 69090,
        "sourceUnit": 41380,
        "symbolAliases": [
          {
            "foreign": {
              "id": 68714,
              "name": "Safe",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41379,
              "src": "66:4:144",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 68718,
        "nodeType": "ImportDirective",
        "src": "105:79:144",
        "nodes": [],
        "absolutePath": "lib/safe-contracts/contracts/base/GuardManager.sol",
        "file": "safe-contracts/base/GuardManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 69090,
        "sourceUnit": 41604,
        "symbolAliases": [
          {
            "foreign": {
              "id": 68716,
              "name": "BaseGuard",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41541,
              "src": "114:9:144",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 68717,
              "name": "GuardManager",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 41603,
              "src": "125:12:144",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 68720,
        "nodeType": "ImportDirective",
        "src": "185:70:144",
        "nodes": [],
        "absolutePath": "lib/safe-contracts/contracts/base/ModuleManager.sol",
        "file": "safe-contracts/base/ModuleManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 69090,
        "sourceUnit": 42027,
        "symbolAliases": [
          {
            "foreign": {
              "id": 68719,
              "name": "ModuleManager",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 42026,
              "src": "194:13:144",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 68722,
        "nodeType": "ImportDirective",
        "src": "256:55:144",
        "nodes": [],
        "absolutePath": "src/Safe/SafeSigners.sol",
        "file": "src/Safe/SafeSigners.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 69090,
        "sourceUnit": 69715,
        "symbolAliases": [
          {
            "foreign": {
              "id": 68721,
              "name": "SafeSigners",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 69714,
              "src": "265:11:144",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 68724,
        "nodeType": "ImportDirective",
        "src": "312:54:144",
        "nodes": [],
        "absolutePath": "lib/safe-contracts/contracts/common/Enum.sol",
        "file": "safe-contracts/common/Enum.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 69090,
        "sourceUnit": 42547,
        "symbolAliases": [
          {
            "foreign": {
              "id": 68723,
              "name": "Enum",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 42546,
              "src": "321:4:144",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 68726,
        "nodeType": "ImportDirective",
        "src": "367:52:144",
        "nodes": [],
        "absolutePath": "src/universal/ISemver.sol",
        "file": "src/universal/ISemver.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 69090,
        "sourceUnit": 83399,
        "symbolAliases": [
          {
            "foreign": {
              "id": 68725,
              "name": "ISemver",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 83398,
              "src": "376:7:144",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 68728,
        "nodeType": "ImportDirective",
        "src": "420:88:144",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/structs/EnumerableSet.sol",
        "file": "@openzeppelin/contracts/utils/structs/EnumerableSet.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 69090,
        "sourceUnit": 40465,
        "symbolAliases": [
          {
            "foreign": {
              "id": 68727,
              "name": "EnumerableSet",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40464,
              "src": "429:13:144",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 69089,
        "nodeType": "ContractDefinition",
        "src": "1239:5732:144",
        "nodes": [
          {
            "id": 68737,
            "nodeType": "UsingForDirective",
            "src": "1290:49:144",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 68734,
              "name": "EnumerableSet",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 40464,
              "src": "1296:13:144"
            },
            "typeName": {
              "id": 68736,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 68735,
                "name": "EnumerableSet.AddressSet",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 40177,
                "src": "1314:24:144"
              },
              "referencedDeclaration": 40177,
              "src": "1314:24:144",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_AddressSet_$40177_storage_ptr",
                "typeString": "struct EnumerableSet.AddressSet"
              }
            }
          },
          {
            "id": 68742,
            "nodeType": "EventDefinition",
            "src": "1438:35:144",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 68738,
              "nodeType": "StructuredDocumentation",
              "src": "1345:88:144",
              "text": "@notice Emitted when an owner is recorded.\n @param owner The owner's address."
            },
            "eventSelector": "833bc129023866d52116d61e94b791eb8be46f05709362e0bcf1fe7c1a8c225c",
            "name": "OwnerRecorded",
            "nameLocation": "1444:13:144",
            "parameters": {
              "id": 68741,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68740,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "owner",
                  "nameLocation": "1466:5:144",
                  "nodeType": "VariableDeclaration",
                  "scope": 68742,
                  "src": "1458:13:144",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 68739,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1458:7:144",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1457:15:144"
            }
          },
          {
            "id": 68746,
            "nodeType": "VariableDeclaration",
            "src": "1542:40:144",
            "nodes": [],
            "baseFunctions": [
              83397
            ],
            "constant": true,
            "documentation": {
              "id": 68743,
              "nodeType": "StructuredDocumentation",
              "src": "1479:58:144",
              "text": "@notice Semantic version.\n @custom:semver 1.0.0"
            },
            "functionSelector": "54fd4d50",
            "mutability": "constant",
            "name": "version",
            "nameLocation": "1565:7:144",
            "scope": 69089,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 68744,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "1542:6:144",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "312e302e30",
              "id": 68745,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1575:7:144",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_06c015bd22b4c69690933c1058878ebdfef31f9aaae40bbe86d8a09fe1b2972c",
                "typeString": "literal_string \"1.0.0\""
              },
              "value": "1.0.0"
            },
            "visibility": "public"
          },
          {
            "id": 68750,
            "nodeType": "VariableDeclaration",
            "src": "1665:28:144",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 68747,
              "nodeType": "StructuredDocumentation",
              "src": "1589:71:144",
              "text": "@notice The safe account for which this contract will be the guard."
            },
            "mutability": "immutable",
            "name": "SAFE",
            "nameLocation": "1689:4:144",
            "scope": 69089,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_Safe_$41379",
              "typeString": "contract Safe"
            },
            "typeName": {
              "id": 68749,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 68748,
                "name": "Safe",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 41379,
                "src": "1665:4:144"
              },
              "referencedDeclaration": 41379,
              "src": "1665:4:144",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_Safe_$41379",
                "typeString": "contract Safe"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 68755,
            "nodeType": "VariableDeclaration",
            "src": "1857:43:144",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 68751,
              "nodeType": "StructuredDocumentation",
              "src": "1700:152:144",
              "text": "@notice A mapping of the timestamp at which an owner last participated in signing a\n         an executed transaction, or called showLiveness."
            },
            "functionSelector": "e458779b",
            "mutability": "mutable",
            "name": "lastLive",
            "nameLocation": "1892:8:144",
            "scope": 69089,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
              "typeString": "mapping(address => uint256)"
            },
            "typeName": {
              "id": 68754,
              "keyType": {
                "id": 68752,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1865:7:144",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1857:27:144",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                "typeString": "mapping(address => uint256)"
              },
              "valueType": {
                "id": 68753,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "1876:7:144",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 68759,
            "nodeType": "VariableDeclaration",
            "src": "2135:46:144",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 68756,
              "nodeType": "StructuredDocumentation",
              "src": "1907:223:144",
              "text": "@notice An enumerable set of addresses used to store the list of owners before execution,\n         and then to update the lastLive mapping according to changes in the set observed\n         after execution."
            },
            "mutability": "mutable",
            "name": "ownersBefore",
            "nameLocation": "2169:12:144",
            "scope": 69089,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_AddressSet_$40177_storage",
              "typeString": "struct EnumerableSet.AddressSet"
            },
            "typeName": {
              "id": 68758,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 68757,
                "name": "EnumerableSet.AddressSet",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 40177,
                "src": "2135:24:144"
              },
              "referencedDeclaration": 40177,
              "src": "2135:24:144",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_AddressSet_$40177_storage_ptr",
                "typeString": "struct EnumerableSet.AddressSet"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 68810,
            "nodeType": "FunctionDefinition",
            "src": "2298:295:144",
            "nodes": [],
            "body": {
              "id": 68809,
              "nodeType": "Block",
              "src": "2322:271:144",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 68768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 68766,
                      "name": "SAFE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68750,
                      "src": "2332:4:144",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Safe_$41379",
                        "typeString": "contract Safe"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 68767,
                      "name": "_safe",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68763,
                      "src": "2339:5:144",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Safe_$41379",
                        "typeString": "contract Safe"
                      }
                    },
                    "src": "2332:12:144",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Safe_$41379",
                      "typeString": "contract Safe"
                    }
                  },
                  "id": 68769,
                  "nodeType": "ExpressionStatement",
                  "src": "2332:12:144"
                },
                {
                  "assignments": [
                    68774
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 68774,
                      "mutability": "mutable",
                      "name": "owners",
                      "nameLocation": "2371:6:144",
                      "nodeType": "VariableDeclaration",
                      "scope": 68809,
                      "src": "2354:23:144",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 68772,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2354:7:144",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 68773,
                        "nodeType": "ArrayTypeName",
                        "src": "2354:9:144",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 68778,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 68775,
                        "name": "_safe",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68763,
                        "src": "2380:5:144",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Safe_$41379",
                          "typeString": "contract Safe"
                        }
                      },
                      "id": 68776,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getOwners",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42538,
                      "src": "2380:15:144",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function () view external returns (address[] memory)"
                      }
                    },
                    "id": 68777,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2380:17:144",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2354:43:144"
                },
                {
                  "body": {
                    "id": 68807,
                    "nodeType": "Block",
                    "src": "2451:136:144",
                    "statements": [
                      {
                        "assignments": [
                          68791
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 68791,
                            "mutability": "mutable",
                            "name": "owner",
                            "nameLocation": "2473:5:144",
                            "nodeType": "VariableDeclaration",
                            "scope": 68807,
                            "src": "2465:13:144",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 68790,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2465:7:144",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 68795,
                        "initialValue": {
                          "baseExpression": {
                            "id": 68792,
                            "name": "owners",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68774,
                            "src": "2481:6:144",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 68794,
                          "indexExpression": {
                            "id": 68793,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68780,
                            "src": "2488:1:144",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "2481:9:144",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "2465:25:144"
                      },
                      {
                        "expression": {
                          "id": 68801,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 68796,
                              "name": "lastLive",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68755,
                              "src": "2504:8:144",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 68798,
                            "indexExpression": {
                              "id": 68797,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68791,
                              "src": "2513:5:144",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "2504:15:144",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 68799,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "2522:5:144",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 68800,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "2522:15:144",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "2504:33:144",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 68802,
                        "nodeType": "ExpressionStatement",
                        "src": "2504:33:144"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "id": 68804,
                              "name": "owner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68791,
                              "src": "2570:5:144",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 68803,
                            "name": "OwnerRecorded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68742,
                            "src": "2556:13:144",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 68805,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2556:20:144",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 68806,
                        "nodeType": "EmitStatement",
                        "src": "2551:25:144"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 68786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 68783,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68780,
                      "src": "2427:1:144",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 68784,
                        "name": "owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68774,
                        "src": "2431:6:144",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 68785,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2431:13:144",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2427:17:144",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 68808,
                  "initializationExpression": {
                    "assignments": [
                      68780
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 68780,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2420:1:144",
                        "nodeType": "VariableDeclaration",
                        "scope": 68808,
                        "src": "2412:9:144",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 68779,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2412:7:144",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 68782,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 68781,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2424:1:144",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2412:13:144"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 68788,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2446:3:144",
                      "subExpression": {
                        "id": 68787,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68780,
                        "src": "2446:1:144",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 68789,
                    "nodeType": "ExpressionStatement",
                    "src": "2446:3:144"
                  },
                  "nodeType": "ForStatement",
                  "src": "2407:180:144"
                }
              ]
            },
            "documentation": {
              "id": 68760,
              "nodeType": "StructuredDocumentation",
              "src": "2188:105:144",
              "text": "@notice Constructor.\n @param _safe The safe account for which this contract will be the guard."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 68764,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68763,
                  "mutability": "mutable",
                  "name": "_safe",
                  "nameLocation": "2315:5:144",
                  "nodeType": "VariableDeclaration",
                  "scope": 68810,
                  "src": "2310:10:144",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Safe_$41379",
                    "typeString": "contract Safe"
                  },
                  "typeName": {
                    "id": 68762,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 68761,
                      "name": "Safe",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 41379,
                      "src": "2310:4:144"
                    },
                    "referencedDeclaration": 41379,
                    "src": "2310:4:144",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Safe_$41379",
                      "typeString": "contract Safe"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2309:12:144"
            },
            "returnParameters": {
              "id": 68765,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2322:0:144"
            },
            "scope": 69089,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 68822,
            "nodeType": "FunctionDefinition",
            "src": "2711:78:144",
            "nodes": [],
            "body": {
              "id": 68821,
              "nodeType": "Block",
              "src": "2760:29:144",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 68819,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 68817,
                      "name": "safe_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68815,
                      "src": "2770:5:144",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Safe_$41379",
                        "typeString": "contract Safe"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 68818,
                      "name": "SAFE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68750,
                      "src": "2778:4:144",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_Safe_$41379",
                        "typeString": "contract Safe"
                      }
                    },
                    "src": "2770:12:144",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Safe_$41379",
                      "typeString": "contract Safe"
                    }
                  },
                  "id": 68820,
                  "nodeType": "ExpressionStatement",
                  "src": "2770:12:144"
                }
              ]
            },
            "documentation": {
              "id": 68811,
              "nodeType": "StructuredDocumentation",
              "src": "2599:107:144",
              "text": "@notice Getter function for the Safe contract instance\n @return safe_ The Safe contract instance"
            },
            "functionSelector": "186f0354",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "safe",
            "nameLocation": "2720:4:144",
            "parameters": {
              "id": 68812,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2724:2:144"
            },
            "returnParameters": {
              "id": 68816,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68815,
                  "mutability": "mutable",
                  "name": "safe_",
                  "nameLocation": "2753:5:144",
                  "nodeType": "VariableDeclaration",
                  "scope": 68822,
                  "src": "2748:10:144",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_Safe_$41379",
                    "typeString": "contract Safe"
                  },
                  "typeName": {
                    "id": 68814,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 68813,
                      "name": "Safe",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 41379,
                      "src": "2748:4:144"
                    },
                    "referencedDeclaration": 41379,
                    "src": "2748:4:144",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_Safe_$41379",
                      "typeString": "contract Safe"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2747:12:144"
            },
            "scope": 69089,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 68838,
            "nodeType": "FunctionDefinition",
            "src": "2886:146:144",
            "nodes": [],
            "body": {
              "id": 68837,
              "nodeType": "Block",
              "src": "2928:104:144",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 68833,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 68827,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "2946:3:144",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 68828,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "2946:10:144",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 68831,
                              "name": "SAFE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68750,
                              "src": "2968:4:144",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Safe_$41379",
                                "typeString": "contract Safe"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_Safe_$41379",
                                "typeString": "contract Safe"
                              }
                            ],
                            "id": 68830,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2960:7:144",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 68829,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2960:7:144",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 68832,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2960:13:144",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2946:27:144",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c6976656e65737347756172643a206f6e6c7920536166652063616e2063616c6c20746869732066756e6374696f6e",
                        "id": 68834,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2975:49:144",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_3f34796ee57037622d7d8a494e259636a99ed08727d2489bccc43b2ed21f100a",
                          "typeString": "literal_string \"LivenessGuard: only Safe can call this function\""
                        },
                        "value": "LivenessGuard: only Safe can call this function"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_3f34796ee57037622d7d8a494e259636a99ed08727d2489bccc43b2ed21f100a",
                          "typeString": "literal_string \"LivenessGuard: only Safe can call this function\""
                        }
                      ],
                      "id": 68826,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2938:7:144",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 68835,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2938:87:144",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68836,
                  "nodeType": "ExpressionStatement",
                  "src": "2938:87:144"
                }
              ]
            },
            "documentation": {
              "id": 68823,
              "nodeType": "StructuredDocumentation",
              "src": "2795:86:144",
              "text": "@notice Internal function to ensure that only the Safe can call certain functions."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_requireOnlySafe",
            "nameLocation": "2895:16:144",
            "parameters": {
              "id": 68824,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2911:2:144"
            },
            "returnParameters": {
              "id": 68825,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2928:0:144"
            },
            "scope": 69089,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 68967,
            "nodeType": "FunctionDefinition",
            "src": "3201:1635:144",
            "nodes": [],
            "body": {
              "id": 68966,
              "nodeType": "Block",
              "src": "3562:1274:144",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 68865,
                    "name": "msgSender",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 68862,
                    "src": "3572:9:144",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 68866,
                  "nodeType": "ExpressionStatement",
                  "src": "3572:9:144"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 68867,
                      "name": "_requireOnlySafe",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68838,
                      "src": "3626:16:144",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 68868,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3626:18:144",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68869,
                  "nodeType": "ExpressionStatement",
                  "src": "3626:18:144"
                },
                {
                  "assignments": [
                    68874
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 68874,
                      "mutability": "mutable",
                      "name": "owners",
                      "nameLocation": "3791:6:144",
                      "nodeType": "VariableDeclaration",
                      "scope": 68966,
                      "src": "3774:23:144",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 68872,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3774:7:144",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 68873,
                        "nodeType": "ArrayTypeName",
                        "src": "3774:9:144",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 68878,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 68875,
                        "name": "SAFE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68750,
                        "src": "3800:4:144",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Safe_$41379",
                          "typeString": "contract Safe"
                        }
                      },
                      "id": 68876,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getOwners",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42538,
                      "src": "3800:14:144",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function () view external returns (address[] memory)"
                      }
                    },
                    "id": 68877,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3800:16:144",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3774:42:144"
                },
                {
                  "body": {
                    "id": 68898,
                    "nodeType": "Block",
                    "src": "3870:52:144",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 68893,
                                "name": "owners",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 68874,
                                "src": "3901:6:144",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 68895,
                              "indexExpression": {
                                "id": 68894,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 68880,
                                "src": "3908:1:144",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "3901:9:144",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 68890,
                              "name": "ownersBefore",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68759,
                              "src": "3884:12:144",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AddressSet_$40177_storage",
                                "typeString": "struct EnumerableSet.AddressSet storage ref"
                              }
                            },
                            "id": 68892,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "add",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 40204,
                            "src": "3884:16:144",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$40177_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$40177_storage_ptr_$",
                              "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
                            }
                          },
                          "id": 68896,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3884:27:144",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 68897,
                        "nodeType": "ExpressionStatement",
                        "src": "3884:27:144"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 68886,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 68883,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68880,
                      "src": "3846:1:144",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 68884,
                        "name": "owners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68874,
                        "src": "3850:6:144",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 68885,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "3850:13:144",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "3846:17:144",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 68899,
                  "initializationExpression": {
                    "assignments": [
                      68880
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 68880,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "3839:1:144",
                        "nodeType": "VariableDeclaration",
                        "scope": 68899,
                        "src": "3831:9:144",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 68879,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "3831:7:144",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 68882,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 68881,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3843:1:144",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "3831:13:144"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 68888,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "3865:3:144",
                      "subExpression": {
                        "id": 68887,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68880,
                        "src": "3865:1:144",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 68889,
                    "nodeType": "ExpressionStatement",
                    "src": "3865:3:144"
                  },
                  "nodeType": "ForStatement",
                  "src": "3826:96:144"
                },
                {
                  "assignments": [
                    68901
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 68901,
                      "mutability": "mutable",
                      "name": "txHash",
                      "nameLocation": "4110:6:144",
                      "nodeType": "VariableDeclaration",
                      "scope": 68966,
                      "src": "4102:14:144",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 68900,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4102:7:144",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 68919,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 68904,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68841,
                        "src": "4161:2:144",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 68905,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68843,
                        "src": "4184:5:144",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 68906,
                        "name": "data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68845,
                        "src": "4209:4:144",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 68907,
                        "name": "operation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68848,
                        "src": "4238:9:144",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_Operation_$42545",
                          "typeString": "enum Enum.Operation"
                        }
                      },
                      {
                        "id": 68908,
                        "name": "safeTxGas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68850,
                        "src": "4272:9:144",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 68909,
                        "name": "baseGas",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68852,
                        "src": "4304:7:144",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 68910,
                        "name": "gasPrice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68854,
                        "src": "4335:8:144",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 68911,
                        "name": "gasToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68856,
                        "src": "4367:8:144",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 68912,
                        "name": "refundReceiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68858,
                        "src": "4405:14:144",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 68917,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 68913,
                              "name": "SAFE",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68750,
                              "src": "4441:4:144",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_Safe_$41379",
                                "typeString": "contract Safe"
                              }
                            },
                            "id": 68914,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "nonce",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 40547,
                            "src": "4441:10:144",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 68915,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4441:12:144",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "-",
                        "rightExpression": {
                          "hexValue": "31",
                          "id": 68916,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4456:1:144",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        },
                        "src": "4441:16:144",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_enum$_Operation_$42545",
                          "typeString": "enum Enum.Operation"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 68902,
                        "name": "SAFE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68750,
                        "src": "4119:4:144",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Safe_$41379",
                          "typeString": "contract Safe"
                        }
                      },
                      "id": 68903,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getTransactionHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 41378,
                      "src": "4119:23:144",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_enum$_Operation_$42545_$_t_uint256_$_t_uint256_$_t_uint256_$_t_address_$_t_address_$_t_uint256_$returns$_t_bytes32_$",
                        "typeString": "function (address,uint256,bytes memory,enum Enum.Operation,uint256,uint256,uint256,address,address,uint256) view external returns (bytes32)"
                      }
                    },
                    "id": 68918,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [
                      "to",
                      "value",
                      "data",
                      "operation",
                      "safeTxGas",
                      "baseGas",
                      "gasPrice",
                      "gasToken",
                      "refundReceiver",
                      "_nonce"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "4119:349:144",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4102:366:144"
                },
                {
                  "assignments": [
                    68921
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 68921,
                      "mutability": "mutable",
                      "name": "threshold",
                      "nameLocation": "4487:9:144",
                      "nodeType": "VariableDeclaration",
                      "scope": 68966,
                      "src": "4479:17:144",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 68920,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "4479:7:144",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 68925,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 68922,
                        "name": "SAFE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68750,
                        "src": "4499:4:144",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Safe_$41379",
                          "typeString": "contract Safe"
                        }
                      },
                      "id": 68923,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getThreshold",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42465,
                      "src": "4499:17:144",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                        "typeString": "function () view external returns (uint256)"
                      }
                    },
                    "id": 68924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4499:19:144",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4479:39:144"
                },
                {
                  "assignments": [
                    68930
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 68930,
                      "mutability": "mutable",
                      "name": "signers",
                      "nameLocation": "4545:7:144",
                      "nodeType": "VariableDeclaration",
                      "scope": 68966,
                      "src": "4528:24:144",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 68928,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4528:7:144",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 68929,
                        "nodeType": "ArrayTypeName",
                        "src": "4528:9:144",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 68937,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 68933,
                        "name": "txHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68901,
                        "src": "4603:6:144",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 68934,
                        "name": "signatures",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68860,
                        "src": "4623:10:144",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 68935,
                        "name": "threshold",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68921,
                        "src": "4655:9:144",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 68931,
                        "name": "SafeSigners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69714,
                        "src": "4567:11:144",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeSigners_$69714_$",
                          "typeString": "type(library SafeSigners)"
                        }
                      },
                      "id": 68932,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getNSigners",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 69713,
                      "src": "4567:23:144",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (bytes32,bytes memory,uint256) pure returns (address[] memory)"
                      }
                    },
                    "id": 68936,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [
                      "dataHash",
                      "signatures",
                      "requiredSignatures"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "4567:100:144",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4528:139:144"
                },
                {
                  "body": {
                    "id": 68964,
                    "nodeType": "Block",
                    "src": "4723:107:144",
                    "statements": [
                      {
                        "expression": {
                          "id": 68956,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 68949,
                              "name": "lastLive",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68755,
                              "src": "4737:8:144",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 68953,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 68950,
                                "name": "signers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 68930,
                                "src": "4746:7:144",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 68952,
                              "indexExpression": {
                                "id": 68951,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 68939,
                                "src": "4754:1:144",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4746:10:144",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "4737:20:144",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 68954,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "4760:5:144",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 68955,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "src": "4760:15:144",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "4737:38:144",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 68957,
                        "nodeType": "ExpressionStatement",
                        "src": "4737:38:144"
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 68959,
                                "name": "signers",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 68930,
                                "src": "4808:7:144",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 68961,
                              "indexExpression": {
                                "id": 68960,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 68939,
                                "src": "4816:1:144",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "4808:10:144",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 68958,
                            "name": "OwnerRecorded",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68742,
                            "src": "4794:13:144",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 68962,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4794:25:144",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 68963,
                        "nodeType": "EmitStatement",
                        "src": "4789:30:144"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 68945,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 68942,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68939,
                      "src": "4698:1:144",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 68943,
                        "name": "signers",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68930,
                        "src": "4702:7:144",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 68944,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "4702:14:144",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4698:18:144",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 68965,
                  "initializationExpression": {
                    "assignments": [
                      68939
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 68939,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4691:1:144",
                        "nodeType": "VariableDeclaration",
                        "scope": 68965,
                        "src": "4683:9:144",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 68938,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4683:7:144",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 68941,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 68940,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4695:1:144",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4683:13:144"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 68947,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4718:3:144",
                      "subExpression": {
                        "id": 68946,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68939,
                        "src": "4718:1:144",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 68948,
                    "nodeType": "ExpressionStatement",
                    "src": "4718:3:144"
                  },
                  "nodeType": "ForStatement",
                  "src": "4678:152:144"
                }
              ]
            },
            "baseFunctions": [
              41507
            ],
            "documentation": {
              "id": 68839,
              "nodeType": "StructuredDocumentation",
              "src": "3038:158:144",
              "text": "@notice Records the most recent time which any owner has signed a transaction.\n @dev Called by the Safe contract before execution of a transaction."
            },
            "functionSelector": "75f0bb52",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkTransaction",
            "nameLocation": "3210:16:144",
            "parameters": {
              "id": 68863,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68841,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3244:2:144",
                  "nodeType": "VariableDeclaration",
                  "scope": 68967,
                  "src": "3236:10:144",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 68840,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3236:7:144",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 68843,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "3264:5:144",
                  "nodeType": "VariableDeclaration",
                  "scope": 68967,
                  "src": "3256:13:144",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 68842,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3256:7:144",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 68845,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "3292:4:144",
                  "nodeType": "VariableDeclaration",
                  "scope": 68967,
                  "src": "3279:17:144",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 68844,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3279:5:144",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 68848,
                  "mutability": "mutable",
                  "name": "operation",
                  "nameLocation": "3321:9:144",
                  "nodeType": "VariableDeclaration",
                  "scope": 68967,
                  "src": "3306:24:144",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_Operation_$42545",
                    "typeString": "enum Enum.Operation"
                  },
                  "typeName": {
                    "id": 68847,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 68846,
                      "name": "Enum.Operation",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 42545,
                      "src": "3306:14:144"
                    },
                    "referencedDeclaration": 42545,
                    "src": "3306:14:144",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_Operation_$42545",
                      "typeString": "enum Enum.Operation"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 68850,
                  "mutability": "mutable",
                  "name": "safeTxGas",
                  "nameLocation": "3348:9:144",
                  "nodeType": "VariableDeclaration",
                  "scope": 68967,
                  "src": "3340:17:144",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 68849,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3340:7:144",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 68852,
                  "mutability": "mutable",
                  "name": "baseGas",
                  "nameLocation": "3375:7:144",
                  "nodeType": "VariableDeclaration",
                  "scope": 68967,
                  "src": "3367:15:144",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 68851,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3367:7:144",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 68854,
                  "mutability": "mutable",
                  "name": "gasPrice",
                  "nameLocation": "3400:8:144",
                  "nodeType": "VariableDeclaration",
                  "scope": 68967,
                  "src": "3392:16:144",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 68853,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3392:7:144",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 68856,
                  "mutability": "mutable",
                  "name": "gasToken",
                  "nameLocation": "3426:8:144",
                  "nodeType": "VariableDeclaration",
                  "scope": 68967,
                  "src": "3418:16:144",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 68855,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3418:7:144",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 68858,
                  "mutability": "mutable",
                  "name": "refundReceiver",
                  "nameLocation": "3460:14:144",
                  "nodeType": "VariableDeclaration",
                  "scope": 68967,
                  "src": "3444:30:144",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  },
                  "typeName": {
                    "id": 68857,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3444:15:144",
                    "stateMutability": "payable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address_payable",
                      "typeString": "address payable"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 68860,
                  "mutability": "mutable",
                  "name": "signatures",
                  "nameLocation": "3497:10:144",
                  "nodeType": "VariableDeclaration",
                  "scope": 68967,
                  "src": "3484:23:144",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 68859,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3484:5:144",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 68862,
                  "mutability": "mutable",
                  "name": "msgSender",
                  "nameLocation": "3525:9:144",
                  "nodeType": "VariableDeclaration",
                  "scope": 68967,
                  "src": "3517:17:144",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 68861,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3517:7:144",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3226:314:144"
            },
            "returnParameters": {
              "id": 68864,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3562:0:144"
            },
            "scope": 69089,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 69061,
            "nodeType": "FunctionDefinition",
            "src": "5290:1252:144",
            "nodes": [],
            "body": {
              "id": 69060,
              "nodeType": "Block",
              "src": "5343:1199:144",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 68975,
                      "name": "_requireOnlySafe",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68838,
                      "src": "5353:16:144",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 68976,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5353:18:144",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 68977,
                  "nodeType": "ExpressionStatement",
                  "src": "5353:18:144"
                },
                {
                  "assignments": [
                    68982
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 68982,
                      "mutability": "mutable",
                      "name": "ownersAfter",
                      "nameLocation": "5439:11:144",
                      "nodeType": "VariableDeclaration",
                      "scope": 69060,
                      "src": "5422:28:144",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 68980,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "5422:7:144",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 68981,
                        "nodeType": "ArrayTypeName",
                        "src": "5422:9:144",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 68986,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 68983,
                        "name": "SAFE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68750,
                        "src": "5453:4:144",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Safe_$41379",
                          "typeString": "contract Safe"
                        }
                      },
                      "id": 68984,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getOwners",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42538,
                      "src": "5453:14:144",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function () view external returns (address[] memory)"
                      }
                    },
                    "id": 68985,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5453:16:144",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5422:47:144"
                },
                {
                  "body": {
                    "id": 69019,
                    "nodeType": "Block",
                    "src": "5625:343:144",
                    "statements": [
                      {
                        "assignments": [
                          68999
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 68999,
                            "mutability": "mutable",
                            "name": "ownerAfter",
                            "nameLocation": "5711:10:144",
                            "nodeType": "VariableDeclaration",
                            "scope": 69019,
                            "src": "5703:18:144",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 68998,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5703:7:144",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 69003,
                        "initialValue": {
                          "baseExpression": {
                            "id": 69000,
                            "name": "ownersAfter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68982,
                            "src": "5724:11:144",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 69002,
                          "indexExpression": {
                            "id": 69001,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68988,
                            "src": "5736:1:144",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "5724:14:144",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "5703:35:144"
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 69009,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "id": 69006,
                                "name": "ownerAfter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 68999,
                                "src": "5776:10:144",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 69004,
                                "name": "ownersBefore",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 68759,
                                "src": "5756:12:144",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_AddressSet_$40177_storage",
                                  "typeString": "struct EnumerableSet.AddressSet storage ref"
                                }
                              },
                              "id": 69005,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "remove",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 40231,
                              "src": "5756:19:144",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$40177_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$40177_storage_ptr_$",
                                "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
                              }
                            },
                            "id": 69007,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5756:31:144",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "66616c7365",
                            "id": 69008,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5791:5:144",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "false"
                          },
                          "src": "5756:40:144",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 69018,
                        "nodeType": "IfStatement",
                        "src": "5752:206:144",
                        "trueBody": {
                          "id": 69017,
                          "nodeType": "Block",
                          "src": "5798:160:144",
                          "statements": [
                            {
                              "expression": {
                                "id": 69015,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 69010,
                                    "name": "lastLive",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 68755,
                                    "src": "5905:8:144",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 69012,
                                  "indexExpression": {
                                    "id": 69011,
                                    "name": "ownerAfter",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 68999,
                                    "src": "5914:10:144",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "5905:20:144",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "expression": {
                                    "id": 69013,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "5928:5:144",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 69014,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "timestamp",
                                  "nodeType": "MemberAccess",
                                  "src": "5928:15:144",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "5905:38:144",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 69016,
                              "nodeType": "ExpressionStatement",
                              "src": "5905:38:144"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 68994,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 68991,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68988,
                      "src": "5596:1:144",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 68992,
                        "name": "ownersAfter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68982,
                        "src": "5600:11:144",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 68993,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5600:18:144",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5596:22:144",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 69020,
                  "initializationExpression": {
                    "assignments": [
                      68988
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 68988,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5589:1:144",
                        "nodeType": "VariableDeclaration",
                        "scope": 69020,
                        "src": "5581:9:144",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 68987,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5581:7:144",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 68990,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 68989,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5593:1:144",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5581:13:144"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 68996,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5620:3:144",
                      "subExpression": {
                        "id": 68995,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68988,
                        "src": "5620:1:144",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 68997,
                    "nodeType": "ExpressionStatement",
                    "src": "5620:3:144"
                  },
                  "nodeType": "ForStatement",
                  "src": "5576:392:144"
                },
                {
                  "assignments": [
                    69025
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 69025,
                      "mutability": "mutable",
                      "name": "ownersBeforeCache",
                      "nameLocation": "6275:17:144",
                      "nodeType": "VariableDeclaration",
                      "scope": 69060,
                      "src": "6258:34:144",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 69023,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "6258:7:144",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 69024,
                        "nodeType": "ArrayTypeName",
                        "src": "6258:9:144",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 69029,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 69026,
                        "name": "ownersBefore",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68759,
                        "src": "6295:12:144",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_AddressSet_$40177_storage",
                          "typeString": "struct EnumerableSet.AddressSet storage ref"
                        }
                      },
                      "id": 69027,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "values",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40330,
                      "src": "6295:19:144",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_struct$_AddressSet_$40177_storage_ptr_$returns$_t_array$_t_address_$dyn_memory_ptr_$bound_to$_t_struct$_AddressSet_$40177_storage_ptr_$",
                        "typeString": "function (struct EnumerableSet.AddressSet storage pointer) view returns (address[] memory)"
                      }
                    },
                    "id": 69028,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6295:21:144",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6258:58:144"
                },
                {
                  "body": {
                    "id": 69058,
                    "nodeType": "Block",
                    "src": "6381:155:144",
                    "statements": [
                      {
                        "assignments": [
                          69042
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 69042,
                            "mutability": "mutable",
                            "name": "ownerBefore",
                            "nameLocation": "6403:11:144",
                            "nodeType": "VariableDeclaration",
                            "scope": 69058,
                            "src": "6395:19:144",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 69041,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "6395:7:144",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 69046,
                        "initialValue": {
                          "baseExpression": {
                            "id": 69043,
                            "name": "ownersBeforeCache",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69025,
                            "src": "6417:17:144",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                              "typeString": "address[] memory"
                            }
                          },
                          "id": 69045,
                          "indexExpression": {
                            "id": 69044,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 69031,
                            "src": "6435:1:144",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "6417:20:144",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "6395:42:144"
                      },
                      {
                        "expression": {
                          "id": 69050,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "delete",
                          "prefix": true,
                          "src": "6451:28:144",
                          "subExpression": {
                            "baseExpression": {
                              "id": 69047,
                              "name": "lastLive",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68755,
                              "src": "6458:8:144",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 69049,
                            "indexExpression": {
                              "id": 69048,
                              "name": "ownerBefore",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69042,
                              "src": "6467:11:144",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "6458:21:144",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 69051,
                        "nodeType": "ExpressionStatement",
                        "src": "6451:28:144"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 69055,
                              "name": "ownerBefore",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 69042,
                              "src": "6513:11:144",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 69052,
                              "name": "ownersBefore",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68759,
                              "src": "6493:12:144",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_AddressSet_$40177_storage",
                                "typeString": "struct EnumerableSet.AddressSet storage ref"
                              }
                            },
                            "id": 69054,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "remove",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 40231,
                            "src": "6493:19:144",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_AddressSet_$40177_storage_ptr_$_t_address_$returns$_t_bool_$bound_to$_t_struct$_AddressSet_$40177_storage_ptr_$",
                              "typeString": "function (struct EnumerableSet.AddressSet storage pointer,address) returns (bool)"
                            }
                          },
                          "id": 69056,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6493:32:144",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 69057,
                        "nodeType": "ExpressionStatement",
                        "src": "6493:32:144"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 69037,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 69034,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 69031,
                      "src": "6346:1:144",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 69035,
                        "name": "ownersBeforeCache",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69025,
                        "src": "6350:17:144",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 69036,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "6350:24:144",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6346:28:144",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 69059,
                  "initializationExpression": {
                    "assignments": [
                      69031
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 69031,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "6339:1:144",
                        "nodeType": "VariableDeclaration",
                        "scope": 69059,
                        "src": "6331:9:144",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 69030,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "6331:7:144",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 69033,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 69032,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "6343:1:144",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "6331:13:144"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 69039,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "6376:3:144",
                      "subExpression": {
                        "id": 69038,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 69031,
                        "src": "6376:1:144",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 69040,
                    "nodeType": "ExpressionStatement",
                    "src": "6376:3:144"
                  },
                  "nodeType": "ForStatement",
                  "src": "6326:210:144"
                }
              ]
            },
            "baseFunctions": [
              41514
            ],
            "documentation": {
              "id": 68968,
              "nodeType": "StructuredDocumentation",
              "src": "4842:443:144",
              "text": "@notice Update the lastLive mapping according to the set of owners before and after execution.\n @dev Called by the Safe contract after the execution of a transaction.\n      We use this post execution hook to compare the set of owners before and after.\n      If the set of owners has changed then we:\n      1. Add new owners to the lastLive mapping\n      2. Delete removed owners from the lastLive mapping"
            },
            "functionSelector": "93271368",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "checkAfterExecution",
            "nameLocation": "5299:19:144",
            "parameters": {
              "id": 68973,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 68970,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 69061,
                  "src": "5319:7:144",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 68969,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5319:7:144",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 68972,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 69061,
                  "src": "5328:4:144",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 68971,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5328:4:144",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5318:15:144"
            },
            "returnParameters": {
              "id": 68974,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5343:0:144"
            },
            "scope": 69089,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 69088,
            "nodeType": "FunctionDefinition",
            "src": "6737:232:144",
            "nodes": [],
            "body": {
              "id": 69087,
              "nodeType": "Block",
              "src": "6770:199:144",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 69068,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "6801:3:144",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 69069,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "6801:10:144",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 69066,
                            "name": "SAFE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 68750,
                            "src": "6788:4:144",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_Safe_$41379",
                              "typeString": "contract Safe"
                            }
                          },
                          "id": 69067,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isOwner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 42487,
                          "src": "6788:12:144",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 69070,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6788:24:144",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4c6976656e65737347756172643a206f6e6c792053616665206f776e657273206d61792064656d6f6e737472617465206c6976656e657373",
                        "id": 69071,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6814:58:144",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_012310aaf12af48dc480957a4fc455d53cd4ba66d63496f505d8e0b43a1f8d67",
                          "typeString": "literal_string \"LivenessGuard: only Safe owners may demonstrate liveness\""
                        },
                        "value": "LivenessGuard: only Safe owners may demonstrate liveness"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_012310aaf12af48dc480957a4fc455d53cd4ba66d63496f505d8e0b43a1f8d67",
                          "typeString": "literal_string \"LivenessGuard: only Safe owners may demonstrate liveness\""
                        }
                      ],
                      "id": 69065,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6780:7:144",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 69072,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6780:93:144",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 69073,
                  "nodeType": "ExpressionStatement",
                  "src": "6780:93:144"
                },
                {
                  "expression": {
                    "id": 69080,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 69074,
                        "name": "lastLive",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68755,
                        "src": "6883:8:144",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 69077,
                      "indexExpression": {
                        "expression": {
                          "id": 69075,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6892:3:144",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 69076,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6892:10:144",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "6883:20:144",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 69078,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "6906:5:144",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 69079,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "6906:15:144",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "6883:38:144",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 69081,
                  "nodeType": "ExpressionStatement",
                  "src": "6883:38:144"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 69083,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6951:3:144",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 69084,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6951:10:144",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 69082,
                      "name": "OwnerRecorded",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68742,
                      "src": "6937:13:144",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 69085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6937:25:144",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 69086,
                  "nodeType": "EmitStatement",
                  "src": "6932:30:144"
                }
              ]
            },
            "documentation": {
              "id": 69062,
              "nodeType": "StructuredDocumentation",
              "src": "6548:184:144",
              "text": "@notice Enables an owner to demonstrate liveness by calling this method directly.\n         This is useful for owners who have not recently signed a transaction via the Safe."
            },
            "functionSelector": "4c205d0d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "showLiveness",
            "nameLocation": "6746:12:144",
            "parameters": {
              "id": 69063,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6758:2:144"
            },
            "returnParameters": {
              "id": 69064,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6770:0:144"
            },
            "scope": 69089,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 68730,
              "name": "ISemver",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 83398,
              "src": "1265:7:144"
            },
            "id": 68731,
            "nodeType": "InheritanceSpecifier",
            "src": "1265:7:144"
          },
          {
            "baseName": {
              "id": 68732,
              "name": "BaseGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 41541,
              "src": "1274:9:144"
            },
            "id": 68733,
            "nodeType": "InheritanceSpecifier",
            "src": "1274:9:144"
          }
        ],
        "canonicalName": "LivenessGuard",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 68729,
          "nodeType": "StructuredDocumentation",
          "src": "510:729:144",
          "text": "@title LivenessGuard\n @notice This Guard contract is used to track the liveness of Safe owners.\n @dev It keeps track of the last time each owner participated in signing a transaction.\n      If an owner does not participate in a transaction for a certain period of time, they are considered inactive.\n      This Guard is intended to be used in conjunction with the LivenessModule contract, but does\n      not depend on it.\n      Note: Both `checkTransaction` and `checkAfterExecution` are called once each by the Safe contract\n      before and after the execution of a transaction. It is critical that neither function revert,\n      otherwise the Safe contract will be unable to execute a transaction."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          69089,
          41541,
          41515,
          42889,
          83398
        ],
        "name": "LivenessGuard",
        "nameLocation": "1248:13:144",
        "scope": 69090,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 144
}