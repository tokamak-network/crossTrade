{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "localToken",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "remoteToken",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "extraData",
          "type": "bytes"
        }
      ],
      "name": "ERC20BridgeFinalized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "localToken",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "remoteToken",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "extraData",
          "type": "bytes"
        }
      ],
      "name": "ERC20BridgeInitiated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "extraData",
          "type": "bytes"
        }
      ],
      "name": "ETHBridgeFinalized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "extraData",
          "type": "bytes"
        }
      ],
      "name": "ETHBridgeInitiated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MESSENGER",
      "outputs": [
        {
          "internalType": "contract CrossDomainMessenger",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "OTHER_BRIDGE",
      "outputs": [
        {
          "internalType": "contract StandardBridge",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_localToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_remoteToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "_minGasLimit",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "bridgeERC20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_localToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_remoteToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "_minGasLimit",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "bridgeERC20To",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_minGasLimit",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "bridgeETH",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "_minGasLimit",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "bridgeETHTo",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "deposits",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_localToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_remoteToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "finalizeBridgeERC20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "finalizeBridgeETH",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "messenger",
      "outputs": [
        {
          "internalType": "contract CrossDomainMessenger",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "otherBridge",
      "outputs": [
        {
          "internalType": "contract StandardBridge",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "MESSENGER()": "927ede2d",
    "OTHER_BRIDGE()": "7f46ddb2",
    "bridgeERC20(address,address,uint256,uint32,bytes)": "87087623",
    "bridgeERC20To(address,address,address,uint256,uint32,bytes)": "540abf73",
    "bridgeETH(uint32,bytes)": "09fc8843",
    "bridgeETHTo(address,uint32,bytes)": "e11013dd",
    "deposits(address,address)": "8f601f66",
    "finalizeBridgeERC20(address,address,address,address,uint256,bytes)": "0166a07a",
    "finalizeBridgeETH(address,address,uint256,bytes)": "1635f5fd",
    "messenger()": "3cb747bf",
    "otherBridge()": "c89701a2"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"localToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"remoteToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"ERC20BridgeFinalized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"localToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"remoteToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"ERC20BridgeInitiated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"ETHBridgeFinalized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"ETHBridgeInitiated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MESSENGER\",\"outputs\":[{\"internalType\":\"contract CrossDomainMessenger\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OTHER_BRIDGE\",\"outputs\":[{\"internalType\":\"contract StandardBridge\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_localToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_remoteToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_minGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"bridgeERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_localToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_remoteToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_minGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"bridgeERC20To\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_minGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"bridgeETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_minGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"bridgeETHTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"deposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_localToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_remoteToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"finalizeBridgeERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"finalizeBridgeETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"messenger\",\"outputs\":[{\"internalType\":\"contract CrossDomainMessenger\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"otherBridge\",\"outputs\":[{\"internalType\":\"contract StandardBridge\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"custom:upgradeable\":\"@title StandardBridge\",\"events\":{\"ERC20BridgeFinalized(address,address,address,address,uint256,bytes)\":{\"params\":{\"amount\":\"Amount of the ERC20 sent.\",\"extraData\":\"Extra data sent with the transaction.\",\"from\":\"Address of the sender.\",\"localToken\":\"Address of the ERC20 on this chain.\",\"remoteToken\":\"Address of the ERC20 on the remote chain.\",\"to\":\"Address of the receiver.\"}},\"ERC20BridgeInitiated(address,address,address,address,uint256,bytes)\":{\"params\":{\"amount\":\"Amount of the ERC20 sent.\",\"extraData\":\"Extra data sent with the transaction.\",\"from\":\"Address of the sender.\",\"localToken\":\"Address of the ERC20 on this chain.\",\"remoteToken\":\"Address of the ERC20 on the remote chain.\",\"to\":\"Address of the receiver.\"}},\"ETHBridgeFinalized(address,address,uint256,bytes)\":{\"params\":{\"amount\":\"Amount of ETH sent.\",\"extraData\":\"Extra data sent with the transaction.\",\"from\":\"Address of the sender.\",\"to\":\"Address of the receiver.\"}},\"ETHBridgeInitiated(address,address,uint256,bytes)\":{\"params\":{\"amount\":\"Amount of ETH sent.\",\"extraData\":\"Extra data sent with the transaction.\",\"from\":\"Address of the sender.\",\"to\":\"Address of the receiver.\"}}},\"kind\":\"dev\",\"methods\":{\"MESSENGER()\":{\"custom:legacy\":\"@return Messenger contract on this domain.\"},\"bridgeERC20(address,address,uint256,uint32,bytes)\":{\"params\":{\"_amount\":\"Amount of local tokens to deposit.\",\"_extraData\":\"Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.\",\"_localToken\":\"Address of the ERC20 on this chain.\",\"_minGasLimit\":\"Minimum amount of gas that the bridge can be relayed with.\",\"_remoteToken\":\"Address of the corresponding token on the remote chain.\"}},\"bridgeERC20To(address,address,address,uint256,uint32,bytes)\":{\"params\":{\"_amount\":\"Amount of local tokens to deposit.\",\"_extraData\":\"Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.\",\"_localToken\":\"Address of the ERC20 on this chain.\",\"_minGasLimit\":\"Minimum amount of gas that the bridge can be relayed with.\",\"_remoteToken\":\"Address of the corresponding token on the remote chain.\",\"_to\":\"Address of the receiver.\"}},\"bridgeETH(uint32,bytes)\":{\"params\":{\"_extraData\":\"Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.\",\"_minGasLimit\":\"Minimum amount of gas that the bridge can be relayed with.\"}},\"bridgeETHTo(address,uint32,bytes)\":{\"params\":{\"_extraData\":\"Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.\",\"_minGasLimit\":\"Minimum amount of gas that the bridge can be relayed with.\",\"_to\":\"Address of the receiver.\"}},\"constructor\":{\"params\":{\"_otherBridge\":\"Address of the other StandardBridge contract.\"}},\"finalizeBridgeERC20(address,address,address,address,uint256,bytes)\":{\"params\":{\"_amount\":\"Amount of the ERC20 being bridged.\",\"_extraData\":\"Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.\",\"_from\":\"Address of the sender.\",\"_localToken\":\"Address of the ERC20 on this chain.\",\"_remoteToken\":\"Address of the corresponding token on the remote chain.\",\"_to\":\"Address of the receiver.\"}},\"finalizeBridgeETH(address,address,uint256,bytes)\":{\"params\":{\"_amount\":\"Amount of ETH being bridged.\",\"_extraData\":\"Extra data to be sent with the transaction. Note that the recipient will                   not be triggered with this data, but it will be emitted and can be used                   to identify the transaction.\",\"_from\":\"Address of the sender.\",\"_to\":\"Address of the receiver.\"}}},\"stateVariables\":{\"OTHER_BRIDGE\":{\"custom:legacy\":\"@custom:network-specific\"},\"messenger\":{\"custom:network-specific\":\"\"},\"spacer_0_2_20\":{\"custom:legacy\":\"@custom:spacer messenger\"},\"spacer_1_0_20\":{\"custom:legacy\":\"@custom:spacer l2TokenBridge\"}},\"version\":1},\"userdoc\":{\"events\":{\"ERC20BridgeFinalized(address,address,address,address,uint256,bytes)\":{\"notice\":\"Emitted when an ERC20 bridge is finalized on this chain.\"},\"ERC20BridgeInitiated(address,address,address,address,uint256,bytes)\":{\"notice\":\"Emitted when an ERC20 bridge is initiated to the other chain.\"},\"ETHBridgeFinalized(address,address,uint256,bytes)\":{\"notice\":\"Emitted when an ETH bridge is finalized on this chain.\"},\"ETHBridgeInitiated(address,address,uint256,bytes)\":{\"notice\":\"Emitted when an ETH bridge is initiated to the other chain.\"}},\"kind\":\"user\",\"methods\":{\"MESSENGER()\":{\"notice\":\"Getter for messenger contract.\"},\"OTHER_BRIDGE()\":{\"notice\":\"Corresponding bridge on the other domain. This public getter is deprecated         and will be removed in the future. Please use `otherBridge` instead.         This can safely be an immutable because for the L1StandardBridge, it will         be set to the L2StandardBridge address, which is the same for all OP Stack         chains. For the L2StandardBridge, there are not multiple proxies using the         same implementation.\"},\"bridgeERC20(address,address,uint256,uint32,bytes)\":{\"notice\":\"Sends ERC20 tokens to the sender's address on the other chain. Note that if the         ERC20 token on the other chain does not recognize the local token as the correct         pair token, the ERC20 bridge will fail and the tokens will be returned to sender on         this chain.\"},\"bridgeERC20To(address,address,address,uint256,uint32,bytes)\":{\"notice\":\"Sends ERC20 tokens to a receiver's address on the other chain. Note that if the         ERC20 token on the other chain does not recognize the local token as the correct         pair token, the ERC20 bridge will fail and the tokens will be returned to sender on         this chain.\"},\"bridgeETH(uint32,bytes)\":{\"notice\":\"Sends ETH to the sender's address on the other chain.\"},\"bridgeETHTo(address,uint32,bytes)\":{\"notice\":\"Sends ETH to a receiver's address on the other chain. Note that if ETH is sent to a         smart contract and the call fails, the ETH will be temporarily locked in the         StandardBridge on the other chain until the call is replayed. If the call cannot be         replayed with any amount of gas (call always reverts), then the ETH will be         permanently locked in the StandardBridge on the other chain. ETH will also         be locked if the receiver is the other bridge, because finalizeBridgeETH will revert         in that case.\"},\"deposits(address,address)\":{\"notice\":\"Mapping that stores deposits for a given pair of local and remote tokens.\"},\"finalizeBridgeERC20(address,address,address,address,uint256,bytes)\":{\"notice\":\"Finalizes an ERC20 bridge on this chain. Can only be triggered by the other         StandardBridge contract on the remote chain.\"},\"finalizeBridgeETH(address,address,uint256,bytes)\":{\"notice\":\"Finalizes an ETH bridge on this chain. Can only be triggered by the other         StandardBridge contract on the remote chain.\"},\"messenger()\":{\"notice\":\"Messenger contract on this domain. This public getter is deprecated         and will be removed in the future. Please use `messenger` instead.\"},\"otherBridge()\":{\"notice\":\"Getter for the remote domain bridge contract.\"}},\"notice\":\"StandardBridge is a base contract for the L1 and L2 standard ERC20 bridges. It handles         the core bridging logic, including escrowing tokens that are native to the local chain         and minting/burning tokens that are native to the remote chain.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/universal/StandardBridge.sol\":\"StandardBridge\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@cwia/=lib/clones-with-immutable-args/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/solmate/\",\":clones-with-immutable-args/=lib/clones-with-immutable-args/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x2a21b14ff90012878752f230d3ffd5c3405e5938d06c97a7d89c0a64561d0d66\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3313a8f9bb1f9476857c9050067b31982bf2140b83d84f3bc0cec1f62bbe947f\",\"dweb:/ipfs/Qma17Pk8NRe7aB4UD3jjVxk7nSFaov3eQyv86hcyqkwJRV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6\",\"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165Checker.sol\":{\"keccak256\":\"0xc65c83c1039508fa7a42a09a3c6a32babd1c438ba4dbb23581255e784b5d5eed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1b3b38db0f76429db899909025e534c366415e9ea8b5ddc4c8901e6a7fc1461\",\"dweb:/ipfs/QmYv1KxyHjLEky9JWNSsSfpGJbiCxFyzVFgTwQKpiqYGUg\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929\",\"dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb3ebde1c8d27576db912d87c3560dab14adfb9cd001be95890ec4ba035e652e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a709421c4f5d4677db8216055d2d4dac96a613efdb08178a9f7041f0c5cef689\",\"dweb:/ipfs/QmYs2rStvVLDnSJs8HgaMD1ABwoKKWdiVbQyNfLfFWTjTy\"]},\"lib/solmate/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x622fcd8a49e132df5ec7651cc6ae3aaf0cf59bdcd67a9a804a1b9e2485113b7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af77088eb606427d4c55e578984a615779c86bc30646a20f7bb27299ba390f7c\",\"dweb:/ipfs/QmZGQdhdQDtHc7gZXWrKXgA3govc74X8U63BiWhPQK3mK8\"]},\"src/L1/ResourceMetering.sol\":{\"keccak256\":\"0xa4d524f2a5e91a0b63a62603e712001c51c77e8371b93cbb576bcb7d074b7588\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6d8141b6c6dc72d2e684c1ae388c005fd78c9ca7fc9c15dddebd227ca4fd730\",\"dweb:/ipfs/QmPfJrR4qssu769TDWJnxdTozqKtZUxiY8fs95bhfECTvG\"]},\"src/libraries/Arithmetic.sol\":{\"keccak256\":\"0x06a5a8b00527843f0cfc1bb3c0661316966a6cc432f88be31f23cde78cd07560\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5209e78e5415c0bf8b350362a825cc56152811abd6fcf2df3d4fa47766d3dee\",\"dweb:/ipfs/Qmf43xyc4Um32NmccayDfhm8kSnS2mhHXpPZnwABJS7cWm\"]},\"src/libraries/Burn.sol\":{\"keccak256\":\"0x90a795bcea3ef06d6d5011256c4bd63d1a4271f519246dbf1ee3e8f1c0e21010\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f60c3aa77cf0c484ddda4754157cff4dc0e2eace4bea67990daff4c0612ab5f\",\"dweb:/ipfs/QmSYGanMFve9uBC17X7hFneSFnwnJxz86Jgh6MX9BRMweb\"]},\"src/libraries/Constants.sol\":{\"keccak256\":\"0xe12e392f05f80d3837c9392d016471181ae1ee6b84ea91b4e125e6523e5f18a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a3509231c228b7a4352573cd422cf0260dcbb94cfd915e5b664643db5475a5b7\",\"dweb:/ipfs/QmU2QERY4mHxqWFqSE5Exsy6Ftc5MTjTtYHC11fahLJWDC\"]},\"src/libraries/Encoding.sol\":{\"keccak256\":\"0xd5bbcb7da113e69562498d9543765e03912558ad66348682c2049c31e19f9d9b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afc6656ea10062c0c9d0817bb8683636caebf9222c9c102f29ea54fff74a2f93\",\"dweb:/ipfs/QmTNWtMgrTRHM6XtdUmA8bMZcuFpXoFCXgXR5vRihZWLuW\"]},\"src/libraries/Hashing.sol\":{\"keccak256\":\"0x44e2b2dcfffc39c0fc95ccd3c2118c7e7585fadf3dca327877d5756c7d4b21c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c89e0d9cfcb08a0d3c46c85367a32bbd9703468ba4c0c5bb6e124c1d173b26b\",\"dweb:/ipfs/QmaY3nQHBBhHK1wrurVXiEeNL8hfZ1pRmhpqW44tFDJnDf\"]},\"src/libraries/SafeCall.sol\":{\"keccak256\":\"0x0636a7abb242bb5d6f5606967c8929e6aa7e63468c1e2ce40ad4780d4c4bf94f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4daec2ac8f9907bbf84ef0a1c48f03bae8657619bc6f42b3a672f25c516f17a\",\"dweb:/ipfs/Qmf8gfRxBv8gEmCkP8YMPb2GGfj9QUnoNUyKE7UR2SWGnq\"]},\"src/libraries/Types.sol\":{\"keccak256\":\"0x75900d651301940d24c00d14f0b3b6cbd6dcf379173ceaa31d9bf5be934a9aa4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c2632c5bf4fa3982391c32110eec9fa07917b483b2442cbaf18bdde5bdb24e\",\"dweb:/ipfs/QmSUs6Amkeootf5gKGbKi4mJpvhN2U8i1ED6ef2dskV5xc\"]},\"src/libraries/rlp/RLPWriter.sol\":{\"keccak256\":\"0x60ac401490f321c9c55e996a2c65151cd5e60de5f8f297e7c94d541c29820bb6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://070f5814db07e4a89173d44a36d90e4261ce530f7336034c01635347f2c2d88b\",\"dweb:/ipfs/QmXqr9yW5Kc8MYgr5wSehU5AiqS9pZ4FKxv7vwiwpZCcyV\"]},\"src/universal/CrossDomainMessenger.sol\":{\"keccak256\":\"0x6876fa0706a4647f4247eea58228dc650a39ff42fb2495ac2f8a37dcc99075b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a61d10bd62b6f4bbc5cc2b6c765c96cfc67e132a808f691ef1d8175eaf363363\",\"dweb:/ipfs/QmdBHpzFQpxVA9L9s3jiwHpB1SDtEeN3yqDazS7wnmEpFY\"]},\"src/universal/IOptimismMintableERC20.sol\":{\"keccak256\":\"0x6f8133b39efcbcbd5088f195dfacf1bedc3146508429c3865443909af735a04c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://adc36971e2e120458769f050428d9d2b0504516660345020c2521ee46e6d8abf\",\"dweb:/ipfs/QmPbFusQkZgGKpU8Fv5JoqL4oVeJtM3yqnhRGLY9eZT5zZ\"]},\"src/universal/OptimismMintableERC20.sol\":{\"keccak256\":\"0x239934f3d2f6fc94587461e080014f61c1f7f24150ef2173fd042c97eb416385\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85a184dba76a4fead2142d6b1ea7dc89efc3046b181961f8aff5f55ea9bc057f\",\"dweb:/ipfs/QmPdmrQhh6YhdK2r3969nPdjk1UUu4p1Q1BFrXutNFUHKt\"]},\"src/universal/Semver.sol\":{\"keccak256\":\"0x9de68ce536aee1aa616b4bf88d7ccc335460e6edd0e7170bdbf94c4fe3d41c60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5909c0b049b03a2bc24816ecf15b0aaf18c04a963174e1eba7624321bef330d\",\"dweb:/ipfs/QmeqdutwZWHqQMXauNR6WY8PrUpfsTiWTQyanbnGM9QqzT\"]},\"src/universal/StandardBridge.sol\":{\"keccak256\":\"0x3c566019ae8102039455fe8878bf77d4ad69d7076f4b177980ea0c070125c8d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://102cc55a435e27b3f012ae8c3a4cd7b48535f2df7db78e7b98c793983fffe347\",\"dweb:/ipfs/QmczRvGDo9H5YwTPW9wW9dkhQSXAvtpDzrmapUPSD4Be1G\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "localToken",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "remoteToken",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ERC20BridgeFinalized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "localToken",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "remoteToken",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ERC20BridgeInitiated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ETHBridgeFinalized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ETHBridgeInitiated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MESSENGER",
          "outputs": [
            {
              "internalType": "contract CrossDomainMessenger",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "OTHER_BRIDGE",
          "outputs": [
            {
              "internalType": "contract StandardBridge",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_localToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_remoteToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "_minGasLimit",
              "type": "uint32"
            },
            {
              "internalType": "bytes",
              "name": "_extraData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "bridgeERC20"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_localToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_remoteToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "_minGasLimit",
              "type": "uint32"
            },
            {
              "internalType": "bytes",
              "name": "_extraData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "bridgeERC20To"
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "_minGasLimit",
              "type": "uint32"
            },
            {
              "internalType": "bytes",
              "name": "_extraData",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "bridgeETH"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "_minGasLimit",
              "type": "uint32"
            },
            {
              "internalType": "bytes",
              "name": "_extraData",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "bridgeETHTo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "deposits",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_localToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_remoteToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_extraData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "finalizeBridgeERC20"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_extraData",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "finalizeBridgeETH"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "messenger",
          "outputs": [
            {
              "internalType": "contract CrossDomainMessenger",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "otherBridge",
          "outputs": [
            {
              "internalType": "contract StandardBridge",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "MESSENGER()": {
            "custom:legacy": "@return Messenger contract on this domain."
          },
          "bridgeERC20(address,address,uint256,uint32,bytes)": {
            "params": {
              "_amount": "Amount of local tokens to deposit.",
              "_extraData": "Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.",
              "_localToken": "Address of the ERC20 on this chain.",
              "_minGasLimit": "Minimum amount of gas that the bridge can be relayed with.",
              "_remoteToken": "Address of the corresponding token on the remote chain."
            }
          },
          "bridgeERC20To(address,address,address,uint256,uint32,bytes)": {
            "params": {
              "_amount": "Amount of local tokens to deposit.",
              "_extraData": "Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.",
              "_localToken": "Address of the ERC20 on this chain.",
              "_minGasLimit": "Minimum amount of gas that the bridge can be relayed with.",
              "_remoteToken": "Address of the corresponding token on the remote chain.",
              "_to": "Address of the receiver."
            }
          },
          "bridgeETH(uint32,bytes)": {
            "params": {
              "_extraData": "Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.",
              "_minGasLimit": "Minimum amount of gas that the bridge can be relayed with."
            }
          },
          "bridgeETHTo(address,uint32,bytes)": {
            "params": {
              "_extraData": "Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.",
              "_minGasLimit": "Minimum amount of gas that the bridge can be relayed with.",
              "_to": "Address of the receiver."
            }
          },
          "constructor": {
            "params": {
              "_otherBridge": "Address of the other StandardBridge contract."
            }
          },
          "finalizeBridgeERC20(address,address,address,address,uint256,bytes)": {
            "params": {
              "_amount": "Amount of the ERC20 being bridged.",
              "_extraData": "Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.",
              "_from": "Address of the sender.",
              "_localToken": "Address of the ERC20 on this chain.",
              "_remoteToken": "Address of the corresponding token on the remote chain.",
              "_to": "Address of the receiver."
            }
          },
          "finalizeBridgeETH(address,address,uint256,bytes)": {
            "params": {
              "_amount": "Amount of ETH being bridged.",
              "_extraData": "Extra data to be sent with the transaction. Note that the recipient will                   not be triggered with this data, but it will be emitted and can be used                   to identify the transaction.",
              "_from": "Address of the sender.",
              "_to": "Address of the receiver."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "MESSENGER()": {
            "notice": "Getter for messenger contract."
          },
          "OTHER_BRIDGE()": {
            "notice": "Corresponding bridge on the other domain. This public getter is deprecated         and will be removed in the future. Please use `otherBridge` instead.         This can safely be an immutable because for the L1StandardBridge, it will         be set to the L2StandardBridge address, which is the same for all OP Stack         chains. For the L2StandardBridge, there are not multiple proxies using the         same implementation."
          },
          "bridgeERC20(address,address,uint256,uint32,bytes)": {
            "notice": "Sends ERC20 tokens to the sender's address on the other chain. Note that if the         ERC20 token on the other chain does not recognize the local token as the correct         pair token, the ERC20 bridge will fail and the tokens will be returned to sender on         this chain."
          },
          "bridgeERC20To(address,address,address,uint256,uint32,bytes)": {
            "notice": "Sends ERC20 tokens to a receiver's address on the other chain. Note that if the         ERC20 token on the other chain does not recognize the local token as the correct         pair token, the ERC20 bridge will fail and the tokens will be returned to sender on         this chain."
          },
          "bridgeETH(uint32,bytes)": {
            "notice": "Sends ETH to the sender's address on the other chain."
          },
          "bridgeETHTo(address,uint32,bytes)": {
            "notice": "Sends ETH to a receiver's address on the other chain. Note that if ETH is sent to a         smart contract and the call fails, the ETH will be temporarily locked in the         StandardBridge on the other chain until the call is replayed. If the call cannot be         replayed with any amount of gas (call always reverts), then the ETH will be         permanently locked in the StandardBridge on the other chain. ETH will also         be locked if the receiver is the other bridge, because finalizeBridgeETH will revert         in that case."
          },
          "deposits(address,address)": {
            "notice": "Mapping that stores deposits for a given pair of local and remote tokens."
          },
          "finalizeBridgeERC20(address,address,address,address,uint256,bytes)": {
            "notice": "Finalizes an ERC20 bridge on this chain. Can only be triggered by the other         StandardBridge contract on the remote chain."
          },
          "finalizeBridgeETH(address,address,uint256,bytes)": {
            "notice": "Finalizes an ETH bridge on this chain. Can only be triggered by the other         StandardBridge contract on the remote chain."
          },
          "messenger()": {
            "notice": "Messenger contract on this domain. This public getter is deprecated         and will be removed in the future. Please use `messenger` instead."
          },
          "otherBridge()": {
            "notice": "Getter for the remote domain bridge contract."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@cwia/=lib/clones-with-immutable-args/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@rari-capital/solmate/=lib/solmate/",
        "clones-with-immutable-args/=lib/clones-with-immutable-args/src/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "safe-contracts/=lib/safe-contracts/contracts/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 999999
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "src/universal/StandardBridge.sol": "StandardBridge"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
        "urls": [
          "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
          "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x2a21b14ff90012878752f230d3ffd5c3405e5938d06c97a7d89c0a64561d0d66",
        "urls": [
          "bzz-raw://3313a8f9bb1f9476857c9050067b31982bf2140b83d84f3bc0cec1f62bbe947f",
          "dweb:/ipfs/Qma17Pk8NRe7aB4UD3jjVxk7nSFaov3eQyv86hcyqkwJRV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238",
        "urls": [
          "bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0",
          "dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29",
        "urls": [
          "bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6",
          "dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10",
        "urls": [
          "bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487",
          "dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3",
        "urls": [
          "bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638",
          "dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165Checker.sol": {
        "keccak256": "0xc65c83c1039508fa7a42a09a3c6a32babd1c438ba4dbb23581255e784b5d5eed",
        "urls": [
          "bzz-raw://a1b3b38db0f76429db899909025e534c366415e9ea8b5ddc4c8901e6a7fc1461",
          "dweb:/ipfs/QmYv1KxyHjLEky9JWNSsSfpGJbiCxFyzVFgTwQKpiqYGUg"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0",
        "urls": [
          "bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929",
          "dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xb3ebde1c8d27576db912d87c3560dab14adfb9cd001be95890ec4ba035e652e7",
        "urls": [
          "bzz-raw://a709421c4f5d4677db8216055d2d4dac96a613efdb08178a9f7041f0c5cef689",
          "dweb:/ipfs/QmYs2rStvVLDnSJs8HgaMD1ABwoKKWdiVbQyNfLfFWTjTy"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/utils/FixedPointMathLib.sol": {
        "keccak256": "0x622fcd8a49e132df5ec7651cc6ae3aaf0cf59bdcd67a9a804a1b9e2485113b7d",
        "urls": [
          "bzz-raw://af77088eb606427d4c55e578984a615779c86bc30646a20f7bb27299ba390f7c",
          "dweb:/ipfs/QmZGQdhdQDtHc7gZXWrKXgA3govc74X8U63BiWhPQK3mK8"
        ],
        "license": "MIT"
      },
      "src/L1/ResourceMetering.sol": {
        "keccak256": "0xa4d524f2a5e91a0b63a62603e712001c51c77e8371b93cbb576bcb7d074b7588",
        "urls": [
          "bzz-raw://d6d8141b6c6dc72d2e684c1ae388c005fd78c9ca7fc9c15dddebd227ca4fd730",
          "dweb:/ipfs/QmPfJrR4qssu769TDWJnxdTozqKtZUxiY8fs95bhfECTvG"
        ],
        "license": "MIT"
      },
      "src/libraries/Arithmetic.sol": {
        "keccak256": "0x06a5a8b00527843f0cfc1bb3c0661316966a6cc432f88be31f23cde78cd07560",
        "urls": [
          "bzz-raw://d5209e78e5415c0bf8b350362a825cc56152811abd6fcf2df3d4fa47766d3dee",
          "dweb:/ipfs/Qmf43xyc4Um32NmccayDfhm8kSnS2mhHXpPZnwABJS7cWm"
        ],
        "license": "MIT"
      },
      "src/libraries/Burn.sol": {
        "keccak256": "0x90a795bcea3ef06d6d5011256c4bd63d1a4271f519246dbf1ee3e8f1c0e21010",
        "urls": [
          "bzz-raw://9f60c3aa77cf0c484ddda4754157cff4dc0e2eace4bea67990daff4c0612ab5f",
          "dweb:/ipfs/QmSYGanMFve9uBC17X7hFneSFnwnJxz86Jgh6MX9BRMweb"
        ],
        "license": "MIT"
      },
      "src/libraries/Constants.sol": {
        "keccak256": "0xe12e392f05f80d3837c9392d016471181ae1ee6b84ea91b4e125e6523e5f18a2",
        "urls": [
          "bzz-raw://a3509231c228b7a4352573cd422cf0260dcbb94cfd915e5b664643db5475a5b7",
          "dweb:/ipfs/QmU2QERY4mHxqWFqSE5Exsy6Ftc5MTjTtYHC11fahLJWDC"
        ],
        "license": "MIT"
      },
      "src/libraries/Encoding.sol": {
        "keccak256": "0xd5bbcb7da113e69562498d9543765e03912558ad66348682c2049c31e19f9d9b",
        "urls": [
          "bzz-raw://afc6656ea10062c0c9d0817bb8683636caebf9222c9c102f29ea54fff74a2f93",
          "dweb:/ipfs/QmTNWtMgrTRHM6XtdUmA8bMZcuFpXoFCXgXR5vRihZWLuW"
        ],
        "license": "MIT"
      },
      "src/libraries/Hashing.sol": {
        "keccak256": "0x44e2b2dcfffc39c0fc95ccd3c2118c7e7585fadf3dca327877d5756c7d4b21c3",
        "urls": [
          "bzz-raw://6c89e0d9cfcb08a0d3c46c85367a32bbd9703468ba4c0c5bb6e124c1d173b26b",
          "dweb:/ipfs/QmaY3nQHBBhHK1wrurVXiEeNL8hfZ1pRmhpqW44tFDJnDf"
        ],
        "license": "MIT"
      },
      "src/libraries/SafeCall.sol": {
        "keccak256": "0x0636a7abb242bb5d6f5606967c8929e6aa7e63468c1e2ce40ad4780d4c4bf94f",
        "urls": [
          "bzz-raw://a4daec2ac8f9907bbf84ef0a1c48f03bae8657619bc6f42b3a672f25c516f17a",
          "dweb:/ipfs/Qmf8gfRxBv8gEmCkP8YMPb2GGfj9QUnoNUyKE7UR2SWGnq"
        ],
        "license": "MIT"
      },
      "src/libraries/Types.sol": {
        "keccak256": "0x75900d651301940d24c00d14f0b3b6cbd6dcf379173ceaa31d9bf5be934a9aa4",
        "urls": [
          "bzz-raw://99c2632c5bf4fa3982391c32110eec9fa07917b483b2442cbaf18bdde5bdb24e",
          "dweb:/ipfs/QmSUs6Amkeootf5gKGbKi4mJpvhN2U8i1ED6ef2dskV5xc"
        ],
        "license": "MIT"
      },
      "src/libraries/rlp/RLPWriter.sol": {
        "keccak256": "0x60ac401490f321c9c55e996a2c65151cd5e60de5f8f297e7c94d541c29820bb6",
        "urls": [
          "bzz-raw://070f5814db07e4a89173d44a36d90e4261ce530f7336034c01635347f2c2d88b",
          "dweb:/ipfs/QmXqr9yW5Kc8MYgr5wSehU5AiqS9pZ4FKxv7vwiwpZCcyV"
        ],
        "license": "MIT"
      },
      "src/universal/CrossDomainMessenger.sol": {
        "keccak256": "0x6876fa0706a4647f4247eea58228dc650a39ff42fb2495ac2f8a37dcc99075b6",
        "urls": [
          "bzz-raw://a61d10bd62b6f4bbc5cc2b6c765c96cfc67e132a808f691ef1d8175eaf363363",
          "dweb:/ipfs/QmdBHpzFQpxVA9L9s3jiwHpB1SDtEeN3yqDazS7wnmEpFY"
        ],
        "license": "MIT"
      },
      "src/universal/IOptimismMintableERC20.sol": {
        "keccak256": "0x6f8133b39efcbcbd5088f195dfacf1bedc3146508429c3865443909af735a04c",
        "urls": [
          "bzz-raw://adc36971e2e120458769f050428d9d2b0504516660345020c2521ee46e6d8abf",
          "dweb:/ipfs/QmPbFusQkZgGKpU8Fv5JoqL4oVeJtM3yqnhRGLY9eZT5zZ"
        ],
        "license": "MIT"
      },
      "src/universal/OptimismMintableERC20.sol": {
        "keccak256": "0x239934f3d2f6fc94587461e080014f61c1f7f24150ef2173fd042c97eb416385",
        "urls": [
          "bzz-raw://85a184dba76a4fead2142d6b1ea7dc89efc3046b181961f8aff5f55ea9bc057f",
          "dweb:/ipfs/QmPdmrQhh6YhdK2r3969nPdjk1UUu4p1Q1BFrXutNFUHKt"
        ],
        "license": "MIT"
      },
      "src/universal/Semver.sol": {
        "keccak256": "0x9de68ce536aee1aa616b4bf88d7ccc335460e6edd0e7170bdbf94c4fe3d41c60",
        "urls": [
          "bzz-raw://d5909c0b049b03a2bc24816ecf15b0aaf18c04a963174e1eba7624321bef330d",
          "dweb:/ipfs/QmeqdutwZWHqQMXauNR6WY8PrUpfsTiWTQyanbnGM9QqzT"
        ],
        "license": "MIT"
      },
      "src/universal/StandardBridge.sol": {
        "keccak256": "0x3c566019ae8102039455fe8878bf77d4ad69d7076f4b177980ea0c070125c8d8",
        "urls": [
          "bzz-raw://102cc55a435e27b3f012ae8c3a4cd7b48535f2df7db78e7b98c793983fffe347",
          "dweb:/ipfs/QmczRvGDo9H5YwTPW9wW9dkhQSXAvtpDzrmapUPSD4Be1G"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 30163,
        "contract": "src/universal/StandardBridge.sol:StandardBridge",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 30166,
        "contract": "src/universal/StandardBridge.sol:StandardBridge",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 73437,
        "contract": "src/universal/StandardBridge.sol:StandardBridge",
        "label": "spacer_0_2_20",
        "offset": 2,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 73440,
        "contract": "src/universal/StandardBridge.sol:StandardBridge",
        "label": "spacer_1_0_20",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 73447,
        "contract": "src/universal/StandardBridge.sol:StandardBridge",
        "label": "deposits",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 73451,
        "contract": "src/universal/StandardBridge.sol:StandardBridge",
        "label": "messenger",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(CrossDomainMessenger)71321"
      },
      {
        "astId": 73456,
        "contract": "src/universal/StandardBridge.sol:StandardBridge",
        "label": "__gap",
        "offset": 0,
        "slot": "4",
        "type": "t_array(t_uint256)46_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)46_storage": {
        "encoding": "inplace",
        "label": "uint256[46]",
        "numberOfBytes": "1472",
        "base": "t_uint256"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(CrossDomainMessenger)71321": {
        "encoding": "inplace",
        "label": "contract CrossDomainMessenger",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  },
  "userdoc": {
    "version": 1,
    "kind": "user",
    "methods": {
      "MESSENGER()": {
        "notice": "Getter for messenger contract."
      },
      "OTHER_BRIDGE()": {
        "notice": "Corresponding bridge on the other domain. This public getter is deprecated         and will be removed in the future. Please use `otherBridge` instead.         This can safely be an immutable because for the L1StandardBridge, it will         be set to the L2StandardBridge address, which is the same for all OP Stack         chains. For the L2StandardBridge, there are not multiple proxies using the         same implementation."
      },
      "bridgeERC20(address,address,uint256,uint32,bytes)": {
        "notice": "Sends ERC20 tokens to the sender's address on the other chain. Note that if the         ERC20 token on the other chain does not recognize the local token as the correct         pair token, the ERC20 bridge will fail and the tokens will be returned to sender on         this chain."
      },
      "bridgeERC20To(address,address,address,uint256,uint32,bytes)": {
        "notice": "Sends ERC20 tokens to a receiver's address on the other chain. Note that if the         ERC20 token on the other chain does not recognize the local token as the correct         pair token, the ERC20 bridge will fail and the tokens will be returned to sender on         this chain."
      },
      "bridgeETH(uint32,bytes)": {
        "notice": "Sends ETH to the sender's address on the other chain."
      },
      "bridgeETHTo(address,uint32,bytes)": {
        "notice": "Sends ETH to a receiver's address on the other chain. Note that if ETH is sent to a         smart contract and the call fails, the ETH will be temporarily locked in the         StandardBridge on the other chain until the call is replayed. If the call cannot be         replayed with any amount of gas (call always reverts), then the ETH will be         permanently locked in the StandardBridge on the other chain. ETH will also         be locked if the receiver is the other bridge, because finalizeBridgeETH will revert         in that case."
      },
      "deposits(address,address)": {
        "notice": "Mapping that stores deposits for a given pair of local and remote tokens."
      },
      "finalizeBridgeERC20(address,address,address,address,uint256,bytes)": {
        "notice": "Finalizes an ERC20 bridge on this chain. Can only be triggered by the other         StandardBridge contract on the remote chain."
      },
      "finalizeBridgeETH(address,address,uint256,bytes)": {
        "notice": "Finalizes an ETH bridge on this chain. Can only be triggered by the other         StandardBridge contract on the remote chain."
      },
      "messenger()": {
        "notice": "Messenger contract on this domain. This public getter is deprecated         and will be removed in the future. Please use `messenger` instead."
      },
      "otherBridge()": {
        "notice": "Getter for the remote domain bridge contract."
      }
    },
    "events": {
      "ERC20BridgeFinalized(address,address,address,address,uint256,bytes)": {
        "notice": "Emitted when an ERC20 bridge is finalized on this chain."
      },
      "ERC20BridgeInitiated(address,address,address,address,uint256,bytes)": {
        "notice": "Emitted when an ERC20 bridge is initiated to the other chain."
      },
      "ETHBridgeFinalized(address,address,uint256,bytes)": {
        "notice": "Emitted when an ETH bridge is finalized on this chain."
      },
      "ETHBridgeInitiated(address,address,uint256,bytes)": {
        "notice": "Emitted when an ETH bridge is initiated to the other chain."
      }
    },
    "notice": "StandardBridge is a base contract for the L1 and L2 standard ERC20 bridges. It handles         the core bridging logic, including escrowing tokens that are native to the local chain         and minting/burning tokens that are native to the remote chain."
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "methods": {
      "MESSENGER()": {},
      "bridgeERC20(address,address,uint256,uint32,bytes)": {
        "params": {
          "_amount": "Amount of local tokens to deposit.",
          "_extraData": "Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.",
          "_localToken": "Address of the ERC20 on this chain.",
          "_minGasLimit": "Minimum amount of gas that the bridge can be relayed with.",
          "_remoteToken": "Address of the corresponding token on the remote chain."
        }
      },
      "bridgeERC20To(address,address,address,uint256,uint32,bytes)": {
        "params": {
          "_amount": "Amount of local tokens to deposit.",
          "_extraData": "Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.",
          "_localToken": "Address of the ERC20 on this chain.",
          "_minGasLimit": "Minimum amount of gas that the bridge can be relayed with.",
          "_remoteToken": "Address of the corresponding token on the remote chain.",
          "_to": "Address of the receiver."
        }
      },
      "bridgeETH(uint32,bytes)": {
        "params": {
          "_extraData": "Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.",
          "_minGasLimit": "Minimum amount of gas that the bridge can be relayed with."
        }
      },
      "bridgeETHTo(address,uint32,bytes)": {
        "params": {
          "_extraData": "Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.",
          "_minGasLimit": "Minimum amount of gas that the bridge can be relayed with.",
          "_to": "Address of the receiver."
        }
      },
      "constructor": {
        "params": {
          "_otherBridge": "Address of the other StandardBridge contract."
        }
      },
      "finalizeBridgeERC20(address,address,address,address,uint256,bytes)": {
        "params": {
          "_amount": "Amount of the ERC20 being bridged.",
          "_extraData": "Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.",
          "_from": "Address of the sender.",
          "_localToken": "Address of the ERC20 on this chain.",
          "_remoteToken": "Address of the corresponding token on the remote chain.",
          "_to": "Address of the receiver."
        }
      },
      "finalizeBridgeETH(address,address,uint256,bytes)": {
        "params": {
          "_amount": "Amount of ETH being bridged.",
          "_extraData": "Extra data to be sent with the transaction. Note that the recipient will                   not be triggered with this data, but it will be emitted and can be used                   to identify the transaction.",
          "_from": "Address of the sender.",
          "_to": "Address of the receiver."
        }
      }
    },
    "events": {
      "ERC20BridgeFinalized(address,address,address,address,uint256,bytes)": {
        "params": {
          "amount": "Amount of the ERC20 sent.",
          "extraData": "Extra data sent with the transaction.",
          "from": "Address of the sender.",
          "localToken": "Address of the ERC20 on this chain.",
          "remoteToken": "Address of the ERC20 on the remote chain.",
          "to": "Address of the receiver."
        }
      },
      "ERC20BridgeInitiated(address,address,address,address,uint256,bytes)": {
        "params": {
          "amount": "Amount of the ERC20 sent.",
          "extraData": "Extra data sent with the transaction.",
          "from": "Address of the sender.",
          "localToken": "Address of the ERC20 on this chain.",
          "remoteToken": "Address of the ERC20 on the remote chain.",
          "to": "Address of the receiver."
        }
      },
      "ETHBridgeFinalized(address,address,uint256,bytes)": {
        "params": {
          "amount": "Amount of ETH sent.",
          "extraData": "Extra data sent with the transaction.",
          "from": "Address of the sender.",
          "to": "Address of the receiver."
        }
      },
      "ETHBridgeInitiated(address,address,uint256,bytes)": {
        "params": {
          "amount": "Amount of ETH sent.",
          "extraData": "Extra data sent with the transaction.",
          "from": "Address of the sender.",
          "to": "Address of the receiver."
        }
      }
    }
  },
  "ast": {
    "absolutePath": "src/universal/StandardBridge.sol",
    "id": 74145,
    "exportedSymbols": {
      "Address": [
        33858
      ],
      "CrossDomainMessenger": [
        71321
      ],
      "ERC165Checker": [
        34940
      ],
      "IERC20": [
        30971
      ],
      "ILegacyMintableERC20": [
        71759
      ],
      "IOptimismMintableERC20": [
        71736
      ],
      "Initializable": [
        30307
      ],
      "OptimismMintableERC20": [
        72072
      ],
      "SafeCall": [
        68984
      ],
      "SafeERC20": [
        32166
      ],
      "StandardBridge": [
        74144
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:22386:169",
    "nodes": [
      {
        "id": 73400,
        "nodeType": "PragmaDirective",
        "src": "32:23:169",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 73402,
        "nodeType": "ImportDirective",
        "src": "57:72:169",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74145,
        "sourceUnit": 30972,
        "symbolAliases": [
          {
            "foreign": {
              "id": 73401,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30971,
              "src": "66:6:169",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 73404,
        "nodeType": "ImportDirective",
        "src": "130:94:169",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165Checker.sol",
        "file": "@openzeppelin/contracts/utils/introspection/ERC165Checker.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74145,
        "sourceUnit": 34941,
        "symbolAliases": [
          {
            "foreign": {
              "id": 73403,
              "name": "ERC165Checker",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 34940,
              "src": "139:13:169",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 73406,
        "nodeType": "ImportDirective",
        "src": "225:68:169",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74145,
        "sourceUnit": 33859,
        "symbolAliases": [
          {
            "foreign": {
              "id": 73405,
              "name": "Address",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 33858,
              "src": "234:7:169",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 73408,
        "nodeType": "ImportDirective",
        "src": "294:84:169",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74145,
        "sourceUnit": 32167,
        "symbolAliases": [
          {
            "foreign": {
              "id": 73407,
              "name": "SafeERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 32166,
              "src": "303:9:169",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 73410,
        "nodeType": "ImportDirective",
        "src": "379:54:169",
        "nodes": [],
        "absolutePath": "src/libraries/SafeCall.sol",
        "file": "src/libraries/SafeCall.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74145,
        "sourceUnit": 68985,
        "symbolAliases": [
          {
            "foreign": {
              "id": 73409,
              "name": "SafeCall",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 68984,
              "src": "388:8:169",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 73413,
        "nodeType": "ImportDirective",
        "src": "434:104:169",
        "nodes": [],
        "absolutePath": "src/universal/IOptimismMintableERC20.sol",
        "file": "src/universal/IOptimismMintableERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74145,
        "sourceUnit": 71760,
        "symbolAliases": [
          {
            "foreign": {
              "id": 73411,
              "name": "IOptimismMintableERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 71736,
              "src": "443:22:169",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          },
          {
            "foreign": {
              "id": 73412,
              "name": "ILegacyMintableERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 71759,
              "src": "467:20:169",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 73415,
        "nodeType": "ImportDirective",
        "src": "539:78:169",
        "nodes": [],
        "absolutePath": "src/universal/CrossDomainMessenger.sol",
        "file": "src/universal/CrossDomainMessenger.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74145,
        "sourceUnit": 71322,
        "symbolAliases": [
          {
            "foreign": {
              "id": 73414,
              "name": "CrossDomainMessenger",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 71321,
              "src": "548:20:169",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 73417,
        "nodeType": "ImportDirective",
        "src": "618:80:169",
        "nodes": [],
        "absolutePath": "src/universal/OptimismMintableERC20.sol",
        "file": "src/universal/OptimismMintableERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74145,
        "sourceUnit": 72073,
        "symbolAliases": [
          {
            "foreign": {
              "id": 73416,
              "name": "OptimismMintableERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 72072,
              "src": "627:21:169",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 73419,
        "nodeType": "ImportDirective",
        "src": "699:86:169",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol",
        "file": "@openzeppelin/contracts/proxy/utils/Initializable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 74145,
        "sourceUnit": 30308,
        "symbolAliases": [
          {
            "foreign": {
              "id": 73418,
              "name": "Initializable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30307,
              "src": "708:13:169",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 74144,
        "nodeType": "ContractDefinition",
        "src": "1111:21306:169",
        "nodes": [
          {
            "id": 73426,
            "nodeType": "UsingForDirective",
            "src": "1167:27:169",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 73423,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 32166,
              "src": "1173:9:169"
            },
            "typeName": {
              "id": 73425,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 73424,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 30971,
                "src": "1187:6:169"
              },
              "referencedDeclaration": 30971,
              "src": "1187:6:169",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$30971",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 73430,
            "nodeType": "VariableDeclaration",
            "src": "1290:60:169",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 73427,
              "nodeType": "StructuredDocumentation",
              "src": "1200:85:169",
              "text": "@notice The L2 gas limit set when eth is depoisited using the receive() function."
            },
            "mutability": "constant",
            "name": "RECEIVE_DEFAULT_GAS_LIMIT",
            "nameLocation": "1315:25:169",
            "scope": 74144,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint32",
              "typeString": "uint32"
            },
            "typeName": {
              "id": 73428,
              "name": "uint32",
              "nodeType": "ElementaryTypeName",
              "src": "1290:6:169",
              "typeDescriptions": {
                "typeIdentifier": "t_uint32",
                "typeString": "uint32"
              }
            },
            "value": {
              "hexValue": "3230305f303030",
              "id": 73429,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1343:7:169",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_200000_by_1",
                "typeString": "int_const 200000"
              },
              "value": "200_000"
            },
            "visibility": "internal"
          },
          {
            "id": 73434,
            "nodeType": "VariableDeclaration",
            "src": "1898:44:169",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 73431,
              "nodeType": "StructuredDocumentation",
              "src": "1357:536:169",
              "text": "@notice Corresponding bridge on the other domain. This public getter is deprecated\n         and will be removed in the future. Please use `otherBridge` instead.\n         This can safely be an immutable because for the L1StandardBridge, it will\n         be set to the L2StandardBridge address, which is the same for all OP Stack\n         chains. For the L2StandardBridge, there are not multiple proxies using the\n         same implementation.\n @custom:legacy\n @custom:network-specific"
            },
            "functionSelector": "7f46ddb2",
            "mutability": "immutable",
            "name": "OTHER_BRIDGE",
            "nameLocation": "1930:12:169",
            "scope": 74144,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_StandardBridge_$74144",
              "typeString": "contract StandardBridge"
            },
            "typeName": {
              "id": 73433,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 73432,
                "name": "StandardBridge",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 74144,
                "src": "1898:14:169"
              },
              "referencedDeclaration": 74144,
              "src": "1898:14:169",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_StandardBridge_$74144",
                "typeString": "contract StandardBridge"
              }
            },
            "visibility": "public"
          },
          {
            "id": 73437,
            "nodeType": "VariableDeclaration",
            "src": "2057:29:169",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 73435,
              "nodeType": "StructuredDocumentation",
              "src": "1949:103:169",
              "text": "@custom:legacy\n @custom:spacer messenger\n @notice Spacer for backwards compatibility."
            },
            "mutability": "mutable",
            "name": "spacer_0_2_20",
            "nameLocation": "2073:13:169",
            "scope": 74144,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 73436,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2057:7:169",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "id": 73440,
            "nodeType": "VariableDeclaration",
            "src": "2205:29:169",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 73438,
              "nodeType": "StructuredDocumentation",
              "src": "2093:107:169",
              "text": "@custom:legacy\n @custom:spacer l2TokenBridge\n @notice Spacer for backwards compatibility."
            },
            "mutability": "mutable",
            "name": "spacer_1_0_20",
            "nameLocation": "2221:13:169",
            "scope": 74144,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 73439,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2205:7:169",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "private"
          },
          {
            "id": 73447,
            "nodeType": "VariableDeclaration",
            "src": "2331:63:169",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 73441,
              "nodeType": "StructuredDocumentation",
              "src": "2241:85:169",
              "text": "@notice Mapping that stores deposits for a given pair of local and remote tokens."
            },
            "functionSelector": "8f601f66",
            "mutability": "mutable",
            "name": "deposits",
            "nameLocation": "2386:8:169",
            "scope": 74144,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
              "typeString": "mapping(address => mapping(address => uint256))"
            },
            "typeName": {
              "id": 73446,
              "keyType": {
                "id": 73442,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "2339:7:169",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "2331:47:169",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                "typeString": "mapping(address => mapping(address => uint256))"
              },
              "valueType": {
                "id": 73445,
                "keyType": {
                  "id": 73443,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "2358:7:169",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "nodeType": "Mapping",
                "src": "2350:27:169",
                "typeDescriptions": {
                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                  "typeString": "mapping(address => uint256)"
                },
                "valueType": {
                  "id": 73444,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2369:7:169",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 73451,
            "nodeType": "VariableDeclaration",
            "src": "2601:37:169",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 73448,
              "nodeType": "StructuredDocumentation",
              "src": "2401:195:169",
              "text": "@notice Messenger contract on this domain. This public getter is deprecated\n         and will be removed in the future. Please use `messenger` instead.\n @custom:network-specific"
            },
            "functionSelector": "3cb747bf",
            "mutability": "mutable",
            "name": "messenger",
            "nameLocation": "2629:9:169",
            "scope": 74144,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_CrossDomainMessenger_$71321",
              "typeString": "contract CrossDomainMessenger"
            },
            "typeName": {
              "id": 73450,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 73449,
                "name": "CrossDomainMessenger",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 71321,
                "src": "2601:20:169"
              },
              "referencedDeclaration": 71321,
              "src": "2601:20:169",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CrossDomainMessenger_$71321",
                "typeString": "contract CrossDomainMessenger"
              }
            },
            "visibility": "public"
          },
          {
            "id": 73456,
            "nodeType": "VariableDeclaration",
            "src": "2884:25:169",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 73452,
              "nodeType": "StructuredDocumentation",
              "src": "2645:234:169",
              "text": "@notice Reserve extra slots (to a total of 50) in the storage layout for future upgrades.\n         A gap size of 46 was chosen here, so that the first slot used in a child contract\n         would be a multiple of 50."
            },
            "mutability": "mutable",
            "name": "__gap",
            "nameLocation": "2904:5:169",
            "scope": 74144,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$46_storage",
              "typeString": "uint256[46]"
            },
            "typeName": {
              "baseType": {
                "id": 73453,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2884:7:169",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 73455,
              "length": {
                "hexValue": "3436",
                "id": 73454,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2892:2:169",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_46_by_1",
                  "typeString": "int_const 46"
                },
                "value": "46"
              },
              "nodeType": "ArrayTypeName",
              "src": "2884:11:169",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$46_storage_ptr",
                "typeString": "uint256[46]"
              }
            },
            "visibility": "private"
          },
          {
            "id": 73467,
            "nodeType": "EventDefinition",
            "src": "3198:100:169",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 73457,
              "nodeType": "StructuredDocumentation",
              "src": "2916:277:169",
              "text": "@notice Emitted when an ETH bridge is initiated to the other chain.\n @param from      Address of the sender.\n @param to        Address of the receiver.\n @param amount    Amount of ETH sent.\n @param extraData Extra data sent with the transaction."
            },
            "eventSelector": "2849b43074093a05396b6f2a937dee8565b15a48a7b3d4bffb732a5017380af5",
            "name": "ETHBridgeInitiated",
            "nameLocation": "3204:18:169",
            "parameters": {
              "id": 73466,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73459,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "3239:4:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 73467,
                  "src": "3223:20:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73458,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3223:7:169",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73461,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3261:2:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 73467,
                  "src": "3245:18:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73460,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3245:7:169",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73463,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3273:6:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 73467,
                  "src": "3265:14:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73462,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3265:7:169",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73465,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "extraData",
                  "nameLocation": "3287:9:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 73467,
                  "src": "3281:15:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 73464,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3281:5:169",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3222:75:169"
            }
          },
          {
            "id": 73478,
            "nodeType": "EventDefinition",
            "src": "3581:100:169",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 73468,
              "nodeType": "StructuredDocumentation",
              "src": "3304:272:169",
              "text": "@notice Emitted when an ETH bridge is finalized on this chain.\n @param from      Address of the sender.\n @param to        Address of the receiver.\n @param amount    Amount of ETH sent.\n @param extraData Extra data sent with the transaction."
            },
            "eventSelector": "31b2166ff604fc5672ea5df08a78081d2bc6d746cadce880747f3643d819e83d",
            "name": "ETHBridgeFinalized",
            "nameLocation": "3587:18:169",
            "parameters": {
              "id": 73477,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73470,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "3622:4:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 73478,
                  "src": "3606:20:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73469,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3606:7:169",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73472,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3644:2:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 73478,
                  "src": "3628:18:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73471,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3628:7:169",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73474,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3656:6:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 73478,
                  "src": "3648:14:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73473,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3648:7:169",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73476,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "extraData",
                  "nameLocation": "3670:9:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 73478,
                  "src": "3664:15:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 73475,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3664:5:169",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3605:75:169"
            }
          },
          {
            "id": 73493,
            "nodeType": "EventDefinition",
            "src": "4117:205:169",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 73479,
              "nodeType": "StructuredDocumentation",
              "src": "3687:425:169",
              "text": "@notice Emitted when an ERC20 bridge is initiated to the other chain.\n @param localToken  Address of the ERC20 on this chain.\n @param remoteToken Address of the ERC20 on the remote chain.\n @param from        Address of the sender.\n @param to          Address of the receiver.\n @param amount      Amount of the ERC20 sent.\n @param extraData   Extra data sent with the transaction."
            },
            "eventSelector": "7ff126db8024424bbfd9826e8ab82ff59136289ea440b04b39a0df1b03b9cabf",
            "name": "ERC20BridgeInitiated",
            "nameLocation": "4123:20:169",
            "parameters": {
              "id": 73492,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73481,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "localToken",
                  "nameLocation": "4169:10:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 73493,
                  "src": "4153:26:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73480,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4153:7:169",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73483,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "remoteToken",
                  "nameLocation": "4205:11:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 73493,
                  "src": "4189:27:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73482,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4189:7:169",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73485,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "4242:4:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 73493,
                  "src": "4226:20:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73484,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4226:7:169",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73487,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "4264:2:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 73493,
                  "src": "4256:10:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73486,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4256:7:169",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73489,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4284:6:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 73493,
                  "src": "4276:14:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73488,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4276:7:169",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73491,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "extraData",
                  "nameLocation": "4306:9:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 73493,
                  "src": "4300:15:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 73490,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4300:5:169",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4143:178:169"
            }
          },
          {
            "id": 73508,
            "nodeType": "EventDefinition",
            "src": "4753:205:169",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 73494,
              "nodeType": "StructuredDocumentation",
              "src": "4328:420:169",
              "text": "@notice Emitted when an ERC20 bridge is finalized on this chain.\n @param localToken  Address of the ERC20 on this chain.\n @param remoteToken Address of the ERC20 on the remote chain.\n @param from        Address of the sender.\n @param to          Address of the receiver.\n @param amount      Amount of the ERC20 sent.\n @param extraData   Extra data sent with the transaction."
            },
            "eventSelector": "d59c65b35445225835c83f50b6ede06a7be047d22e357073e250d9af537518cd",
            "name": "ERC20BridgeFinalized",
            "nameLocation": "4759:20:169",
            "parameters": {
              "id": 73507,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73496,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "localToken",
                  "nameLocation": "4805:10:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 73508,
                  "src": "4789:26:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73495,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4789:7:169",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73498,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "remoteToken",
                  "nameLocation": "4841:11:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 73508,
                  "src": "4825:27:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73497,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4825:7:169",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73500,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "4878:4:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 73508,
                  "src": "4862:20:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73499,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4862:7:169",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73502,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "4900:2:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 73508,
                  "src": "4892:10:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73501,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4892:7:169",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73504,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "4920:6:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 73508,
                  "src": "4912:14:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73503,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4912:7:169",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73506,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "extraData",
                  "nameLocation": "4942:9:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 73508,
                  "src": "4936:15:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 73505,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4936:5:169",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4779:178:169"
            }
          },
          {
            "id": 73523,
            "nodeType": "ModifierDefinition",
            "src": "5261:146:169",
            "nodes": [],
            "body": {
              "id": 73522,
              "nodeType": "Block",
              "src": "5280:127:169",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 73517,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "5298:31:169",
                        "subExpression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 73514,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "5318:3:169",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 73515,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "5318:10:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 73512,
                              "name": "Address",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 33858,
                              "src": "5299:7:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Address_$33858_$",
                                "typeString": "type(library Address)"
                              }
                            },
                            "id": 73513,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isContract",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 33581,
                            "src": "5299:18:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view returns (bool)"
                            }
                          },
                          "id": 73516,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5299:30:169",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616e646172644272696467653a2066756e6374696f6e2063616e206f6e6c792062652063616c6c65642066726f6d20616e20454f41",
                        "id": 73518,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5331:57:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f81f6db803ded0832643d2e0ed6f9119d9e7648506a58072f4a7195269d8cce8",
                          "typeString": "literal_string \"StandardBridge: function can only be called from an EOA\""
                        },
                        "value": "StandardBridge: function can only be called from an EOA"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f81f6db803ded0832643d2e0ed6f9119d9e7648506a58072f4a7195269d8cce8",
                          "typeString": "literal_string \"StandardBridge: function can only be called from an EOA\""
                        }
                      ],
                      "id": 73511,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5290:7:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 73519,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5290:99:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73520,
                  "nodeType": "ExpressionStatement",
                  "src": "5290:99:169"
                },
                {
                  "id": 73521,
                  "nodeType": "PlaceholderStatement",
                  "src": "5399:1:169"
                }
              ]
            },
            "documentation": {
              "id": 73509,
              "nodeType": "StructuredDocumentation",
              "src": "4964:292:169",
              "text": "@notice Only allow EOAs to call the functions. Note that this is not safe against contracts\n         calling code within their constructors, but also doesn't really matter since we're\n         just trying to prevent users accidentally depositing with smart contract wallets."
            },
            "name": "onlyEOA",
            "nameLocation": "5270:7:169",
            "parameters": {
              "id": 73510,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5277:2:169"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 73548,
            "nodeType": "ModifierDefinition",
            "src": "5501:260:169",
            "nodes": [],
            "body": {
              "id": 73547,
              "nodeType": "Block",
              "src": "5528:233:169",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 73542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 73533,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 73527,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "5559:3:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 73528,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "5559:10:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 73531,
                                "name": "messenger",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 73451,
                                "src": "5581:9:169",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CrossDomainMessenger_$71321",
                                  "typeString": "contract CrossDomainMessenger"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CrossDomainMessenger_$71321",
                                  "typeString": "contract CrossDomainMessenger"
                                }
                              ],
                              "id": 73530,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5573:7:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 73529,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5573:7:169",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 73532,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5573:18:169",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5559:32:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "&&",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 73541,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 73534,
                                "name": "messenger",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 73451,
                                "src": "5595:9:169",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CrossDomainMessenger_$71321",
                                  "typeString": "contract CrossDomainMessenger"
                                }
                              },
                              "id": 73535,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "xDomainMessageSender",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 71233,
                              "src": "5595:30:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                "typeString": "function () view external returns (address)"
                              }
                            },
                            "id": 73536,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5595:32:169",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "id": 73539,
                                "name": "OTHER_BRIDGE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 73434,
                                "src": "5639:12:169",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StandardBridge_$74144",
                                  "typeString": "contract StandardBridge"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_StandardBridge_$74144",
                                  "typeString": "contract StandardBridge"
                                }
                              ],
                              "id": 73538,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5631:7:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 73537,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5631:7:169",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 73540,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5631:21:169",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "5595:57:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "5559:93:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616e646172644272696467653a2066756e6374696f6e2063616e206f6e6c792062652063616c6c65642066726f6d20746865206f7468657220627269646765",
                        "id": 73543,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5666:67:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_cbc7005e6a766806113d4613be79beeb8d602af868fc04e2279ff0ca60009b99",
                          "typeString": "literal_string \"StandardBridge: function can only be called from the other bridge\""
                        },
                        "value": "StandardBridge: function can only be called from the other bridge"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_cbc7005e6a766806113d4613be79beeb8d602af868fc04e2279ff0ca60009b99",
                          "typeString": "literal_string \"StandardBridge: function can only be called from the other bridge\""
                        }
                      ],
                      "id": 73526,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5538:7:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 73544,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5538:205:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73545,
                  "nodeType": "ExpressionStatement",
                  "src": "5538:205:169"
                },
                {
                  "id": 73546,
                  "nodeType": "PlaceholderStatement",
                  "src": "5753:1:169"
                }
              ]
            },
            "documentation": {
              "id": 73524,
              "nodeType": "StructuredDocumentation",
              "src": "5413:83:169",
              "text": "@notice Ensures that the caller is a cross-chain message from the other bridge."
            },
            "name": "onlyOtherBridge",
            "nameLocation": "5510:15:169",
            "parameters": {
              "id": 73525,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5525:2:169"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 73560,
            "nodeType": "FunctionDefinition",
            "src": "5841:85:169",
            "nodes": [],
            "body": {
              "id": 73559,
              "nodeType": "Block",
              "src": "5882:44:169",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 73557,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 73555,
                      "name": "OTHER_BRIDGE",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73434,
                      "src": "5892:12:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StandardBridge_$74144",
                        "typeString": "contract StandardBridge"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 73556,
                      "name": "_otherBridge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73552,
                      "src": "5907:12:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_StandardBridge_$74144",
                        "typeString": "contract StandardBridge"
                      }
                    },
                    "src": "5892:27:169",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StandardBridge_$74144",
                      "typeString": "contract StandardBridge"
                    }
                  },
                  "id": 73558,
                  "nodeType": "ExpressionStatement",
                  "src": "5892:27:169"
                }
              ]
            },
            "documentation": {
              "id": 73549,
              "nodeType": "StructuredDocumentation",
              "src": "5767:69:169",
              "text": "@param _otherBridge Address of the other StandardBridge contract."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 73553,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73552,
                  "mutability": "mutable",
                  "name": "_otherBridge",
                  "nameLocation": "5868:12:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 73560,
                  "src": "5853:27:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_StandardBridge_$74144",
                    "typeString": "contract StandardBridge"
                  },
                  "typeName": {
                    "id": 73551,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 73550,
                      "name": "StandardBridge",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 74144,
                      "src": "5853:14:169"
                    },
                    "referencedDeclaration": 74144,
                    "src": "5853:14:169",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StandardBridge_$74144",
                      "typeString": "contract StandardBridge"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5852:29:169"
            },
            "returnParameters": {
              "id": 73554,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5882:0:169"
            },
            "scope": 74144,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 73574,
            "nodeType": "FunctionDefinition",
            "src": "6091:129:169",
            "nodes": [],
            "body": {
              "id": 73573,
              "nodeType": "Block",
              "src": "6181:39:169",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 73571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 73569,
                      "name": "messenger",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73451,
                      "src": "6191:9:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CrossDomainMessenger_$71321",
                        "typeString": "contract CrossDomainMessenger"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 73570,
                      "name": "_messenger",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73564,
                      "src": "6203:10:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_CrossDomainMessenger_$71321",
                        "typeString": "contract CrossDomainMessenger"
                      }
                    },
                    "src": "6191:22:169",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CrossDomainMessenger_$71321",
                      "typeString": "contract CrossDomainMessenger"
                    }
                  },
                  "id": 73572,
                  "nodeType": "ExpressionStatement",
                  "src": "6191:22:169"
                }
              ]
            },
            "documentation": {
              "id": 73561,
              "nodeType": "StructuredDocumentation",
              "src": "5932:101:169",
              "text": "@notice Initializer.\n @param _messenger   Address of CrossDomainMessenger on this network."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 73567,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 73566,
                  "name": "onlyInitializing",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 30270,
                  "src": "6164:16:169"
                },
                "nodeType": "ModifierInvocation",
                "src": "6164:16:169"
              }
            ],
            "name": "__StandardBridge_init",
            "nameLocation": "6100:21:169",
            "parameters": {
              "id": 73565,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73564,
                  "mutability": "mutable",
                  "name": "_messenger",
                  "nameLocation": "6143:10:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 73574,
                  "src": "6122:31:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_CrossDomainMessenger_$71321",
                    "typeString": "contract CrossDomainMessenger"
                  },
                  "typeName": {
                    "id": 73563,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 73562,
                      "name": "CrossDomainMessenger",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 71321,
                      "src": "6122:20:169"
                    },
                    "referencedDeclaration": 71321,
                    "src": "6122:20:169",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CrossDomainMessenger_$71321",
                      "typeString": "contract CrossDomainMessenger"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6121:33:169"
            },
            "returnParameters": {
              "id": 73568,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6181:0:169"
            },
            "scope": 74144,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 73578,
            "nodeType": "FunctionDefinition",
            "src": "6366:35:169",
            "nodes": [],
            "documentation": {
              "id": 73575,
              "nodeType": "StructuredDocumentation",
              "src": "6226:135:169",
              "text": "@notice Allows EOAs to bridge ETH by sending directly to the bridge.\n         Must be implemented by contracts that inherit."
            },
            "implemented": false,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 73576,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6373:2:169"
            },
            "returnParameters": {
              "id": 73577,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6400:0:169"
            },
            "scope": 74144,
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 73588,
            "nodeType": "FunctionDefinition",
            "src": "6528:99:169",
            "nodes": [],
            "body": {
              "id": 73587,
              "nodeType": "Block",
              "src": "6594:33:169",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 73585,
                    "name": "messenger",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 73451,
                    "src": "6611:9:169",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CrossDomainMessenger_$71321",
                      "typeString": "contract CrossDomainMessenger"
                    }
                  },
                  "functionReturnParameters": 73584,
                  "id": 73586,
                  "nodeType": "Return",
                  "src": "6604:16:169"
                }
              ]
            },
            "documentation": {
              "id": 73579,
              "nodeType": "StructuredDocumentation",
              "src": "6407:116:169",
              "text": "@notice Getter for messenger contract.\n @custom:legacy\n @return Messenger contract on this domain."
            },
            "functionSelector": "927ede2d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "MESSENGER",
            "nameLocation": "6537:9:169",
            "parameters": {
              "id": 73580,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6546:2:169"
            },
            "returnParameters": {
              "id": 73584,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73583,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 73588,
                  "src": "6572:20:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_CrossDomainMessenger_$71321",
                    "typeString": "contract CrossDomainMessenger"
                  },
                  "typeName": {
                    "id": 73582,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 73581,
                      "name": "CrossDomainMessenger",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 71321,
                      "src": "6572:20:169"
                    },
                    "referencedDeclaration": 71321,
                    "src": "6572:20:169",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CrossDomainMessenger_$71321",
                      "typeString": "contract CrossDomainMessenger"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6571:22:169"
            },
            "scope": 74144,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 73598,
            "nodeType": "FunctionDefinition",
            "src": "6695:98:169",
            "nodes": [],
            "body": {
              "id": 73597,
              "nodeType": "Block",
              "src": "6757:36:169",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 73595,
                    "name": "OTHER_BRIDGE",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 73434,
                    "src": "6774:12:169",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StandardBridge_$74144",
                      "typeString": "contract StandardBridge"
                    }
                  },
                  "functionReturnParameters": 73594,
                  "id": 73596,
                  "nodeType": "Return",
                  "src": "6767:19:169"
                }
              ]
            },
            "documentation": {
              "id": 73589,
              "nodeType": "StructuredDocumentation",
              "src": "6633:57:169",
              "text": "@notice Getter for the remote domain bridge contract."
            },
            "functionSelector": "c89701a2",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "otherBridge",
            "nameLocation": "6704:11:169",
            "parameters": {
              "id": 73590,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6715:2:169"
            },
            "returnParameters": {
              "id": 73594,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73593,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 73598,
                  "src": "6741:14:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_StandardBridge_$74144",
                    "typeString": "contract StandardBridge"
                  },
                  "typeName": {
                    "id": 73592,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 73591,
                      "name": "StandardBridge",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 74144,
                      "src": "6741:14:169"
                    },
                    "referencedDeclaration": 74144,
                    "src": "6741:14:169",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StandardBridge_$74144",
                      "typeString": "contract StandardBridge"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6740:16:169"
            },
            "scope": 74144,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 73620,
            "nodeType": "FunctionDefinition",
            "src": "7214:186:169",
            "nodes": [],
            "body": {
              "id": 73619,
              "nodeType": "Block",
              "src": "7304:96:169",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 73609,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7333:3:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 73610,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7333:10:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 73611,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7345:3:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 73612,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7345:10:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 73613,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7357:3:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 73614,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "7357:9:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 73615,
                        "name": "_minGasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73601,
                        "src": "7368:12:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 73616,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73603,
                        "src": "7382:10:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 73608,
                      "name": "_initiateBridgeETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73888,
                      "src": "7314:18:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,uint32,bytes memory)"
                      }
                    },
                    "id": 73617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7314:79:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73618,
                  "nodeType": "ExpressionStatement",
                  "src": "7314:79:169"
                }
              ]
            },
            "documentation": {
              "id": 73599,
              "nodeType": "StructuredDocumentation",
              "src": "6799:410:169",
              "text": "@notice Sends ETH to the sender's address on the other chain.\n @param _minGasLimit Minimum amount of gas that the bridge can be relayed with.\n @param _extraData   Extra data to be sent with the transaction. Note that the recipient will\n                     not be triggered with this data, but it will be emitted and can be used\n                     to identify the transaction."
            },
            "functionSelector": "09fc8843",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 73606,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 73605,
                  "name": "onlyEOA",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 73523,
                  "src": "7296:7:169"
                },
                "nodeType": "ModifierInvocation",
                "src": "7296:7:169"
              }
            ],
            "name": "bridgeETH",
            "nameLocation": "7223:9:169",
            "parameters": {
              "id": 73604,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73601,
                  "mutability": "mutable",
                  "name": "_minGasLimit",
                  "nameLocation": "7240:12:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 73620,
                  "src": "7233:19:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 73600,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7233:6:169",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73603,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "7269:10:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 73620,
                  "src": "7254:25:169",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 73602,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7254:5:169",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7232:48:169"
            },
            "returnParameters": {
              "id": 73607,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7304:0:169"
            },
            "scope": 74144,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 73641,
            "nodeType": "FunctionDefinition",
            "src": "8411:186:169",
            "nodes": [],
            "body": {
              "id": 73640,
              "nodeType": "Block",
              "src": "8508:89:169",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 73631,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8537:3:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 73632,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8537:10:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 73633,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73623,
                        "src": "8549:3:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 73634,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8554:3:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 73635,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "8554:9:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 73636,
                        "name": "_minGasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73625,
                        "src": "8565:12:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 73637,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73627,
                        "src": "8579:10:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 73630,
                      "name": "_initiateBridgeETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73888,
                      "src": "8518:18:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,uint32,bytes memory)"
                      }
                    },
                    "id": 73638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8518:72:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73639,
                  "nodeType": "ExpressionStatement",
                  "src": "8518:72:169"
                }
              ]
            },
            "documentation": {
              "id": 73621,
              "nodeType": "StructuredDocumentation",
              "src": "7406:1000:169",
              "text": "@notice Sends ETH to a receiver's address on the other chain. Note that if ETH is sent to a\n         smart contract and the call fails, the ETH will be temporarily locked in the\n         StandardBridge on the other chain until the call is replayed. If the call cannot be\n         replayed with any amount of gas (call always reverts), then the ETH will be\n         permanently locked in the StandardBridge on the other chain. ETH will also\n         be locked if the receiver is the other bridge, because finalizeBridgeETH will revert\n         in that case.\n @param _to          Address of the receiver.\n @param _minGasLimit Minimum amount of gas that the bridge can be relayed with.\n @param _extraData   Extra data to be sent with the transaction. Note that the recipient will\n                     not be triggered with this data, but it will be emitted and can be used\n                     to identify the transaction."
            },
            "functionSelector": "e11013dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "bridgeETHTo",
            "nameLocation": "8420:11:169",
            "parameters": {
              "id": 73628,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73623,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "8440:3:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 73641,
                  "src": "8432:11:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73622,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8432:7:169",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73625,
                  "mutability": "mutable",
                  "name": "_minGasLimit",
                  "nameLocation": "8452:12:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 73641,
                  "src": "8445:19:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 73624,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8445:6:169",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73627,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "8481:10:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 73641,
                  "src": "8466:25:169",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 73626,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8466:5:169",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8431:61:169"
            },
            "returnParameters": {
              "id": 73629,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8508:0:169"
            },
            "scope": 74144,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 73670,
            "nodeType": "FunctionDefinition",
            "src": "9480:349:169",
            "nodes": [],
            "body": {
              "id": 73669,
              "nodeType": "Block",
              "src": "9706:123:169",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 73658,
                        "name": "_localToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73644,
                        "src": "9737:11:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 73659,
                        "name": "_remoteToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73646,
                        "src": "9750:12:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 73660,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9764:3:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 73661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9764:10:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 73662,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9776:3:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 73663,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9776:10:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 73664,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73648,
                        "src": "9788:7:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 73665,
                        "name": "_minGasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73650,
                        "src": "9797:12:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 73666,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73652,
                        "src": "9811:10:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 73657,
                      "name": "_initiateBridgeERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73986,
                      "src": "9716:20:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,address,uint256,uint32,bytes memory)"
                      }
                    },
                    "id": 73667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9716:106:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73668,
                  "nodeType": "ExpressionStatement",
                  "src": "9716:106:169"
                }
              ]
            },
            "documentation": {
              "id": 73642,
              "nodeType": "StructuredDocumentation",
              "src": "8603:872:169",
              "text": "@notice Sends ERC20 tokens to the sender's address on the other chain. Note that if the\n         ERC20 token on the other chain does not recognize the local token as the correct\n         pair token, the ERC20 bridge will fail and the tokens will be returned to sender on\n         this chain.\n @param _localToken  Address of the ERC20 on this chain.\n @param _remoteToken Address of the corresponding token on the remote chain.\n @param _amount      Amount of local tokens to deposit.\n @param _minGasLimit Minimum amount of gas that the bridge can be relayed with.\n @param _extraData   Extra data to be sent with the transaction. Note that the recipient will\n                     not be triggered with this data, but it will be emitted and can be used\n                     to identify the transaction."
            },
            "functionSelector": "87087623",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 73655,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 73654,
                  "name": "onlyEOA",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 73523,
                  "src": "9694:7:169"
                },
                "nodeType": "ModifierInvocation",
                "src": "9694:7:169"
              }
            ],
            "name": "bridgeERC20",
            "nameLocation": "9489:11:169",
            "parameters": {
              "id": 73653,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73644,
                  "mutability": "mutable",
                  "name": "_localToken",
                  "nameLocation": "9518:11:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 73670,
                  "src": "9510:19:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73643,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9510:7:169",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73646,
                  "mutability": "mutable",
                  "name": "_remoteToken",
                  "nameLocation": "9547:12:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 73670,
                  "src": "9539:20:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73645,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9539:7:169",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73648,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "9577:7:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 73670,
                  "src": "9569:15:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73647,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9569:7:169",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73650,
                  "mutability": "mutable",
                  "name": "_minGasLimit",
                  "nameLocation": "9601:12:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 73670,
                  "src": "9594:19:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 73649,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9594:6:169",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73652,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "9638:10:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 73670,
                  "src": "9623:25:169",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 73651,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9623:5:169",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9500:154:169"
            },
            "returnParameters": {
              "id": 73656,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9706:0:169"
            },
            "scope": 74144,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 73698,
            "nodeType": "FunctionDefinition",
            "src": "10765:349:169",
            "nodes": [],
            "body": {
              "id": 73697,
              "nodeType": "Block",
              "src": "10998:116:169",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 73687,
                        "name": "_localToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73673,
                        "src": "11029:11:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 73688,
                        "name": "_remoteToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73675,
                        "src": "11042:12:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 73689,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "11056:3:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 73690,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "11056:10:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 73691,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73677,
                        "src": "11068:3:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 73692,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73679,
                        "src": "11073:7:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 73693,
                        "name": "_minGasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73681,
                        "src": "11082:12:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 73694,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73683,
                        "src": "11096:10:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 73686,
                      "name": "_initiateBridgeERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73986,
                      "src": "11008:20:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,address,uint256,uint32,bytes memory)"
                      }
                    },
                    "id": 73695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11008:99:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73696,
                  "nodeType": "ExpressionStatement",
                  "src": "11008:99:169"
                }
              ]
            },
            "documentation": {
              "id": 73671,
              "nodeType": "StructuredDocumentation",
              "src": "9835:925:169",
              "text": "@notice Sends ERC20 tokens to a receiver's address on the other chain. Note that if the\n         ERC20 token on the other chain does not recognize the local token as the correct\n         pair token, the ERC20 bridge will fail and the tokens will be returned to sender on\n         this chain.\n @param _localToken  Address of the ERC20 on this chain.\n @param _remoteToken Address of the corresponding token on the remote chain.\n @param _to          Address of the receiver.\n @param _amount      Amount of local tokens to deposit.\n @param _minGasLimit Minimum amount of gas that the bridge can be relayed with.\n @param _extraData   Extra data to be sent with the transaction. Note that the recipient will\n                     not be triggered with this data, but it will be emitted and can be used\n                     to identify the transaction."
            },
            "functionSelector": "540abf73",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "bridgeERC20To",
            "nameLocation": "10774:13:169",
            "parameters": {
              "id": 73684,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73673,
                  "mutability": "mutable",
                  "name": "_localToken",
                  "nameLocation": "10805:11:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 73698,
                  "src": "10797:19:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73672,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10797:7:169",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73675,
                  "mutability": "mutable",
                  "name": "_remoteToken",
                  "nameLocation": "10834:12:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 73698,
                  "src": "10826:20:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73674,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10826:7:169",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73677,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "10864:3:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 73698,
                  "src": "10856:11:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73676,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10856:7:169",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73679,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "10885:7:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 73698,
                  "src": "10877:15:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73678,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10877:7:169",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73681,
                  "mutability": "mutable",
                  "name": "_minGasLimit",
                  "nameLocation": "10909:12:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 73698,
                  "src": "10902:19:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 73680,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10902:6:169",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73683,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "10946:10:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 73698,
                  "src": "10931:25:169",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 73682,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10931:5:169",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10787:175:169"
            },
            "returnParameters": {
              "id": 73685,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10998:0:169"
            },
            "scope": 74144,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 73764,
            "nodeType": "FunctionDefinition",
            "src": "11678:856:169",
            "nodes": [],
            "body": {
              "id": 73763,
              "nodeType": "Block",
              "src": "11890:644:169",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 73716,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 73713,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "11908:3:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 73714,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "11908:9:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 73715,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73705,
                          "src": "11921:7:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11908:20:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616e646172644272696467653a20616d6f756e742073656e7420646f6573206e6f74206d6174636820616d6f756e74207265717569726564",
                        "id": 73717,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11930:60:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_749dee892fab459b2a65ea18df9e6a5e7c9a73fce72448f7ab9f6675c56ba5f9",
                          "typeString": "literal_string \"StandardBridge: amount sent does not match amount required\""
                        },
                        "value": "StandardBridge: amount sent does not match amount required"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_749dee892fab459b2a65ea18df9e6a5e7c9a73fce72448f7ab9f6675c56ba5f9",
                          "typeString": "literal_string \"StandardBridge: amount sent does not match amount required\""
                        }
                      ],
                      "id": 73712,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11900:7:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 73718,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11900:91:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73719,
                  "nodeType": "ExpressionStatement",
                  "src": "11900:91:169"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 73726,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 73721,
                          "name": "_to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73703,
                          "src": "12009:3:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 73724,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "12024:4:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_StandardBridge_$74144",
                                "typeString": "contract StandardBridge"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_StandardBridge_$74144",
                                "typeString": "contract StandardBridge"
                              }
                            ],
                            "id": 73723,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12016:7:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 73722,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12016:7:169",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 73725,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12016:13:169",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "12009:20:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616e646172644272696467653a2063616e6e6f742073656e6420746f2073656c66",
                        "id": 73727,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12031:37:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_364ece159cd10e2597bf40a779e1ef408a544f5e6897b0ca6e317dc7bdbe0069",
                          "typeString": "literal_string \"StandardBridge: cannot send to self\""
                        },
                        "value": "StandardBridge: cannot send to self"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_364ece159cd10e2597bf40a779e1ef408a544f5e6897b0ca6e317dc7bdbe0069",
                          "typeString": "literal_string \"StandardBridge: cannot send to self\""
                        }
                      ],
                      "id": 73720,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12001:7:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 73728,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12001:68:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73729,
                  "nodeType": "ExpressionStatement",
                  "src": "12001:68:169"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 73736,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 73731,
                          "name": "_to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73703,
                          "src": "12087:3:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 73734,
                              "name": "messenger",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 73451,
                              "src": "12102:9:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CrossDomainMessenger_$71321",
                                "typeString": "contract CrossDomainMessenger"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_CrossDomainMessenger_$71321",
                                "typeString": "contract CrossDomainMessenger"
                              }
                            ],
                            "id": 73733,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "12094:7:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 73732,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "12094:7:169",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 73735,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12094:18:169",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "12087:25:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616e646172644272696467653a2063616e6e6f742073656e6420746f206d657373656e676572",
                        "id": 73737,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12114:42:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bb1651f00fbd785fb5543c143a369e5c0d2f97fa08d6d7ef9cc99912d7f788fb",
                          "typeString": "literal_string \"StandardBridge: cannot send to messenger\""
                        },
                        "value": "StandardBridge: cannot send to messenger"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bb1651f00fbd785fb5543c143a369e5c0d2f97fa08d6d7ef9cc99912d7f788fb",
                          "typeString": "literal_string \"StandardBridge: cannot send to messenger\""
                        }
                      ],
                      "id": 73730,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12079:7:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 73738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12079:78:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73739,
                  "nodeType": "ExpressionStatement",
                  "src": "12079:78:169"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 73741,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73701,
                        "src": "12359:5:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 73742,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73703,
                        "src": "12366:3:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 73743,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73705,
                        "src": "12371:7:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 73744,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73707,
                        "src": "12380:10:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 73740,
                      "name": "_emitETHBridgeFinalized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74091,
                      "src": "12335:23:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 73745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12335:56:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73746,
                  "nodeType": "ExpressionStatement",
                  "src": "12335:56:169"
                },
                {
                  "assignments": [
                    73748
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 73748,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "12407:7:169",
                      "nodeType": "VariableDeclaration",
                      "scope": 73763,
                      "src": "12402:12:169",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 73747,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "12402:4:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 73757,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 73751,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73703,
                        "src": "12431:3:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 73752,
                          "name": "gasleft",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -7,
                          "src": "12436:7:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
                            "typeString": "function () view returns (uint256)"
                          }
                        },
                        "id": 73753,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12436:9:169",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 73754,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73705,
                        "src": "12447:7:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "",
                        "id": 73755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "hexString",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12456:5:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "id": 73749,
                        "name": "SafeCall",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68984,
                        "src": "12417:8:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeCall_$68984_$",
                          "typeString": "type(library SafeCall)"
                        }
                      },
                      "id": 73750,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "call",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 68938,
                      "src": "12417:13:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (address,uint256,uint256,bytes memory) returns (bool)"
                      }
                    },
                    "id": 73756,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12417:45:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12402:60:169"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 73759,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73748,
                        "src": "12480:7:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616e646172644272696467653a20455448207472616e73666572206661696c6564",
                        "id": 73760,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12489:37:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a586f60b387cfb0a96943ab7b9fd5ab5ac1e6a8684db2528d4c0f01b4da8e10",
                          "typeString": "literal_string \"StandardBridge: ETH transfer failed\""
                        },
                        "value": "StandardBridge: ETH transfer failed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a586f60b387cfb0a96943ab7b9fd5ab5ac1e6a8684db2528d4c0f01b4da8e10",
                          "typeString": "literal_string \"StandardBridge: ETH transfer failed\""
                        }
                      ],
                      "id": 73758,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12472:7:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 73761,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12472:55:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73762,
                  "nodeType": "ExpressionStatement",
                  "src": "12472:55:169"
                }
              ]
            },
            "documentation": {
              "id": 73699,
              "nodeType": "StructuredDocumentation",
              "src": "11120:553:169",
              "text": "@notice Finalizes an ETH bridge on this chain. Can only be triggered by the other\n         StandardBridge contract on the remote chain.\n @param _from      Address of the sender.\n @param _to        Address of the receiver.\n @param _amount    Amount of ETH being bridged.\n @param _extraData Extra data to be sent with the transaction. Note that the recipient will\n                   not be triggered with this data, but it will be emitted and can be used\n                   to identify the transaction."
            },
            "functionSelector": "1635f5fd",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 73710,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 73709,
                  "name": "onlyOtherBridge",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 73548,
                  "src": "11870:15:169"
                },
                "nodeType": "ModifierInvocation",
                "src": "11870:15:169"
              }
            ],
            "name": "finalizeBridgeETH",
            "nameLocation": "11687:17:169",
            "parameters": {
              "id": 73708,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73701,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "11722:5:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 73764,
                  "src": "11714:13:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73700,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11714:7:169",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73703,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "11745:3:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 73764,
                  "src": "11737:11:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73702,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11737:7:169",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73705,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "11766:7:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 73764,
                  "src": "11758:15:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73704,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11758:7:169",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73707,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "11798:10:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 73764,
                  "src": "11783:25:169",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 73706,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11783:5:169",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "11704:110:169"
            },
            "returnParameters": {
              "id": 73711,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11890:0:169"
            },
            "scope": 74144,
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 73836,
            "nodeType": "FunctionDefinition",
            "src": "13266:1038:169",
            "nodes": [],
            "body": {
              "id": 73835,
              "nodeType": "Block",
              "src": "13523:781:169",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 73783,
                        "name": "_localToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73767,
                        "src": "13562:11:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 73782,
                      "name": "_isOptimismMintableERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74013,
                      "src": "13537:24:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 73784,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13537:37:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 73824,
                    "nodeType": "Block",
                    "src": "13854:168:169",
                    "statements": [
                      {
                        "expression": {
                          "id": 73814,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 73802,
                                "name": "deposits",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 73447,
                                "src": "13868:8:169",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 73805,
                              "indexExpression": {
                                "id": 73803,
                                "name": "_localToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 73767,
                                "src": "13877:11:169",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13868:21:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 73806,
                            "indexExpression": {
                              "id": 73804,
                              "name": "_remoteToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 73769,
                              "src": "13890:12:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "13868:35:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 73813,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 73807,
                                  "name": "deposits",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 73447,
                                  "src": "13906:8:169",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                    "typeString": "mapping(address => mapping(address => uint256))"
                                  }
                                },
                                "id": 73809,
                                "indexExpression": {
                                  "id": 73808,
                                  "name": "_localToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 73767,
                                  "src": "13915:11:169",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "13906:21:169",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 73811,
                              "indexExpression": {
                                "id": 73810,
                                "name": "_remoteToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 73769,
                                "src": "13928:12:169",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "13906:35:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 73812,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 73775,
                              "src": "13944:7:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "13906:45:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "13868:83:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 73815,
                        "nodeType": "ExpressionStatement",
                        "src": "13868:83:169"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 73820,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 73773,
                              "src": "13998:3:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 73821,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 73775,
                              "src": "14003:7:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 73817,
                                  "name": "_localToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 73767,
                                  "src": "13972:11:169",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 73816,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30971,
                                "src": "13965:6:169",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$30971_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 73818,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13965:19:169",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$30971",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 73819,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransfer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 31917,
                            "src": "13965:32:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$30971_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$30971_$",
                              "typeString": "function (contract IERC20,address,uint256)"
                            }
                          },
                          "id": 73822,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13965:46:169",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 73823,
                        "nodeType": "ExpressionStatement",
                        "src": "13965:46:169"
                      }
                    ]
                  },
                  "id": 73825,
                  "nodeType": "IfStatement",
                  "src": "13533:489:169",
                  "trueBody": {
                    "id": 73801,
                    "nodeType": "Block",
                    "src": "13576:272:169",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 73787,
                                  "name": "_localToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 73767,
                                  "src": "13635:11:169",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 73788,
                                  "name": "_remoteToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 73769,
                                  "src": "13648:12:169",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 73786,
                                "name": "_isCorrectTokenPair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 74051,
                                "src": "13615:19:169",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (address,address) view returns (bool)"
                                }
                              },
                              "id": 73789,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13615:46:169",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5374616e646172644272696467653a2077726f6e672072656d6f746520746f6b656e20666f72204f7074696d69736d204d696e7461626c65204552433230206c6f63616c20746f6b656e",
                              "id": 73790,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13679:76:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_843f9e9cdac865c94e891377948e585b969802f0a09d901439bce110be0b2c39",
                                "typeString": "literal_string \"StandardBridge: wrong remote token for Optimism Mintable ERC20 local token\""
                              },
                              "value": "StandardBridge: wrong remote token for Optimism Mintable ERC20 local token"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_843f9e9cdac865c94e891377948e585b969802f0a09d901439bce110be0b2c39",
                                "typeString": "literal_string \"StandardBridge: wrong remote token for Optimism Mintable ERC20 local token\""
                              }
                            ],
                            "id": 73785,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "13590:7:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 73791,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13590:179:169",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 73792,
                        "nodeType": "ExpressionStatement",
                        "src": "13590:179:169"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 73797,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 73773,
                              "src": "13824:3:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 73798,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 73775,
                              "src": "13829:7:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 73794,
                                  "name": "_localToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 73767,
                                  "src": "13806:11:169",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 73793,
                                "name": "OptimismMintableERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 72072,
                                "src": "13784:21:169",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_OptimismMintableERC20_$72072_$",
                                  "typeString": "type(contract OptimismMintableERC20)"
                                }
                              },
                              "id": 73795,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13784:34:169",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OptimismMintableERC20_$72072",
                                "typeString": "contract OptimismMintableERC20"
                              }
                            },
                            "id": 73796,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 71959,
                            "src": "13784:39:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 73799,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13784:53:169",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 73800,
                        "nodeType": "ExpressionStatement",
                        "src": "13784:53:169"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 73827,
                        "name": "_localToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73767,
                        "src": "14238:11:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 73828,
                        "name": "_remoteToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73769,
                        "src": "14251:12:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 73829,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73771,
                        "src": "14265:5:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 73830,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73773,
                        "src": "14272:3:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 73831,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73775,
                        "src": "14277:7:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 73832,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73777,
                        "src": "14286:10:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 73826,
                      "name": "_emitERC20BridgeFinalized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74143,
                      "src": "14212:25:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 73833,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14212:85:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73834,
                  "nodeType": "ExpressionStatement",
                  "src": "14212:85:169"
                }
              ]
            },
            "documentation": {
              "id": 73765,
              "nodeType": "StructuredDocumentation",
              "src": "12540:721:169",
              "text": "@notice Finalizes an ERC20 bridge on this chain. Can only be triggered by the other\n         StandardBridge contract on the remote chain.\n @param _localToken  Address of the ERC20 on this chain.\n @param _remoteToken Address of the corresponding token on the remote chain.\n @param _from        Address of the sender.\n @param _to          Address of the receiver.\n @param _amount      Amount of the ERC20 being bridged.\n @param _extraData   Extra data to be sent with the transaction. Note that the recipient will\n                     not be triggered with this data, but it will be emitted and can be used\n                     to identify the transaction."
            },
            "functionSelector": "0166a07a",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 73780,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 73779,
                  "name": "onlyOtherBridge",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 73548,
                  "src": "13503:15:169"
                },
                "nodeType": "ModifierInvocation",
                "src": "13503:15:169"
              }
            ],
            "name": "finalizeBridgeERC20",
            "nameLocation": "13275:19:169",
            "parameters": {
              "id": 73778,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73767,
                  "mutability": "mutable",
                  "name": "_localToken",
                  "nameLocation": "13312:11:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 73836,
                  "src": "13304:19:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73766,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13304:7:169",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73769,
                  "mutability": "mutable",
                  "name": "_remoteToken",
                  "nameLocation": "13341:12:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 73836,
                  "src": "13333:20:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73768,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13333:7:169",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73771,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "13371:5:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 73836,
                  "src": "13363:13:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73770,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13363:7:169",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73773,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "13394:3:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 73836,
                  "src": "13386:11:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73772,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13386:7:169",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73775,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "13415:7:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 73836,
                  "src": "13407:15:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73774,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13407:7:169",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73777,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "13447:10:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 73836,
                  "src": "13432:25:169",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 73776,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13432:5:169",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13294:169:169"
            },
            "returnParameters": {
              "id": 73781,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13523:0:169"
            },
            "scope": 74144,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "public"
          },
          {
            "id": 73888,
            "nodeType": "FunctionDefinition",
            "src": "14892:771:169",
            "nodes": [],
            "body": {
              "id": 73887,
              "nodeType": "Block",
              "src": "15094:569:169",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 73854,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 73851,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "15112:3:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 73852,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "15112:9:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 73853,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73843,
                          "src": "15125:7:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "15112:20:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616e646172644272696467653a206272696467696e6720455448206d75737420696e636c7564652073756666696369656e74204554482076616c7565",
                        "id": 73855,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15134:64:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_950f54835f4d06e00870356a5c9513a8179dddf76cd62de2e9f0d1ce59b30241",
                          "typeString": "literal_string \"StandardBridge: bridging ETH must include sufficient ETH value\""
                        },
                        "value": "StandardBridge: bridging ETH must include sufficient ETH value"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_950f54835f4d06e00870356a5c9513a8179dddf76cd62de2e9f0d1ce59b30241",
                          "typeString": "literal_string \"StandardBridge: bridging ETH must include sufficient ETH value\""
                        }
                      ],
                      "id": 73850,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15104:7:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 73856,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15104:95:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73857,
                  "nodeType": "ExpressionStatement",
                  "src": "15104:95:169"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 73859,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73839,
                        "src": "15401:5:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 73860,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73841,
                        "src": "15408:3:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 73861,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73843,
                        "src": "15413:7:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 73862,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73847,
                        "src": "15422:10:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 73858,
                      "name": "_emitETHBridgeInitiated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74071,
                      "src": "15377:23:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 73863,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15377:56:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73864,
                  "nodeType": "ExpressionStatement",
                  "src": "15377:56:169"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 73872,
                            "name": "OTHER_BRIDGE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73434,
                            "src": "15505:12:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StandardBridge_$74144",
                              "typeString": "contract StandardBridge"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StandardBridge_$74144",
                              "typeString": "contract StandardBridge"
                            }
                          ],
                          "id": 73871,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "15497:7:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 73870,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "15497:7:169",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 73873,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15497:21:169",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 73876,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "15555:4:169",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StandardBridge_$74144",
                                  "typeString": "contract StandardBridge"
                                }
                              },
                              "id": 73877,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "finalizeBridgeETH",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 73764,
                              "src": "15555:22:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                                "typeString": "function (address,address,uint256,bytes memory) payable external"
                              }
                            },
                            "id": 73878,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "15555:31:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 73879,
                            "name": "_from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73839,
                            "src": "15588:5:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 73880,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73841,
                            "src": "15595:3:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 73881,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73843,
                            "src": "15600:7:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 73882,
                            "name": "_extraData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73847,
                            "src": "15609:10:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 73874,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "15532:3:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 73875,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "15532:22:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 73883,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15532:88:169",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 73884,
                        "name": "_minGasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73845,
                        "src": "15634:12:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          },
                          {
                            "typeIdentifier": "t_uint32",
                            "typeString": "uint32"
                          }
                        ],
                        "expression": {
                          "id": 73865,
                          "name": "messenger",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73451,
                          "src": "15444:9:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_CrossDomainMessenger_$71321",
                            "typeString": "contract CrossDomainMessenger"
                          }
                        },
                        "id": 73867,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sendMessage",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 71003,
                        "src": "15444:21:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_payable$_t_address_$_t_bytes_memory_ptr_$_t_uint32_$returns$__$",
                          "typeString": "function (address,bytes memory,uint32) payable external"
                        }
                      },
                      "id": 73869,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "id": 73868,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73843,
                          "src": "15474:7:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "src": "15444:39:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_bytes_memory_ptr_$_t_uint32_$returns$__$value",
                        "typeString": "function (address,bytes memory,uint32) payable external"
                      }
                    },
                    "id": 73885,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15444:212:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73886,
                  "nodeType": "ExpressionStatement",
                  "src": "15444:212:169"
                }
              ]
            },
            "documentation": {
              "id": 73837,
              "nodeType": "StructuredDocumentation",
              "src": "14310:577:169",
              "text": "@notice Initiates a bridge of ETH through the CrossDomainMessenger.\n @param _from        Address of the sender.\n @param _to          Address of the receiver.\n @param _amount      Amount of ETH being bridged.\n @param _minGasLimit Minimum amount of gas that the bridge can be relayed with.\n @param _extraData   Extra data to be sent with the transaction. Note that the recipient will\n                     not be triggered with this data, but it will be emitted and can be used\n                     to identify the transaction."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_initiateBridgeETH",
            "nameLocation": "14901:18:169",
            "parameters": {
              "id": 73848,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73839,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "14937:5:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 73888,
                  "src": "14929:13:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73838,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14929:7:169",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73841,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "14960:3:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 73888,
                  "src": "14952:11:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73840,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14952:7:169",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73843,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "14981:7:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 73888,
                  "src": "14973:15:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73842,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14973:7:169",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73845,
                  "mutability": "mutable",
                  "name": "_minGasLimit",
                  "nameLocation": "15005:12:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 73888,
                  "src": "14998:19:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 73844,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "14998:6:169",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73847,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "15040:10:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 73888,
                  "src": "15027:23:169",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 73846,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "15027:5:169",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14919:137:169"
            },
            "returnParameters": {
              "id": 73849,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15094:0:169"
            },
            "scope": 74144,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 73986,
            "nodeType": "FunctionDefinition",
            "src": "16357:1662:169",
            "nodes": [],
            "body": {
              "id": 73985,
              "nodeType": "Block",
              "src": "16620:1399:169",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 73907,
                        "name": "_localToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73891,
                        "src": "16659:11:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 73906,
                      "name": "_isOptimismMintableERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74013,
                      "src": "16634:24:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 73908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16634:37:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 73952,
                    "nodeType": "Block",
                    "src": "16953:189:169",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 73930,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 73895,
                              "src": "17004:5:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 73933,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "17019:4:169",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StandardBridge_$74144",
                                    "typeString": "contract StandardBridge"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_StandardBridge_$74144",
                                    "typeString": "contract StandardBridge"
                                  }
                                ],
                                "id": 73932,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "17011:7:169",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 73931,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "17011:7:169",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 73934,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "17011:13:169",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 73935,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 73899,
                              "src": "17026:7:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 73927,
                                  "name": "_localToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 73891,
                                  "src": "16974:11:169",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 73926,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 30971,
                                "src": "16967:6:169",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$30971_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 73928,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16967:19:169",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$30971",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 73929,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 31943,
                            "src": "16967:36:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$30971_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$30971_$",
                              "typeString": "function (contract IERC20,address,address,uint256)"
                            }
                          },
                          "id": 73936,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16967:67:169",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 73937,
                        "nodeType": "ExpressionStatement",
                        "src": "16967:67:169"
                      },
                      {
                        "expression": {
                          "id": 73950,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 73938,
                                "name": "deposits",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 73447,
                                "src": "17048:8:169",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 73941,
                              "indexExpression": {
                                "id": 73939,
                                "name": "_localToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 73891,
                                "src": "17057:11:169",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "17048:21:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 73942,
                            "indexExpression": {
                              "id": 73940,
                              "name": "_remoteToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 73893,
                              "src": "17070:12:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "17048:35:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 73949,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 73943,
                                  "name": "deposits",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 73447,
                                  "src": "17086:8:169",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                    "typeString": "mapping(address => mapping(address => uint256))"
                                  }
                                },
                                "id": 73945,
                                "indexExpression": {
                                  "id": 73944,
                                  "name": "_localToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 73891,
                                  "src": "17095:11:169",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "17086:21:169",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 73947,
                              "indexExpression": {
                                "id": 73946,
                                "name": "_remoteToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 73893,
                                "src": "17108:12:169",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "17086:35:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 73948,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 73899,
                              "src": "17124:7:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "17086:45:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17048:83:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 73951,
                        "nodeType": "ExpressionStatement",
                        "src": "17048:83:169"
                      }
                    ]
                  },
                  "id": 73953,
                  "nodeType": "IfStatement",
                  "src": "16630:512:169",
                  "trueBody": {
                    "id": 73925,
                    "nodeType": "Block",
                    "src": "16673:274:169",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 73911,
                                  "name": "_localToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 73891,
                                  "src": "16732:11:169",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 73912,
                                  "name": "_remoteToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 73893,
                                  "src": "16745:12:169",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 73910,
                                "name": "_isCorrectTokenPair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 74051,
                                "src": "16712:19:169",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (address,address) view returns (bool)"
                                }
                              },
                              "id": 73913,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16712:46:169",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5374616e646172644272696467653a2077726f6e672072656d6f746520746f6b656e20666f72204f7074696d69736d204d696e7461626c65204552433230206c6f63616c20746f6b656e",
                              "id": 73914,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "16776:76:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_843f9e9cdac865c94e891377948e585b969802f0a09d901439bce110be0b2c39",
                                "typeString": "literal_string \"StandardBridge: wrong remote token for Optimism Mintable ERC20 local token\""
                              },
                              "value": "StandardBridge: wrong remote token for Optimism Mintable ERC20 local token"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_843f9e9cdac865c94e891377948e585b969802f0a09d901439bce110be0b2c39",
                                "typeString": "literal_string \"StandardBridge: wrong remote token for Optimism Mintable ERC20 local token\""
                              }
                            ],
                            "id": 73909,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "16687:7:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 73915,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16687:179:169",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 73916,
                        "nodeType": "ExpressionStatement",
                        "src": "16687:179:169"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 73921,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 73895,
                              "src": "16921:5:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 73922,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 73899,
                              "src": "16928:7:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 73918,
                                  "name": "_localToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 73891,
                                  "src": "16903:11:169",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 73917,
                                "name": "OptimismMintableERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 72072,
                                "src": "16881:21:169",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_OptimismMintableERC20_$72072_$",
                                  "typeString": "type(contract OptimismMintableERC20)"
                                }
                              },
                              "id": 73919,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16881:34:169",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OptimismMintableERC20_$72072",
                                "typeString": "contract OptimismMintableERC20"
                              }
                            },
                            "id": 73920,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "burn",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 71983,
                            "src": "16881:39:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 73923,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16881:55:169",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 73924,
                        "nodeType": "ExpressionStatement",
                        "src": "16881:55:169"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 73955,
                        "name": "_localToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73891,
                        "src": "17358:11:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 73956,
                        "name": "_remoteToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73893,
                        "src": "17371:12:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 73957,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73895,
                        "src": "17385:5:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 73958,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73897,
                        "src": "17392:3:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 73959,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73899,
                        "src": "17397:7:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 73960,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73903,
                        "src": "17406:10:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 73954,
                      "name": "_emitERC20BridgeInitiated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 74117,
                      "src": "17332:25:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 73961,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17332:85:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73962,
                  "nodeType": "ExpressionStatement",
                  "src": "17332:85:169"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 73968,
                            "name": "OTHER_BRIDGE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73434,
                            "src": "17471:12:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StandardBridge_$74144",
                              "typeString": "contract StandardBridge"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StandardBridge_$74144",
                              "typeString": "contract StandardBridge"
                            }
                          ],
                          "id": 73967,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "17463:7:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 73966,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "17463:7:169",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 73969,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17463:21:169",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 73972,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "17538:4:169",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_StandardBridge_$74144",
                                  "typeString": "contract StandardBridge"
                                }
                              },
                              "id": 73973,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "finalizeBridgeERC20",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 73836,
                              "src": "17538:24:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                                "typeString": "function (address,address,address,address,uint256,bytes memory) external"
                              }
                            },
                            "id": 73974,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "17538:33:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 73975,
                            "name": "_remoteToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73893,
                            "src": "17824:12:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 73976,
                            "name": "_localToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73891,
                            "src": "17854:11:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 73977,
                            "name": "_from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73895,
                            "src": "17883:5:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 73978,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73897,
                            "src": "17906:3:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 73979,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73899,
                            "src": "17927:7:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 73980,
                            "name": "_extraData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73903,
                            "src": "17952:10:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 73970,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "17498:3:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 73971,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "17498:22:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 73981,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "17498:478:169",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 73982,
                        "name": "_minGasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73901,
                        "src": "17990:12:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "expression": {
                        "id": 73963,
                        "name": "messenger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73451,
                        "src": "17428:9:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CrossDomainMessenger_$71321",
                          "typeString": "contract CrossDomainMessenger"
                        }
                      },
                      "id": 73965,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sendMessage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 71003,
                      "src": "17428:21:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_bytes_memory_ptr_$_t_uint32_$returns$__$",
                        "typeString": "function (address,bytes memory,uint32) payable external"
                      }
                    },
                    "id": 73983,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17428:584:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 73984,
                  "nodeType": "ExpressionStatement",
                  "src": "17428:584:169"
                }
              ]
            },
            "documentation": {
              "id": 73889,
              "nodeType": "StructuredDocumentation",
              "src": "15669:683:169",
              "text": "@notice Sends ERC20 tokens to a receiver's address on the other chain.\n @param _localToken  Address of the ERC20 on this chain.\n @param _remoteToken Address of the corresponding token on the remote chain.\n @param _to          Address of the receiver.\n @param _amount      Amount of local tokens to deposit.\n @param _minGasLimit Minimum amount of gas that the bridge can be relayed with.\n @param _extraData   Extra data to be sent with the transaction. Note that the recipient will\n                     not be triggered with this data, but it will be emitted and can be used\n                     to identify the transaction."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_initiateBridgeERC20",
            "nameLocation": "16366:20:169",
            "parameters": {
              "id": 73904,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73891,
                  "mutability": "mutable",
                  "name": "_localToken",
                  "nameLocation": "16404:11:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 73986,
                  "src": "16396:19:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73890,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16396:7:169",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73893,
                  "mutability": "mutable",
                  "name": "_remoteToken",
                  "nameLocation": "16433:12:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 73986,
                  "src": "16425:20:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73892,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16425:7:169",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73895,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "16463:5:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 73986,
                  "src": "16455:13:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73894,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16455:7:169",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73897,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "16486:3:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 73986,
                  "src": "16478:11:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73896,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16478:7:169",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73899,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "16507:7:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 73986,
                  "src": "16499:15:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 73898,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16499:7:169",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73901,
                  "mutability": "mutable",
                  "name": "_minGasLimit",
                  "nameLocation": "16531:12:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 73986,
                  "src": "16524:19:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 73900,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "16524:6:169",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 73903,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "16566:10:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 73986,
                  "src": "16553:23:169",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 73902,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "16553:5:169",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16386:196:169"
            },
            "returnParameters": {
              "id": 73905,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16620:0:169"
            },
            "scope": 74144,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 74013,
            "nodeType": "FunctionDefinition",
            "src": "18283:279:169",
            "nodes": [],
            "body": {
              "id": 74012,
              "nodeType": "Block",
              "src": "18362:200:169",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 74010,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 73996,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73989,
                          "src": "18411:6:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 73998,
                                "name": "ILegacyMintableERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 71759,
                                "src": "18424:20:169",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_ILegacyMintableERC20_$71759_$",
                                  "typeString": "type(contract ILegacyMintableERC20)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_ILegacyMintableERC20_$71759_$",
                                  "typeString": "type(contract ILegacyMintableERC20)"
                                }
                              ],
                              "id": 73997,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "18419:4:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 73999,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18419:26:169",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_ILegacyMintableERC20_$71759",
                              "typeString": "type(contract ILegacyMintableERC20)"
                            }
                          },
                          "id": 74000,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "18419:38:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 73994,
                          "name": "ERC165Checker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34940,
                          "src": "18379:13:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC165Checker_$34940_$",
                            "typeString": "type(library ERC165Checker)"
                          }
                        },
                        "id": 73995,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34796,
                        "src": "18379:31:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (address,bytes4) view returns (bool)"
                        }
                      },
                      "id": 74001,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "18379:79:169",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "||",
                    "rightExpression": {
                      "arguments": [
                        {
                          "id": 74004,
                          "name": "_token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 73989,
                          "src": "18506:6:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "expression": {
                            "arguments": [
                              {
                                "id": 74006,
                                "name": "IOptimismMintableERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 71736,
                                "src": "18519:22:169",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IOptimismMintableERC20_$71736_$",
                                  "typeString": "type(contract IOptimismMintableERC20)"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_type$_t_contract$_IOptimismMintableERC20_$71736_$",
                                  "typeString": "type(contract IOptimismMintableERC20)"
                                }
                              ],
                              "id": 74005,
                              "name": "type",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -27,
                              "src": "18514:4:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                                "typeString": "function () pure"
                              }
                            },
                            "id": 74007,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "18514:28:169",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_meta_type_t_contract$_IOptimismMintableERC20_$71736",
                              "typeString": "type(contract IOptimismMintableERC20)"
                            }
                          },
                          "id": 74008,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "interfaceId",
                          "nodeType": "MemberAccess",
                          "src": "18514:40:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        ],
                        "expression": {
                          "id": 74002,
                          "name": "ERC165Checker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 34940,
                          "src": "18474:13:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_ERC165Checker_$34940_$",
                            "typeString": "type(library ERC165Checker)"
                          }
                        },
                        "id": 74003,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "supportsInterface",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 34796,
                        "src": "18474:31:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$",
                          "typeString": "function (address,bytes4) view returns (bool)"
                        }
                      },
                      "id": 74009,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "18474:81:169",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "18379:176:169",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 73993,
                  "id": 74011,
                  "nodeType": "Return",
                  "src": "18372:183:169"
                }
              ]
            },
            "documentation": {
              "id": 73987,
              "nodeType": "StructuredDocumentation",
              "src": "18025:253:169",
              "text": "@notice Checks if a given address is an OptimismMintableERC20. Not perfect, but good enough.\n         Just the way we like it.\n @param _token Address of the token to check.\n @return True if the token is an OptimismMintableERC20."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isOptimismMintableERC20",
            "nameLocation": "18292:24:169",
            "parameters": {
              "id": 73990,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73989,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "18325:6:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 74013,
                  "src": "18317:14:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 73988,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18317:7:169",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18316:16:169"
            },
            "returnParameters": {
              "id": 73993,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 73992,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 74013,
                  "src": "18356:4:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 73991,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "18356:4:169",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18355:6:169"
            },
            "scope": 74144,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 74051,
            "nodeType": "FunctionDefinition",
            "src": "19009:410:169",
            "nodes": [],
            "body": {
              "id": 74050,
              "nodeType": "Block",
              "src": "19112:307:169",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 74025,
                        "name": "_mintableToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74016,
                        "src": "19158:14:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 74027,
                              "name": "ILegacyMintableERC20",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 71759,
                              "src": "19179:20:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_ILegacyMintableERC20_$71759_$",
                                "typeString": "type(contract ILegacyMintableERC20)"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_type$_t_contract$_ILegacyMintableERC20_$71759_$",
                                "typeString": "type(contract ILegacyMintableERC20)"
                              }
                            ],
                            "id": 74026,
                            "name": "type",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -27,
                            "src": "19174:4:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_metatype_pure$__$returns$__$",
                              "typeString": "function () pure"
                            }
                          },
                          "id": 74028,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19174:26:169",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_meta_type_t_contract$_ILegacyMintableERC20_$71759",
                            "typeString": "type(contract ILegacyMintableERC20)"
                          }
                        },
                        "id": 74029,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "memberName": "interfaceId",
                        "nodeType": "MemberAccess",
                        "src": "19174:38:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes4",
                          "typeString": "bytes4"
                        }
                      ],
                      "expression": {
                        "id": 74023,
                        "name": "ERC165Checker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 34940,
                        "src": "19126:13:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ERC165Checker_$34940_$",
                          "typeString": "type(library ERC165Checker)"
                        }
                      },
                      "id": 74024,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "supportsInterface",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 34796,
                      "src": "19126:31:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes4_$returns$_t_bool_$",
                        "typeString": "function (address,bytes4) view returns (bool)"
                      }
                    },
                    "id": 74030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19126:87:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 74048,
                    "nodeType": "Block",
                    "src": "19314:99:169",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 74046,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 74040,
                            "name": "_otherToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74018,
                            "src": "19335:11:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 74042,
                                    "name": "_mintableToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 74016,
                                    "src": "19373:14:169",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 74041,
                                  "name": "IOptimismMintableERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 71736,
                                  "src": "19350:22:169",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_IOptimismMintableERC20_$71736_$",
                                    "typeString": "type(contract IOptimismMintableERC20)"
                                  }
                                },
                                "id": 74043,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "19350:38:169",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_IOptimismMintableERC20_$71736",
                                  "typeString": "contract IOptimismMintableERC20"
                                }
                              },
                              "id": 74044,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "remoteToken",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 71716,
                              "src": "19350:50:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                "typeString": "function () view external returns (address)"
                              }
                            },
                            "id": 74045,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "19350:52:169",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "19335:67:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 74022,
                        "id": 74047,
                        "nodeType": "Return",
                        "src": "19328:74:169"
                      }
                    ]
                  },
                  "id": 74049,
                  "nodeType": "IfStatement",
                  "src": "19122:291:169",
                  "trueBody": {
                    "id": 74039,
                    "nodeType": "Block",
                    "src": "19215:93:169",
                    "statements": [
                      {
                        "expression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 74037,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 74031,
                            "name": "_otherToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 74018,
                            "src": "19236:11:169",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 74033,
                                    "name": "_mintableToken",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 74016,
                                    "src": "19272:14:169",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  ],
                                  "id": 74032,
                                  "name": "ILegacyMintableERC20",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 71759,
                                  "src": "19251:20:169",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_contract$_ILegacyMintableERC20_$71759_$",
                                    "typeString": "type(contract ILegacyMintableERC20)"
                                  }
                                },
                                "id": 74034,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "19251:36:169",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_ILegacyMintableERC20_$71759",
                                  "typeString": "contract ILegacyMintableERC20"
                                }
                              },
                              "id": 74035,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "l1Token",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 71744,
                              "src": "19251:44:169",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                "typeString": "function () view external returns (address)"
                              }
                            },
                            "id": 74036,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "19251:46:169",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "19236:61:169",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "functionReturnParameters": 74022,
                        "id": 74038,
                        "nodeType": "Return",
                        "src": "19229:68:169"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 74014,
              "nodeType": "StructuredDocumentation",
              "src": "18568:436:169",
              "text": "@notice Checks if the \"other token\" is the correct pair token for the OptimismMintableERC20.\n         Calls can be saved in the future by combining this logic with\n         `_isOptimismMintableERC20`.\n @param _mintableToken OptimismMintableERC20 to check against.\n @param _otherToken    Pair token to check.\n @return True if the other token is the correct pair token for the OptimismMintableERC20."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isCorrectTokenPair",
            "nameLocation": "19018:19:169",
            "parameters": {
              "id": 74019,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74016,
                  "mutability": "mutable",
                  "name": "_mintableToken",
                  "nameLocation": "19046:14:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 74051,
                  "src": "19038:22:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74015,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19038:7:169",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74018,
                  "mutability": "mutable",
                  "name": "_otherToken",
                  "nameLocation": "19070:11:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 74051,
                  "src": "19062:19:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74017,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19062:7:169",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19037:45:169"
            },
            "returnParameters": {
              "id": 74022,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74021,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 74051,
                  "src": "19106:4:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 74020,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "19106:4:169",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19105:6:169"
            },
            "scope": 74144,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 74071,
            "nodeType": "FunctionDefinition",
            "src": "19795:251:169",
            "nodes": [],
            "body": {
              "id": 74070,
              "nodeType": "Block",
              "src": "19973:73:169",
              "nodes": [],
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 74064,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74054,
                        "src": "20007:5:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74065,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74056,
                        "src": "20014:3:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74066,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74058,
                        "src": "20019:7:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 74067,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74060,
                        "src": "20028:10:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 74063,
                      "name": "ETHBridgeInitiated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73467,
                      "src": "19988:18:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 74068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19988:51:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74069,
                  "nodeType": "EmitStatement",
                  "src": "19983:56:169"
                }
              ]
            },
            "documentation": {
              "id": 74052,
              "nodeType": "StructuredDocumentation",
              "src": "19425:365:169",
              "text": "@notice Emits the ETHBridgeInitiated event and if necessary the appropriate legacy event\n         when an ETH bridge is finalized on this chain.\n @param _from      Address of the sender.\n @param _to        Address of the receiver.\n @param _amount    Amount of ETH sent.\n @param _extraData Extra data sent with the transaction."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_emitETHBridgeInitiated",
            "nameLocation": "19804:23:169",
            "parameters": {
              "id": 74061,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74054,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "19845:5:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 74071,
                  "src": "19837:13:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74053,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19837:7:169",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74056,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "19868:3:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 74071,
                  "src": "19860:11:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74055,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "19860:7:169",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74058,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "19889:7:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 74071,
                  "src": "19881:15:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74057,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "19881:7:169",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74060,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "19919:10:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 74071,
                  "src": "19906:23:169",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 74059,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "19906:5:169",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19827:108:169"
            },
            "returnParameters": {
              "id": 74062,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "19973:0:169"
            },
            "scope": 74144,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 74091,
            "nodeType": "FunctionDefinition",
            "src": "20416:251:169",
            "nodes": [],
            "body": {
              "id": 74090,
              "nodeType": "Block",
              "src": "20594:73:169",
              "nodes": [],
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 74084,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74074,
                        "src": "20628:5:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74085,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74076,
                        "src": "20635:3:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74086,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74078,
                        "src": "20640:7:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 74087,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74080,
                        "src": "20649:10:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 74083,
                      "name": "ETHBridgeFinalized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73478,
                      "src": "20609:18:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 74088,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20609:51:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74089,
                  "nodeType": "EmitStatement",
                  "src": "20604:56:169"
                }
              ]
            },
            "documentation": {
              "id": 74072,
              "nodeType": "StructuredDocumentation",
              "src": "20052:359:169",
              "text": "@notice Emits the ETHBridgeFinalized and if necessary the appropriate legacy event when an\n         ETH bridge is finalized on this chain.\n @param _from      Address of the sender.\n @param _to        Address of the receiver.\n @param _amount    Amount of ETH sent.\n @param _extraData Extra data sent with the transaction."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_emitETHBridgeFinalized",
            "nameLocation": "20425:23:169",
            "parameters": {
              "id": 74081,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74074,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "20466:5:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 74091,
                  "src": "20458:13:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74073,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20458:7:169",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74076,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "20489:3:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 74091,
                  "src": "20481:11:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74075,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20481:7:169",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74078,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "20510:7:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 74091,
                  "src": "20502:15:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74077,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20502:7:169",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74080,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "20540:10:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 74091,
                  "src": "20527:23:169",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 74079,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "20527:5:169",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20448:108:169"
            },
            "returnParameters": {
              "id": 74082,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20594:0:169"
            },
            "scope": 74144,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 74117,
            "nodeType": "FunctionDefinition",
            "src": "21200:341:169",
            "nodes": [],
            "body": {
              "id": 74116,
              "nodeType": "Block",
              "src": "21439:102:169",
              "nodes": [],
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 74108,
                        "name": "_localToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74094,
                        "src": "21475:11:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74109,
                        "name": "_remoteToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74096,
                        "src": "21488:12:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74110,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74098,
                        "src": "21502:5:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74111,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74100,
                        "src": "21509:3:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74112,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74102,
                        "src": "21514:7:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 74113,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74104,
                        "src": "21523:10:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 74107,
                      "name": "ERC20BridgeInitiated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73493,
                      "src": "21454:20:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 74114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21454:80:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74115,
                  "nodeType": "EmitStatement",
                  "src": "21449:85:169"
                }
              ]
            },
            "documentation": {
              "id": 74092,
              "nodeType": "StructuredDocumentation",
              "src": "20673:522:169",
              "text": "@notice Emits the ERC20BridgeInitiated event and if necessary the appropriate legacy\n         event when an ERC20 bridge is initiated to the other chain.\n @param _localToken  Address of the ERC20 on this chain.\n @param _remoteToken Address of the ERC20 on the remote chain.\n @param _from        Address of the sender.\n @param _to          Address of the receiver.\n @param _amount      Amount of the ERC20 sent.\n @param _extraData   Extra data sent with the transaction."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_emitERC20BridgeInitiated",
            "nameLocation": "21209:25:169",
            "parameters": {
              "id": 74105,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74094,
                  "mutability": "mutable",
                  "name": "_localToken",
                  "nameLocation": "21252:11:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 74117,
                  "src": "21244:19:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74093,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21244:7:169",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74096,
                  "mutability": "mutable",
                  "name": "_remoteToken",
                  "nameLocation": "21281:12:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 74117,
                  "src": "21273:20:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74095,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21273:7:169",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74098,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "21311:5:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 74117,
                  "src": "21303:13:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74097,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21303:7:169",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74100,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "21334:3:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 74117,
                  "src": "21326:11:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74099,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21326:7:169",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74102,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "21355:7:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 74117,
                  "src": "21347:15:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74101,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21347:7:169",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74104,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "21385:10:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 74117,
                  "src": "21372:23:169",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 74103,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "21372:5:169",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21234:167:169"
            },
            "returnParameters": {
              "id": 74106,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21439:0:169"
            },
            "scope": 74144,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "id": 74143,
            "nodeType": "FunctionDefinition",
            "src": "22074:341:169",
            "nodes": [],
            "body": {
              "id": 74142,
              "nodeType": "Block",
              "src": "22313:102:169",
              "nodes": [],
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 74134,
                        "name": "_localToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74120,
                        "src": "22349:11:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74135,
                        "name": "_remoteToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74122,
                        "src": "22362:12:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74136,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74124,
                        "src": "22376:5:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74137,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74126,
                        "src": "22383:3:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 74138,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74128,
                        "src": "22388:7:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 74139,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 74130,
                        "src": "22397:10:169",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 74133,
                      "name": "ERC20BridgeFinalized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73508,
                      "src": "22328:20:169",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 74140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22328:80:169",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 74141,
                  "nodeType": "EmitStatement",
                  "src": "22323:85:169"
                }
              ]
            },
            "documentation": {
              "id": 74118,
              "nodeType": "StructuredDocumentation",
              "src": "21547:522:169",
              "text": "@notice Emits the ERC20BridgeFinalized event and if necessary the appropriate legacy\n         event when an ERC20 bridge is initiated to the other chain.\n @param _localToken  Address of the ERC20 on this chain.\n @param _remoteToken Address of the ERC20 on the remote chain.\n @param _from        Address of the sender.\n @param _to          Address of the receiver.\n @param _amount      Amount of the ERC20 sent.\n @param _extraData   Extra data sent with the transaction."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_emitERC20BridgeFinalized",
            "nameLocation": "22083:25:169",
            "parameters": {
              "id": 74131,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 74120,
                  "mutability": "mutable",
                  "name": "_localToken",
                  "nameLocation": "22126:11:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 74143,
                  "src": "22118:19:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74119,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22118:7:169",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74122,
                  "mutability": "mutable",
                  "name": "_remoteToken",
                  "nameLocation": "22155:12:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 74143,
                  "src": "22147:20:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74121,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22147:7:169",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74124,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "22185:5:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 74143,
                  "src": "22177:13:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74123,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22177:7:169",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74126,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "22208:3:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 74143,
                  "src": "22200:11:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 74125,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22200:7:169",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74128,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "22229:7:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 74143,
                  "src": "22221:15:169",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 74127,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22221:7:169",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 74130,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "22259:10:169",
                  "nodeType": "VariableDeclaration",
                  "scope": 74143,
                  "src": "22246:23:169",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 74129,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "22246:5:169",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22108:167:169"
            },
            "returnParameters": {
              "id": 74132,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22313:0:169"
            },
            "scope": 74144,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "abstract": true,
        "baseContracts": [
          {
            "baseName": {
              "id": 73421,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 30307,
              "src": "1147:13:169"
            },
            "id": 73422,
            "nodeType": "InheritanceSpecifier",
            "src": "1147:13:169"
          }
        ],
        "canonicalName": "StandardBridge",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 73420,
          "nodeType": "StructuredDocumentation",
          "src": "787:324:169",
          "text": "@custom:upgradeable\n @title StandardBridge\n @notice StandardBridge is a base contract for the L1 and L2 standard ERC20 bridges. It handles\n         the core bridging logic, including escrowing tokens that are native to the local chain\n         and minting/burning tokens that are native to the remote chain."
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          74144,
          30307
        ],
        "name": "StandardBridge",
        "nameLocation": "1129:14:169",
        "scope": 74145,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 169
}