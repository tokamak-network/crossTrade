{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "check",
      "outputs": [
        {
          "internalType": "bool",
          "name": "execute_",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b50610163806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c64b3bb514610030575b600080fd5b61004461003e366004610087565b50600190565b604051901515815260200160405180910390f35b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006020828403121561009957600080fd5b813567ffffffffffffffff808211156100b157600080fd5b818401915084601f8301126100c557600080fd5b8135818111156100d7576100d7610058565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190838211818310171561011d5761011d610058565b8160405282815287602084870101111561013657600080fd5b82602086016020830137600092810160200192909252509594505050505056fea164736f6c634300080f000a",
    "sourceMap": "175:171:192:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c64b3bb514610030575b600080fd5b61004461003e366004610087565b50600190565b604051901515815260200160405180910390f35b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006020828403121561009957600080fd5b813567ffffffffffffffff808211156100b157600080fd5b818401915084601f8301126100c557600080fd5b8135818111156100d7576100d7610058565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190838211818310171561011d5761011d610058565b8160405282815287602084870101111561013657600080fd5b82602086016020830137600092810160200192909252509594505050505056fea164736f6c634300080f000a",
    "sourceMap": "175:171:192:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;245:99;;;;;;:::i;:::-;-1:-1:-1;333:4:192;;245:99;;;;1353:14:302;;1346:22;1328:41;;1316:2;1301:18;245:99:192;;;;;;;14:184:302;66:77;63:1;56:88;163:4;160:1;153:15;187:4;184:1;177:15;203:980;271:6;324:2;312:9;303:7;299:23;295:32;292:52;;;340:1;337;330:12;292:52;380:9;367:23;409:18;450:2;442:6;439:14;436:34;;;466:1;463;456:12;436:34;504:6;493:9;489:22;479:32;;549:7;542:4;538:2;534:13;530:27;520:55;;571:1;568;561:12;520:55;607:2;594:16;629:2;625;622:10;619:36;;;635:18;;:::i;:::-;769:2;763:9;831:4;823:13;;674:66;819:22;;;843:2;815:31;811:40;799:53;;;867:18;;;887:22;;;864:46;861:72;;;913:18;;:::i;:::-;953:10;949:2;942:22;988:2;980:6;973:18;1028:7;1023:2;1018;1014;1010:11;1006:20;1003:33;1000:53;;;1049:1;1046;1039:12;1000:53;1105:2;1100;1096;1092:11;1087:2;1079:6;1075:15;1062:46;1150:1;1128:15;;;1145:2;1124:24;1117:35;;;;-1:-1:-1;1132:6:302;203:980;-1:-1:-1;;;;;203:980:302:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "check(bytes)": "c64b3bb5"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"check\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"execute_\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"check(bytes)\":{\"params\":{\"_params\":\"Encoded parameters for the drip check.\"},\"returns\":{\"execute_\":\"Whether the drip should be executed.\"}}},\"title\":\"CheckTrue\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"check(bytes)\":{\"notice\":\"Checks whether a drip should be executable.\"}},\"notice\":\"DripCheck that always returns true.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/periphery/drippie/dripchecks/CheckTrue.sol\":\"CheckTrue\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@cwia/=lib/clones-with-immutable-args/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/solmate/\",\":clones-with-immutable-args/=lib/clones-with-immutable-args/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"src/periphery/drippie/IDripCheck.sol\":{\"keccak256\":\"0x4db01d51dc47813980a9a8d76e5f14783b6cfed23e4237260281edbe06dad628\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ce87d7ed0e12be217066aafdc0d16ff563cdc6807ecbe2eb58b751d00e984d6\",\"dweb:/ipfs/QmNWzTdxGk6ZDagpbz5RHCTWBkoSoPzaNtcSHppw3rBsmN\"]},\"src/periphery/drippie/dripchecks/CheckTrue.sol\":{\"keccak256\":\"0x668e81020f14efb12acf0874d2910c2904b06ba548bc817ad52f6bfff1bab677\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea27dd4db41b4b0ae510b387792cbe24f903a851e75249c73c0b5ae8419b3cbb\",\"dweb:/ipfs/QmaXWgxP3Pd4m5jPzAAHQChUUBiN8LTC6HdSSkxChkCifA\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "check",
          "outputs": [
            {
              "internalType": "bool",
              "name": "execute_",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "check(bytes)": {
            "params": {
              "_params": "Encoded parameters for the drip check."
            },
            "returns": {
              "execute_": "Whether the drip should be executed."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "check(bytes)": {
            "notice": "Checks whether a drip should be executable."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@cwia/=lib/clones-with-immutable-args/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@rari-capital/solmate/=lib/solmate/",
        "clones-with-immutable-args/=lib/clones-with-immutable-args/src/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "safe-contracts/=lib/safe-contracts/contracts/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 999999
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "src/periphery/drippie/dripchecks/CheckTrue.sol": "CheckTrue"
      },
      "libraries": {}
    },
    "sources": {
      "src/periphery/drippie/IDripCheck.sol": {
        "keccak256": "0x4db01d51dc47813980a9a8d76e5f14783b6cfed23e4237260281edbe06dad628",
        "urls": [
          "bzz-raw://0ce87d7ed0e12be217066aafdc0d16ff563cdc6807ecbe2eb58b751d00e984d6",
          "dweb:/ipfs/QmNWzTdxGk6ZDagpbz5RHCTWBkoSoPzaNtcSHppw3rBsmN"
        ],
        "license": "MIT"
      },
      "src/periphery/drippie/dripchecks/CheckTrue.sol": {
        "keccak256": "0x668e81020f14efb12acf0874d2910c2904b06ba548bc817ad52f6bfff1bab677",
        "urls": [
          "bzz-raw://ea27dd4db41b4b0ae510b387792cbe24f903a851e75249c73c0b5ae8419b3cbb",
          "dweb:/ipfs/QmaXWgxP3Pd4m5jPzAAHQChUUBiN8LTC6HdSSkxChkCifA"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": {}
  },
  "userdoc": {
    "version": 1,
    "kind": "user",
    "methods": {
      "check(bytes)": {
        "notice": "Checks whether a drip should be executable."
      }
    },
    "notice": "DripCheck that always returns true."
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "methods": {
      "check(bytes)": {
        "params": {
          "_params": "Encoded parameters for the drip check."
        },
        "returns": {
          "execute_": "Whether the drip should be executed."
        }
      }
    },
    "title": "CheckTrue"
  },
  "ast": {
    "absolutePath": "src/periphery/drippie/dripchecks/CheckTrue.sol",
    "id": 79061,
    "exportedSymbols": {
      "CheckTrue": [
        79060
      ],
      "IDripCheck": [
        78880
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:315:192",
    "nodes": [
      {
        "id": 79041,
        "nodeType": "PragmaDirective",
        "src": "32:23:192",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 79043,
        "nodeType": "ImportDirective",
        "src": "57:47:192",
        "nodes": [],
        "absolutePath": "src/periphery/drippie/IDripCheck.sol",
        "file": "../IDripCheck.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 79061,
        "sourceUnit": 78881,
        "symbolAliases": [
          {
            "foreign": {
              "id": 79042,
              "name": "IDripCheck",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 78880,
              "src": "66:10:192",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 79060,
        "nodeType": "ContractDefinition",
        "src": "175:171:192",
        "nodes": [
          {
            "id": 79059,
            "nodeType": "FunctionDefinition",
            "src": "245:99:192",
            "nodes": [],
            "body": {
              "id": 79058,
              "nodeType": "Block",
              "src": "312:32:192",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 79056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 79054,
                      "name": "execute_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79052,
                      "src": "322:8:192",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 79055,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "333:4:192",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "322:15:192",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 79057,
                  "nodeType": "ExpressionStatement",
                  "src": "322:15:192"
                }
              ]
            },
            "baseFunctions": [
              78879
            ],
            "documentation": {
              "id": 79047,
              "nodeType": "StructuredDocumentation",
              "src": "214:26:192",
              "text": "@inheritdoc IDripCheck"
            },
            "functionSelector": "c64b3bb5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "check",
            "nameLocation": "254:5:192",
            "parameters": {
              "id": 79050,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79049,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 79059,
                  "src": "260:12:192",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 79048,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "260:5:192",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "259:14:192"
            },
            "returnParameters": {
              "id": 79053,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79052,
                  "mutability": "mutable",
                  "name": "execute_",
                  "nameLocation": "302:8:192",
                  "nodeType": "VariableDeclaration",
                  "scope": 79059,
                  "src": "297:13:192",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 79051,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "297:4:192",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "296:15:192"
            },
            "scope": 79060,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 79045,
              "name": "IDripCheck",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 78880,
              "src": "197:10:192"
            },
            "id": 79046,
            "nodeType": "InheritanceSpecifier",
            "src": "197:10:192"
          }
        ],
        "canonicalName": "CheckTrue",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 79044,
          "nodeType": "StructuredDocumentation",
          "src": "106:69:192",
          "text": "@title CheckTrue\n @notice DripCheck that always returns true."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          79060,
          78880
        ],
        "name": "CheckTrue",
        "nameLocation": "184:9:192",
        "scope": 79061,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 192
}