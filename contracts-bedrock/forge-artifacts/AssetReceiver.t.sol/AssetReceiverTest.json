{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ReceivedETH",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "withdrawer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "WithdrewERC20",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "withdrawer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "WithdrewERC721",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "withdrawer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "WithdrewETH",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_constructor_succeeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_receive_succeeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_withdrawERC20_succeeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_withdrawERC20_unauthorized_reverts",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_withdrawERC20withAmount_succeeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_withdrawERC20withAmount_unauthorized_reverts",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_withdrawERC721_succeeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_withdrawERC721_unauthorized_reverts",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_withdrawETH_succeeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_withdrawETH_unauthorized_reverts",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_withdrawETHwithAmount_succeeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_withdrawETHwithAmount_unauthorized_reverts",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "1449:6634:219:-:0;;;1572:26:1;;;-1:-1:-1;;1572:26:1;;;1594:4;1572:26;;;;;3161:44:5;;;;;;;;;329:28:219;;;-1:-1:-1;;;;;;329:28:219;;;353:3;329:28;;;;;;363:26;;;;;;1572::1;363::219;;;396:36;1449:6634;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "1449:6634:219:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;916:529;;;:::i;:::-;;2161:134:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6597:248:219;;;:::i;2930:133:8:-;;;:::i;2631:141::-;;;:::i;7790:291:219:-;;;:::i;3496:673::-;;;:::i;3212:207::-;;;:::i;6899:818::-;;;:::i;2447:178:8:-;;;:::i;:::-;;;;;;;:::i;4576:769:219:-;;;:::i;1579:110::-;;;:::i;4261:228::-;;;:::i;2301:140:8:-;;;:::i;:::-;;;;;;;:::i;2778:146::-;;;:::i;1866:141::-;;;:::i;5723:790:219:-;;;:::i;1819:584:1:-;;;:::i;:::-;;;3952:14:302;;3945:22;3927:41;;3915:2;3900:18;1819:584:1;3787:187:302;5414:230:219;;;:::i;2386:756::-;;;:::i;2013:142:8:-;;;:::i;1572:26:1:-;;;;;;;;;1748:519:219;;;:::i;916:529::-;1004:15;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;992:9:219;:27;;;;;;;;;;;;;;;1042:16;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1029:10:219;:29;;;;;;;;;;;1152:5;;1126:33;;1152:5;;;1126:33;;;:::i;:::-;4155:42:302;4143:55;;;4125:74;;4113:2;4098:18;1126:33:219;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1110:13:219;:49;;;;;;;;;;;;;;1169;;;;;;;;;4422:74:302;;;;4512:18;;;4505:30;4571:2;4551:18;;;4544:30;4610:15;4590:18;;;4583:43;1169:8:219;;;;4643:19:302;;1169:49:219;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1276:5:219;;1268:23;;;;;:7;1276:5;;;1268:23;;;4873:74:302;1283:7:219;4963:18:302;;;4956:34;1268:7:219;;-1:-1:-1;1268:7:219;;-1:-1:-1;4846:18:302;;1268:23:219;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1309:3:219;;1301:21;;;;;:7;1309:3;;;1301:21;;;4873:74:302;1314:7:219;4963:18:302;;;4956:34;1301:7:219;;-1:-1:-1;1301:7:219;;-1:-1:-1;4846:18:302;;1301:21:219;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1333:10:219;;1349:5;;1333:40;;;;;:10;1349:5;;;1333:40;;;5173:74:302;5295:4;1356:16:219;5283:17:302;5263:18;;;5256:45;1333:10:219;;;-1:-1:-1;1333:15:219;;-1:-1:-1;5146:18:302;;1333:40:219;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1393:5:219;;1384:24;;;;;;:8;1393:5;;;1384:24;;;5524:74:302;5614:18;;;5607:30;5673:1;5653:18;;;5646:29;5711:7;5691:18;;;5684:35;1384:8:219;;-1:-1:-1;1384:8:219;;-1:-1:-1;5736:19:302;;1384:24:219;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1427:3:219;;1418:20;;;;;;:8;1427:3;;;1418:20;;;5978:74:302;6068:18;;;6061:30;6127:1;6107:18;;;6100:29;6165:5;6145:18;;;6138:33;1418:8:219;;-1:-1:-1;1418:8:219;;-1:-1:-1;6188:19:302;;1418:20:219;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;916:529::o;2161:134:8:-;2208:33;2272:16;2253:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2161:134;:::o;6597:248:219:-;6690:9;;6710:13;;6677:57;;6690:9;;;;;6710:13;6726:7;6677:4;:57::i;:::-;6744:31;;;;;6419:2:302;6744:31:219;;;6401:21:302;6458:2;6438:18;;;6431:30;6497:14;6477:18;;;6470:42;6744:15:219;;;;6529:18:302;;6744:31:219;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6785:13:219;;6813:9;;6824:5;;6785:53;;;;;:13;6813:9;;;6785:53;;;6853:34:302;6824:5:219;;;6903:18:302;;;6896:43;6831:6:219;6955:18:302;;;6948:34;6785:13:219;;;-1:-1:-1;6785:27:219;;-1:-1:-1;6765:18:302;;6785:53:219;6558:430:302;2930:133:8;2976:33;3040:16;3021:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2930:133;:::o;2631:141::-;2679:35;2747:18;2726:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2631:141;:::o;7790:291:219:-;7870:5;;7861:15;;;;;:8;7870:5;;;7861:15;;;4125:74:302;7861:8:219;;;;4098:18:302;;7861:15:219;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7886:10:219;;7910:5;;7925:13;;7886:72;;;;;:10;7910:5;;;7886:72;;;7254:34:302;7925:13:219;;;7304:18:302;;;7297:43;7388:4;7941:16:219;7376:17:302;7356:18;;;7349:45;7886:10:219;;;-1:-1:-1;7886:23:219;;-1:-1:-1;7166:18:302;;7886:72:219;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7968:31:219;;;;;6419:2:302;7968:31:219;;;6401:21:302;6458:2;6438:18;;;6431:30;6497:14;6477:18;;;6470:42;7968:15:219;;-1:-1:-1;7968:15:219;;-1:-1:-1;6529:18:302;;7968:31:219;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8009:13:219;;8038:10;;8050:5;;8009:65;;;;;:13;8038:10;;;8009:65;;;7254:34:302;8050:5:219;;;7304:18:302;;;7297:43;7388:4;8057:16:219;7376:17:302;7356:18;;;7349:45;8009:13:219;;;-1:-1:-1;8009:28:219;;-1:-1:-1;7166:18:302;;8009:65:219;6993:407:302;3496:673:219;3579:13;;3562:43;;3579:13;;3571:30;3579:13;3562:8;:43::i;:::-;3632:13;;3616:40;;;;;:7;3632:13;;;3616:40;;;4873:74:302;3648:7:219;4963:18:302;;;4956:34;3616:7:219;;;;4846:18:302;;3616:40:219;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3683:13:219;;3666:49;;-1:-1:-1;3683:13:219;;3675:30;;-1:-1:-1;3707:7:219;3666:8;:49::i;:::-;3743:5;;3726:41;;3743:5;;3735:22;3759:7;3726:8;:41::i;:::-;3824:13;;3778:61;;;;;3792:4;3778:61;;;8073:41:302;;;8130:18;;;8123:50;;;8189:18;;;8182:50;;;8248:18;;;8241:50;3778:13:219;3824;;;8307:19:302;;;8300:84;3778:13:219;;;;8045:19:302;;3778:61:219;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3873:5:219;;3854:36;;3880:9;8566:25:302;;3873:5:219;;;;;-1:-1:-1;3873:5:219;;-1:-1:-1;3854:36:219;;8554:2:302;8539:18;3854:36:219;;;;;;;3938:5;;3929:15;;;;;:8;3938:5;;;3929:15;;;4125:74:302;3929:8:219;;;;4098:18:302;;3929:15:219;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3954:13:219;;3988:5;;3954:52;;;;;:13;3988:5;;;3954:52;;;4873:74:302;3996:9:219;4963:18:302;;;4956:34;3954:13:219;;;-1:-1:-1;3954:25:219;;-1:-1:-1;4846:18:302;;3954:52:219;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4075:13:219;;4058:51;;-1:-1:-1;4075:13:219;;4067:30;;-1:-1:-1;4099:9:219;4058:8;:51::i;:::-;4136:5;;4119:43;;4136:5;;4128:22;4152:9;4119:8;:43::i;:::-;3496:673::o;3212:207::-;3296:13;;3280:40;;;;;:7;3296:13;;;3280:40;;;4873:74:302;3312:7:219;4963:18:302;;;4956:34;3280:7:219;;;;4846:18:302;;3280:40:219;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3330:31:219;;;;;6419:2:302;3330:31:219;;;6401:21:302;6458:2;6438:18;;;6431:30;6497:14;6477:18;;;6470:42;3330:15:219;;-1:-1:-1;3330:15:219;;-1:-1:-1;6529:18:302;;3330:31:219;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3371:13:219;;3405:5;;3371:41;;;;;:13;3405:5;;;3371:41;;;4125:74:302;3371:13:219;;;-1:-1:-1;3371:25:219;;-1:-1:-1;4098:18:302;;3371:41:219;3979:226:302;6899:818:219;7033:10;;:36;;;;;9366:4:302;7052:16:219;9354:17:302;7033:36:219;;;9336::302;7024:53:219;;7033:10;;;:18;;9309::302;;7033:36:219;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7071:5;;;;7024:8;:53::i;:::-;7150:5;;7141:15;;;;;:8;7150:5;;;7141:15;;;4125:74:302;7141:8:219;;;;4098:18:302;;7141:15:219;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7166:10:219;;7190:5;;7205:13;;7166:72;;;;;:10;7190:5;;;7166:72;;;7254:34:302;7205:13:219;;;7304:18:302;;;7297:43;7388:4;7221:16:219;7376:17:302;7356:18;;;7349:45;7166:10:219;;;-1:-1:-1;7166:23:219;;-1:-1:-1;7166:18:302;;:72:219;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7257:10:219;;:36;;;;;9366:4:302;7276:16:219;9354:17:302;7257:36:219;;;9336::302;7248:70:219;;-1:-1:-1;7257:10:219;;;;;-1:-1:-1;7257:18:219;;9309::302;;7257:36:219;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7303:13;;;;7248:8;:70::i;:::-;7375:13;;7329:61;;;;;7343:4;7329:61;;;8073:41:302;;;8130:18;;;8123:50;;;8189:18;;;8182:50;;;8248:18;;;8241:50;7329:13:219;7375;;;8307:19:302;;;8300:84;7329:13:219;;;;8045:19:302;;7329:61:219;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7442:10:219;;7427:5;;7405:67;;9366:4:302;7455:16:219;9354:17:302;9336:36;;7442:10:219;;;;;-1:-1:-1;7427:5:219;;;-1:-1:-1;7427:5:219;;7405:67;;9324:2:302;9309:18;7405:67:219;;;;;;;7523:5;;7514:15;;;;;:8;7523:5;;;7514:15;;;4125:74:302;7514:8:219;;;;4098:18:302;;7514:15:219;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7539:13:219;;7568:10;;7580:5;;7539:65;;;;;:13;7568:10;;;7539:65;;;7254:34:302;7580:5:219;;;7304:18:302;;;7297:43;7388:4;7587:16:219;7376:17:302;7356:18;;;7349:45;7539:13:219;;;-1:-1:-1;7539:28:219;;-1:-1:-1;7166:18:302;;7539:65:219;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7666:10:219;;:36;;;;;9366:4:302;7685:16:219;9354:17:302;7666:36:219;;;9336::302;7657:53:219;;-1:-1:-1;7666:10:219;;;;;-1:-1:-1;7666:18:219;;9309::302;;7666:36:219;9192:186:302;2447:178:8;2503:48;2592:26;2563:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2447:178;:::o;4576:769:219:-;4685:9;;4713:13;;4685:43;;;;;:9;4713:13;;;4685:43;;;4125:74:302;4676:56:219;;4685:9;;;;;:19;;4098:18:302;;4685:43:219;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4730:1;4676:8;:56::i;:::-;4756:9;;4776:13;;4743:57;;4756:9;;;;;4776:13;4792:7;4743:4;:57::i;:::-;4819:9;;4847:13;;4819:43;;;;;:9;4847:13;;;4819:43;;;4125:74:302;4810:62:219;;4819:9;;;;;:19;;4098:18:302;;4819:43:219;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4864:7;4810:8;:62::i;:::-;4891:9;;4911:5;;4891:26;;;;;:9;4911:5;;;4891:26;;;4125:74:302;4882:39:219;;4891:9;;;;;:19;;4098:18:302;;4891:26:219;3979:226:302;4882:39:219;4978:13;;4932:61;;;;;4946:4;4932:61;;;8073:41:302;;;8130:18;;;8123:50;;;8189:18;;;8182:50;;;8248:18;;;8241:50;4932:13:219;4978;;;8307:19:302;;;8300:84;4932:13:219;;;;8045:19:302;;4932:61:219;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5044:9:219;;5029:5;;5008:56;;5056:7;8566:25:302;;5044:9:219;;;;;-1:-1:-1;5029:5:219;;;-1:-1:-1;5029:5:219;;5008:56;;8554:2:302;8539:18;5008:56:219;;;;;;;5114:5;;5105:15;;;;;:8;5114:5;;;5105:15;;;4125:74:302;5105:8:219;;;;4098:18:302;;5105:15:219;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5130:13:219;;5158:9;;5169:5;;5130:45;;;;;:13;5158:9;;;5130:45;;;10340:34:302;5169:5:219;;;10390:18:302;;;10383:43;5130:13:219;;;-1:-1:-1;5130:27:219;;-1:-1:-1;10252:18:302;;5130:45:219;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5236:9:219;;5256:5;;5236:26;;;;;:9;5256:5;;;5236:26;;;4125:74:302;5227:45:219;;-1:-1:-1;5236:9:219;;;-1:-1:-1;5236:19:219;;4098:18:302;;5236:26:219;3979:226:302;5227:45:219;5291:9;;5319:13;;5291:43;;;;;:9;5319:13;;;5291:43;;;4125:74:302;5282:56:219;;5291:9;;;;;:19;;4098:18:302;;5291:43:219;3979:226:302;1579:110:219;1652:5;;1660:13;;:21;;;;;;;;1635:47;;1652:5;;;;;1660:13;;:19;;:21;;;;;;;;;;;;;;:13;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1635:8;:47::i;4261:228::-;4355:13;;4339:40;;;;;:7;4355:13;;;4339:40;;;4873:74:302;4371:7:219;4963:18:302;;;4956:34;4339:7:219;;;;4846:18:302;;4339:40:219;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4389:31:219;;;;;6419:2:302;4389:31:219;;;6401:21:302;6458:2;6438:18;;;6431:30;6497:14;6477:18;;;6470:42;4389:15:219;;-1:-1:-1;4389:15:219;;-1:-1:-1;6529:18:302;;4389:31:219;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4430:13:219;;4464:5;;4430:52;;;;;:13;4464:5;;;4430:52;;;4873:74:302;4472:9:219;4963:18:302;;;4956:34;4430:13:219;;;-1:-1:-1;4430:25:219;;-1:-1:-1;4846:18:302;;4430:52:219;4673:323:302;2301:140:8;2349:34;2416:18;2395:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2778:146;2826:40;2899:18;2878:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1866:141;1915:34;1982:18;1961:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5723:790:219;5842:9;;5870:13;;5842:43;;;;;:9;5870:13;;;5842:43;;;4125:74:302;5833:56:219;;5842:9;;;;;:19;;4098:18:302;;5842:43:219;3979:226:302;5833:56:219;5913:9;;5933:13;;5900:57;;5913:9;;;;;5933:13;5949:7;5900:4;:57::i;:::-;5976:9;;6004:13;;5976:43;;;;;:9;6004:13;;;5976:43;;;4125:74:302;5967:62:219;;5976:9;;;;;:19;;4098:18:302;;5976:43:219;3979:226:302;5967:62:219;6048:9;;6068:5;;6048:26;;;;;:9;6068:5;;;6048:26;;;4125:74:302;6039:39:219;;6048:9;;;;;:19;;4098:18:302;;6048:26:219;3979:226:302;6039:39:219;6135:13;;6089:61;;;;;6103:4;6089:61;;;8073:41:302;;;8130:18;;;8123:50;;;8189:18;;;8182:50;;;8248:18;;;8241:50;6089:13:219;6135;;;8307:19:302;;;8300:84;6089:13:219;;;;8045:19:302;;6089:61:219;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6201:9:219;;6186:5;;6165:55;;6213:6;8566:25:302;;6201:9:219;;;;;-1:-1:-1;6186:5:219;;;-1:-1:-1;6186:5:219;;6165:55;;8554:2:302;8539:18;6165:55:219;;;;;;;6270:5;;6261:15;;;;;:8;6270:5;;;6261:15;;;4125:74:302;6261:8:219;;;;4098:18:302;;6261:15:219;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6286:13:219;;6314:9;;6325:5;;6286:53;;;;;:13;6314:9;;;6286:53;;;6853:34:302;6325:5:219;;;6903:18:302;;;6896:43;6332:6:219;6955:18:302;;;6948:34;6286:13:219;;;-1:-1:-1;6286:27:219;;-1:-1:-1;6765:18:302;;6286:53:219;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6400:9:219;;6420:5;;6400:26;;;;;:9;6420:5;;;6400:26;;;4125:74:302;6391:44:219;;-1:-1:-1;6400:9:219;;;-1:-1:-1;6400:19:219;;4098:18:302;;6400:26:219;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;6428:6;6391:8;:44::i;:::-;6454:9;;6482:13;;6454:43;;;;;:9;6482:13;;;6454:43;;;4125:74:302;6445:61:219;;6454:9;;;;;:19;;4098:18:302;;6454:43:219;3979:226:302;1819:584:1;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:1;;;;;;;;1819:584::o;1869:528::-;1941:17;2997:42;2985:55;3066:16;1980:374;;2196:43;;;1671:64;2196:43;;;4873:74:302;;;2221:17:1;4963:18:302;;;4956:34;2196:43:1;;;;;;;;;4846:18:302;;;2196:43:1;;;-1:-1:-1;;1671:64:1;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;;;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:1:o;5414:230:219:-;5497:9;;5517:13;;5484:57;;5497:9;;;;;5517:13;5533:7;5484:4;:57::i;:::-;5551:31;;;;;6419:2:302;5551:31:219;;;6401:21:302;6458:2;6438:18;;;6431:30;6497:14;6477:18;;;6470:42;5551:15:219;;;;6529:18:302;;5551:31:219;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;5592:13:219;;5620:9;;5631:5;;5592:45;;;;;:13;5620:9;;;5592:45;;;10340:34:302;5631:5:219;;;10390:18:302;;;10383:43;5592:13:219;;;-1:-1:-1;5592:27:219;;-1:-1:-1;10252:18:302;;5592:45:219;10085:347:302;2386:756:219;2501:13;;2484:43;;2501:13;;2493:30;2501:13;2484:8;:43::i;:::-;2628:13;;2612:40;;;;;:7;2628:13;;;2612:40;;;4873:74:302;2644:7:219;4963:18:302;;;4956:34;2612:7:219;;;;4846:18:302;;2612:40:219;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2679:13:219;;2662:49;;-1:-1:-1;2679:13:219;;2671:30;;-1:-1:-1;2703:7:219;2662:8;:49::i;:::-;2739:5;;2722:41;;2739:5;;2731:22;2755:7;2722:8;:41::i;:::-;2820:13;;2774:61;;;;;2788:4;2774:61;;;8073:41:302;;;8130:18;;;8123:50;;;8189:18;;;8182:50;;;8248:18;;;8241:50;2774:13:219;2820;;;8307:19:302;;;8300:84;2774:13:219;;;;8045:19:302;;2774:61:219;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2869:5:219;;2850:34;;2876:7;8566:25:302;;2869:5:219;;;;;-1:-1:-1;2869:5:219;;-1:-1:-1;2850:34:219;;8554:2:302;8539:18;2850:34:219;;;;;;;2932:5;;2923:15;;;;;:8;2932:5;;;2923:15;;;4125:74:302;2923:8:219;;;;4098:18:302;;2923:15:219;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2948:13:219;;2982:5;;2948:41;;;;;:13;2982:5;;;2948:41;;;4125:74:302;2948:13:219;;;-1:-1:-1;2948:25:219;;-1:-1:-1;4098:18:302;;2948:41:219;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3058:13:219;;3041:43;;-1:-1:-1;3058:13:219;;3050:30;;-1:-1:-1;3058:13:219;3041:8;:43::i;:::-;3111:5;;3094:41;;3111:5;;3103:22;3127:7;3094:8;:41::i;2013:142:8:-;2062:35;2130:18;2109:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2013:142;:::o;1748:519:219:-;1871:13;;1854:43;;1871:13;;1863:30;1871:13;1854:8;:43::i;:::-;1954:13;;1908:61;;;;;1922:4;1908:61;;;8073:41:302;;;8130:18;;;8123:50;;;8189:18;;;8182:50;;;8248:18;;;8241:50;1908:13:219;1954;;;8307:19:302;;;8300:84;1908:13:219;;;;8045:19:302;;1908:61:219;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1996:5:219;;1984:23;;2003:3;8566:25:302;;1996:5:219;;;;;-1:-1:-1;1984:23:219;;-1:-1:-1;8554:2:302;8539:18;1984:23:219;;;;;;;2048:5;;2039:15;;;;;:8;2048:5;;;2039:15;;;4125:74:302;2039:8:219;;;;4098:18:302;;2039:15:219;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2090:13:219;;2082:48;;2065:12;;-1:-1:-1;2090:13:219;;;;;-1:-1:-1;2118:3:219;;2065:12;2082:48;2065:12;2082:48;2118:3;2090:13;2082:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2064:66;;;2186:19;2197:7;2186:10;:19::i;:::-;2232:13;;2215:45;;2232:13;;2224:30;2256:3;2215:8;:45::i;:::-;1790:477;1748:519::o;22052:117:6:-;22134:28;22139:5;22146:2;22150:4;22156:5;22134:4;:28::i;:::-;22052:117;;;:::o;5209:262:1:-;5271:1;5266;:6;5262:203;;5293:41;;;;;13170:2:302;13152:21;;;13209:2;13189:18;;;13182:30;13248:34;13243:2;13228:18;;13221:62;13319:4;13314:2;13299:18;;13292:32;13356:3;13341:19;;12968:398;5293:41:1;;;;;;;;5353:31;5382:1;5353:31;;;;;;:::i;:::-;;;;;;;;5403;5432:1;5403:31;;;;;;:::i;:::-;;;;;;;;5448:6;:4;:6::i;:::-;5209:262;;:::o;3622:277::-;3690:1;3685:6;;:1;:6;;;3681:212;;3712:44;;;;;14607:2:302;14589:21;;;14646:2;14626:18;;;14619:30;14685:34;14680:2;14665:18;;14658:62;14756:7;14751:2;14736:18;;14729:35;14796:3;14781:19;;14405:401;3712:44:1;;;;;;;;3775:34;3807:1;3775:34;;;;;;:::i;:::-;;;;;;;;3828;3860:1;3828:34;;;;;;:::i;3262:157::-;3322:9;3317:96;;3352:30;;;;;15817:2:302;15799:21;;;15856:2;15836:18;;;15829:30;15895:25;15890:2;15875:18;;15868:53;15953:2;15938:18;;15615:347;3352:30:1;;;;;;;;3396:6;:4;:6::i;22448:837:6:-;22618:38;;;22601:16;4143:55:302;;;22618:38:6;;;;4125:74:302;;;;22618:38:6;;;;;;;;;;4098:18:302;;;;22618:38:6;;;;;;;;;;;;;22601:56;;22577:20;;22601:16;;;:56;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22574:83;;;22667:15;22696:7;22685:30;;;;;;;;;;;;:::i;:::-;22667:48;-1:-1:-1;22752:71:6;22818:4;22752:51;22800:2;22752:38;;:22;:8;22768:5;22752:15;:22::i;:::-;:26;;:38::i;:::-;:47;;:51::i;:::-;:65;;:71::i;:::-;22869:6;22865:414;;;22938:34;;;;;;;;;;;;;;;;;;;;;;22921:52;;22894:23;;22921:16;;;;:52;;22938:34;22921:52;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22891:82;;;22987:14;23015:10;23004:33;;;;;;;;;;;;:::i;:::-;22987:50;;23062:7;23055:4;:14;23051:144;;;23100:14;23110:4;23100:7;:14;:::i;:::-;23089:26;;;;:::i;:::-;;;23051:144;;;23165:14;23172:7;23165:4;:14;:::i;:::-;23154:26;;;;:::i;:::-;;;23051:144;23208:60;23261:6;23208:38;;:22;:8;23224:5;23208:15;:22::i;:60::-;22877:402;;22865:414;22533:752;;22448:837;;;;:::o;2409:432:1:-;2997:42;2985:55;3066:16;2452:359;;2652:67;;;1671:64;2652:67;;;16621:74:302;;;2677:17:1;16711:18:302;;;16704:34;;;;2712:4:1;16754:18:302;;;16747:34;2489:11:1;;1671:64;2586:43;;16594:18:302;;2652:67:1;;;;;;;;;;;;;;2541:196;;;2652:67;2541:196;;:::i;:::-;;;;;;;;;;;;;;;2506:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2452:359:1;2820:7;:14;;;;;;;;2409:432::o;7700:156:11:-;4573:12;;;:22;;;;;;;;;;-1:-1:-1;4573:12:11;7813:36;7806:43;7700:156;-1:-1:-1;;;7700:156:11:o;7862:143::-;4728:9;;;:16;;;;;;;;;;;-1:-1:-1;4728:9:11;7968:30;4629:143;8167:152;5044:10;;;:47;;;;;;;8241:18;5044:47;;;;;;5068:21;;;5044:47;;;8302:4;8278:34;4940:179;8943:120;9023:33;9037:4;9051:3;9391:12;;;;9427:9;;;;9468:11;;;;9512:10;;;9489:33;;;;;;;;;;;;;;;;;;;9391:12;;;;;9427:9;;;;;;9377:11;;9489:33;;9512:10;;9489:33;;9512:10;9489:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9533:17;9570:4;9576:12;9584:3;9576:7;:12::i;:::-;9553:36;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;9604:15;;;;;;;:10;;;9553:36;9604:15;;;;;;:21;;;;;;;;;;9553:36;;-1:-1:-1;9604:21:11;;:15;;9636:34;;9653:3;;9658:11;;9636:34;;:::i;:::-;;;;;;;;;;;;;;9626:45;;9636:34;9626:45;;;;9604:68;;;;;;;;;;-1:-1:-1;9604:68:11;;;;9599:110;;9688:10;9693:4;9688;:10::i;:::-;;9599:110;9741:15;;;9718:12;9741:15;;;;;;;;;;;:21;;;;;;;;;;9773:34;;9741:21;;9718:12;;9773:34;;9790:3;;9795:11;;9773:34;;:::i;:::-;;;;;;;;;;;;;9763:45;;;;;;9741:68;;;;;;;;;;;;9733:77;;9718:92;;9821:12;9860:17;9881:3;:14;;9896:4;9881:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9857:44:11;-1:-1:-1;9922:38:11;;-1:-1:-1;9857:44:11;9943:16;9948:11;9943:2;:16;:::i;:::-;9922:14;:38::i;:::-;9995:18;;;;;4903:42:302;4891:55;;9995:18:11;;;4873:74:302;4963:18;;;4956:34;;;9915:45:11;;-1:-1:-1;9980:12:11;;-1:-1:-1;9995:7:11;;;;4846:18:302;;9995::11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9980:33;;10036:4;10028;:12;10024:218;;10056:175;;;;;18031:2:302;10056:175:11;;;18013:21:302;18070:3;18050:18;;;18043:31;18110:34;18090:18;;;18083:62;18181:34;18161:18;;;18154:62;18253:34;18232:19;;;18225:63;18325:17;18304:19;;;18297:46;18360:19;;10056:175:11;;;;;;;;;10251:24;;;;;16651:42:302;16639:55;;10251:24:11;;;16621:74:302;16711:18;;;16704:34;;;16754:18;;;16747:34;;;10251:8:11;;;;16594:18:302;;10251:24:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;10292:12:11;;;10285:19;;;;;;-1:-1:-1;10321:9:11;;;10314:16;;;;;;10340:17;-1:-1:-1;10347:10:11;;10292:12;10340:17;:::i;:::-;10374:4;:11;;10367:18;;;9367:1025;;;;;;;;9297:1095;;:::o;11471:393::-;11530:12;11554:19;11586:1;:8;11597:2;11586:13;;;;:::i;:::-;11576:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11576:24:11;;11554:46;;11615:9;11610:224;11634:1;:8;11630:1;:12;11610:224;;;11663:9;11675:1;11677;11675:4;;;;;;;;:::i;:::-;;;;;;;11663:16;;11808:1;11802;11798:2;11794:10;11790:2;11786:19;11778:6;11774:32;11767:43;11749:75;11644:3;;;;;:::i;:::-;;;;11610:224;;;-1:-1:-1;11851:6:11;11471:393;-1:-1:-1;;11471:393:11:o;7579:115::-;7636:7;7662:25;7682:4;7662:19;:25::i;:::-;7655:32;7579:115;-1:-1:-1;;7579:115:11:o;11110:304::-;11188:7;11207:11;11229;11254:2;11243:1;:8;:13;:29;;11264:1;:8;11243:29;;;11259:2;11243:29;11229:43;;11287:9;11282:106;11306:3;11302:1;:7;11282:106;;;11371:5;:1;11375;11371:5;:::i;:::-;11345:1;11347:10;11356:1;11347:6;:10;:::i;:::-;11345:13;;;;;;;;:::i;:::-;;;;;;;11337:40;;11330:47;;;;;11311:3;;;;:::i;:::-;;;;11282:106;;;-1:-1:-1;11404:3:11;;11110:304;-1:-1:-1;;;;11110:304:11:o;1264:3197::-;1354:12;;;;1390:9;;;;1431:11;;;;1475:10;;;1452:33;;;;;;;;;;;;;;;;;;;1321:7;;1354:12;;;1390:9;;;1431:11;1321:7;;1452:33;;1475:10;;1452:33;;;1475:10;1452:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1536:15:11;;;;;;;:10;;;:15;;;;;;;;:21;;;;;;;;;;1568:34;;1452:33;;-1:-1:-1;1536:21:11;:15;;-1:-1:-1;1568:34:11;;-1:-1:-1;1452:33:11;;1590:11;;1568:34;;:::i;:::-;;;;;;;;;;;;;;1558:45;;1568:34;1558:45;;;;1536:68;;;;;;;;;;-1:-1:-1;1536:68:11;;;;1532:174;;;1627:15;;;:10;:15;;;;;;;;;;;:21;;;;;;;;;;1659:34;;1627:21;;:10;1659:34;;1676:3;;1681:11;;1659:34;;:::i;:::-;;;;;;;;;;;;;1649:45;;;;;;1627:68;;;;;;;;;;;;1620:75;;;;;;1264:3197;;;:::o;1532:174::-;1715:17;1752:4;1758:12;1766:3;1758:7;:12::i;:::-;1735:36;;;;;;;;;:::i;:::-;;;;;;;;;;;;;1715:56;;588:28;580:37;;1781:9;;;:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1802:12;1841:17;1862:3;:14;;1877:4;1862:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;1838:44:11;-1:-1:-1;1903:38:11;;-1:-1:-1;1838:44:11;1924:16;1929:11;1924:2;:16;:::i;:::-;1903:14;:38::i;:::-;1990:25;;;;;4155:42:302;4143:55;;1990:25:11;;;4125:74:302;1896:45:11;;-1:-1:-1;1963:22:11;;-1:-1:-1;1990:11:11;;;;4098:18:302;;1990:25:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1962:53;;;2029:5;:12;2045:1;2029:17;2025:2060;;2062:12;588:28;580:37;;2077:7;;;2085:3;2090:5;2096:1;2090:8;;;;;;;;:::i;:::-;;;;;;;2077:22;;;;;;;;;;;;;;;4903:42:302;4891:55;;;;4873:74;;4978:2;4963:18;;4956:34;4861:2;4846:18;;4673:323;2077:22:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2062:37;-1:-1:-1;2062:37:11;2113:106;;2160:44;2181:3;2194:5;2200:1;2194:8;;;;;;;;:::i;:::-;;;;;;;;;;;;2160:44;;;4903:42:302;4891:55;;;4873:74;;4963:18;;;4956:34;4846:18;2160:44:11;;;;;;;2113:106;2244:4;2236;:12;2232:238;;2268:187;;;;;18031:2:302;2268:187:11;;;18013:21:302;18070:3;18050:18;;;18043:31;18110:34;18090:18;;;18083:62;18181:34;18161:18;;;18154:62;18253:34;18232:19;;;18225:63;18325:17;18304:19;;;18297:46;18360:19;;2268:187:11;17829:556:302;2268:187:11;2488:86;2498:3;2503:4;2536:3;2541:11;2519:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;2509:45;;;;;;2564:5;2570:1;2564:8;;;;;;;;:::i;:::-;;;;;;;;;;;;2488:86;;;21111:42:302;21099:55;;;21081:74;;21203:66;21191:79;;;21171:18;;;21164:107;;;;21287:18;;;21280:34;21345:2;21330:18;;21323:34;21068:3;21053:19;2488:86:11;;;;;;;2667:5;2673:1;2667:8;;;;;;;;:::i;:::-;;;;;;;;;;;;2588:15;;;2659:17;2588:15;;;;;;;;;;:21;;;;;;;;;;2620:34;;2667:8;;2588:21;;2620:34;;2637:3;;2642:11;;2620:34;;:::i;:::-;;;;;;;;;;;;;;2610:45;;2620:34;2610:45;;;;2588:68;;;;;;;;;;;;-1:-1:-1;2588:68:11;;;:88;;;;2690:15;;;;;2761:4;2690:10;;;:15;;;;;:21;;;;;;;;;;2722:34;;2761:4;;-1:-1:-1;2722:34:11;;2739:3;;2744:11;;2722:34;;:::i;:::-;;;;;;;;;;;;;;2712:45;;2722:34;2712:45;;;;2690:68;;;;;;;;;;-1:-1:-1;2690:68:11;:75;;;;;;;;;;;;;-1:-1:-1;2025:2060:11;;;2801:1;2786:5;:12;:16;2782:1303;;;2823:9;2818:1152;2842:5;:12;2838:1;:16;2818:1152;;;2879:12;588:28;580:37;;2894:7;;;2902:3;2907:5;2913:1;2907:8;;;;;;;;:::i;:::-;;;;;;;2894:22;;;;;;;;;;;;;;;4903:42:302;4891:55;;;;4873:74;;4978:2;4963:18;;4956:34;4861:2;4846:18;;4673:323;2894:22:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2879:37;-1:-1:-1;2879:37:11;2934:114;;2985:44;3006:3;3019:5;3025:1;3019:8;;;;;;;;:::i;:::-;;;;;;;;;;;;2985:44;;;4903:42:302;4891:55;;;4873:74;;4963:18;;;4956:34;4846:18;2985:44:11;;;;;;;2934:114;588:28;580:37;;3090:8;;;3099:3;3104:5;3110:1;3104:8;;;;;;;;:::i;:::-;;;;;;;;;;;3090:43;;;;;;;;;;16651:42:302;16639:55;;;3090:43:11;;;16621:74:302;16711:18;;;16704:34;3114:18:11;16754::302;;;16747:34;16594:18;;3090:43:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3151:12;3181:17;3256:3;:14;;3271:4;3256:20;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;3238:38:11;;-1:-1:-1;3238:38:11;-1:-1:-1;3305:38:11;3238;3326:16;3331:11;3326:2;:16;:::i;3305:38::-;3298:45;;3384:7;:37;;;;;3403:18;3395:4;:26;3384:37;3380:529;;;3519:86;3529:3;3534:4;3567:3;3572:11;3550:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3540:45;;;;;;3595:5;3601:1;3595:8;;;;;;;;:::i;:::-;;;;;;;;;;;;3519:86;;;21111:42:302;21099:55;;;21081:74;;21203:66;21191:79;;;21171:18;;;21164:107;;;;21287:18;;;21280:34;21345:2;21330:18;;21323:34;21068:3;21053:19;3519:86:11;;;;;;;3706:5;3712:1;3706:8;;;;;;;;:::i;:::-;;;;;;;;;;;;3627:15;;;3698:17;3627:15;;;;;;;;;;:21;;;;;;;;;;3659:34;;3706:8;;3627:21;;3659:34;;3676:3;;3681:11;;3659:34;;:::i;:::-;;;;;;;;;;;;;3649:45;;;;;;3627:68;;;;;;;;;;;:88;;;;3808:4;3737;:10;;:15;3748:3;3737:15;;;;;;;;;;;;;;;:21;3753:4;3737:21;;;;;;;;;;;;;;;;;:68;3786:3;3791:11;3769:34;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3759:45;;;;;;3737:68;;;;;;;;;;;;:75;;;;;;;;;;;;;;;;;;588:28;580:37;;3834:8;;;3843:3;3848:5;3854:1;3848:8;;;;;;;;:::i;:::-;;;;;;;;;;;3834:29;;;;;;;;;;16651:42:302;16639:55;;;3834:29:11;;;16621:74:302;16711:18;;;16704:34;16754:18;;;16747:34;;;16594:18;;3834:29:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3885:5;;;;;3380:529;588:28;580:37;;3926:8;;;3935:3;3940:5;3946:1;3940:8;;;;;;;;:::i;:::-;;;;;;;;;;;3926:29;;;;;;;;;;16651:42:302;16639:55;;;3926:29:11;;;16621:74:302;16711:18;;;16704:34;16754:18;;;16747:34;;;16594:18;;3926:29:11;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2861:1109;;;2856:3;;;;;:::i;:::-;;;;2818:1152;;;;2782:1303;;;4000:74;;;;;;21570:2:302;4000:74:11;;;21552:21:302;21589:18;;;21582:30;;;;21648:34;21628:18;;;21621:62;21719:34;21699:18;;;21692:62;21771:19;;4000:74:11;21368:428:302;2782:1303:11;4116:15;;;;;;;:10;;;:15;;;;;;;;:21;;;;;;;;;;4148:34;;4116:21;;:15;4148:34;;4165:3;;4170:11;;4148:34;;:::i;:::-;;;;;;;;;;;;;;4138:45;;4148:34;4138:45;;;;4116:68;;;;;;;;;;-1:-1:-1;4116:68:11;;;;4095:162;;;;;;;22003:2:302;4095:162:11;;;21985:21:302;22042:2;22022:18;;;22015:30;22081:34;22061:18;;;22054:62;22152:17;22132:18;;;22125:45;22187:19;;4095:162:11;21801:411:302;4095:162:11;4275:12;;;4268:19;;;;;;4304:9;;;4297:16;;;;;;4323:17;-1:-1:-1;4330:10:11;;4275:12;4323:17;:::i;:::-;4350:18;4357:11;;;4350:18;;;4386:15;;;;;;;;;;;;;:21;;;;;;;;;;4418:34;;4386:21;;4350:18;4418:34;;4435:3;;4440:11;;4418:34;;:::i;:::-;;;;;;;;;;;;;4408:45;;;;;;4386:68;;;;;;;;;;;;4379:75;;;;;;;;;1264:3197;;;:::o;6942:393::-;7001:12;7025:19;7057:1;:8;7068:2;7057:13;;;;:::i;:::-;7047:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7047:24:11;;7025:46;;7086:9;7081:224;7105:1;:8;7101:1;:12;7081:224;;;7134:9;7146:1;7148;7146:4;;;;;;;;:::i;:::-;;;;;;;7134:16;;7279:1;7273;7269:2;7265:10;7261:2;7257:19;7249:6;7245:32;7238:43;7220:75;7115:3;;;;;:::i;:::-;;;;7081:224;;6632:304;6710:7;6729:11;6751;6776:2;6765:1;:8;:13;:29;;6786:1;:8;6765:29;;;6781:2;6765:29;6751:43;;6809:9;6804:106;6828:3;6824:1;:7;6804:106;;;6893:5;:1;6897;6893:5;:::i;:::-;6867:1;6869:10;6878:1;6869:6;:10;:::i;:::-;6867:13;;;;;;;;:::i;:::-;;;;;;;6859:40;;6852:47;;;;;6833:3;;;;:::i;:::-;;;;6804:106;;-1:-1:-1;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:681:302:-;185:2;237:21;;;307:13;;210:18;;;329:22;;;156:4;;185:2;408:15;;;;382:2;367:18;;;156:4;451:218;465:6;462:1;459:13;451:218;;;530:13;;545:42;526:62;514:75;;644:15;;;;609:12;;;;487:1;480:9;451:218;;;-1:-1:-1;686:3:302;;14:681;-1:-1:-1;;;;;;14:681:302:o;700:1695::-;902:4;931:2;971;960:9;956:18;1001:2;990:9;983:21;1024:6;1059;1053:13;1090:6;1082;1075:22;1116:2;1106:12;;1149:2;1138:9;1134:18;1127:25;;1211:2;1201:6;1198:1;1194:14;1183:9;1179:30;1175:39;1249:2;1241:6;1237:15;1270:1;1291;1301:1065;1317:6;1312:3;1309:15;1301:1065;;;1386:22;;;1410:66;1382:95;1370:108;;1501:13;;1588:9;;1599:42;1584:58;1569:74;;1682:11;;1676:18;1714:15;;;1707:27;;;1795:19;;1541:15;;;1827:24;;;1917:21;;;;1962:1;;1885:2;1873:15;;;1976:282;1992:8;1987:3;1984:17;1976:282;;;2073:15;;2090:66;2069:88;2055:103;;2227:17;;;;2020:1;2011:11;;;;;2184:14;;;;1976:282;;;-1:-1:-1;2344:12:302;;;;2281:5;-1:-1:-1;;;2309:15:302;;;;1343:1;1334:11;1301:1065;;;-1:-1:-1;2383:6:302;;700:1695;-1:-1:-1;;;;;;;;;700:1695:302:o;2400:258::-;2472:1;2482:113;2496:6;2493:1;2490:13;2482:113;;;2572:11;;;2566:18;2553:11;;;2546:39;2518:2;2511:10;2482:113;;;2613:6;2610:1;2607:13;2604:48;;;-1:-1:-1;;2648:1:302;2630:16;;2623:27;2400:258::o;2663:1119::-;2825:4;2854:2;2894;2883:9;2879:18;2924:2;2913:9;2906:21;2947:6;2982;2976:13;3013:6;3005;2998:22;3051:2;3040:9;3036:18;3029:25;;3113:2;3103:6;3100:1;3096:14;3085:9;3081:30;3077:39;3063:53;;3151:2;3143:6;3139:15;3172:1;3182:571;3196:6;3193:1;3190:13;3182:571;;;3285:66;3273:9;3265:6;3261:22;3257:95;3252:3;3245:108;3382:6;3376:13;3424:2;3418:9;3455:8;3447:6;3440:24;3477:61;3529:8;3524:2;3516:6;3512:15;3507:2;3503;3499:11;3477:61;:::i;:::-;3595:2;3581:17;3600:66;3577:90;3565:103;;;;3561:112;;;-1:-1:-1;3731:12:302;;;;3696:15;;;;3218:1;3211:9;3182:571;;;-1:-1:-1;3770:6:302;;2663:1119;-1:-1:-1;;;;;;;2663:1119:302:o;9383:313::-;9453:6;9506:2;9494:9;9485:7;9481:23;9477:32;9474:52;;;9522:1;9519;9512:12;9474:52;9554:9;9548:16;9604:42;9597:5;9593:54;9586:5;9583:65;9573:93;;9662:1;9659;9652:12;9701:184;9771:6;9824:2;9812:9;9803:7;9799:23;9795:32;9792:52;;;9840:1;9837;9830:12;9792:52;-1:-1:-1;9863:16:302;;9701:184;-1:-1:-1;9701:184:302:o;10437:437::-;10516:1;10512:12;;;;10559;;;10580:61;;10634:4;10626:6;10622:17;10612:27;;10580:61;10687:2;10679:6;10676:14;10656:18;10653:38;10650:218;;10724:77;10721:1;10714:88;10825:4;10822:1;10815:15;10853:4;10850:1;10843:15;10650:218;;10437:437;;;:::o;11375:417::-;11572:66;11564:6;11560:79;11555:3;11548:92;11530:3;11669:6;11663:13;11685:61;11739:6;11735:1;11730:3;11726:11;11719:4;11711:6;11707:17;11685:61;:::i;:::-;11766:16;;;;11784:1;11762:24;;11375:417;-1:-1:-1;;;11375:417:302:o;11797:274::-;11926:3;11964:6;11958:13;11980:53;12026:6;12021:3;12014:4;12006:6;12002:17;11980:53;:::i;:::-;12049:16;;;;;11797:274;-1:-1:-1;;11797:274:302:o;12076:277::-;12143:6;12196:2;12184:9;12175:7;12171:23;12167:32;12164:52;;;12212:1;12209;12202:12;12164:52;12244:9;12238:16;12297:5;12290:13;12283:21;12276:5;12273:32;12263:60;;12319:1;12316;12309:12;13535:348;13765:2;13754:9;13747:21;13728:4;13785:49;13830:2;13819:9;13815:18;13448:2;13436:15;;13483:12;13476:4;13467:14;;13460:36;13521:2;13512:12;;13371:159;13785:49;13777:57;;13870:6;13865:2;13854:9;13850:18;13843:34;13535:348;;;;:::o;14052:::-;14282:2;14271:9;14264:21;14245:4;14302:49;14347:2;14336:9;14332:18;13965:2;13953:15;;14000:12;13993:4;13984:14;;13977:36;14038:2;14029:12;;13888:159;14811:397;15041:2;15030:9;15023:21;15004:4;15061:49;15106:2;15095:9;15091:18;13448:2;13436:15;;13483:12;13476:4;13467:14;;13460:36;13521:2;13512:12;;13371:159;15061:49;15053:57;;15158:42;15150:6;15146:55;15141:2;15130:9;15126:18;15119:83;14811:397;;;;:::o;15213:::-;15443:2;15432:9;15425:21;15406:4;15463:49;15508:2;15497:9;15493:18;13965:2;13953:15;;14000:12;13993:4;13984:14;;13977:36;14038:2;14029:12;;13888:159;15967:184;16019:77;16016:1;16009:88;16116:4;16113:1;16106:15;16140:4;16137:1;16130:15;16156:125;16196:4;16224:1;16221;16218:8;16215:34;;;16229:18;;:::i;:::-;-1:-1:-1;16266:9:302;;16156:125::o;16286:128::-;16326:3;16357:1;16353:6;16350:1;16347:13;16344:39;;;16363:18;;:::i;:::-;-1:-1:-1;16399:9:302;;16286:128::o;16792:610::-;17038:13;;16981:3;;17012;;17091:4;17118:15;;;16981:3;17161:175;17175:6;17172:1;17169:13;17161:175;;;17238:13;;17224:28;;17274:14;;;;17311:15;;;;17197:1;17190:9;17161:175;;;-1:-1:-1;;17345:21:302;;;-1:-1:-1;17382:14:302;;;;;-1:-1:-1;;;16792:610:302:o;17407:228::-;17447:7;17573:1;17505:66;17501:74;17498:1;17495:81;17490:1;17483:9;17476:17;17472:105;17469:131;;;17580:18;;:::i;:::-;-1:-1:-1;17620:9:302;;17407:228::o;18390:184::-;18442:77;18439:1;18432:88;18539:4;18536:1;18529:15;18563:4;18560:1;18553:15;18579:184;18631:77;18628:1;18621:88;18728:4;18725:1;18718:15;18752:4;18749:1;18742:15;18768:195;18807:3;18838:66;18831:5;18828:77;18825:103;;18908:18;;:::i;:::-;-1:-1:-1;18955:1:302;18944:13;;18768:195::o;18968:958::-;19033:5;19086:3;19079:4;19071:6;19067:17;19063:27;19053:55;;19104:1;19101;19094:12;19053:55;19133:6;19127:13;19159:4;19182:18;19219:2;19215;19212:10;19209:36;;;19225:18;;:::i;:::-;19271:2;19268:1;19264:10;19303:2;19297:9;19362:66;19357:2;19353;19349:11;19345:84;19337:6;19333:97;19480:6;19468:10;19465:22;19460:2;19448:10;19445:18;19442:46;19439:72;;;19491:18;;:::i;:::-;19527:2;19520:22;19577:18;;;19653:15;;;19649:24;;;19611:15;;;;-1:-1:-1;19685:15:302;;;19682:35;;;19713:1;19710;19703:12;19682:35;19749:2;19741:6;19737:15;19726:26;;19761:135;19777:6;19772:3;19769:15;19761:135;;;19843:10;;19831:23;;19874:12;;;;19794;;;;19761:135;;;19914:6;18968:958;-1:-1:-1;;;;;;;18968:958:302:o;19931:614::-;20060:6;20068;20121:2;20109:9;20100:7;20096:23;20092:32;20089:52;;;20137:1;20134;20127:12;20089:52;20170:9;20164:16;20199:18;20240:2;20232:6;20229:14;20226:34;;;20256:1;20253;20246:12;20226:34;20279:72;20343:7;20334:6;20323:9;20319:22;20279:72;:::i;:::-;20269:82;;20397:2;20386:9;20382:18;20376:25;20360:41;;20426:2;20416:8;20413:16;20410:36;;;20442:1;20439;20432:12;20410:36;;20465:74;20531:7;20520:8;20509:9;20505:24;20465:74;:::i;:::-;20455:84;;;19931:614;;;;;:::o",
    "linkReferences": {},
    "immutableReferences": {
      "84306": [
        {
          "start": 1699,
          "length": 32
        },
        {
          "start": 3117,
          "length": 32
        },
        {
          "start": 3479,
          "length": 32
        },
        {
          "start": 4980,
          "length": 32
        },
        {
          "start": 5393,
          "length": 32
        },
        {
          "start": 5539,
          "length": 32
        },
        {
          "start": 5908,
          "length": 32
        },
        {
          "start": 6258,
          "length": 32
        },
        {
          "start": 6404,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "test_constructor_succeeds()": "80aee254",
    "test_receive_succeeds()": "fe43c9dd",
    "test_withdrawERC20_succeeds()": "7c440706",
    "test_withdrawERC20_unauthorized_reverts()": "e0697ac8",
    "test_withdrawERC20withAmount_succeeds()": "b9daeb5a",
    "test_withdrawERC20withAmount_unauthorized_reverts()": "2148ab09",
    "test_withdrawERC721_succeeds()": "5d0c6ddd",
    "test_withdrawERC721_unauthorized_reverts()": "4d284b27",
    "test_withdrawETH_succeeds()": "e132a183",
    "test_withdrawETH_unauthorized_reverts()": "5a30a6ea",
    "test_withdrawETHwithAmount_succeeds()": "4f95eaa0",
    "test_withdrawETHwithAmount_unauthorized_reverts()": "83f79ac9"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ReceivedETH\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrewERC20\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"WithdrewERC721\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrewETH\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_constructor_succeeds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_receive_succeeds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_withdrawERC20_succeeds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_withdrawERC20_unauthorized_reverts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_withdrawERC20withAmount_succeeds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_withdrawERC20withAmount_unauthorized_reverts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_withdrawERC721_succeeds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_withdrawERC721_unauthorized_reverts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_withdrawETH_succeeds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_withdrawETH_unauthorized_reverts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_withdrawETHwithAmount_succeeds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_withdrawETHwithAmount_unauthorized_reverts\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"test_constructor_succeeds()\":{\"notice\":\"Tests if the owner was set correctly during deploy.\"},\"test_receive_succeeds()\":{\"notice\":\"Tests that receive works as inteded.\"},\"test_withdrawERC20_succeeds()\":{\"notice\":\"Test withdrawERC20 with token and address arguments, from owner.\"},\"test_withdrawERC20_unauthorized_reverts()\":{\"notice\":\"Same as withdrawERC20 but call from non-owner.\"},\"test_withdrawERC20withAmount_succeeds()\":{\"notice\":\"Similar as withdrawERC20 but specify amount to withdraw.\"},\"test_withdrawERC20withAmount_unauthorized_reverts()\":{\"notice\":\"Similar as withdrawERC20 with amount but call from non-owner.\"},\"test_withdrawERC721_succeeds()\":{\"notice\":\"Test withdrawERC721 from owner.\"},\"test_withdrawERC721_unauthorized_reverts()\":{\"notice\":\"Similar as withdrawERC721 but call from non-owner.\"},\"test_withdrawETH_succeeds()\":{\"notice\":\"Tests withdrawETH function with only an address         as an argument, called by owner.\"},\"test_withdrawETH_unauthorized_reverts()\":{\"notice\":\"withdrawETH should fail if called by non-owner.\"},\"test_withdrawETHwithAmount_succeeds()\":{\"notice\":\"Similar as withdrawETH but specify amount to withdraw.\"},\"test_withdrawETHwithAmount_unauthorized_reverts()\":{\"notice\":\"withdrawETH with address and amount as arguments called by non-owner.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/AssetReceiver.t.sol\":\"AssetReceiverTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@cwia/=lib/clones-with-immutable-args/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/solmate/\",\":clones-with-immutable-args/=lib/clones-with-immutable-args/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240\",\"dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b\",\"dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x9100bd38453711d5f5ae32d16b4aacef8d4e26abb3061fcc9920cd30cdb49315\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://114654e304083d3403510edd13d7df2223747337150ecf51dd36b441e50498f7\",\"dweb:/ipfs/QmQy6uvcVHyHzU2RbuvEo1hKiV7k81z21gR6DSj4DkCP8D\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xb58d624eb0922d4ab14856efb0ab558b0727ccfc28448c5779f1ab4d98cf3daf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1869fc58cb27a7b680428b79d0e0b6f45bd3c61fedb4b3f895e143fb899519d5\",\"dweb:/ipfs/QmcjECGVpQPjhL2bokDyQeGWdzM99qPFMhq5r7KqKLot7R\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477\",\"dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c\",\"dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5\",\"dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985\",\"dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x18ac6dcce9cdfe3bc754ce910b4b97e56963c49a92e50f57d055adb562416b86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6b29b4a814dc26c3722e994a792f4cc1be86e6b8c2b2adc352ed54fb326593d\",\"dweb:/ipfs/Qma8a7XELNmUepiitaLyxJXW66urnXsvCwx1bMLmRw2Fpn\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf\",\"dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xb5d4816a3f37977b1efa07b5e715daa917e96fd28dec1805c4189653db4ea33a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34338fa7f079f8d64f20d976f9bf908a710c8728f18c4b361b020b24fedfedf2\",\"dweb:/ipfs/QmYhwY1wi6vVLMUsJ32L3GiSR9HRaFhGL1Y3wRDjy41KXn\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c\",\"dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0xbf5daf926894541a40a64b43c3746aa1940c5a1b3b8d14a06465eea72a9b90cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbdea6be4e36fc5406e81560d8f3f073a61c5d3cb5889b7c896ff5981e2128eb\",\"dweb:/ipfs/QmPpkPNkLEjDf4RZYjiypj9BrNyaXrb2U4pE9aq7sTG9km\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/draft-EIP712Upgradeable.sol\":{\"keccak256\":\"0xaf5a96100f421d61693605349511e43221d3c2e47d4b3efa87af2b936e2567fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://371fd95bad4416766089d3e621dee1fd86fece2b266ad3f9443fefe567e24e94\",\"dweb:/ipfs/QmNciwwtGev3Q8uVhnoE5PQUSCDpMp6KtVjiDgnGdqLmWX\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e\",\"dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xdb7f5c28fc61cda0bd8ab60ce288e206b791643bcd3ba464a70cbec18895a2f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf52bdf22a33263f5ca6227a35faeac3b81e7d2c692fbcc6a079d488710c5900\",\"dweb:/ipfs/QmcmsjkP4yq3UhiJbvyzwufaY2EKh1zhHaRK8ATag2cpD2\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/SignatureChecker.sol\":{\"keccak256\":\"0xbb5c92a62f2a917ec08667ebc024d5f4172ae3594cd5f4eaa997485ed0440d81\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://392c009a19ece7831c9851d8f47fa8a1ee7ae81eeff01040a976cc110b0b9a3b\",\"dweb:/ipfs/QmbtmS8RRPVNghAu9qWieesPkyrabQSypVpgbyhfzzubCe\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/draft-EIP712.sol\":{\"keccak256\":\"0x6688fad58b9ec0286d40fa957152e575d5d8bd4c3aa80985efdb11b44f776ae7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc00ab7f133cdaafd212a5cc6a16c8d37319721105d130c8e5af0c4e8f170ba\",\"dweb:/ipfs/QmVmf6LVMfFiEkvKYLzSv3bGHzymEW93AcUuFrNUdY3NtT\"]},\"lib/solmate/src/auth/Owned.sol\":{\"keccak256\":\"0x7e91c80b0dd1a14a19cb9e661b99924043adab6d9d893bbfcf3a6a3dc23a6743\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://515890d9fc87d6762dae2354a3a0714a26c652f0ea5bb631122be1968ef8c0e9\",\"dweb:/ipfs/QmTRpQ7uoAR1vCACKJm14Ba3oKVLqcA9reTwbHAPxawVpM\"]},\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0x43aa1509bb753f053143530705d9c4eee415691d26a4779769bf028a74e6ac69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb440672ebad7d487c1600e406e140fd1ffc4bd7520c86b5709183ca2602da58\",\"dweb:/ipfs/QmNgZaBoAZwnwm4mTL1cUZnMtvt1iZnruMnfpJnDu6upuc\"]},\"lib/solmate/src/tokens/ERC721.sol\":{\"keccak256\":\"0xdac91feb466e74905737338d80cac5303eb7aedcbe76eda11c45eaa728451075\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe01292f5b4d2182859cc30a773f5e9d1a91d02bd8b40fbb73a591cd67896408\",\"dweb:/ipfs/QmTUKUuFJ4QZRD8ge6eTorfni9RKhBtPo1wFVm3GFSgLW8\"]},\"src/periphery/AssetReceiver.sol\":{\"keccak256\":\"0xbc5d4ccba1ed72f72f9809c35437e7b31f88ebefa0a7d0c7781b66edec157862\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2fd1ea62a73886ac3dea5500b23cee17bc6a66208e2bc2e94f566d34c6480f3\",\"dweb:/ipfs/QmaQXPLryUCVueDmiRimU28mSzgWLqgSxsQx2BF2U837na\"]},\"src/periphery/Transactor.sol\":{\"keccak256\":\"0x66d538c0c0ae7297a1f261777c50b06e841efb5e8a3b09cdde6cdde32dfa3b63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cab02028604b71a9acd1b6282cc867aec09b4e91fc64570c69d3484a0a7c12fe\",\"dweb:/ipfs/QmcxJ64nQde5XQY9b714NB6z6RnziNUhod12DgXDqNPcWe\"]},\"src/periphery/faucet/Faucet.sol\":{\"keccak256\":\"0x82331800d9a28e4e9ea46939fded26e5d76371c9eddfffacd630313a6f8ff5bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04490faba2d3b9a68c678536e12717339adb5c4d6947c3a2d0e881a98026f727\",\"dweb:/ipfs/Qmbi8x84Lo2Y3CE1Azjif1GifVqFYvuhEzEDc6jXrRMnrS\"]},\"src/periphery/faucet/authmodules/AdminFaucetAuthModule.sol\":{\"keccak256\":\"0x631d0642fd235744338a702d884db56a7d132d47def45059170b272b6c79677f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e7a14b64a30e738f9f582452e1380268a6415a91d976a9febabe1cfeddc51ca3\",\"dweb:/ipfs/QmWvT3aZk2Q76URxQdxZtwcQqhqDtRh6LrBNjXwMDNEjwa\"]},\"src/periphery/faucet/authmodules/IFaucetAuthModule.sol\":{\"keccak256\":\"0x1ae04232fda8aa0ae4fced4af75032bed7020576126cf04bd53ecb329673276d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a74059bfdfb5d091d7e3966e1e4157c20f97b4dc29b62a4a66e82d433fac850\",\"dweb:/ipfs/QmetdNihkTcus9YupsexJU7U3LSDM1EUAuVoNTH1Bebsjf\"]},\"src/periphery/op-nft/AttestationStation.sol\":{\"keccak256\":\"0xab54f28712653e8926b23c501975aee5d3368dbf436a14da6ddb9dbc792de2ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a6c5ad2becb79bc6bf3afaaca89dfda6d8f096d55184c0adce20efb3ff19d33\",\"dweb:/ipfs/QmP3qyEYnB195og1FdvW4su4KoBZZQ7UzC8V7CQMz7Ear9\"]},\"src/periphery/op-nft/OptimistInviter.sol\":{\"keccak256\":\"0x447dd2c65410e42a8ddfa0245bcf68ffc51b6c0988715c2978ea4ccde70b8d55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db15eaab1f5ff2314590e535edca99edcc4ebede0170034219228357cdf0c4c2\",\"dweb:/ipfs/QmUqoY781MTXgHx2VrUueRmZKTxuzCt1DVHjxPDFsgYMC2\"]},\"src/periphery/op-nft/libraries/OptimistConstants.sol\":{\"keccak256\":\"0x901c8a2a333a668ef2a6336a803dd06fea51d4128a38087af4565bff1ae6db8c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87e68615dea2494b1cd8f96d7ad97ccb9556d00539526b53a7ce5314570fc268\",\"dweb:/ipfs/QmZBNNrSVMKz4GDkRJyp5jjV6V4wGN7ySAhDd1pBvbJkS2\"]},\"src/universal/Semver.sol\":{\"keccak256\":\"0x9de68ce536aee1aa616b4bf88d7ccc335460e6edd0e7170bdbf94c4fe3d41c60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5909c0b049b03a2bc24816ecf15b0aaf18c04a963174e1eba7624321bef330d\",\"dweb:/ipfs/QmeqdutwZWHqQMXauNR6WY8PrUpfsTiWTQyanbnGM9QqzT\"]},\"test/AssetReceiver.t.sol\":{\"keccak256\":\"0x066cd9afb9ecd99f19a1e73bce6f44a92aeb7f1221bdbf1aad319a8034acfdf6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4868db4360837db48872b1af83c04a89f2f1c7f6a69ea99730513730a0c37558\",\"dweb:/ipfs/QmWmwv4kg8nSoR8C8yt4bsSVAPht3hVWKCj4Rv4oEs4Aqc\"]},\"test/Helpers.sol\":{\"keccak256\":\"0x022e89924ead94001a5c3d775a986baf574481b48e5fe0c35bdf60433115103d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b75d63ab2d869ab4ab5dedce511be2a5c7a91dc6a75da6a698a23f77d903e03f\",\"dweb:/ipfs/QmUu7Sf9mmbEYV7FaPYQc1JgtLfjLv1D4UaEMRfanbDFDd\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ReceivedETH",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "withdrawer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "asset",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "WithdrewERC20",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "withdrawer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "asset",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "WithdrewERC721",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "withdrawer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "WithdrewETH",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_constructor_succeeds"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_receive_succeeds"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_withdrawERC20_succeeds"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_withdrawERC20_unauthorized_reverts"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_withdrawERC20withAmount_succeeds"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_withdrawERC20withAmount_unauthorized_reverts"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_withdrawERC721_succeeds"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_withdrawERC721_unauthorized_reverts"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_withdrawETH_succeeds"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_withdrawETH_unauthorized_reverts"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_withdrawETHwithAmount_succeeds"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_withdrawETHwithAmount_unauthorized_reverts"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "test_constructor_succeeds()": {
            "notice": "Tests if the owner was set correctly during deploy."
          },
          "test_receive_succeeds()": {
            "notice": "Tests that receive works as inteded."
          },
          "test_withdrawERC20_succeeds()": {
            "notice": "Test withdrawERC20 with token and address arguments, from owner."
          },
          "test_withdrawERC20_unauthorized_reverts()": {
            "notice": "Same as withdrawERC20 but call from non-owner."
          },
          "test_withdrawERC20withAmount_succeeds()": {
            "notice": "Similar as withdrawERC20 but specify amount to withdraw."
          },
          "test_withdrawERC20withAmount_unauthorized_reverts()": {
            "notice": "Similar as withdrawERC20 with amount but call from non-owner."
          },
          "test_withdrawERC721_succeeds()": {
            "notice": "Test withdrawERC721 from owner."
          },
          "test_withdrawERC721_unauthorized_reverts()": {
            "notice": "Similar as withdrawERC721 but call from non-owner."
          },
          "test_withdrawETH_succeeds()": {
            "notice": "Tests withdrawETH function with only an address         as an argument, called by owner."
          },
          "test_withdrawETH_unauthorized_reverts()": {
            "notice": "withdrawETH should fail if called by non-owner."
          },
          "test_withdrawETHwithAmount_succeeds()": {
            "notice": "Similar as withdrawETH but specify amount to withdraw."
          },
          "test_withdrawETHwithAmount_unauthorized_reverts()": {
            "notice": "withdrawETH with address and amount as arguments called by non-owner."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@cwia/=lib/clones-with-immutable-args/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@rari-capital/solmate/=lib/solmate/",
        "clones-with-immutable-args/=lib/clones-with-immutable-args/src/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "safe-contracts/=lib/safe-contracts/contracts/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 999999
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "test/AssetReceiver.t.sol": "AssetReceiverTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b",
        "urls": [
          "bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240",
          "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c",
        "urls": [
          "bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224",
          "dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60",
        "urls": [
          "bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b",
          "dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x9100bd38453711d5f5ae32d16b4aacef8d4e26abb3061fcc9920cd30cdb49315",
        "urls": [
          "bzz-raw://114654e304083d3403510edd13d7df2223747337150ecf51dd36b441e50498f7",
          "dweb:/ipfs/QmQy6uvcVHyHzU2RbuvEo1hKiV7k81z21gR6DSj4DkCP8D"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0xb58d624eb0922d4ab14856efb0ab558b0727ccfc28448c5779f1ab4d98cf3daf",
        "urls": [
          "bzz-raw://1869fc58cb27a7b680428b79d0e0b6f45bd3c61fedb4b3f895e143fb899519d5",
          "dweb:/ipfs/QmcjECGVpQPjhL2bokDyQeGWdzM99qPFMhq5r7KqKLot7R"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c",
        "urls": [
          "bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477",
          "dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b",
        "urls": [
          "bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c",
          "dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673",
        "urls": [
          "bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5",
          "dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337",
        "urls": [
          "bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985",
          "dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x18ac6dcce9cdfe3bc754ce910b4b97e56963c49a92e50f57d055adb562416b86",
        "urls": [
          "bzz-raw://d6b29b4a814dc26c3722e994a792f4cc1be86e6b8c2b2adc352ed54fb326593d",
          "dweb:/ipfs/Qma8a7XELNmUepiitaLyxJXW66urnXsvCwx1bMLmRw2Fpn"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945",
        "urls": [
          "bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf",
          "dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xb5d4816a3f37977b1efa07b5e715daa917e96fd28dec1805c4189653db4ea33a",
        "urls": [
          "bzz-raw://34338fa7f079f8d64f20d976f9bf908a710c8728f18c4b361b020b24fedfedf2",
          "dweb:/ipfs/QmYhwY1wi6vVLMUsJ32L3GiSR9HRaFhGL1Y3wRDjy41KXn"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea",
        "urls": [
          "bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973",
          "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
        "urls": [
          "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
          "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol": {
        "keccak256": "0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863",
        "urls": [
          "bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c",
          "dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/ECDSAUpgradeable.sol": {
        "keccak256": "0xbf5daf926894541a40a64b43c3746aa1940c5a1b3b8d14a06465eea72a9b90cc",
        "urls": [
          "bzz-raw://fbdea6be4e36fc5406e81560d8f3f073a61c5d3cb5889b7c896ff5981e2128eb",
          "dweb:/ipfs/QmPpkPNkLEjDf4RZYjiypj9BrNyaXrb2U4pE9aq7sTG9km"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/draft-EIP712Upgradeable.sol": {
        "keccak256": "0xaf5a96100f421d61693605349511e43221d3c2e47d4b3efa87af2b936e2567fc",
        "urls": [
          "bzz-raw://371fd95bad4416766089d3e621dee1fd86fece2b266ad3f9443fefe567e24e94",
          "dweb:/ipfs/QmNciwwtGev3Q8uVhnoE5PQUSCDpMp6KtVjiDgnGdqLmWX"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol": {
        "keccak256": "0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544",
        "urls": [
          "bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e",
          "dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10",
        "urls": [
          "bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487",
          "dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3",
        "urls": [
          "bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638",
          "dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0xdb7f5c28fc61cda0bd8ab60ce288e206b791643bcd3ba464a70cbec18895a2f5",
        "urls": [
          "bzz-raw://bf52bdf22a33263f5ca6227a35faeac3b81e7d2c692fbcc6a079d488710c5900",
          "dweb:/ipfs/QmcmsjkP4yq3UhiJbvyzwufaY2EKh1zhHaRK8ATag2cpD2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/SignatureChecker.sol": {
        "keccak256": "0xbb5c92a62f2a917ec08667ebc024d5f4172ae3594cd5f4eaa997485ed0440d81",
        "urls": [
          "bzz-raw://392c009a19ece7831c9851d8f47fa8a1ee7ae81eeff01040a976cc110b0b9a3b",
          "dweb:/ipfs/QmbtmS8RRPVNghAu9qWieesPkyrabQSypVpgbyhfzzubCe"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/draft-EIP712.sol": {
        "keccak256": "0x6688fad58b9ec0286d40fa957152e575d5d8bd4c3aa80985efdb11b44f776ae7",
        "urls": [
          "bzz-raw://8bc00ab7f133cdaafd212a5cc6a16c8d37319721105d130c8e5af0c4e8f170ba",
          "dweb:/ipfs/QmVmf6LVMfFiEkvKYLzSv3bGHzymEW93AcUuFrNUdY3NtT"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/auth/Owned.sol": {
        "keccak256": "0x7e91c80b0dd1a14a19cb9e661b99924043adab6d9d893bbfcf3a6a3dc23a6743",
        "urls": [
          "bzz-raw://515890d9fc87d6762dae2354a3a0714a26c652f0ea5bb631122be1968ef8c0e9",
          "dweb:/ipfs/QmTRpQ7uoAR1vCACKJm14Ba3oKVLqcA9reTwbHAPxawVpM"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0x43aa1509bb753f053143530705d9c4eee415691d26a4779769bf028a74e6ac69",
        "urls": [
          "bzz-raw://fb440672ebad7d487c1600e406e140fd1ffc4bd7520c86b5709183ca2602da58",
          "dweb:/ipfs/QmNgZaBoAZwnwm4mTL1cUZnMtvt1iZnruMnfpJnDu6upuc"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/tokens/ERC721.sol": {
        "keccak256": "0xdac91feb466e74905737338d80cac5303eb7aedcbe76eda11c45eaa728451075",
        "urls": [
          "bzz-raw://fe01292f5b4d2182859cc30a773f5e9d1a91d02bd8b40fbb73a591cd67896408",
          "dweb:/ipfs/QmTUKUuFJ4QZRD8ge6eTorfni9RKhBtPo1wFVm3GFSgLW8"
        ],
        "license": "MIT"
      },
      "src/periphery/AssetReceiver.sol": {
        "keccak256": "0xbc5d4ccba1ed72f72f9809c35437e7b31f88ebefa0a7d0c7781b66edec157862",
        "urls": [
          "bzz-raw://c2fd1ea62a73886ac3dea5500b23cee17bc6a66208e2bc2e94f566d34c6480f3",
          "dweb:/ipfs/QmaQXPLryUCVueDmiRimU28mSzgWLqgSxsQx2BF2U837na"
        ],
        "license": "MIT"
      },
      "src/periphery/Transactor.sol": {
        "keccak256": "0x66d538c0c0ae7297a1f261777c50b06e841efb5e8a3b09cdde6cdde32dfa3b63",
        "urls": [
          "bzz-raw://cab02028604b71a9acd1b6282cc867aec09b4e91fc64570c69d3484a0a7c12fe",
          "dweb:/ipfs/QmcxJ64nQde5XQY9b714NB6z6RnziNUhod12DgXDqNPcWe"
        ],
        "license": "MIT"
      },
      "src/periphery/faucet/Faucet.sol": {
        "keccak256": "0x82331800d9a28e4e9ea46939fded26e5d76371c9eddfffacd630313a6f8ff5bb",
        "urls": [
          "bzz-raw://04490faba2d3b9a68c678536e12717339adb5c4d6947c3a2d0e881a98026f727",
          "dweb:/ipfs/Qmbi8x84Lo2Y3CE1Azjif1GifVqFYvuhEzEDc6jXrRMnrS"
        ],
        "license": "MIT"
      },
      "src/periphery/faucet/authmodules/AdminFaucetAuthModule.sol": {
        "keccak256": "0x631d0642fd235744338a702d884db56a7d132d47def45059170b272b6c79677f",
        "urls": [
          "bzz-raw://e7a14b64a30e738f9f582452e1380268a6415a91d976a9febabe1cfeddc51ca3",
          "dweb:/ipfs/QmWvT3aZk2Q76URxQdxZtwcQqhqDtRh6LrBNjXwMDNEjwa"
        ],
        "license": "MIT"
      },
      "src/periphery/faucet/authmodules/IFaucetAuthModule.sol": {
        "keccak256": "0x1ae04232fda8aa0ae4fced4af75032bed7020576126cf04bd53ecb329673276d",
        "urls": [
          "bzz-raw://8a74059bfdfb5d091d7e3966e1e4157c20f97b4dc29b62a4a66e82d433fac850",
          "dweb:/ipfs/QmetdNihkTcus9YupsexJU7U3LSDM1EUAuVoNTH1Bebsjf"
        ],
        "license": "MIT"
      },
      "src/periphery/op-nft/AttestationStation.sol": {
        "keccak256": "0xab54f28712653e8926b23c501975aee5d3368dbf436a14da6ddb9dbc792de2ef",
        "urls": [
          "bzz-raw://8a6c5ad2becb79bc6bf3afaaca89dfda6d8f096d55184c0adce20efb3ff19d33",
          "dweb:/ipfs/QmP3qyEYnB195og1FdvW4su4KoBZZQ7UzC8V7CQMz7Ear9"
        ],
        "license": "MIT"
      },
      "src/periphery/op-nft/OptimistInviter.sol": {
        "keccak256": "0x447dd2c65410e42a8ddfa0245bcf68ffc51b6c0988715c2978ea4ccde70b8d55",
        "urls": [
          "bzz-raw://db15eaab1f5ff2314590e535edca99edcc4ebede0170034219228357cdf0c4c2",
          "dweb:/ipfs/QmUqoY781MTXgHx2VrUueRmZKTxuzCt1DVHjxPDFsgYMC2"
        ],
        "license": "MIT"
      },
      "src/periphery/op-nft/libraries/OptimistConstants.sol": {
        "keccak256": "0x901c8a2a333a668ef2a6336a803dd06fea51d4128a38087af4565bff1ae6db8c",
        "urls": [
          "bzz-raw://87e68615dea2494b1cd8f96d7ad97ccb9556d00539526b53a7ce5314570fc268",
          "dweb:/ipfs/QmZBNNrSVMKz4GDkRJyp5jjV6V4wGN7ySAhDd1pBvbJkS2"
        ],
        "license": "MIT"
      },
      "src/universal/Semver.sol": {
        "keccak256": "0x9de68ce536aee1aa616b4bf88d7ccc335460e6edd0e7170bdbf94c4fe3d41c60",
        "urls": [
          "bzz-raw://d5909c0b049b03a2bc24816ecf15b0aaf18c04a963174e1eba7624321bef330d",
          "dweb:/ipfs/QmeqdutwZWHqQMXauNR6WY8PrUpfsTiWTQyanbnGM9QqzT"
        ],
        "license": "MIT"
      },
      "test/AssetReceiver.t.sol": {
        "keccak256": "0x066cd9afb9ecd99f19a1e73bce6f44a92aeb7f1221bdbf1aad319a8034acfdf6",
        "urls": [
          "bzz-raw://4868db4360837db48872b1af83c04a89f2f1c7f6a69ea99730513730a0c37558",
          "dweb:/ipfs/QmWmwv4kg8nSoR8C8yt4bsSVAPht3hVWKCj4Rv4oEs4Aqc"
        ],
        "license": "MIT"
      },
      "test/Helpers.sol": {
        "keccak256": "0x022e89924ead94001a5c3d775a986baf574481b48e5fe0c35bdf60433115103d",
        "urls": [
          "bzz-raw://b75d63ab2d869ab4ab5dedce511be2a5c7a91dc6a75da6a698a23f77d903e03f",
          "dweb:/ipfs/QmUu7Sf9mmbEYV7FaPYQc1JgtLfjLv1D4UaEMRfanbDFDd"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 119,
        "contract": "test/AssetReceiver.t.sol:AssetReceiverTest",
        "label": "IS_TEST",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 121,
        "contract": "test/AssetReceiver.t.sol:AssetReceiverTest",
        "label": "_failed",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 3877,
        "contract": "test/AssetReceiver.t.sol:AssetReceiverTest",
        "label": "stdChainsInitialized",
        "offset": 2,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 3898,
        "contract": "test/AssetReceiver.t.sol:AssetReceiverTest",
        "label": "chains",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_string_memory_ptr,t_struct(Chain)3893_storage)"
      },
      {
        "astId": 3902,
        "contract": "test/AssetReceiver.t.sol:AssetReceiverTest",
        "label": "defaultRpcUrls",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_string_memory_ptr,t_string_storage)"
      },
      {
        "astId": 3906,
        "contract": "test/AssetReceiver.t.sol:AssetReceiverTest",
        "label": "idToAlias",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_string_storage)"
      },
      {
        "astId": 3909,
        "contract": "test/AssetReceiver.t.sol:AssetReceiverTest",
        "label": "fallbackToDefaultRpcUrls",
        "offset": 0,
        "slot": "4",
        "type": "t_bool"
      },
      {
        "astId": 4575,
        "contract": "test/AssetReceiver.t.sol:AssetReceiverTest",
        "label": "gasMeteringOff",
        "offset": 1,
        "slot": "4",
        "type": "t_bool"
      },
      {
        "astId": 6288,
        "contract": "test/AssetReceiver.t.sol:AssetReceiverTest",
        "label": "stdstore",
        "offset": 0,
        "slot": "5",
        "type": "t_struct(StdStorage)7998_storage"
      },
      {
        "astId": 7036,
        "contract": "test/AssetReceiver.t.sol:AssetReceiverTest",
        "label": "_excludedContracts",
        "offset": 0,
        "slot": "12",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 7039,
        "contract": "test/AssetReceiver.t.sol:AssetReceiverTest",
        "label": "_excludedSenders",
        "offset": 0,
        "slot": "13",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 7042,
        "contract": "test/AssetReceiver.t.sol:AssetReceiverTest",
        "label": "_targetedContracts",
        "offset": 0,
        "slot": "14",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 7045,
        "contract": "test/AssetReceiver.t.sol:AssetReceiverTest",
        "label": "_targetedSenders",
        "offset": 0,
        "slot": "15",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 7048,
        "contract": "test/AssetReceiver.t.sol:AssetReceiverTest",
        "label": "_excludedArtifacts",
        "offset": 0,
        "slot": "16",
        "type": "t_array(t_string_storage)dyn_storage"
      },
      {
        "astId": 7051,
        "contract": "test/AssetReceiver.t.sol:AssetReceiverTest",
        "label": "_targetedArtifacts",
        "offset": 0,
        "slot": "17",
        "type": "t_array(t_string_storage)dyn_storage"
      },
      {
        "astId": 7055,
        "contract": "test/AssetReceiver.t.sol:AssetReceiverTest",
        "label": "_targetedArtifactSelectors",
        "offset": 0,
        "slot": "18",
        "type": "t_array(t_struct(FuzzSelector)7033_storage)dyn_storage"
      },
      {
        "astId": 7059,
        "contract": "test/AssetReceiver.t.sol:AssetReceiverTest",
        "label": "_targetedSelectors",
        "offset": 0,
        "slot": "19",
        "type": "t_array(t_struct(FuzzSelector)7033_storage)dyn_storage"
      },
      {
        "astId": 2384,
        "contract": "test/AssetReceiver.t.sol:AssetReceiverTest",
        "label": "stdstore",
        "offset": 0,
        "slot": "20",
        "type": "t_struct(StdStorage)7998_storage"
      },
      {
        "astId": 84297,
        "contract": "test/AssetReceiver.t.sol:AssetReceiverTest",
        "label": "alice",
        "offset": 0,
        "slot": "27",
        "type": "t_address"
      },
      {
        "astId": 84303,
        "contract": "test/AssetReceiver.t.sol:AssetReceiverTest",
        "label": "bob",
        "offset": 0,
        "slot": "28",
        "type": "t_address"
      },
      {
        "astId": 84309,
        "contract": "test/AssetReceiver.t.sol:AssetReceiverTest",
        "label": "testERC20",
        "offset": 0,
        "slot": "29",
        "type": "t_contract(TestERC20)104080"
      },
      {
        "astId": 84312,
        "contract": "test/AssetReceiver.t.sol:AssetReceiverTest",
        "label": "testERC721",
        "offset": 0,
        "slot": "30",
        "type": "t_contract(TestERC721)104113"
      },
      {
        "astId": 84315,
        "contract": "test/AssetReceiver.t.sol:AssetReceiverTest",
        "label": "assetReceiver",
        "offset": 0,
        "slot": "31",
        "type": "t_contract(AssetReceiver)78217"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32",
        "base": "t_address"
      },
      "t_array(t_bytes32)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32",
        "base": "t_bytes32"
      },
      "t_array(t_bytes4)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "bytes4[]",
        "numberOfBytes": "32",
        "base": "t_bytes4"
      },
      "t_array(t_string_storage)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32",
        "base": "t_string_storage"
      },
      "t_array(t_struct(FuzzSelector)7033_storage)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "struct StdInvariant.FuzzSelector[]",
        "numberOfBytes": "32",
        "base": "t_struct(FuzzSelector)7033_storage"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_bytes4": {
        "encoding": "inplace",
        "label": "bytes4",
        "numberOfBytes": "4"
      },
      "t_contract(AssetReceiver)78217": {
        "encoding": "inplace",
        "label": "contract AssetReceiver",
        "numberOfBytes": "20"
      },
      "t_contract(TestERC20)104080": {
        "encoding": "inplace",
        "label": "contract TestERC20",
        "numberOfBytes": "20"
      },
      "t_contract(TestERC721)104113": {
        "encoding": "inplace",
        "label": "contract TestERC721",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_bool)))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(bytes4 => mapping(bytes32 => bool)))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes4,t_mapping(t_bytes32,t_bool))"
      },
      "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_uint256)))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(bytes4 => mapping(bytes32 => uint256)))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes4,t_mapping(t_bytes32,t_uint256))"
      },
      "t_mapping(t_bytes32,t_bool)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_bytes32,t_uint256)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_bytes4,t_mapping(t_bytes32,t_bool))": {
        "encoding": "mapping",
        "key": "t_bytes4",
        "label": "mapping(bytes4 => mapping(bytes32 => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes32,t_bool)"
      },
      "t_mapping(t_bytes4,t_mapping(t_bytes32,t_uint256))": {
        "encoding": "mapping",
        "key": "t_bytes4",
        "label": "mapping(bytes4 => mapping(bytes32 => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes32,t_uint256)"
      },
      "t_mapping(t_string_memory_ptr,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_mapping(t_string_memory_ptr,t_struct(Chain)3893_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct StdChains.Chain)",
        "numberOfBytes": "32",
        "value": "t_struct(Chain)3893_storage"
      },
      "t_mapping(t_uint256,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Chain)3893_storage": {
        "encoding": "inplace",
        "label": "struct StdChains.Chain",
        "numberOfBytes": "128",
        "members": [
          {
            "astId": 3886,
            "contract": "test/AssetReceiver.t.sol:AssetReceiverTest",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 3888,
            "contract": "test/AssetReceiver.t.sol:AssetReceiverTest",
            "label": "chainId",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 3890,
            "contract": "test/AssetReceiver.t.sol:AssetReceiverTest",
            "label": "chainAlias",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 3892,
            "contract": "test/AssetReceiver.t.sol:AssetReceiverTest",
            "label": "rpcUrl",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          }
        ]
      },
      "t_struct(FuzzSelector)7033_storage": {
        "encoding": "inplace",
        "label": "struct StdInvariant.FuzzSelector",
        "numberOfBytes": "64",
        "members": [
          {
            "astId": 7029,
            "contract": "test/AssetReceiver.t.sol:AssetReceiverTest",
            "label": "addr",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 7032,
            "contract": "test/AssetReceiver.t.sol:AssetReceiverTest",
            "label": "selectors",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_bytes4)dyn_storage"
          }
        ]
      },
      "t_struct(StdStorage)7998_storage": {
        "encoding": "inplace",
        "label": "struct StdStorage",
        "numberOfBytes": "224",
        "members": [
          {
            "astId": 7978,
            "contract": "test/AssetReceiver.t.sol:AssetReceiverTest",
            "label": "slots",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_uint256)))"
          },
          {
            "astId": 7986,
            "contract": "test/AssetReceiver.t.sol:AssetReceiverTest",
            "label": "finds",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_bool)))"
          },
          {
            "astId": 7989,
            "contract": "test/AssetReceiver.t.sol:AssetReceiverTest",
            "label": "_keys",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_bytes32)dyn_storage"
          },
          {
            "astId": 7991,
            "contract": "test/AssetReceiver.t.sol:AssetReceiverTest",
            "label": "_sig",
            "offset": 0,
            "slot": "3",
            "type": "t_bytes4"
          },
          {
            "astId": 7993,
            "contract": "test/AssetReceiver.t.sol:AssetReceiverTest",
            "label": "_depth",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 7995,
            "contract": "test/AssetReceiver.t.sol:AssetReceiverTest",
            "label": "_target",
            "offset": 0,
            "slot": "5",
            "type": "t_address"
          },
          {
            "astId": 7997,
            "contract": "test/AssetReceiver.t.sol:AssetReceiverTest",
            "label": "_set",
            "offset": 0,
            "slot": "6",
            "type": "t_bytes32"
          }
        ]
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  },
  "userdoc": {
    "version": 1,
    "kind": "user",
    "methods": {
      "test_constructor_succeeds()": {
        "notice": "Tests if the owner was set correctly during deploy."
      },
      "test_receive_succeeds()": {
        "notice": "Tests that receive works as inteded."
      },
      "test_withdrawERC20_succeeds()": {
        "notice": "Test withdrawERC20 with token and address arguments, from owner."
      },
      "test_withdrawERC20_unauthorized_reverts()": {
        "notice": "Same as withdrawERC20 but call from non-owner."
      },
      "test_withdrawERC20withAmount_succeeds()": {
        "notice": "Similar as withdrawERC20 but specify amount to withdraw."
      },
      "test_withdrawERC20withAmount_unauthorized_reverts()": {
        "notice": "Similar as withdrawERC20 with amount but call from non-owner."
      },
      "test_withdrawERC721_succeeds()": {
        "notice": "Test withdrawERC721 from owner."
      },
      "test_withdrawERC721_unauthorized_reverts()": {
        "notice": "Similar as withdrawERC721 but call from non-owner."
      },
      "test_withdrawETH_succeeds()": {
        "notice": "Tests withdrawETH function with only an address         as an argument, called by owner."
      },
      "test_withdrawETH_unauthorized_reverts()": {
        "notice": "withdrawETH should fail if called by non-owner."
      },
      "test_withdrawETHwithAmount_succeeds()": {
        "notice": "Similar as withdrawETH but specify amount to withdraw."
      },
      "test_withdrawETHwithAmount_unauthorized_reverts()": {
        "notice": "withdrawETH with address and amount as arguments called by non-owner."
      }
    }
  },
  "devdoc": {
    "version": 1,
    "kind": "dev"
  },
  "ast": {
    "absolutePath": "test/AssetReceiver.t.sol",
    "id": 85144,
    "exportedSymbols": {
      "AssetReceiver": [
        78217
      ],
      "AssetReceiverTest": [
        85143
      ],
      "AssetReceiver_Initializer": [
        84424
      ],
      "Test": [
        11539
      ],
      "TestERC20": [
        104080
      ],
      "TestERC721": [
        104113
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:8052:219",
    "nodes": [
      {
        "id": 84281,
        "nodeType": "PragmaDirective",
        "src": "32:23:219",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 84283,
        "nodeType": "ImportDirective",
        "src": "78:42:219",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 85144,
        "sourceUnit": 11540,
        "symbolAliases": [
          {
            "foreign": {
              "id": 84282,
              "name": "Test",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 11539,
              "src": "87:4:219",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 84285,
        "nodeType": "ImportDirective",
        "src": "121:45:219",
        "nodes": [],
        "absolutePath": "test/Helpers.sol",
        "file": "test/Helpers.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 85144,
        "sourceUnit": 104514,
        "symbolAliases": [
          {
            "foreign": {
              "id": 84284,
              "name": "TestERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 104080,
              "src": "130:9:219",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 84287,
        "nodeType": "ImportDirective",
        "src": "167:46:219",
        "nodes": [],
        "absolutePath": "test/Helpers.sol",
        "file": "test/Helpers.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 85144,
        "sourceUnit": 104514,
        "symbolAliases": [
          {
            "foreign": {
              "id": 84286,
              "name": "TestERC721",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 104113,
              "src": "176:10:219",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 84289,
        "nodeType": "ImportDirective",
        "src": "214:64:219",
        "nodes": [],
        "absolutePath": "src/periphery/AssetReceiver.sol",
        "file": "src/periphery/AssetReceiver.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 85144,
        "sourceUnit": 78218,
        "symbolAliases": [
          {
            "foreign": {
              "id": 84288,
              "name": "AssetReceiver",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 78217,
              "src": "223:13:219",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 84424,
        "nodeType": "ContractDefinition",
        "src": "280:1167:219",
        "nodes": [
          {
            "id": 84297,
            "nodeType": "VariableDeclaration",
            "src": "329:28:219",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "alice",
            "nameLocation": "337:5:219",
            "scope": 84424,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 84292,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "329:7:219",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "313238",
                  "id": 84295,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "353:3:219",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_128_by_1",
                    "typeString": "int_const 128"
                  },
                  "value": "128"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_128_by_1",
                    "typeString": "int_const 128"
                  }
                ],
                "id": 84294,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "345:7:219",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 84293,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "345:7:219",
                  "typeDescriptions": {}
                }
              },
              "id": 84296,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "345:12:219",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 84303,
            "nodeType": "VariableDeclaration",
            "src": "363:26:219",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "bob",
            "nameLocation": "371:3:219",
            "scope": 84424,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 84298,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "363:7:219",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "323536",
                  "id": 84301,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "number",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "385:3:219",
                  "typeDescriptions": {
                    "typeIdentifier": "t_rational_256_by_1",
                    "typeString": "int_const 256"
                  },
                  "value": "256"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_rational_256_by_1",
                    "typeString": "int_const 256"
                  }
                ],
                "id": 84300,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "lValueRequested": false,
                "nodeType": "ElementaryTypeNameExpression",
                "src": "377:7:219",
                "typeDescriptions": {
                  "typeIdentifier": "t_type$_t_address_$",
                  "typeString": "type(address)"
                },
                "typeName": {
                  "id": 84299,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "377:7:219",
                  "typeDescriptions": {}
                }
              },
              "id": 84302,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "typeConversion",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "377:12:219",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 84306,
            "nodeType": "VariableDeclaration",
            "src": "396:36:219",
            "nodes": [],
            "constant": false,
            "mutability": "immutable",
            "name": "DEFAULT_TOKEN_ID",
            "nameLocation": "412:16:219",
            "scope": 84424,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 84304,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "396:5:219",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 84305,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "431:1:219",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "id": 84309,
            "nodeType": "VariableDeclaration",
            "src": "439:19:219",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "testERC20",
            "nameLocation": "449:9:219",
            "scope": 84424,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TestERC20_$104080",
              "typeString": "contract TestERC20"
            },
            "typeName": {
              "id": 84308,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 84307,
                "name": "TestERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 104080,
                "src": "439:9:219"
              },
              "referencedDeclaration": 104080,
              "src": "439:9:219",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TestERC20_$104080",
                "typeString": "contract TestERC20"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 84312,
            "nodeType": "VariableDeclaration",
            "src": "464:21:219",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "testERC721",
            "nameLocation": "475:10:219",
            "scope": 84424,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_TestERC721_$104113",
              "typeString": "contract TestERC721"
            },
            "typeName": {
              "id": 84311,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 84310,
                "name": "TestERC721",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 104113,
                "src": "464:10:219"
              },
              "referencedDeclaration": 104113,
              "src": "464:10:219",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_TestERC721_$104113",
                "typeString": "contract TestERC721"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 84315,
            "nodeType": "VariableDeclaration",
            "src": "491:27:219",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "assetReceiver",
            "nameLocation": "505:13:219",
            "scope": 84424,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AssetReceiver_$78217",
              "typeString": "contract AssetReceiver"
            },
            "typeName": {
              "id": 84314,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 84313,
                "name": "AssetReceiver",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 78217,
                "src": "491:13:219"
              },
              "referencedDeclaration": 78217,
              "src": "491:13:219",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                "typeString": "contract AssetReceiver"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 84321,
            "nodeType": "EventDefinition",
            "src": "525:56:219",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "4103257eaac983ca79a70d28f90dfc4fa16b619bb0c17ee7cab0d4034c279624",
            "name": "ReceivedETH",
            "nameLocation": "531:11:219",
            "parameters": {
              "id": 84320,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 84317,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "559:4:219",
                  "nodeType": "VariableDeclaration",
                  "scope": 84321,
                  "src": "543:20:219",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 84316,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "543:7:219",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 84319,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "573:6:219",
                  "nodeType": "VariableDeclaration",
                  "scope": 84321,
                  "src": "565:14:219",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 84318,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "565:7:219",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "542:38:219"
            }
          },
          {
            "id": 84329,
            "nodeType": "EventDefinition",
            "src": "586:89:219",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "1f12aa8b6d492dd9b98e2b00b0b20830c2a7ded65afac13b60d169a034ae90bc",
            "name": "WithdrewETH",
            "nameLocation": "592:11:219",
            "parameters": {
              "id": 84328,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 84323,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "withdrawer",
                  "nameLocation": "620:10:219",
                  "nodeType": "VariableDeclaration",
                  "scope": 84329,
                  "src": "604:26:219",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 84322,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "604:7:219",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 84325,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "648:9:219",
                  "nodeType": "VariableDeclaration",
                  "scope": 84329,
                  "src": "632:25:219",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 84324,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "632:7:219",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 84327,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "667:6:219",
                  "nodeType": "VariableDeclaration",
                  "scope": 84329,
                  "src": "659:14:219",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 84326,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "659:7:219",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "603:71:219"
            }
          },
          {
            "id": 84339,
            "nodeType": "EventDefinition",
            "src": "680:114:219",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "6b00f1c7883f053ba83e907fd1965b22fffe3c4111383e725f04638a566cdbfa",
            "name": "WithdrewERC20",
            "nameLocation": "686:13:219",
            "parameters": {
              "id": 84338,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 84331,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "withdrawer",
                  "nameLocation": "716:10:219",
                  "nodeType": "VariableDeclaration",
                  "scope": 84339,
                  "src": "700:26:219",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 84330,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "700:7:219",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 84333,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "744:9:219",
                  "nodeType": "VariableDeclaration",
                  "scope": 84339,
                  "src": "728:25:219",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 84332,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "728:7:219",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 84335,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "asset",
                  "nameLocation": "771:5:219",
                  "nodeType": "VariableDeclaration",
                  "scope": 84339,
                  "src": "755:21:219",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 84334,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "755:7:219",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 84337,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "786:6:219",
                  "nodeType": "VariableDeclaration",
                  "scope": 84339,
                  "src": "778:14:219",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 84336,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "778:7:219",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "699:94:219"
            }
          },
          {
            "id": 84349,
            "nodeType": "EventDefinition",
            "src": "799:111:219",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "30b478a5e196e55886228aa87ba74a7dfeba655e0a4d7ba275eabfc22aabb7a8",
            "name": "WithdrewERC721",
            "nameLocation": "805:14:219",
            "parameters": {
              "id": 84348,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 84341,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "withdrawer",
                  "nameLocation": "836:10:219",
                  "nodeType": "VariableDeclaration",
                  "scope": 84349,
                  "src": "820:26:219",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 84340,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "820:7:219",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 84343,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "864:9:219",
                  "nodeType": "VariableDeclaration",
                  "scope": 84349,
                  "src": "848:25:219",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 84342,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "848:7:219",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 84345,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "asset",
                  "nameLocation": "891:5:219",
                  "nodeType": "VariableDeclaration",
                  "scope": 84349,
                  "src": "875:21:219",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 84344,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "875:7:219",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 84347,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "906:2:219",
                  "nodeType": "VariableDeclaration",
                  "scope": 84349,
                  "src": "898:10:219",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 84346,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "898:7:219",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "819:90:219"
            }
          },
          {
            "id": 84423,
            "nodeType": "FunctionDefinition",
            "src": "916:529:219",
            "nodes": [],
            "body": {
              "id": 84422,
              "nodeType": "Block",
              "src": "940:505:219",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 84357,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 84352,
                      "name": "testERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84309,
                      "src": "992:9:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestERC20_$104080",
                        "typeString": "contract TestERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 84355,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1004:13:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_TestERC20_$104080_$",
                          "typeString": "function () returns (contract TestERC20)"
                        },
                        "typeName": {
                          "id": 84354,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 84353,
                            "name": "TestERC20",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 104080,
                            "src": "1008:9:219"
                          },
                          "referencedDeclaration": 104080,
                          "src": "1008:9:219",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestERC20_$104080",
                            "typeString": "contract TestERC20"
                          }
                        }
                      },
                      "id": 84356,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1004:15:219",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestERC20_$104080",
                        "typeString": "contract TestERC20"
                      }
                    },
                    "src": "992:27:219",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestERC20_$104080",
                      "typeString": "contract TestERC20"
                    }
                  },
                  "id": 84358,
                  "nodeType": "ExpressionStatement",
                  "src": "992:27:219"
                },
                {
                  "expression": {
                    "id": 84364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 84359,
                      "name": "testERC721",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84312,
                      "src": "1029:10:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestERC721_$104113",
                        "typeString": "contract TestERC721"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 84362,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1042:14:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_TestERC721_$104113_$",
                          "typeString": "function () returns (contract TestERC721)"
                        },
                        "typeName": {
                          "id": 84361,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 84360,
                            "name": "TestERC721",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 104113,
                            "src": "1046:10:219"
                          },
                          "referencedDeclaration": 104113,
                          "src": "1046:10:219",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestERC721_$104113",
                            "typeString": "contract TestERC721"
                          }
                        }
                      },
                      "id": 84363,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1042:16:219",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_TestERC721_$104113",
                        "typeString": "contract TestERC721"
                      }
                    },
                    "src": "1029:29:219",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_TestERC721_$104113",
                      "typeString": "contract TestERC721"
                    }
                  },
                  "id": 84365,
                  "nodeType": "ExpressionStatement",
                  "src": "1029:29:219"
                },
                {
                  "expression": {
                    "id": 84375,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 84366,
                      "name": "assetReceiver",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84315,
                      "src": "1110:13:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                        "typeString": "contract AssetReceiver"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 84372,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 84297,
                              "src": "1152:5:219",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 84371,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1144:7:219",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 84370,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1144:7:219",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 84373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1144:14:219",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 84369,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1126:17:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$returns$_t_contract$_AssetReceiver_$78217_$",
                          "typeString": "function (address) returns (contract AssetReceiver)"
                        },
                        "typeName": {
                          "id": 84368,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 84367,
                            "name": "AssetReceiver",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 78217,
                            "src": "1130:13:219"
                          },
                          "referencedDeclaration": 78217,
                          "src": "1130:13:219",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                            "typeString": "contract AssetReceiver"
                          }
                        }
                      },
                      "id": 84374,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1126:33:219",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                        "typeString": "contract AssetReceiver"
                      }
                    },
                    "src": "1110:49:219",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                      "typeString": "contract AssetReceiver"
                    }
                  },
                  "id": 84376,
                  "nodeType": "ExpressionStatement",
                  "src": "1110:49:219"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 84382,
                            "name": "assetReceiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84315,
                            "src": "1186:13:219",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                              "typeString": "contract AssetReceiver"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                              "typeString": "contract AssetReceiver"
                            }
                          ],
                          "id": 84381,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1178:7:219",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 84380,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1178:7:219",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 84383,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1178:22:219",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "41737365745265636569766572",
                        "id": 84384,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1202:15:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a39780a7d4b767e0658aa20a6a16f9aec7fdb70176260c20d2b553c40b72ef28",
                          "typeString": "literal_string \"AssetReceiver\""
                        },
                        "value": "AssetReceiver"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a39780a7d4b767e0658aa20a6a16f9aec7fdb70176260c20d2b553c40b72ef28",
                          "typeString": "literal_string \"AssetReceiver\""
                        }
                      ],
                      "expression": {
                        "id": 84377,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2381,
                        "src": "1169:2:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13045",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 84379,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11940,
                      "src": "1169:8:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 84385,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1169:49:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84386,
                  "nodeType": "ExpressionStatement",
                  "src": "1169:49:219"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 84390,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84297,
                        "src": "1276:5:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 84391,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1283:7:219",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 84387,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2381,
                        "src": "1268:2:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13045",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 84389,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12687,
                      "src": "1268:7:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 84392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1268:23:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84393,
                  "nodeType": "ExpressionStatement",
                  "src": "1268:23:219"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 84397,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84303,
                        "src": "1309:3:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 84398,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1314:7:219",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 84394,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2381,
                        "src": "1301:2:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13045",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 84396,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12687,
                      "src": "1301:7:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 84399,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1301:21:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84400,
                  "nodeType": "ExpressionStatement",
                  "src": "1301:21:219"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 84404,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84297,
                        "src": "1349:5:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 84405,
                        "name": "DEFAULT_TOKEN_ID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84306,
                        "src": "1356:16:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "id": 84401,
                        "name": "testERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84312,
                        "src": "1333:10:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestERC721_$104113",
                          "typeString": "contract TestERC721"
                        }
                      },
                      "id": 84403,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "mint",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 104103,
                      "src": "1333:15:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 84406,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1333:40:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84407,
                  "nodeType": "ExpressionStatement",
                  "src": "1333:40:219"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 84411,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84297,
                        "src": "1393:5:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "616c696365",
                        "id": 84412,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1400:7:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9c0257114eb9399a2985f8e75dad7600c5d89fe3824ffa99ec1c3eb8bf3b0501",
                          "typeString": "literal_string \"alice\""
                        },
                        "value": "alice"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9c0257114eb9399a2985f8e75dad7600c5d89fe3824ffa99ec1c3eb8bf3b0501",
                          "typeString": "literal_string \"alice\""
                        }
                      ],
                      "expression": {
                        "id": 84408,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2381,
                        "src": "1384:2:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13045",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 84410,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11940,
                      "src": "1384:8:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 84413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1384:24:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84414,
                  "nodeType": "ExpressionStatement",
                  "src": "1384:24:219"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 84418,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84303,
                        "src": "1427:3:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "626f62",
                        "id": 84419,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1432:5:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_38e47a7b719dce63662aeaf43440326f551b8a7ee198cee35cb5d517f2d296a2",
                          "typeString": "literal_string \"bob\""
                        },
                        "value": "bob"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_38e47a7b719dce63662aeaf43440326f551b8a7ee198cee35cb5d517f2d296a2",
                          "typeString": "literal_string \"bob\""
                        }
                      ],
                      "expression": {
                        "id": 84415,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2381,
                        "src": "1418:2:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13045",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 84417,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11940,
                      "src": "1418:8:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 84420,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1418:20:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84421,
                  "nodeType": "ExpressionStatement",
                  "src": "1418:20:219"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "925:5:219",
            "parameters": {
              "id": 84350,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "930:2:219"
            },
            "returnParameters": {
              "id": 84351,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "940:0:219"
            },
            "scope": 84424,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 84290,
              "name": "Test",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11539,
              "src": "318:4:219"
            },
            "id": 84291,
            "nodeType": "InheritanceSpecifier",
            "src": "318:4:219"
          }
        ],
        "canonicalName": "AssetReceiver_Initializer",
        "contractDependencies": [
          78217,
          104080,
          104113
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          84424,
          11539,
          2388,
          2385,
          11490,
          7248,
          6958,
          6279,
          4546,
          3852,
          2322
        ],
        "name": "AssetReceiver_Initializer",
        "nameLocation": "289:25:219",
        "scope": 85144,
        "usedErrors": []
      },
      {
        "id": 85143,
        "nodeType": "ContractDefinition",
        "src": "1449:6634:219",
        "nodes": [
          {
            "id": 84441,
            "nodeType": "FunctionDefinition",
            "src": "1579:110:219",
            "nodes": [],
            "body": {
              "id": 84440,
              "nodeType": "Block",
              "src": "1625:64:219",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 84433,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84297,
                            "src": "1652:5:219",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 84432,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1644:7:219",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 84431,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1644:7:219",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 84434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1644:14:219",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 84435,
                            "name": "assetReceiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84315,
                            "src": "1660:13:219",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                              "typeString": "contract AssetReceiver"
                            }
                          },
                          "id": 84436,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "owner",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 42952,
                          "src": "1660:19:219",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 84437,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1660:21:219",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 84430,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2553,
                        2578,
                        2591,
                        2607,
                        2649,
                        2691,
                        2733,
                        2770,
                        2807,
                        2844,
                        351,
                        376,
                        406,
                        431,
                        490,
                        515,
                        545,
                        570,
                        2043,
                        2078
                      ],
                      "referencedDeclaration": 351,
                      "src": "1635:8:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 84438,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1635:47:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84439,
                  "nodeType": "ExpressionStatement",
                  "src": "1635:47:219"
                }
              ]
            },
            "documentation": {
              "id": 84427,
              "nodeType": "StructuredDocumentation",
              "src": "1511:63:219",
              "text": "@notice Tests if the owner was set correctly during deploy."
            },
            "functionSelector": "80aee254",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_constructor_succeeds",
            "nameLocation": "1588:25:219",
            "parameters": {
              "id": 84428,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1613:2:219"
            },
            "returnParameters": {
              "id": 84429,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1625:0:219"
            },
            "scope": 85143,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 84504,
            "nodeType": "FunctionDefinition",
            "src": "1748:519:219",
            "nodes": [],
            "body": {
              "id": 84503,
              "nodeType": "Block",
              "src": "1790:477:219",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 84448,
                              "name": "assetReceiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 84315,
                              "src": "1871:13:219",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                                "typeString": "contract AssetReceiver"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                                "typeString": "contract AssetReceiver"
                              }
                            ],
                            "id": 84447,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1863:7:219",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 84446,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1863:7:219",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 84449,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1863:22:219",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 84450,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "1863:30:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 84451,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1895:1:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 84445,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2553,
                        2578,
                        2591,
                        2607,
                        2649,
                        2691,
                        2733,
                        2770,
                        2807,
                        2844,
                        351,
                        376,
                        406,
                        431,
                        490,
                        515,
                        545,
                        570,
                        2043,
                        2078
                      ],
                      "referencedDeclaration": 545,
                      "src": "1854:8:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 84452,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1854:43:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84453,
                  "nodeType": "ExpressionStatement",
                  "src": "1854:43:219"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 84457,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1922:4:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 84458,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1928:4:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 84459,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1934:4:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 84460,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1940:4:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "arguments": [
                          {
                            "id": 84463,
                            "name": "assetReceiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84315,
                            "src": "1954:13:219",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                              "typeString": "contract AssetReceiver"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                              "typeString": "contract AssetReceiver"
                            }
                          ],
                          "id": 84462,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1946:7:219",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 84461,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1946:7:219",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 84464,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1946:22:219",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 84454,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2381,
                        "src": "1908:2:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13045",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 84456,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectEmit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12739,
                      "src": "1908:13:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_bool_$_t_bool_$_t_bool_$_t_address_$returns$__$",
                        "typeString": "function (bool,bool,bool,bool,address) external"
                      }
                    },
                    "id": 84465,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1908:61:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84466,
                  "nodeType": "ExpressionStatement",
                  "src": "1908:61:219"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 84468,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84297,
                        "src": "1996:5:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 84469,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2003:3:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "id": 84467,
                      "name": "ReceivedETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84321,
                      "src": "1984:11:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 84470,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1984:23:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84471,
                  "nodeType": "EmitStatement",
                  "src": "1979:28:219"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 84475,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84297,
                        "src": "2048:5:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 84472,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2381,
                        "src": "2039:2:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13045",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 84474,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12658,
                      "src": "2039:8:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 84476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2039:15:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84477,
                  "nodeType": "ExpressionStatement",
                  "src": "2039:15:219"
                },
                {
                  "assignments": [
                    84479,
                    null
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 84479,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "2070:7:219",
                      "nodeType": "VariableDeclaration",
                      "scope": 84503,
                      "src": "2065:12:219",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 84478,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2065:4:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    null
                  ],
                  "id": 84489,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "",
                        "id": 84487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "hexString",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2124:5:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        },
                        "value": ""
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                          "typeString": "literal_string \"\""
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                            "typeString": "literal_string \"\""
                          }
                        ],
                        "expression": {
                          "arguments": [
                            {
                              "id": 84482,
                              "name": "assetReceiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 84315,
                              "src": "2090:13:219",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                                "typeString": "contract AssetReceiver"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                                "typeString": "contract AssetReceiver"
                              }
                            ],
                            "id": 84481,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2082:7:219",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 84480,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2082:7:219",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 84483,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2082:22:219",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 84484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "call",
                        "nodeType": "MemberAccess",
                        "src": "2082:27:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                          "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                        }
                      },
                      "id": 84486,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "names": [
                        "value"
                      ],
                      "nodeType": "FunctionCallOptions",
                      "options": [
                        {
                          "hexValue": "313030",
                          "id": 84485,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "2118:3:219",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_100_by_1",
                            "typeString": "int_const 100"
                          },
                          "value": "100"
                        }
                      ],
                      "src": "2082:41:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                        "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                      }
                    },
                    "id": 84488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2082:48:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2064:66:219"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 84491,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84479,
                        "src": "2197:7:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 84490,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        300,
                        321
                      ],
                      "referencedDeclaration": 300,
                      "src": "2186:10:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 84492,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2186:19:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84493,
                  "nodeType": "ExpressionStatement",
                  "src": "2186:19:219"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 84497,
                              "name": "assetReceiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 84315,
                              "src": "2232:13:219",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                                "typeString": "contract AssetReceiver"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                                "typeString": "contract AssetReceiver"
                              }
                            ],
                            "id": 84496,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2224:7:219",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 84495,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2224:7:219",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 84498,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2224:22:219",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 84499,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "2224:30:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "313030",
                        "id": 84500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2256:3:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        },
                        "value": "100"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100_by_1",
                          "typeString": "int_const 100"
                        }
                      ],
                      "id": 84494,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2553,
                        2578,
                        2591,
                        2607,
                        2649,
                        2691,
                        2733,
                        2770,
                        2807,
                        2844,
                        351,
                        376,
                        406,
                        431,
                        490,
                        515,
                        545,
                        570,
                        2043,
                        2078
                      ],
                      "referencedDeclaration": 545,
                      "src": "2215:8:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 84501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2215:45:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84502,
                  "nodeType": "ExpressionStatement",
                  "src": "2215:45:219"
                }
              ]
            },
            "documentation": {
              "id": 84442,
              "nodeType": "StructuredDocumentation",
              "src": "1695:48:219",
              "text": "@notice Tests that receive works as inteded."
            },
            "functionSelector": "fe43c9dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_receive_succeeds",
            "nameLocation": "1757:21:219",
            "parameters": {
              "id": 84443,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1778:2:219"
            },
            "returnParameters": {
              "id": 84444,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1790:0:219"
            },
            "scope": 85143,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 84598,
            "nodeType": "FunctionDefinition",
            "src": "2386:756:219",
            "nodes": [],
            "body": {
              "id": 84597,
              "nodeType": "Block",
              "src": "2432:710:219",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 84511,
                              "name": "assetReceiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 84315,
                              "src": "2501:13:219",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                                "typeString": "contract AssetReceiver"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                                "typeString": "contract AssetReceiver"
                              }
                            ],
                            "id": 84510,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2493:7:219",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 84509,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2493:7:219",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 84512,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2493:22:219",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 84513,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "2493:30:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 84514,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2525:1:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 84508,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2553,
                        2578,
                        2591,
                        2607,
                        2649,
                        2691,
                        2733,
                        2770,
                        2807,
                        2844,
                        351,
                        376,
                        406,
                        431,
                        490,
                        515,
                        545,
                        570,
                        2043,
                        2078
                      ],
                      "referencedDeclaration": 545,
                      "src": "2484:8:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 84515,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2484:43:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84516,
                  "nodeType": "ExpressionStatement",
                  "src": "2484:43:219"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 84522,
                            "name": "assetReceiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84315,
                            "src": "2628:13:219",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                              "typeString": "contract AssetReceiver"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                              "typeString": "contract AssetReceiver"
                            }
                          ],
                          "id": 84521,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2620:7:219",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 84520,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2620:7:219",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 84523,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2620:22:219",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 84524,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2644:7:219",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 84517,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2381,
                        "src": "2612:2:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13045",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 84519,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12687,
                      "src": "2612:7:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 84525,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2612:40:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84526,
                  "nodeType": "ExpressionStatement",
                  "src": "2612:40:219"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 84530,
                              "name": "assetReceiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 84315,
                              "src": "2679:13:219",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                                "typeString": "contract AssetReceiver"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                                "typeString": "contract AssetReceiver"
                              }
                            ],
                            "id": 84529,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2671:7:219",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 84528,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2671:7:219",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 84531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2671:22:219",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 84532,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "2671:30:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 84533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2703:7:219",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 84527,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2553,
                        2578,
                        2591,
                        2607,
                        2649,
                        2691,
                        2733,
                        2770,
                        2807,
                        2844,
                        351,
                        376,
                        406,
                        431,
                        490,
                        515,
                        545,
                        570,
                        2043,
                        2078
                      ],
                      "referencedDeclaration": 545,
                      "src": "2662:8:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 84534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2662:49:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84535,
                  "nodeType": "ExpressionStatement",
                  "src": "2662:49:219"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 84539,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 84297,
                              "src": "2739:5:219",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 84538,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2731:7:219",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 84537,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2731:7:219",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 84540,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2731:14:219",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 84541,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "2731:22:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 84542,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2755:7:219",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 84536,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2553,
                        2578,
                        2591,
                        2607,
                        2649,
                        2691,
                        2733,
                        2770,
                        2807,
                        2844,
                        351,
                        376,
                        406,
                        431,
                        490,
                        515,
                        545,
                        570,
                        2043,
                        2078
                      ],
                      "referencedDeclaration": 545,
                      "src": "2722:8:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 84543,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2722:41:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84544,
                  "nodeType": "ExpressionStatement",
                  "src": "2722:41:219"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 84548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2788:4:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 84549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2794:4:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 84550,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2800:4:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 84551,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2806:4:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "arguments": [
                          {
                            "id": 84554,
                            "name": "assetReceiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84315,
                            "src": "2820:13:219",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                              "typeString": "contract AssetReceiver"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                              "typeString": "contract AssetReceiver"
                            }
                          ],
                          "id": 84553,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2812:7:219",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 84552,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2812:7:219",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 84555,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2812:22:219",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 84545,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2381,
                        "src": "2774:2:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13045",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 84547,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectEmit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12739,
                      "src": "2774:13:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_bool_$_t_bool_$_t_bool_$_t_address_$returns$__$",
                        "typeString": "function (bool,bool,bool,bool,address) external"
                      }
                    },
                    "id": 84556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2774:61:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84557,
                  "nodeType": "ExpressionStatement",
                  "src": "2774:61:219"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 84559,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84297,
                        "src": "2862:5:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 84560,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84297,
                        "src": "2869:5:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 84561,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2876:7:219",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 84558,
                      "name": "WithdrewETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84329,
                      "src": "2850:11:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 84562,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2850:34:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84563,
                  "nodeType": "EmitStatement",
                  "src": "2845:39:219"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 84567,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84297,
                        "src": "2932:5:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 84564,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2381,
                        "src": "2923:2:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13045",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 84566,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12658,
                      "src": "2923:8:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 84568,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2923:15:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84569,
                  "nodeType": "ExpressionStatement",
                  "src": "2923:15:219"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 84575,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84297,
                            "src": "2982:5:219",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 84574,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "2974:8:219",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 84573,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "2974:8:219",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 84576,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2974:14:219",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 84570,
                        "name": "assetReceiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84315,
                        "src": "2948:13:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                          "typeString": "contract AssetReceiver"
                        }
                      },
                      "id": 84572,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawETH",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 78095,
                      "src": "2948:25:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable) external"
                      }
                    },
                    "id": 84577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2948:41:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84578,
                  "nodeType": "ExpressionStatement",
                  "src": "2948:41:219"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 84582,
                              "name": "assetReceiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 84315,
                              "src": "3058:13:219",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                                "typeString": "contract AssetReceiver"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                                "typeString": "contract AssetReceiver"
                              }
                            ],
                            "id": 84581,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3050:7:219",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 84580,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3050:7:219",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 84583,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3050:22:219",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 84584,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "3050:30:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 84585,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3082:1:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 84579,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2553,
                        2578,
                        2591,
                        2607,
                        2649,
                        2691,
                        2733,
                        2770,
                        2807,
                        2844,
                        351,
                        376,
                        406,
                        431,
                        490,
                        515,
                        545,
                        570,
                        2043,
                        2078
                      ],
                      "referencedDeclaration": 545,
                      "src": "3041:8:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 84586,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3041:43:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84587,
                  "nodeType": "ExpressionStatement",
                  "src": "3041:43:219"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 84591,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 84297,
                              "src": "3111:5:219",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 84590,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3103:7:219",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 84589,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3103:7:219",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 84592,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3103:14:219",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 84593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "3103:22:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "32",
                        "id": 84594,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3127:7:219",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        },
                        "value": "2"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_2000000000000000000_by_1",
                          "typeString": "int_const 2000000000000000000"
                        }
                      ],
                      "id": 84588,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2553,
                        2578,
                        2591,
                        2607,
                        2649,
                        2691,
                        2733,
                        2770,
                        2807,
                        2844,
                        351,
                        376,
                        406,
                        431,
                        490,
                        515,
                        545,
                        570,
                        2043,
                        2078
                      ],
                      "referencedDeclaration": 545,
                      "src": "3094:8:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 84595,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3094:41:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84596,
                  "nodeType": "ExpressionStatement",
                  "src": "3094:41:219"
                }
              ]
            },
            "documentation": {
              "id": 84505,
              "nodeType": "StructuredDocumentation",
              "src": "2273:108:219",
              "text": "@notice Tests withdrawETH function with only an address\n         as an argument, called by owner."
            },
            "functionSelector": "e132a183",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_withdrawETH_succeeds",
            "nameLocation": "2395:25:219",
            "parameters": {
              "id": 84506,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2420:2:219"
            },
            "returnParameters": {
              "id": 84507,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2432:0:219"
            },
            "scope": 85143,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 84628,
            "nodeType": "FunctionDefinition",
            "src": "3212:207:219",
            "nodes": [],
            "body": {
              "id": 84627,
              "nodeType": "Block",
              "src": "3270:149:219",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 84607,
                            "name": "assetReceiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84315,
                            "src": "3296:13:219",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                              "typeString": "contract AssetReceiver"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                              "typeString": "contract AssetReceiver"
                            }
                          ],
                          "id": 84606,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3288:7:219",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 84605,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3288:7:219",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 84608,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3288:22:219",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 84609,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3312:7:219",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 84602,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2381,
                        "src": "3280:2:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13045",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 84604,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12687,
                      "src": "3280:7:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 84610,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3280:40:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84611,
                  "nodeType": "ExpressionStatement",
                  "src": "3280:40:219"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "554e415554484f52495a4544",
                        "id": 84615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3346:14:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_269df367cd41cace5897a935d0e0858fe4543b5619d45e09af6b124c1bb3d528",
                          "typeString": "literal_string \"UNAUTHORIZED\""
                        },
                        "value": "UNAUTHORIZED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_269df367cd41cace5897a935d0e0858fe4543b5619d45e09af6b124c1bb3d528",
                          "typeString": "literal_string \"UNAUTHORIZED\""
                        }
                      ],
                      "expression": {
                        "id": 84612,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2381,
                        "src": "3330:2:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13045",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 84614,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12699,
                      "src": "3330:15:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 84616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3330:31:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84617,
                  "nodeType": "ExpressionStatement",
                  "src": "3330:31:219"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 84623,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84297,
                            "src": "3405:5:219",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 84622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3397:8:219",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 84621,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3397:8:219",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 84624,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3397:14:219",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "expression": {
                        "id": 84618,
                        "name": "assetReceiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84315,
                        "src": "3371:13:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                          "typeString": "contract AssetReceiver"
                        }
                      },
                      "id": 84620,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawETH",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 78095,
                      "src": "3371:25:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$returns$__$",
                        "typeString": "function (address payable) external"
                      }
                    },
                    "id": 84625,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3371:41:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84626,
                  "nodeType": "ExpressionStatement",
                  "src": "3371:41:219"
                }
              ]
            },
            "documentation": {
              "id": 84599,
              "nodeType": "StructuredDocumentation",
              "src": "3148:59:219",
              "text": "@notice withdrawETH should fail if called by non-owner."
            },
            "functionSelector": "5a30a6ea",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_withdrawETH_unauthorized_reverts",
            "nameLocation": "3221:37:219",
            "parameters": {
              "id": 84600,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3258:2:219"
            },
            "returnParameters": {
              "id": 84601,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3270:0:219"
            },
            "scope": 85143,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 84723,
            "nodeType": "FunctionDefinition",
            "src": "3496:673:219",
            "nodes": [],
            "body": {
              "id": 84722,
              "nodeType": "Block",
              "src": "3552:617:219",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 84635,
                              "name": "assetReceiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 84315,
                              "src": "3579:13:219",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                                "typeString": "contract AssetReceiver"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                                "typeString": "contract AssetReceiver"
                              }
                            ],
                            "id": 84634,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3571:7:219",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 84633,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3571:7:219",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 84636,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3571:22:219",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 84637,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "3571:30:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 84638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3603:1:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 84632,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2553,
                        2578,
                        2591,
                        2607,
                        2649,
                        2691,
                        2733,
                        2770,
                        2807,
                        2844,
                        351,
                        376,
                        406,
                        431,
                        490,
                        515,
                        545,
                        570,
                        2043,
                        2078
                      ],
                      "referencedDeclaration": 545,
                      "src": "3562:8:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 84639,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3562:43:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84640,
                  "nodeType": "ExpressionStatement",
                  "src": "3562:43:219"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 84646,
                            "name": "assetReceiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84315,
                            "src": "3632:13:219",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                              "typeString": "contract AssetReceiver"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                              "typeString": "contract AssetReceiver"
                            }
                          ],
                          "id": 84645,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3624:7:219",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 84644,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3624:7:219",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 84647,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3624:22:219",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 84648,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3648:7:219",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 84641,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2381,
                        "src": "3616:2:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13045",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 84643,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12687,
                      "src": "3616:7:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 84649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3616:40:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84650,
                  "nodeType": "ExpressionStatement",
                  "src": "3616:40:219"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 84654,
                              "name": "assetReceiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 84315,
                              "src": "3683:13:219",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                                "typeString": "contract AssetReceiver"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                                "typeString": "contract AssetReceiver"
                              }
                            ],
                            "id": 84653,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3675:7:219",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 84652,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3675:7:219",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 84655,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3675:22:219",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 84656,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "3675:30:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 84657,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3707:7:219",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 84651,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2553,
                        2578,
                        2591,
                        2607,
                        2649,
                        2691,
                        2733,
                        2770,
                        2807,
                        2844,
                        351,
                        376,
                        406,
                        431,
                        490,
                        515,
                        545,
                        570,
                        2043,
                        2078
                      ],
                      "referencedDeclaration": 545,
                      "src": "3666:8:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 84658,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3666:49:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84659,
                  "nodeType": "ExpressionStatement",
                  "src": "3666:49:219"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 84663,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 84297,
                              "src": "3743:5:219",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 84662,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "3735:7:219",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 84661,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "3735:7:219",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 84664,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3735:14:219",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 84665,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "3735:22:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 84666,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3759:7:219",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "id": 84660,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2553,
                        2578,
                        2591,
                        2607,
                        2649,
                        2691,
                        2733,
                        2770,
                        2807,
                        2844,
                        351,
                        376,
                        406,
                        431,
                        490,
                        515,
                        545,
                        570,
                        2043,
                        2078
                      ],
                      "referencedDeclaration": 545,
                      "src": "3726:8:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 84667,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3726:41:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84668,
                  "nodeType": "ExpressionStatement",
                  "src": "3726:41:219"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 84672,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3792:4:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 84673,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3798:4:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 84674,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3804:4:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 84675,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3810:4:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "arguments": [
                          {
                            "id": 84678,
                            "name": "assetReceiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84315,
                            "src": "3824:13:219",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                              "typeString": "contract AssetReceiver"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                              "typeString": "contract AssetReceiver"
                            }
                          ],
                          "id": 84677,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3816:7:219",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 84676,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3816:7:219",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 84679,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3816:22:219",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 84669,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2381,
                        "src": "3778:2:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13045",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 84671,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectEmit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12739,
                      "src": "3778:13:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_bool_$_t_bool_$_t_bool_$_t_address_$returns$__$",
                        "typeString": "function (bool,bool,bool,bool,address) external"
                      }
                    },
                    "id": 84680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3778:61:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84681,
                  "nodeType": "ExpressionStatement",
                  "src": "3778:61:219"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 84683,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84297,
                        "src": "3866:5:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 84684,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84297,
                        "src": "3873:5:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "302e35",
                        "id": 84685,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3880:9:219",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        },
                        "value": "0.5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        }
                      ],
                      "id": 84682,
                      "name": "WithdrewETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84329,
                      "src": "3854:11:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 84686,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3854:36:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84687,
                  "nodeType": "EmitStatement",
                  "src": "3849:41:219"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 84691,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84297,
                        "src": "3938:5:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 84688,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2381,
                        "src": "3929:2:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13045",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 84690,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12658,
                      "src": "3929:8:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 84692,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3929:15:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84693,
                  "nodeType": "ExpressionStatement",
                  "src": "3929:15:219"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 84699,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84297,
                            "src": "3988:5:219",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 84698,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3980:8:219",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 84697,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "3980:8:219",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 84700,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3980:14:219",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "302e35",
                        "id": 84701,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3996:9:219",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        },
                        "value": "0.5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 84694,
                        "name": "assetReceiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84315,
                        "src": "3954:13:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                          "typeString": "contract AssetReceiver"
                        }
                      },
                      "id": 84696,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawETH",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 78124,
                      "src": "3954:25:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$_t_uint256_$returns$__$",
                        "typeString": "function (address payable,uint256) external"
                      }
                    },
                    "id": 84702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3954:52:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84703,
                  "nodeType": "ExpressionStatement",
                  "src": "3954:52:219"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 84707,
                              "name": "assetReceiver",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 84315,
                              "src": "4075:13:219",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                                "typeString": "contract AssetReceiver"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                                "typeString": "contract AssetReceiver"
                              }
                            ],
                            "id": 84706,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4067:7:219",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 84705,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4067:7:219",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 84708,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4067:22:219",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 84709,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "4067:30:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "302e35",
                        "id": 84710,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4099:9:219",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        },
                        "value": "0.5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        }
                      ],
                      "id": 84704,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2553,
                        2578,
                        2591,
                        2607,
                        2649,
                        2691,
                        2733,
                        2770,
                        2807,
                        2844,
                        351,
                        376,
                        406,
                        431,
                        490,
                        515,
                        545,
                        570,
                        2043,
                        2078
                      ],
                      "referencedDeclaration": 545,
                      "src": "4058:8:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 84711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4058:51:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84712,
                  "nodeType": "ExpressionStatement",
                  "src": "4058:51:219"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 84716,
                              "name": "alice",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 84297,
                              "src": "4136:5:219",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 84715,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4128:7:219",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 84714,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4128:7:219",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 84717,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4128:14:219",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 84718,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "balance",
                        "nodeType": "MemberAccess",
                        "src": "4128:22:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "312e35",
                        "id": 84719,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4152:9:219",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1500000000000000000_by_1",
                          "typeString": "int_const 1500000000000000000"
                        },
                        "value": "1.5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1500000000000000000_by_1",
                          "typeString": "int_const 1500000000000000000"
                        }
                      ],
                      "id": 84713,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2553,
                        2578,
                        2591,
                        2607,
                        2649,
                        2691,
                        2733,
                        2770,
                        2807,
                        2844,
                        351,
                        376,
                        406,
                        431,
                        490,
                        515,
                        545,
                        570,
                        2043,
                        2078
                      ],
                      "referencedDeclaration": 545,
                      "src": "4119:8:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 84720,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4119:43:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84721,
                  "nodeType": "ExpressionStatement",
                  "src": "4119:43:219"
                }
              ]
            },
            "documentation": {
              "id": 84629,
              "nodeType": "StructuredDocumentation",
              "src": "3425:66:219",
              "text": "@notice Similar as withdrawETH but specify amount to withdraw."
            },
            "functionSelector": "4f95eaa0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_withdrawETHwithAmount_succeeds",
            "nameLocation": "3505:35:219",
            "parameters": {
              "id": 84630,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3540:2:219"
            },
            "returnParameters": {
              "id": 84631,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3552:0:219"
            },
            "scope": 85143,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 84754,
            "nodeType": "FunctionDefinition",
            "src": "4261:228:219",
            "nodes": [],
            "body": {
              "id": 84753,
              "nodeType": "Block",
              "src": "4329:160:219",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 84732,
                            "name": "assetReceiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84315,
                            "src": "4355:13:219",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                              "typeString": "contract AssetReceiver"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                              "typeString": "contract AssetReceiver"
                            }
                          ],
                          "id": 84731,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4347:7:219",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 84730,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4347:7:219",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 84733,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4347:22:219",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 84734,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4371:7:219",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 84727,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2381,
                        "src": "4339:2:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13045",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 84729,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12687,
                      "src": "4339:7:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 84735,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4339:40:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84736,
                  "nodeType": "ExpressionStatement",
                  "src": "4339:40:219"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "554e415554484f52495a4544",
                        "id": 84740,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4405:14:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_269df367cd41cace5897a935d0e0858fe4543b5619d45e09af6b124c1bb3d528",
                          "typeString": "literal_string \"UNAUTHORIZED\""
                        },
                        "value": "UNAUTHORIZED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_269df367cd41cace5897a935d0e0858fe4543b5619d45e09af6b124c1bb3d528",
                          "typeString": "literal_string \"UNAUTHORIZED\""
                        }
                      ],
                      "expression": {
                        "id": 84737,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2381,
                        "src": "4389:2:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13045",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 84739,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12699,
                      "src": "4389:15:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 84741,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4389:31:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84742,
                  "nodeType": "ExpressionStatement",
                  "src": "4389:31:219"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 84748,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84297,
                            "src": "4464:5:219",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 84747,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4456:8:219",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 84746,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4456:8:219",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 84749,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4456:14:219",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      },
                      {
                        "hexValue": "302e35",
                        "id": 84750,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4472:9:219",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        },
                        "value": "0.5"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        },
                        {
                          "typeIdentifier": "t_rational_500000000000000000_by_1",
                          "typeString": "int_const 500000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 84743,
                        "name": "assetReceiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84315,
                        "src": "4430:13:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                          "typeString": "contract AssetReceiver"
                        }
                      },
                      "id": 84745,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawETH",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 78124,
                      "src": "4430:25:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_payable_$_t_uint256_$returns$__$",
                        "typeString": "function (address payable,uint256) external"
                      }
                    },
                    "id": 84751,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4430:52:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84752,
                  "nodeType": "ExpressionStatement",
                  "src": "4430:52:219"
                }
              ]
            },
            "documentation": {
              "id": 84724,
              "nodeType": "StructuredDocumentation",
              "src": "4175:81:219",
              "text": "@notice withdrawETH with address and amount as arguments called by non-owner."
            },
            "functionSelector": "83f79ac9",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_withdrawETHwithAmount_unauthorized_reverts",
            "nameLocation": "4270:47:219",
            "parameters": {
              "id": 84725,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4317:2:219"
            },
            "returnParameters": {
              "id": 84726,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4329:0:219"
            },
            "scope": 85143,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 84856,
            "nodeType": "FunctionDefinition",
            "src": "4576:769:219",
            "nodes": [],
            "body": {
              "id": 84855,
              "nodeType": "Block",
              "src": "4624:721:219",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 84763,
                                "name": "assetReceiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 84315,
                                "src": "4713:13:219",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                                  "typeString": "contract AssetReceiver"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                                  "typeString": "contract AssetReceiver"
                                }
                              ],
                              "id": 84762,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4705:7:219",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 84761,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4705:7:219",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 84764,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4705:22:219",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 84759,
                            "name": "testERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84309,
                            "src": "4685:9:219",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestERC20_$104080",
                              "typeString": "contract TestERC20"
                            }
                          },
                          "id": 84760,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43032,
                          "src": "4685:19:219",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 84765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4685:43:219",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 84766,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4730:1:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 84758,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2553,
                        2578,
                        2591,
                        2607,
                        2649,
                        2691,
                        2733,
                        2770,
                        2807,
                        2844,
                        351,
                        376,
                        406,
                        431,
                        490,
                        515,
                        545,
                        570,
                        2043,
                        2078
                      ],
                      "referencedDeclaration": 545,
                      "src": "4676:8:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 84767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4676:56:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84768,
                  "nodeType": "ExpressionStatement",
                  "src": "4676:56:219"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 84772,
                            "name": "testERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84309,
                            "src": "4756:9:219",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestERC20_$104080",
                              "typeString": "contract TestERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestERC20_$104080",
                              "typeString": "contract TestERC20"
                            }
                          ],
                          "id": 84771,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4748:7:219",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 84770,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4748:7:219",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 84773,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4748:18:219",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 84776,
                            "name": "assetReceiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84315,
                            "src": "4776:13:219",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                              "typeString": "contract AssetReceiver"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                              "typeString": "contract AssetReceiver"
                            }
                          ],
                          "id": 84775,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4768:7:219",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 84774,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4768:7:219",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 84777,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4768:22:219",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 84778,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4792:7:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        }
                      ],
                      "id": 84769,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6567,
                        6584,
                        6707
                      ],
                      "referencedDeclaration": 6584,
                      "src": "4743:4:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 84779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4743:57:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84780,
                  "nodeType": "ExpressionStatement",
                  "src": "4743:57:219"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 84786,
                                "name": "assetReceiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 84315,
                                "src": "4847:13:219",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                                  "typeString": "contract AssetReceiver"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                                  "typeString": "contract AssetReceiver"
                                }
                              ],
                              "id": 84785,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4839:7:219",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 84784,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4839:7:219",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 84787,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4839:22:219",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 84782,
                            "name": "testERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84309,
                            "src": "4819:9:219",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestERC20_$104080",
                              "typeString": "contract TestERC20"
                            }
                          },
                          "id": 84783,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43032,
                          "src": "4819:19:219",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 84788,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4819:43:219",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 84789,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4864:7:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        }
                      ],
                      "id": 84781,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2553,
                        2578,
                        2591,
                        2607,
                        2649,
                        2691,
                        2733,
                        2770,
                        2807,
                        2844,
                        351,
                        376,
                        406,
                        431,
                        490,
                        515,
                        545,
                        570,
                        2043,
                        2078
                      ],
                      "referencedDeclaration": 545,
                      "src": "4810:8:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 84790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4810:62:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84791,
                  "nodeType": "ExpressionStatement",
                  "src": "4810:62:219"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 84795,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84297,
                            "src": "4911:5:219",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 84793,
                            "name": "testERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84309,
                            "src": "4891:9:219",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestERC20_$104080",
                              "typeString": "contract TestERC20"
                            }
                          },
                          "id": 84794,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43032,
                          "src": "4891:19:219",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 84796,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4891:26:219",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 84797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4919:1:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 84792,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2553,
                        2578,
                        2591,
                        2607,
                        2649,
                        2691,
                        2733,
                        2770,
                        2807,
                        2844,
                        351,
                        376,
                        406,
                        431,
                        490,
                        515,
                        545,
                        570,
                        2043,
                        2078
                      ],
                      "referencedDeclaration": 545,
                      "src": "4882:8:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 84798,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4882:39:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84799,
                  "nodeType": "ExpressionStatement",
                  "src": "4882:39:219"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 84803,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4946:4:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 84804,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4952:4:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 84805,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4958:4:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 84806,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4964:4:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "arguments": [
                          {
                            "id": 84809,
                            "name": "assetReceiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84315,
                            "src": "4978:13:219",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                              "typeString": "contract AssetReceiver"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                              "typeString": "contract AssetReceiver"
                            }
                          ],
                          "id": 84808,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4970:7:219",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 84807,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4970:7:219",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 84810,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4970:22:219",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 84800,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2381,
                        "src": "4932:2:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13045",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 84802,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectEmit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12739,
                      "src": "4932:13:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_bool_$_t_bool_$_t_bool_$_t_address_$returns$__$",
                        "typeString": "function (bool,bool,bool,bool,address) external"
                      }
                    },
                    "id": 84811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4932:61:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84812,
                  "nodeType": "ExpressionStatement",
                  "src": "4932:61:219"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 84814,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84297,
                        "src": "5022:5:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 84815,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84297,
                        "src": "5029:5:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 84818,
                            "name": "testERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84309,
                            "src": "5044:9:219",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestERC20_$104080",
                              "typeString": "contract TestERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestERC20_$104080",
                              "typeString": "contract TestERC20"
                            }
                          ],
                          "id": 84817,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5036:7:219",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 84816,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5036:7:219",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 84819,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5036:18:219",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 84820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5056:7:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        }
                      ],
                      "id": 84813,
                      "name": "WithdrewERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84339,
                      "src": "5008:13:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 84821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5008:56:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84822,
                  "nodeType": "EmitStatement",
                  "src": "5003:61:219"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 84826,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84297,
                        "src": "5114:5:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 84823,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2381,
                        "src": "5105:2:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13045",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 84825,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12658,
                      "src": "5105:8:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 84827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5105:15:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84828,
                  "nodeType": "ExpressionStatement",
                  "src": "5105:15:219"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 84832,
                        "name": "testERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84309,
                        "src": "5158:9:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestERC20_$104080",
                          "typeString": "contract TestERC20"
                        }
                      },
                      {
                        "id": 84833,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84297,
                        "src": "5169:5:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestERC20_$104080",
                          "typeString": "contract TestERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 84829,
                        "name": "assetReceiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84315,
                        "src": "5130:13:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                          "typeString": "contract AssetReceiver"
                        }
                      },
                      "id": 84831,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawERC20",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 78148,
                      "src": "5130:27:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ERC20_$43389_$_t_address_$returns$__$",
                        "typeString": "function (contract ERC20,address) external"
                      }
                    },
                    "id": 84834,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5130:45:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84835,
                  "nodeType": "ExpressionStatement",
                  "src": "5130:45:219"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 84839,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84297,
                            "src": "5256:5:219",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 84837,
                            "name": "testERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84309,
                            "src": "5236:9:219",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestERC20_$104080",
                              "typeString": "contract TestERC20"
                            }
                          },
                          "id": 84838,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43032,
                          "src": "5236:19:219",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 84840,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5236:26:219",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 84841,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5264:7:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        }
                      ],
                      "id": 84836,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2553,
                        2578,
                        2591,
                        2607,
                        2649,
                        2691,
                        2733,
                        2770,
                        2807,
                        2844,
                        351,
                        376,
                        406,
                        431,
                        490,
                        515,
                        545,
                        570,
                        2043,
                        2078
                      ],
                      "referencedDeclaration": 545,
                      "src": "5227:8:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 84842,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5227:45:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84843,
                  "nodeType": "ExpressionStatement",
                  "src": "5227:45:219"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 84849,
                                "name": "assetReceiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 84315,
                                "src": "5319:13:219",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                                  "typeString": "contract AssetReceiver"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                                  "typeString": "contract AssetReceiver"
                                }
                              ],
                              "id": 84848,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5311:7:219",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 84847,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5311:7:219",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 84850,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5311:22:219",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 84845,
                            "name": "testERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84309,
                            "src": "5291:9:219",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestERC20_$104080",
                              "typeString": "contract TestERC20"
                            }
                          },
                          "id": 84846,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43032,
                          "src": "5291:19:219",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 84851,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5291:43:219",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 84852,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5336:1:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 84844,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2553,
                        2578,
                        2591,
                        2607,
                        2649,
                        2691,
                        2733,
                        2770,
                        2807,
                        2844,
                        351,
                        376,
                        406,
                        431,
                        490,
                        515,
                        545,
                        570,
                        2043,
                        2078
                      ],
                      "referencedDeclaration": 545,
                      "src": "5282:8:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 84853,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5282:56:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84854,
                  "nodeType": "ExpressionStatement",
                  "src": "5282:56:219"
                }
              ]
            },
            "documentation": {
              "id": 84755,
              "nodeType": "StructuredDocumentation",
              "src": "4495:76:219",
              "text": "@notice Test withdrawERC20 with token and address arguments, from owner."
            },
            "functionSelector": "7c440706",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_withdrawERC20_succeeds",
            "nameLocation": "4585:27:219",
            "parameters": {
              "id": 84756,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4612:2:219"
            },
            "returnParameters": {
              "id": 84757,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4624:0:219"
            },
            "scope": 85143,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 84886,
            "nodeType": "FunctionDefinition",
            "src": "5414:230:219",
            "nodes": [],
            "body": {
              "id": 84885,
              "nodeType": "Block",
              "src": "5474:170:219",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 84863,
                            "name": "testERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84309,
                            "src": "5497:9:219",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestERC20_$104080",
                              "typeString": "contract TestERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestERC20_$104080",
                              "typeString": "contract TestERC20"
                            }
                          ],
                          "id": 84862,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5489:7:219",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 84861,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5489:7:219",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 84864,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5489:18:219",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 84867,
                            "name": "assetReceiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84315,
                            "src": "5517:13:219",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                              "typeString": "contract AssetReceiver"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                              "typeString": "contract AssetReceiver"
                            }
                          ],
                          "id": 84866,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5509:7:219",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 84865,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5509:7:219",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 84868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5509:22:219",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 84869,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5533:7:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        }
                      ],
                      "id": 84860,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6567,
                        6584,
                        6707
                      ],
                      "referencedDeclaration": 6584,
                      "src": "5484:4:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 84870,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5484:57:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84871,
                  "nodeType": "ExpressionStatement",
                  "src": "5484:57:219"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "554e415554484f52495a4544",
                        "id": 84875,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5567:14:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_269df367cd41cace5897a935d0e0858fe4543b5619d45e09af6b124c1bb3d528",
                          "typeString": "literal_string \"UNAUTHORIZED\""
                        },
                        "value": "UNAUTHORIZED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_269df367cd41cace5897a935d0e0858fe4543b5619d45e09af6b124c1bb3d528",
                          "typeString": "literal_string \"UNAUTHORIZED\""
                        }
                      ],
                      "expression": {
                        "id": 84872,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2381,
                        "src": "5551:2:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13045",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 84874,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12699,
                      "src": "5551:15:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 84876,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5551:31:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84877,
                  "nodeType": "ExpressionStatement",
                  "src": "5551:31:219"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 84881,
                        "name": "testERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84309,
                        "src": "5620:9:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestERC20_$104080",
                          "typeString": "contract TestERC20"
                        }
                      },
                      {
                        "id": 84882,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84297,
                        "src": "5631:5:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestERC20_$104080",
                          "typeString": "contract TestERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 84878,
                        "name": "assetReceiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84315,
                        "src": "5592:13:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                          "typeString": "contract AssetReceiver"
                        }
                      },
                      "id": 84880,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawERC20",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 78148,
                      "src": "5592:27:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ERC20_$43389_$_t_address_$returns$__$",
                        "typeString": "function (contract ERC20,address) external"
                      }
                    },
                    "id": 84883,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5592:45:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84884,
                  "nodeType": "ExpressionStatement",
                  "src": "5592:45:219"
                }
              ]
            },
            "documentation": {
              "id": 84857,
              "nodeType": "StructuredDocumentation",
              "src": "5351:58:219",
              "text": "@notice Same as withdrawERC20 but call from non-owner."
            },
            "functionSelector": "e0697ac8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_withdrawERC20_unauthorized_reverts",
            "nameLocation": "5423:39:219",
            "parameters": {
              "id": 84858,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5462:2:219"
            },
            "returnParameters": {
              "id": 84859,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5474:0:219"
            },
            "scope": 85143,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 84989,
            "nodeType": "FunctionDefinition",
            "src": "5723:790:219",
            "nodes": [],
            "body": {
              "id": 84988,
              "nodeType": "Block",
              "src": "5781:732:219",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 84895,
                                "name": "assetReceiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 84315,
                                "src": "5870:13:219",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                                  "typeString": "contract AssetReceiver"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                                  "typeString": "contract AssetReceiver"
                                }
                              ],
                              "id": 84894,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5862:7:219",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 84893,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5862:7:219",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 84896,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5862:22:219",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 84891,
                            "name": "testERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84309,
                            "src": "5842:9:219",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestERC20_$104080",
                              "typeString": "contract TestERC20"
                            }
                          },
                          "id": 84892,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43032,
                          "src": "5842:19:219",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 84897,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5842:43:219",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 84898,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5887:1:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 84890,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2553,
                        2578,
                        2591,
                        2607,
                        2649,
                        2691,
                        2733,
                        2770,
                        2807,
                        2844,
                        351,
                        376,
                        406,
                        431,
                        490,
                        515,
                        545,
                        570,
                        2043,
                        2078
                      ],
                      "referencedDeclaration": 545,
                      "src": "5833:8:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 84899,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5833:56:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84900,
                  "nodeType": "ExpressionStatement",
                  "src": "5833:56:219"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 84904,
                            "name": "testERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84309,
                            "src": "5913:9:219",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestERC20_$104080",
                              "typeString": "contract TestERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestERC20_$104080",
                              "typeString": "contract TestERC20"
                            }
                          ],
                          "id": 84903,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5905:7:219",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 84902,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5905:7:219",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 84905,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5905:18:219",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 84908,
                            "name": "assetReceiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84315,
                            "src": "5933:13:219",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                              "typeString": "contract AssetReceiver"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                              "typeString": "contract AssetReceiver"
                            }
                          ],
                          "id": 84907,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5925:7:219",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 84906,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5925:7:219",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 84909,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5925:22:219",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 84910,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5949:7:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        }
                      ],
                      "id": 84901,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6567,
                        6584,
                        6707
                      ],
                      "referencedDeclaration": 6584,
                      "src": "5900:4:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 84911,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5900:57:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84912,
                  "nodeType": "ExpressionStatement",
                  "src": "5900:57:219"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 84918,
                                "name": "assetReceiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 84315,
                                "src": "6004:13:219",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                                  "typeString": "contract AssetReceiver"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                                  "typeString": "contract AssetReceiver"
                                }
                              ],
                              "id": 84917,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5996:7:219",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 84916,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5996:7:219",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 84919,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5996:22:219",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 84914,
                            "name": "testERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84309,
                            "src": "5976:9:219",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestERC20_$104080",
                              "typeString": "contract TestERC20"
                            }
                          },
                          "id": 84915,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43032,
                          "src": "5976:19:219",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 84920,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5976:43:219",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 84921,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6021:7:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        }
                      ],
                      "id": 84913,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2553,
                        2578,
                        2591,
                        2607,
                        2649,
                        2691,
                        2733,
                        2770,
                        2807,
                        2844,
                        351,
                        376,
                        406,
                        431,
                        490,
                        515,
                        545,
                        570,
                        2043,
                        2078
                      ],
                      "referencedDeclaration": 545,
                      "src": "5967:8:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 84922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5967:62:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84923,
                  "nodeType": "ExpressionStatement",
                  "src": "5967:62:219"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 84927,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84297,
                            "src": "6068:5:219",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 84925,
                            "name": "testERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84309,
                            "src": "6048:9:219",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestERC20_$104080",
                              "typeString": "contract TestERC20"
                            }
                          },
                          "id": 84926,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43032,
                          "src": "6048:19:219",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 84928,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6048:26:219",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 84929,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6076:1:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "id": 84924,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2553,
                        2578,
                        2591,
                        2607,
                        2649,
                        2691,
                        2733,
                        2770,
                        2807,
                        2844,
                        351,
                        376,
                        406,
                        431,
                        490,
                        515,
                        545,
                        570,
                        2043,
                        2078
                      ],
                      "referencedDeclaration": 545,
                      "src": "6039:8:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 84930,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6039:39:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84931,
                  "nodeType": "ExpressionStatement",
                  "src": "6039:39:219"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 84935,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6103:4:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 84936,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6109:4:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 84937,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6115:4:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 84938,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6121:4:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "arguments": [
                          {
                            "id": 84941,
                            "name": "assetReceiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84315,
                            "src": "6135:13:219",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                              "typeString": "contract AssetReceiver"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                              "typeString": "contract AssetReceiver"
                            }
                          ],
                          "id": 84940,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6127:7:219",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 84939,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6127:7:219",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 84942,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6127:22:219",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 84932,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2381,
                        "src": "6089:2:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13045",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 84934,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectEmit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12739,
                      "src": "6089:13:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_bool_$_t_bool_$_t_bool_$_t_address_$returns$__$",
                        "typeString": "function (bool,bool,bool,bool,address) external"
                      }
                    },
                    "id": 84943,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6089:61:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84944,
                  "nodeType": "ExpressionStatement",
                  "src": "6089:61:219"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 84946,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84297,
                        "src": "6179:5:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 84947,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84297,
                        "src": "6186:5:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 84950,
                            "name": "testERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84309,
                            "src": "6201:9:219",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestERC20_$104080",
                              "typeString": "contract TestERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestERC20_$104080",
                              "typeString": "contract TestERC20"
                            }
                          ],
                          "id": 84949,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6193:7:219",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 84948,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6193:7:219",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 84951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6193:18:219",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "35305f303030",
                        "id": 84952,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6213:6:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        "value": "50_000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        }
                      ],
                      "id": 84945,
                      "name": "WithdrewERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84339,
                      "src": "6165:13:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 84953,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6165:55:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84954,
                  "nodeType": "EmitStatement",
                  "src": "6160:60:219"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 84958,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84297,
                        "src": "6270:5:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 84955,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2381,
                        "src": "6261:2:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13045",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 84957,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12658,
                      "src": "6261:8:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 84959,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6261:15:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84960,
                  "nodeType": "ExpressionStatement",
                  "src": "6261:15:219"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 84964,
                        "name": "testERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84309,
                        "src": "6314:9:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestERC20_$104080",
                          "typeString": "contract TestERC20"
                        }
                      },
                      {
                        "id": 84965,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84297,
                        "src": "6325:5:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "35305f303030",
                        "id": 84966,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6332:6:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        "value": "50_000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestERC20_$104080",
                          "typeString": "contract TestERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        }
                      ],
                      "expression": {
                        "id": 84961,
                        "name": "assetReceiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84315,
                        "src": "6286:13:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                          "typeString": "contract AssetReceiver"
                        }
                      },
                      "id": 84963,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawERC20",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 78180,
                      "src": "6286:27:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ERC20_$43389_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract ERC20,address,uint256) external"
                      }
                    },
                    "id": 84967,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6286:53:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84968,
                  "nodeType": "ExpressionStatement",
                  "src": "6286:53:219"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 84972,
                            "name": "alice",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84297,
                            "src": "6420:5:219",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 84970,
                            "name": "testERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84309,
                            "src": "6400:9:219",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestERC20_$104080",
                              "typeString": "contract TestERC20"
                            }
                          },
                          "id": 84971,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43032,
                          "src": "6400:19:219",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 84973,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6400:26:219",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "35305f303030",
                        "id": 84974,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6428:6:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        "value": "50_000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        }
                      ],
                      "id": 84969,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2553,
                        2578,
                        2591,
                        2607,
                        2649,
                        2691,
                        2733,
                        2770,
                        2807,
                        2844,
                        351,
                        376,
                        406,
                        431,
                        490,
                        515,
                        545,
                        570,
                        2043,
                        2078
                      ],
                      "referencedDeclaration": 545,
                      "src": "6391:8:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 84975,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6391:44:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84976,
                  "nodeType": "ExpressionStatement",
                  "src": "6391:44:219"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 84982,
                                "name": "assetReceiver",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 84315,
                                "src": "6482:13:219",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                                  "typeString": "contract AssetReceiver"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                                  "typeString": "contract AssetReceiver"
                                }
                              ],
                              "id": 84981,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "6474:7:219",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 84980,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "6474:7:219",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 84983,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "6474:22:219",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 84978,
                            "name": "testERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84309,
                            "src": "6454:9:219",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestERC20_$104080",
                              "typeString": "contract TestERC20"
                            }
                          },
                          "id": 84979,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "balanceOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43032,
                          "src": "6454:19:219",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address) view external returns (uint256)"
                          }
                        },
                        "id": 84984,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6454:43:219",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "35305f303030",
                        "id": 84985,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6499:6:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        "value": "50_000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        }
                      ],
                      "id": 84977,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2553,
                        2578,
                        2591,
                        2607,
                        2649,
                        2691,
                        2733,
                        2770,
                        2807,
                        2844,
                        351,
                        376,
                        406,
                        431,
                        490,
                        515,
                        545,
                        570,
                        2043,
                        2078
                      ],
                      "referencedDeclaration": 545,
                      "src": "6445:8:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 84986,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6445:61:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 84987,
                  "nodeType": "ExpressionStatement",
                  "src": "6445:61:219"
                }
              ]
            },
            "documentation": {
              "id": 84887,
              "nodeType": "StructuredDocumentation",
              "src": "5650:68:219",
              "text": "@notice Similar as withdrawERC20 but specify amount to withdraw."
            },
            "functionSelector": "b9daeb5a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_withdrawERC20withAmount_succeeds",
            "nameLocation": "5732:37:219",
            "parameters": {
              "id": 84888,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5769:2:219"
            },
            "returnParameters": {
              "id": 84889,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5781:0:219"
            },
            "scope": 85143,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 85020,
            "nodeType": "FunctionDefinition",
            "src": "6597:248:219",
            "nodes": [],
            "body": {
              "id": 85019,
              "nodeType": "Block",
              "src": "6667:178:219",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 84996,
                            "name": "testERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84309,
                            "src": "6690:9:219",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestERC20_$104080",
                              "typeString": "contract TestERC20"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestERC20_$104080",
                              "typeString": "contract TestERC20"
                            }
                          ],
                          "id": 84995,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6682:7:219",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 84994,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6682:7:219",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 84997,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6682:18:219",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 85000,
                            "name": "assetReceiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84315,
                            "src": "6710:13:219",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                              "typeString": "contract AssetReceiver"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                              "typeString": "contract AssetReceiver"
                            }
                          ],
                          "id": 84999,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6702:7:219",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 84998,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "6702:7:219",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 85001,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6702:22:219",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "3130305f303030",
                        "id": 85002,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6726:7:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        },
                        "value": "100_000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_100000_by_1",
                          "typeString": "int_const 100000"
                        }
                      ],
                      "id": 84993,
                      "name": "deal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        6567,
                        6584,
                        6707
                      ],
                      "referencedDeclaration": 6584,
                      "src": "6677:4:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256)"
                      }
                    },
                    "id": 85003,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6677:57:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85004,
                  "nodeType": "ExpressionStatement",
                  "src": "6677:57:219"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "554e415554484f52495a4544",
                        "id": 85008,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6760:14:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_269df367cd41cace5897a935d0e0858fe4543b5619d45e09af6b124c1bb3d528",
                          "typeString": "literal_string \"UNAUTHORIZED\""
                        },
                        "value": "UNAUTHORIZED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_269df367cd41cace5897a935d0e0858fe4543b5619d45e09af6b124c1bb3d528",
                          "typeString": "literal_string \"UNAUTHORIZED\""
                        }
                      ],
                      "expression": {
                        "id": 85005,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2381,
                        "src": "6744:2:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13045",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 85007,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12699,
                      "src": "6744:15:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 85009,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6744:31:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85010,
                  "nodeType": "ExpressionStatement",
                  "src": "6744:31:219"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85014,
                        "name": "testERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84309,
                        "src": "6813:9:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestERC20_$104080",
                          "typeString": "contract TestERC20"
                        }
                      },
                      {
                        "id": 85015,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84297,
                        "src": "6824:5:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "35305f303030",
                        "id": 85016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6831:6:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        },
                        "value": "50_000"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestERC20_$104080",
                          "typeString": "contract TestERC20"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_50000_by_1",
                          "typeString": "int_const 50000"
                        }
                      ],
                      "expression": {
                        "id": 85011,
                        "name": "assetReceiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84315,
                        "src": "6785:13:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                          "typeString": "contract AssetReceiver"
                        }
                      },
                      "id": 85013,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawERC20",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 78180,
                      "src": "6785:27:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ERC20_$43389_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract ERC20,address,uint256) external"
                      }
                    },
                    "id": 85017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6785:53:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85018,
                  "nodeType": "ExpressionStatement",
                  "src": "6785:53:219"
                }
              ]
            },
            "documentation": {
              "id": 84990,
              "nodeType": "StructuredDocumentation",
              "src": "6519:73:219",
              "text": "@notice Similar as withdrawERC20 with amount but call from non-owner."
            },
            "functionSelector": "2148ab09",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_withdrawERC20withAmount_unauthorized_reverts",
            "nameLocation": "6606:49:219",
            "parameters": {
              "id": 84991,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6655:2:219"
            },
            "returnParameters": {
              "id": 84992,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6667:0:219"
            },
            "scope": 85143,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 85106,
            "nodeType": "FunctionDefinition",
            "src": "6899:818:219",
            "nodes": [],
            "body": {
              "id": 85105,
              "nodeType": "Block",
              "src": "6948:769:219",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 85027,
                            "name": "DEFAULT_TOKEN_ID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84306,
                            "src": "7052:16:219",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          ],
                          "expression": {
                            "id": 85025,
                            "name": "testERC721",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84312,
                            "src": "7033:10:219",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestERC721_$104113",
                              "typeString": "contract TestERC721"
                            }
                          },
                          "id": 85026,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43458,
                          "src": "7033:18:219",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 85028,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7033:36:219",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 85029,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84297,
                        "src": "7071:5:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 85024,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2553,
                        2578,
                        2591,
                        2607,
                        2649,
                        2691,
                        2733,
                        2770,
                        2807,
                        2844,
                        351,
                        376,
                        406,
                        431,
                        490,
                        515,
                        545,
                        570,
                        2043,
                        2078
                      ],
                      "referencedDeclaration": 351,
                      "src": "7024:8:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 85030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7024:53:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85031,
                  "nodeType": "ExpressionStatement",
                  "src": "7024:53:219"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85035,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84297,
                        "src": "7150:5:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 85032,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2381,
                        "src": "7141:2:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13045",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 85034,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12658,
                      "src": "7141:8:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 85036,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7141:15:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85037,
                  "nodeType": "ExpressionStatement",
                  "src": "7141:15:219"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85041,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84297,
                        "src": "7190:5:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 85044,
                            "name": "assetReceiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84315,
                            "src": "7205:13:219",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                              "typeString": "contract AssetReceiver"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                              "typeString": "contract AssetReceiver"
                            }
                          ],
                          "id": 85043,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7197:7:219",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 85042,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7197:7:219",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 85045,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7197:22:219",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 85046,
                        "name": "DEFAULT_TOKEN_ID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84306,
                        "src": "7221:16:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "id": 85038,
                        "name": "testERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84312,
                        "src": "7166:10:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestERC721_$104113",
                          "typeString": "contract TestERC721"
                        }
                      },
                      "id": 85040,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43650,
                      "src": "7166:23:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 85047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7166:72:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85048,
                  "nodeType": "ExpressionStatement",
                  "src": "7166:72:219"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 85052,
                            "name": "DEFAULT_TOKEN_ID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84306,
                            "src": "7276:16:219",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          ],
                          "expression": {
                            "id": 85050,
                            "name": "testERC721",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84312,
                            "src": "7257:10:219",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestERC721_$104113",
                              "typeString": "contract TestERC721"
                            }
                          },
                          "id": 85051,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43458,
                          "src": "7257:18:219",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 85053,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7257:36:219",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 85056,
                            "name": "assetReceiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84315,
                            "src": "7303:13:219",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                              "typeString": "contract AssetReceiver"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                              "typeString": "contract AssetReceiver"
                            }
                          ],
                          "id": 85055,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7295:7:219",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 85054,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7295:7:219",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 85057,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7295:22:219",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 85049,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2553,
                        2578,
                        2591,
                        2607,
                        2649,
                        2691,
                        2733,
                        2770,
                        2807,
                        2844,
                        351,
                        376,
                        406,
                        431,
                        490,
                        515,
                        545,
                        570,
                        2043,
                        2078
                      ],
                      "referencedDeclaration": 351,
                      "src": "7248:8:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 85058,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7248:70:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85059,
                  "nodeType": "ExpressionStatement",
                  "src": "7248:70:219"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 85063,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7343:4:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 85064,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7349:4:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 85065,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7355:4:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 85066,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7361:4:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "arguments": [
                          {
                            "id": 85069,
                            "name": "assetReceiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84315,
                            "src": "7375:13:219",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                              "typeString": "contract AssetReceiver"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                              "typeString": "contract AssetReceiver"
                            }
                          ],
                          "id": 85068,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7367:7:219",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 85067,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7367:7:219",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 85070,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7367:22:219",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 85060,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2381,
                        "src": "7329:2:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13045",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 85062,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectEmit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12739,
                      "src": "7329:13:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_bool_$_t_bool_$_t_bool_$_t_address_$returns$__$",
                        "typeString": "function (bool,bool,bool,bool,address) external"
                      }
                    },
                    "id": 85071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7329:61:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85072,
                  "nodeType": "ExpressionStatement",
                  "src": "7329:61:219"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 85074,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84297,
                        "src": "7420:5:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 85075,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84297,
                        "src": "7427:5:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 85078,
                            "name": "testERC721",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84312,
                            "src": "7442:10:219",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestERC721_$104113",
                              "typeString": "contract TestERC721"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_TestERC721_$104113",
                              "typeString": "contract TestERC721"
                            }
                          ],
                          "id": 85077,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7434:7:219",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 85076,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7434:7:219",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 85079,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7434:19:219",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 85080,
                        "name": "DEFAULT_TOKEN_ID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84306,
                        "src": "7455:16:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "id": 85073,
                      "name": "WithdrewERC721",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 84349,
                      "src": "7405:14:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,address,uint256)"
                      }
                    },
                    "id": 85081,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7405:67:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85082,
                  "nodeType": "EmitStatement",
                  "src": "7400:72:219"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85086,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84297,
                        "src": "7523:5:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 85083,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2381,
                        "src": "7514:2:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13045",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 85085,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12658,
                      "src": "7514:8:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 85087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7514:15:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85088,
                  "nodeType": "ExpressionStatement",
                  "src": "7514:15:219"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85092,
                        "name": "testERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84312,
                        "src": "7568:10:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestERC721_$104113",
                          "typeString": "contract TestERC721"
                        }
                      },
                      {
                        "id": 85093,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84297,
                        "src": "7580:5:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 85094,
                        "name": "DEFAULT_TOKEN_ID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84306,
                        "src": "7587:16:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestERC721_$104113",
                          "typeString": "contract TestERC721"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "id": 85089,
                        "name": "assetReceiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84315,
                        "src": "7539:13:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                          "typeString": "contract AssetReceiver"
                        }
                      },
                      "id": 85091,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawERC721",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 78216,
                      "src": "7539:28:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ERC721_$43933_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract ERC721,address,uint256) external"
                      }
                    },
                    "id": 85095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7539:65:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85096,
                  "nodeType": "ExpressionStatement",
                  "src": "7539:65:219"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 85100,
                            "name": "DEFAULT_TOKEN_ID",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84306,
                            "src": "7685:16:219",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint8",
                              "typeString": "uint8"
                            }
                          ],
                          "expression": {
                            "id": 85098,
                            "name": "testERC721",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84312,
                            "src": "7666:10:219",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_TestERC721_$104113",
                              "typeString": "contract TestERC721"
                            }
                          },
                          "id": 85099,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ownerOf",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43458,
                          "src": "7666:18:219",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_address_$",
                            "typeString": "function (uint256) view external returns (address)"
                          }
                        },
                        "id": 85101,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7666:36:219",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 85102,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84297,
                        "src": "7704:5:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 85097,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2553,
                        2578,
                        2591,
                        2607,
                        2649,
                        2691,
                        2733,
                        2770,
                        2807,
                        2844,
                        351,
                        376,
                        406,
                        431,
                        490,
                        515,
                        545,
                        570,
                        2043,
                        2078
                      ],
                      "referencedDeclaration": 351,
                      "src": "7657:8:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 85103,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7657:53:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85104,
                  "nodeType": "ExpressionStatement",
                  "src": "7657:53:219"
                }
              ]
            },
            "documentation": {
              "id": 85021,
              "nodeType": "StructuredDocumentation",
              "src": "6851:43:219",
              "text": "@notice Test withdrawERC721 from owner."
            },
            "functionSelector": "5d0c6ddd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_withdrawERC721_succeeds",
            "nameLocation": "6908:28:219",
            "parameters": {
              "id": 85022,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6936:2:219"
            },
            "returnParameters": {
              "id": 85023,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6948:0:219"
            },
            "scope": 85143,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 85142,
            "nodeType": "FunctionDefinition",
            "src": "7790:291:219",
            "nodes": [],
            "body": {
              "id": 85141,
              "nodeType": "Block",
              "src": "7851:230:219",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85113,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84297,
                        "src": "7870:5:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 85110,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2381,
                        "src": "7861:2:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13045",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 85112,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12658,
                      "src": "7861:8:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 85114,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7861:15:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85115,
                  "nodeType": "ExpressionStatement",
                  "src": "7861:15:219"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85119,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84297,
                        "src": "7910:5:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 85122,
                            "name": "assetReceiver",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 84315,
                            "src": "7925:13:219",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                              "typeString": "contract AssetReceiver"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                              "typeString": "contract AssetReceiver"
                            }
                          ],
                          "id": 85121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7917:7:219",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 85120,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7917:7:219",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 85123,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7917:22:219",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 85124,
                        "name": "DEFAULT_TOKEN_ID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84306,
                        "src": "7941:16:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "id": 85116,
                        "name": "testERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84312,
                        "src": "7886:10:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestERC721_$104113",
                          "typeString": "contract TestERC721"
                        }
                      },
                      "id": 85118,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43650,
                      "src": "7886:23:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 85125,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7886:72:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85126,
                  "nodeType": "ExpressionStatement",
                  "src": "7886:72:219"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "554e415554484f52495a4544",
                        "id": 85130,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7984:14:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_269df367cd41cace5897a935d0e0858fe4543b5619d45e09af6b124c1bb3d528",
                          "typeString": "literal_string \"UNAUTHORIZED\""
                        },
                        "value": "UNAUTHORIZED"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_269df367cd41cace5897a935d0e0858fe4543b5619d45e09af6b124c1bb3d528",
                          "typeString": "literal_string \"UNAUTHORIZED\""
                        }
                      ],
                      "expression": {
                        "id": 85127,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2381,
                        "src": "7968:2:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13045",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 85129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectRevert",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12699,
                      "src": "7968:15:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (bytes memory) external"
                      }
                    },
                    "id": 85131,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7968:31:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85132,
                  "nodeType": "ExpressionStatement",
                  "src": "7968:31:219"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 85136,
                        "name": "testERC721",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84312,
                        "src": "8038:10:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_TestERC721_$104113",
                          "typeString": "contract TestERC721"
                        }
                      },
                      {
                        "id": 85137,
                        "name": "alice",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84297,
                        "src": "8050:5:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 85138,
                        "name": "DEFAULT_TOKEN_ID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84306,
                        "src": "8057:16:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_TestERC721_$104113",
                          "typeString": "contract TestERC721"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "id": 85133,
                        "name": "assetReceiver",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 84315,
                        "src": "8009:13:219",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AssetReceiver_$78217",
                          "typeString": "contract AssetReceiver"
                        }
                      },
                      "id": 85135,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawERC721",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 78216,
                      "src": "8009:28:219",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_contract$_ERC721_$43933_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (contract ERC721,address,uint256) external"
                      }
                    },
                    "id": 85139,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8009:65:219",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 85140,
                  "nodeType": "ExpressionStatement",
                  "src": "8009:65:219"
                }
              ]
            },
            "documentation": {
              "id": 85107,
              "nodeType": "StructuredDocumentation",
              "src": "7723:62:219",
              "text": "@notice Similar as withdrawERC721 but call from non-owner."
            },
            "functionSelector": "4d284b27",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_withdrawERC721_unauthorized_reverts",
            "nameLocation": "7799:40:219",
            "parameters": {
              "id": 85108,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7839:2:219"
            },
            "returnParameters": {
              "id": 85109,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7851:0:219"
            },
            "scope": 85143,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 84425,
              "name": "AssetReceiver_Initializer",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 84424,
              "src": "1479:25:219"
            },
            "id": 84426,
            "nodeType": "InheritanceSpecifier",
            "src": "1479:25:219"
          }
        ],
        "canonicalName": "AssetReceiverTest",
        "contractDependencies": [
          78217,
          104080,
          104113
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          85143,
          84424,
          11539,
          2388,
          2385,
          11490,
          7248,
          6958,
          6279,
          4546,
          3852,
          2322
        ],
        "name": "AssetReceiverTest",
        "nameLocation": "1458:17:219",
        "scope": 85144,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 219
}