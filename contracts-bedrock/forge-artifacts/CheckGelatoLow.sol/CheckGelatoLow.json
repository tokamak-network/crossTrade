{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "treasury",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "threshold",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            }
          ],
          "indexed": false,
          "internalType": "struct CheckGelatoLow.Params",
          "name": "params",
          "type": "tuple"
        }
      ],
      "name": "_EventToExposeStructInABI__Params",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_params",
          "type": "bytes"
        }
      ],
      "name": "check",
      "outputs": [
        {
          "internalType": "bool",
          "name": "execute_",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b506102e3806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c64b3bb514610030575b600080fd5b61004361003e366004610160565b610057565b604051901515815260200160405180910390f35b6000808280602001905181019061006e9190610258565b6020810151815160408084015190517fb47064c800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff918216600482015273eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee6024820152939450919291169063b47064c890604401602060405180830381865afa158015610105573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061012991906102bd565b109392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006020828403121561017257600080fd5b813567ffffffffffffffff8082111561018a57600080fd5b818401915084601f83011261019e57600080fd5b8135818111156101b0576101b0610131565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156101f6576101f6610131565b8160405282815287602084870101111561020f57600080fd5b826020860160208301376000928101602001929092525095945050505050565b805173ffffffffffffffffffffffffffffffffffffffff8116811461025357600080fd5b919050565b60006060828403121561026a57600080fd5b6040516060810181811067ffffffffffffffff8211171561028d5761028d610131565b6040526102998361022f565b8152602083015160208201526102b16040840161022f565b60408201529392505050565b6000602082840312156102cf57600080fd5b505191905056fea164736f6c634300080f000a",
    "sourceMap": "352:823:191:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061002b5760003560e01c8063c64b3bb514610030575b600080fd5b61004361003e366004610160565b610057565b604051901515815260200160405180910390f35b6000808280602001905181019061006e9190610258565b6020810151815160408084015190517fb47064c800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff918216600482015273eeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeeee6024820152939450919291169063b47064c890604401602060405180830381865afa158015610105573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061012991906102bd565b109392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006020828403121561017257600080fd5b813567ffffffffffffffff8082111561018a57600080fd5b818401915084601f83011261019e57600080fd5b8135818111156101b0576101b0610131565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f011681019083821181831017156101f6576101f6610131565b8160405282815287602084870101111561020f57600080fd5b826020860160208301376000928101602001929092525095945050505050565b805173ffffffffffffffffffffffffffffffffffffffff8116811461025357600080fd5b919050565b60006060828403121561026a57600080fd5b6040516060810181811067ffffffffffffffff8211171561028d5761028d610131565b6040526102998361022f565b8152602083015160208201526102b16040840161022f565b60408201529392505050565b6000602082840312156102cf57600080fd5b505191905056fea164736f6c634300080f000a",
    "sourceMap": "352:823:191:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;722:451;;;;;;:::i;:::-;;:::i;:::-;;;1353:14:302;;1346:22;1328:41;;1316:2;1301:18;722:451:191;;;;;;;;782:13;807:20;841:7;830:29;;;;;;;;;;;;:::i;:::-;1150:16;;;;961:15;;1008:16;;;;;945:202;;;;;:49;2451:15:302;;;945:202:191;;;2433:34:302;1095:42:191;2483:18:302;;;2476:43;807:52:191;;-1:-1:-1;1150:16:191;;945:49;;;;;2345:18:302;;945:202:191;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:221;;722:451;-1:-1:-1;;;722:451:191:o;14:184:302:-;66:77;63:1;56:88;163:4;160:1;153:15;187:4;184:1;177:15;203:980;271:6;324:2;312:9;303:7;299:23;295:32;292:52;;;340:1;337;330:12;292:52;380:9;367:23;409:18;450:2;442:6;439:14;436:34;;;466:1;463;456:12;436:34;504:6;493:9;489:22;479:32;;549:7;542:4;538:2;534:13;530:27;520:55;;571:1;568;561:12;520:55;607:2;594:16;629:2;625;622:10;619:36;;;635:18;;:::i;:::-;769:2;763:9;831:4;823:13;;674:66;819:22;;;843:2;815:31;811:40;799:53;;;867:18;;;887:22;;;864:46;861:72;;;913:18;;:::i;:::-;953:10;949:2;942:22;988:2;980:6;973:18;1028:7;1023:2;1018;1014;1010:11;1006:20;1003:33;1000:53;;;1049:1;1046;1039:12;1000:53;1105:2;1100;1096;1092:11;1087:2;1079:6;1075:15;1062:46;1150:1;1128:15;;;1145:2;1124:24;1117:35;;;;-1:-1:-1;1132:6:302;203:980;-1:-1:-1;;;;;203:980:302:o;1380:200::-;1459:13;;1512:42;1501:54;;1491:65;;1481:93;;1570:1;1567;1560:12;1481:93;1380:200;;;:::o;1585:608::-;1680:6;1733:2;1721:9;1712:7;1708:23;1704:32;1701:52;;;1749:1;1746;1739:12;1701:52;1782:2;1776:9;1824:2;1816:6;1812:15;1893:6;1881:10;1878:22;1857:18;1845:10;1842:34;1839:62;1836:88;;;1904:18;;:::i;:::-;1940:2;1933:22;1979:40;2009:9;1979:40;:::i;:::-;1971:6;1964:56;2074:2;2063:9;2059:18;2053:25;2048:2;2040:6;2036:15;2029:50;2112:49;2157:2;2146:9;2142:18;2112:49;:::i;:::-;2107:2;2095:15;;2088:74;2099:6;1585:608;-1:-1:-1;;;1585:608:302:o;2530:184::-;2600:6;2653:2;2641:9;2632:7;2628:23;2624:32;2621:52;;;2669:1;2666;2659:12;2621:52;-1:-1:-1;2692:16:302;;2530:184;-1:-1:-1;2530:184:302:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "check(bytes)": "c64b3bb5"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"treasury\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"}],\"indexed\":false,\"internalType\":\"struct CheckGelatoLow.Params\",\"name\":\"params\",\"type\":\"tuple\"}],\"name\":\"_EventToExposeStructInABI__Params\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_params\",\"type\":\"bytes\"}],\"name\":\"check\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"execute_\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"events\":{\"_EventToExposeStructInABI__Params((address,uint256,address))\":{\"params\":{\"params\":\"Parameters to encode.\"}}},\"kind\":\"dev\",\"methods\":{\"check(bytes)\":{\"params\":{\"_params\":\"Encoded parameters for the drip check.\"},\"returns\":{\"execute_\":\"Whether the drip should be executed.\"}}},\"title\":\"CheckGelatoLow\",\"version\":1},\"userdoc\":{\"events\":{\"_EventToExposeStructInABI__Params((address,uint256,address))\":{\"notice\":\"External event used to help client-side tooling encode parameters.\"}},\"kind\":\"user\",\"methods\":{\"check(bytes)\":{\"notice\":\"Checks whether a drip should be executable.\"}},\"notice\":\"DripCheck for checking if an account's Gelato ETH balance is below some threshold.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/periphery/drippie/dripchecks/CheckGelatoLow.sol\":\"CheckGelatoLow\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@cwia/=lib/clones-with-immutable-args/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/solmate/\",\":clones-with-immutable-args/=lib/clones-with-immutable-args/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"src/periphery/drippie/IDripCheck.sol\":{\"keccak256\":\"0x4db01d51dc47813980a9a8d76e5f14783b6cfed23e4237260281edbe06dad628\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ce87d7ed0e12be217066aafdc0d16ff563cdc6807ecbe2eb58b751d00e984d6\",\"dweb:/ipfs/QmNWzTdxGk6ZDagpbz5RHCTWBkoSoPzaNtcSHppw3rBsmN\"]},\"src/periphery/drippie/dripchecks/CheckGelatoLow.sol\":{\"keccak256\":\"0x44e0e4d49407e786ef475249a68160348829d1afcb6ce89ae2879de848f69289\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb3790b5e80e5c96946335a5773ba082aaa64585e6549772b5e74e7fcce0745e\",\"dweb:/ipfs/QmbJcZqCf67uWNpBfrnrhGvECp4X2cpfKKc18wzsimqM1Z\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "struct CheckGelatoLow.Params",
              "name": "params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "treasury",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "threshold",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "_EventToExposeStructInABI__Params",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "_params",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "check",
          "outputs": [
            {
              "internalType": "bool",
              "name": "execute_",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "check(bytes)": {
            "params": {
              "_params": "Encoded parameters for the drip check."
            },
            "returns": {
              "execute_": "Whether the drip should be executed."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "check(bytes)": {
            "notice": "Checks whether a drip should be executable."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@cwia/=lib/clones-with-immutable-args/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@rari-capital/solmate/=lib/solmate/",
        "clones-with-immutable-args/=lib/clones-with-immutable-args/src/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "safe-contracts/=lib/safe-contracts/contracts/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 999999
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "src/periphery/drippie/dripchecks/CheckGelatoLow.sol": "CheckGelatoLow"
      },
      "libraries": {}
    },
    "sources": {
      "src/periphery/drippie/IDripCheck.sol": {
        "keccak256": "0x4db01d51dc47813980a9a8d76e5f14783b6cfed23e4237260281edbe06dad628",
        "urls": [
          "bzz-raw://0ce87d7ed0e12be217066aafdc0d16ff563cdc6807ecbe2eb58b751d00e984d6",
          "dweb:/ipfs/QmNWzTdxGk6ZDagpbz5RHCTWBkoSoPzaNtcSHppw3rBsmN"
        ],
        "license": "MIT"
      },
      "src/periphery/drippie/dripchecks/CheckGelatoLow.sol": {
        "keccak256": "0x44e0e4d49407e786ef475249a68160348829d1afcb6ce89ae2879de848f69289",
        "urls": [
          "bzz-raw://fb3790b5e80e5c96946335a5773ba082aaa64585e6549772b5e74e7fcce0745e",
          "dweb:/ipfs/QmbJcZqCf67uWNpBfrnrhGvECp4X2cpfKKc18wzsimqM1Z"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": {}
  },
  "userdoc": {
    "version": 1,
    "kind": "user",
    "methods": {
      "check(bytes)": {
        "notice": "Checks whether a drip should be executable."
      }
    },
    "events": {
      "_EventToExposeStructInABI__Params((address,uint256,address))": {
        "notice": "External event used to help client-side tooling encode parameters."
      }
    },
    "notice": "DripCheck for checking if an account's Gelato ETH balance is below some threshold."
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "methods": {
      "check(bytes)": {
        "params": {
          "_params": "Encoded parameters for the drip check."
        },
        "returns": {
          "execute_": "Whether the drip should be executed."
        }
      }
    },
    "events": {
      "_EventToExposeStructInABI__Params((address,uint256,address))": {
        "params": {
          "params": "Parameters to encode."
        }
      }
    },
    "title": "CheckGelatoLow"
  },
  "ast": {
    "absolutePath": "src/periphery/drippie/dripchecks/CheckGelatoLow.sol",
    "id": 79040,
    "exportedSymbols": {
      "CheckGelatoLow": [
        79039
      ],
      "IDripCheck": [
        78880
      ],
      "IGelatoTreasury": [
        78988
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:1144:191",
    "nodes": [
      {
        "id": 78976,
        "nodeType": "PragmaDirective",
        "src": "32:23:191",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 78978,
        "nodeType": "ImportDirective",
        "src": "57:47:191",
        "nodes": [],
        "absolutePath": "src/periphery/drippie/IDripCheck.sol",
        "file": "../IDripCheck.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 79040,
        "sourceUnit": 78881,
        "symbolAliases": [
          {
            "foreign": {
              "id": 78977,
              "name": "IDripCheck",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 78880,
              "src": "66:10:191",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 78988,
        "nodeType": "ContractDefinition",
        "src": "106:123:191",
        "nodes": [
          {
            "id": 78987,
            "nodeType": "FunctionDefinition",
            "src": "138:89:191",
            "nodes": [],
            "functionSelector": "b47064c8",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "userTokenBalance",
            "nameLocation": "147:16:191",
            "parameters": {
              "id": 78983,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78980,
                  "mutability": "mutable",
                  "name": "_user",
                  "nameLocation": "172:5:191",
                  "nodeType": "VariableDeclaration",
                  "scope": 78987,
                  "src": "164:13:191",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 78979,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "164:7:191",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78982,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "187:6:191",
                  "nodeType": "VariableDeclaration",
                  "scope": 78987,
                  "src": "179:14:191",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 78981,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "179:7:191",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "163:31:191"
            },
            "returnParameters": {
              "id": 78986,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78985,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 78987,
                  "src": "218:7:191",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 78984,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "218:7:191",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "217:9:191"
            },
            "scope": 78988,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IGelatoTreasury",
        "contractDependencies": [],
        "contractKind": "interface",
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          78988
        ],
        "name": "IGelatoTreasury",
        "nameLocation": "116:15:191",
        "scope": 79040,
        "usedErrors": []
      },
      {
        "id": 79039,
        "nodeType": "ContractDefinition",
        "src": "352:823:191",
        "nodes": [
          {
            "id": 78998,
            "nodeType": "StructDefinition",
            "src": "396:101:191",
            "nodes": [],
            "canonicalName": "CheckGelatoLow.Params",
            "members": [
              {
                "constant": false,
                "id": 78993,
                "mutability": "mutable",
                "name": "treasury",
                "nameLocation": "428:8:191",
                "nodeType": "VariableDeclaration",
                "scope": 78998,
                "src": "420:16:191",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 78992,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "420:7:191",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 78995,
                "mutability": "mutable",
                "name": "threshold",
                "nameLocation": "454:9:191",
                "nodeType": "VariableDeclaration",
                "scope": 78998,
                "src": "446:17:191",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 78994,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "446:7:191",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 78997,
                "mutability": "mutable",
                "name": "recipient",
                "nameLocation": "481:9:191",
                "nodeType": "VariableDeclaration",
                "scope": 78998,
                "src": "473:17:191",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 78996,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "473:7:191",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Params",
            "nameLocation": "403:6:191",
            "scope": 79039,
            "visibility": "public"
          },
          {
            "id": 79004,
            "nodeType": "EventDefinition",
            "src": "630:55:191",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 78999,
              "nodeType": "StructuredDocumentation",
              "src": "503:122:191",
              "text": "@notice External event used to help client-side tooling encode parameters.\n @param params Parameters to encode."
            },
            "eventSelector": "70b37aa219c5dbaa4c32bf3eb790cd0139092a31a18b69cec0036f7d67c342bc",
            "name": "_EventToExposeStructInABI__Params",
            "nameLocation": "636:33:191",
            "parameters": {
              "id": 79003,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79002,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "params",
                  "nameLocation": "677:6:191",
                  "nodeType": "VariableDeclaration",
                  "scope": 79004,
                  "src": "670:13:191",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Params_$78998_memory_ptr",
                    "typeString": "struct CheckGelatoLow.Params"
                  },
                  "typeName": {
                    "id": 79001,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 79000,
                      "name": "Params",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 78998,
                      "src": "670:6:191"
                    },
                    "referencedDeclaration": 78998,
                    "src": "670:6:191",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Params_$78998_storage_ptr",
                      "typeString": "struct CheckGelatoLow.Params"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "669:15:191"
            }
          },
          {
            "id": 79038,
            "nodeType": "FunctionDefinition",
            "src": "722:451:191",
            "nodes": [],
            "body": {
              "id": 79037,
              "nodeType": "Block",
              "src": "797:376:191",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    79014
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 79014,
                      "mutability": "mutable",
                      "name": "params",
                      "nameLocation": "821:6:191",
                      "nodeType": "VariableDeclaration",
                      "scope": 79037,
                      "src": "807:20:191",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Params_$78998_memory_ptr",
                        "typeString": "struct CheckGelatoLow.Params"
                      },
                      "typeName": {
                        "id": 79013,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 79012,
                          "name": "Params",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 78998,
                          "src": "807:6:191"
                        },
                        "referencedDeclaration": 78998,
                        "src": "807:6:191",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Params_$78998_storage_ptr",
                          "typeString": "struct CheckGelatoLow.Params"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 79021,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 79017,
                        "name": "_params",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 79007,
                        "src": "841:7:191",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "components": [
                          {
                            "id": 79018,
                            "name": "Params",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78998,
                            "src": "851:6:191",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_Params_$78998_storage_ptr_$",
                              "typeString": "type(struct CheckGelatoLow.Params storage pointer)"
                            }
                          }
                        ],
                        "id": 79019,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "850:8:191",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_Params_$78998_storage_ptr_$",
                          "typeString": "type(struct CheckGelatoLow.Params storage pointer)"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_type$_t_struct$_Params_$78998_storage_ptr_$",
                          "typeString": "type(struct CheckGelatoLow.Params storage pointer)"
                        }
                      ],
                      "expression": {
                        "id": 79015,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "830:3:191",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 79016,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "decode",
                      "nodeType": "MemberAccess",
                      "src": "830:10:191",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abidecode_pure$__$returns$__$",
                        "typeString": "function () pure"
                      }
                    },
                    "id": 79020,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "830:29:191",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Params_$78998_memory_ptr",
                      "typeString": "struct CheckGelatoLow.Params memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "807:52:191"
                },
                {
                  "expression": {
                    "id": 79035,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 79022,
                      "name": "execute_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79010,
                      "src": "934:8:191",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 79034,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "expression": {
                              "id": 79028,
                              "name": "params",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 79014,
                              "src": "1008:6:191",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Params_$78998_memory_ptr",
                                "typeString": "struct CheckGelatoLow.Params memory"
                              }
                            },
                            "id": 79029,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "recipient",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 78997,
                            "src": "1008:16:191",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "hexValue": "307845656565654565656545654565654565456545656545454565656565456565656565656545456545",
                            "id": 79030,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "1095:42:191",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "value": "0xEeeeeEeeeEeEeeEeEeEeeEEEeeeeEeeeeeeeEEeE"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 79024,
                                  "name": "params",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 79014,
                                  "src": "961:6:191",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_Params_$78998_memory_ptr",
                                    "typeString": "struct CheckGelatoLow.Params memory"
                                  }
                                },
                                "id": 79025,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "treasury",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 78993,
                                "src": "961:15:191",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "id": 79023,
                              "name": "IGelatoTreasury",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 78988,
                              "src": "945:15:191",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_IGelatoTreasury_$78988_$",
                                "typeString": "type(contract IGelatoTreasury)"
                              }
                            },
                            "id": 79026,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "945:32:191",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IGelatoTreasury_$78988",
                              "typeString": "contract IGelatoTreasury"
                            }
                          },
                          "id": 79027,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "userTokenBalance",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 78987,
                          "src": "945:49:191",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                            "typeString": "function (address,address) view external returns (uint256)"
                          }
                        },
                        "id": 79031,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "945:202:191",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "<",
                      "rightExpression": {
                        "expression": {
                          "id": 79032,
                          "name": "params",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79014,
                          "src": "1150:6:191",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Params_$78998_memory_ptr",
                            "typeString": "struct CheckGelatoLow.Params memory"
                          }
                        },
                        "id": 79033,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "threshold",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 78995,
                        "src": "1150:16:191",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "945:221:191",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "934:232:191",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 79036,
                  "nodeType": "ExpressionStatement",
                  "src": "934:232:191"
                }
              ]
            },
            "baseFunctions": [
              78879
            ],
            "documentation": {
              "id": 79005,
              "nodeType": "StructuredDocumentation",
              "src": "691:26:191",
              "text": "@inheritdoc IDripCheck"
            },
            "functionSelector": "c64b3bb5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "check",
            "nameLocation": "731:5:191",
            "parameters": {
              "id": 79008,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79007,
                  "mutability": "mutable",
                  "name": "_params",
                  "nameLocation": "750:7:191",
                  "nodeType": "VariableDeclaration",
                  "scope": 79038,
                  "src": "737:20:191",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 79006,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "737:5:191",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "736:22:191"
            },
            "returnParameters": {
              "id": 79011,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79010,
                  "mutability": "mutable",
                  "name": "execute_",
                  "nameLocation": "787:8:191",
                  "nodeType": "VariableDeclaration",
                  "scope": 79038,
                  "src": "782:13:191",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 79009,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "782:4:191",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "781:15:191"
            },
            "scope": 79039,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 78990,
              "name": "IDripCheck",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 78880,
              "src": "379:10:191"
            },
            "id": 78991,
            "nodeType": "InheritanceSpecifier",
            "src": "379:10:191"
          }
        ],
        "canonicalName": "CheckGelatoLow",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 78989,
          "nodeType": "StructuredDocumentation",
          "src": "231:121:191",
          "text": "@title CheckGelatoLow\n @notice DripCheck for checking if an account's Gelato ETH balance is below some threshold."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          79039,
          78880
        ],
        "name": "CheckGelatoLow",
        "nameLocation": "361:14:191",
        "scope": 79040,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 191
}