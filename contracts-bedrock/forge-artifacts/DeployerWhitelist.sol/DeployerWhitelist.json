{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldOwner",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "oldOwner",
          "type": "address"
        }
      ],
      "name": "WhitelistDisabled",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "deployer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "whitelisted",
          "type": "bool"
        }
      ],
      "name": "WhitelistStatusChanged",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "enableArbitraryContractDeployment",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_deployer",
          "type": "address"
        }
      ],
      "name": "isDeployerAllowed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_deployer",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isWhitelisted",
          "type": "bool"
        }
      ],
      "name": "setWhitelistedDeployer",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "whitelist",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b506107bc806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100fc5780639b19251a14610141578063b1540a0114610174578063bdc7b54f1461018757600080fd5b806308fd63221461008257806313af40351461009757806354fd4d50146100aa575b600080fd5b6100956100903660046106de565b61018f565b005b6100956100a536600461071a565b6102ef565b6100e66040518060400160405280600581526020017f312e312e3000000000000000000000000000000000000000000000000000000081525081565b6040516100f3919061073c565b60405180910390f35b60005461011c9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100f3565b61016461014f36600461071a565b60016020526000908152604090205460ff1681565b60405190151581526020016100f3565b61016461018236600461071a565b610520565b610095610571565b60005473ffffffffffffffffffffffffffffffffffffffff163314610261576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604c60248201527f4465706c6f79657257686974656c6973743a2066756e6374696f6e2063616e2060448201527f6f6e6c792062652063616c6c656420627920746865206f776e6572206f66207460648201527f68697320636f6e74726163740000000000000000000000000000000000000000608482015260a4015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821660008181526001602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168515159081179091558251938452908301527f8daaf060c3306c38e068a75c054bf96ecd85a3db1252712c4d93632744c42e0d910160405180910390a15050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146103bc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604c60248201527f4465706c6f79657257686974656c6973743a2066756e6374696f6e2063616e2060448201527f6f6e6c792062652063616c6c656420627920746865206f776e6572206f66207460648201527f68697320636f6e74726163740000000000000000000000000000000000000000608482015260a401610258565b73ffffffffffffffffffffffffffffffffffffffff8116610485576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604d60248201527f4465706c6f79657257686974656c6973743a2063616e206f6e6c79206265206460448201527f697361626c65642076696120656e61626c65417262697472617279436f6e747260648201527f6163744465706c6f796d656e7400000000000000000000000000000000000000608482015260a401610258565b6000546040805173ffffffffffffffffffffffffffffffffffffffff928316815291831660208301527fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c910160405180910390a1600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6000805473ffffffffffffffffffffffffffffffffffffffff16158061056b575073ffffffffffffffffffffffffffffffffffffffff821660009081526001602052604090205460ff165b92915050565b60005473ffffffffffffffffffffffffffffffffffffffff16331461063e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604c60248201527f4465706c6f79657257686974656c6973743a2066756e6374696f6e2063616e2060448201527f6f6e6c792062652063616c6c656420627920746865206f776e6572206f66207460648201527f68697320636f6e74726163740000000000000000000000000000000000000000608482015260a401610258565b60005460405173ffffffffffffffffffffffffffffffffffffffff90911681527fc0e106cf568e50698fdbde1eff56f5a5c966cc7958e37e276918e9e4ccdf8cd49060200160405180910390a1600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b803573ffffffffffffffffffffffffffffffffffffffff811681146106d957600080fd5b919050565b600080604083850312156106f157600080fd5b6106fa836106b5565b91506020830135801515811461070f57600080fd5b809150509250929050565b60006020828403121561072c57600080fd5b610735826106b5565b9392505050565b600060208083528351808285015260005b818110156107695785810183015185820160400152820161074d565b8181111561077b576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01692909201604001939250505056fea164736f6c634300080f000a",
    "sourceMap": "697:2975:131:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061007d5760003560e01c80638da5cb5b1161005b5780638da5cb5b146100fc5780639b19251a14610141578063b1540a0114610174578063bdc7b54f1461018757600080fd5b806308fd63221461008257806313af40351461009757806354fd4d50146100aa575b600080fd5b6100956100903660046106de565b61018f565b005b6100956100a536600461071a565b6102ef565b6100e66040518060400160405280600581526020017f312e312e3000000000000000000000000000000000000000000000000000000081525081565b6040516100f3919061073c565b60405180910390f35b60005461011c9073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100f3565b61016461014f36600461071a565b60016020526000908152604090205460ff1681565b60405190151581526020016100f3565b61016461018236600461071a565b610520565b610095610571565b60005473ffffffffffffffffffffffffffffffffffffffff163314610261576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604c60248201527f4465706c6f79657257686974656c6973743a2066756e6374696f6e2063616e2060448201527f6f6e6c792062652063616c6c656420627920746865206f776e6572206f66207460648201527f68697320636f6e74726163740000000000000000000000000000000000000000608482015260a4015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff821660008181526001602090815260409182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00168515159081179091558251938452908301527f8daaf060c3306c38e068a75c054bf96ecd85a3db1252712c4d93632744c42e0d910160405180910390a15050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146103bc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604c60248201527f4465706c6f79657257686974656c6973743a2066756e6374696f6e2063616e2060448201527f6f6e6c792062652063616c6c656420627920746865206f776e6572206f66207460648201527f68697320636f6e74726163740000000000000000000000000000000000000000608482015260a401610258565b73ffffffffffffffffffffffffffffffffffffffff8116610485576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604d60248201527f4465706c6f79657257686974656c6973743a2063616e206f6e6c79206265206460448201527f697361626c65642076696120656e61626c65417262697472617279436f6e747260648201527f6163744465706c6f796d656e7400000000000000000000000000000000000000608482015260a401610258565b6000546040805173ffffffffffffffffffffffffffffffffffffffff928316815291831660208301527fb532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c910160405180910390a1600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b6000805473ffffffffffffffffffffffffffffffffffffffff16158061056b575073ffffffffffffffffffffffffffffffffffffffff821660009081526001602052604090205460ff165b92915050565b60005473ffffffffffffffffffffffffffffffffffffffff16331461063e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604c60248201527f4465706c6f79657257686974656c6973743a2066756e6374696f6e2063616e2060448201527f6f6e6c792062652063616c6c656420627920746865206f776e6572206f66207460648201527f68697320636f6e74726163740000000000000000000000000000000000000000608482015260a401610258565b60005460405173ffffffffffffffffffffffffffffffffffffffff90911681527fc0e106cf568e50698fdbde1eff56f5a5c966cc7958e37e276918e9e4ccdf8cd49060200160405180910390a1600080547fffffffffffffffffffffffff0000000000000000000000000000000000000000169055565b803573ffffffffffffffffffffffffffffffffffffffff811681146106d957600080fd5b919050565b600080604083850312156106f157600080fd5b6106fa836106b5565b91506020830135801515811461070f57600080fd5b809150509250929050565b60006020828403121561072c57600080fd5b610735826106b5565b9392505050565b600060208083528351808285015260005b818110156107695785810183015185820160400152820161074d565b8181111561077b576000604083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01692909201604001939250505056fea164736f6c634300080f000a",
    "sourceMap": "697:2975:131:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2277:209;;;;;;:::i;:::-;;:::i;:::-;;2592:513;;;;;;:::i;:::-;;:::i;2018:40::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;889:20;;;;;;;;;;;;1595:42:219;1583:55;;;1565:74;;1553:2;1538:18;889:20:131;1419:226:219;991:41:131;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1815:14:219;;1808:22;1790:41;;1778:2;1763:18;991:41:131;1650:187:219;3526:144:131;;;;;;:::i;:::-;;:::i;3200:138::-;;;:::i;2277:209::-;1845:5;;;;1831:10;:19;1823:108;;;;;;;2044:2:219;1823:108:131;;;2026:21:219;2083:2;2063:18;;;2056:30;2122:34;2102:18;;;2095:62;2193:34;2173:18;;;2166:62;2265:14;2244:19;;;2237:43;2297:19;;1823:108:131;;;;;;;;;2378:20:::1;::::0;::::1;;::::0;;;:9:::1;:20;::::0;;;;;;;;:37;;;::::1;::::0;::::1;;::::0;;::::1;::::0;;;2430:49;;2495:74:219;;;2585:18;;;2578:50;2430:49:131::1;::::0;2468:18:219;2430:49:131::1;;;;;;;2277:209:::0;;:::o;2592:513::-;1845:5;;;;1831:10;:19;1823:108;;;;;;;2044:2:219;1823:108:131;;;2026:21:219;2083:2;2063:18;;;2056:30;2122:34;2102:18;;;2095:62;2193:34;2173:18;;;2166:62;2265:14;2244:19;;;2237:43;2297:19;;1823:108:131;1842:480:219;1823:108:131;2929:20:::1;::::0;::::1;2921:110;;;::::0;::::1;::::0;;2841:2:219;2921:110:131::1;::::0;::::1;2823:21:219::0;2880:2;2860:18;;;2853:30;2919:34;2899:18;;;2892:62;2990:34;2970:18;;;2963:62;3062:15;3041:19;;;3034:44;3095:19;;2921:110:131::1;2639:481:219::0;2921:110:131::1;3060:5;::::0;3047:27:::1;::::0;;3060:5:::1;::::0;;::::1;3360:34:219::0;;3430:15;;;3425:2;3410:18;;3403:43;3047:27:131::1;::::0;3272:18:219;3047:27:131::1;;;;;;;3084:5;:14:::0;;;::::1;;::::0;;;::::1;::::0;;;::::1;::::0;;2592:513::o;3526:144::-;3595:4;3619:5;;:19;:5;:19;;:43;;-1:-1:-1;3642:20:131;;;;;;;:9;:20;;;;;;;;3619:43;3611:52;3526:144;-1:-1:-1;;3526:144:131:o;3200:138::-;1845:5;;;;1831:10;:19;1823:108;;;;;;;2044:2:219;1823:108:131;;;2026:21:219;2083:2;2063:18;;;2056:30;2122:34;2102:18;;;2095:62;2193:34;2173:18;;;2166:62;2265:14;2244:19;;;2237:43;2297:19;;1823:108:131;1842:480:219;1823:108:131;3297:5:::1;::::0;3279:24:::1;::::0;3297:5:::1;::::0;;::::1;1565:74:219::0;;3279:24:131::1;::::0;1553:2:219;1538:18;3279:24:131::1;;;;;;;3329:1;3313:18:::0;;;::::1;::::0;;3200:138::o;14:196:219:-;82:20;;142:42;131:54;;121:65;;111:93;;200:1;197;190:12;111:93;14:196;;;:::o;215:347::-;280:6;288;341:2;329:9;320:7;316:23;312:32;309:52;;;357:1;354;347:12;309:52;380:29;399:9;380:29;:::i;:::-;370:39;;459:2;448:9;444:18;431:32;506:5;499:13;492:21;485:5;482:32;472:60;;528:1;525;518:12;472:60;551:5;541:15;;;215:347;;;;;:::o;567:186::-;626:6;679:2;667:9;658:7;654:23;650:32;647:52;;;695:1;692;685:12;647:52;718:29;737:9;718:29;:::i;:::-;708:39;567:186;-1:-1:-1;;;567:186:219:o;758:656::-;870:4;899:2;928;917:9;910:21;960:6;954:13;1003:6;998:2;987:9;983:18;976:34;1028:1;1038:140;1052:6;1049:1;1046:13;1038:140;;;1147:14;;;1143:23;;1137:30;1113:17;;;1132:2;1109:26;1102:66;1067:10;;1038:140;;;1196:6;1193:1;1190:13;1187:91;;;1266:1;1261:2;1252:6;1241:9;1237:22;1233:31;1226:42;1187:91;-1:-1:-1;1330:2:219;1318:15;1335:66;1314:88;1299:104;;;;1405:2;1295:113;;758:656;-1:-1:-1;;;758:656:219:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "enableArbitraryContractDeployment()": "bdc7b54f",
    "isDeployerAllowed(address)": "b1540a01",
    "owner()": "8da5cb5b",
    "setOwner(address)": "13af4035",
    "setWhitelistedDeployer(address,bool)": "08fd6322",
    "version()": "54fd4d50",
    "whitelist(address)": "9b19251a"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"oldOwner\",\"type\":\"address\"}],\"name\":\"WhitelistDisabled\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"deployer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"whitelisted\",\"type\":\"bool\"}],\"name\":\"WhitelistStatusChanged\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"enableArbitraryContractDeployment\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_deployer\",\"type\":\"address\"}],\"name\":\"isDeployerAllowed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_deployer\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isWhitelisted\",\"type\":\"bool\"}],\"name\":\"setWhitelistedDeployer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"whitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"custom:legacy\":\"@custom:proxied\",\"custom:predeployed\":\"0x4200000000000000000000000000000000000002\",\"events\":{\"OwnerChanged(address,address)\":{\"params\":{\"newOwner\":\"Address of the new owner.\",\"oldOwner\":\"Address of the previous owner.\"}},\"WhitelistDisabled(address)\":{\"params\":{\"oldOwner\":\"Address of the final owner of the whitelist.\"}},\"WhitelistStatusChanged(address,bool)\":{\"params\":{\"deployer\":\"Address of the deployer.\",\"whitelisted\":\"Boolean indicating whether the deployer is whitelisted.\"}}},\"kind\":\"dev\",\"methods\":{\"isDeployerAllowed(address)\":{\"params\":{\"_deployer\":\"Address to check.\"},\"returns\":{\"_0\":\"Whether or not the address can deploy contracts.\"}},\"setOwner(address)\":{\"params\":{\"_owner\":\"Address of the new owner.\"}},\"setWhitelistedDeployer(address,bool)\":{\"params\":{\"_deployer\":\"Address to update permissions for.\",\"_isWhitelisted\":\"Whether or not the address is whitelisted.\"}}},\"stateVariables\":{\"version\":{\"custom:semver\":\"1.1.0\"}},\"title\":\"DeployerWhitelist\",\"version\":1},\"userdoc\":{\"events\":{\"OwnerChanged(address,address)\":{\"notice\":\"Emitted when the owner of this contract changes.\"},\"WhitelistDisabled(address)\":{\"notice\":\"Emitted when the whitelist is disabled.\"},\"WhitelistStatusChanged(address,bool)\":{\"notice\":\"Emitted when the whitelist status of a deployer changes.\"}},\"kind\":\"user\",\"methods\":{\"enableArbitraryContractDeployment()\":{\"notice\":\"Permanently enables arbitrary contract deployment and deletes the owner.\"},\"isDeployerAllowed(address)\":{\"notice\":\"Checks whether an address is allowed to deploy contracts.\"},\"owner()\":{\"notice\":\"Address of the owner of this contract. Note that when this address is set to         address(0), the whitelist is disabled.\"},\"setOwner(address)\":{\"notice\":\"Updates the owner of this contract.\"},\"setWhitelistedDeployer(address,bool)\":{\"notice\":\"Adds or removes an address from the deployment whitelist.\"},\"version()\":{\"notice\":\"Semantic version.\"},\"whitelist(address)\":{\"notice\":\"Mapping of deployer addresses to boolean whitelist status.\"}},\"notice\":\"DeployerWhitelist is a legacy contract that was originally used to act as a whitelist of         addresses allowed to the Optimism network. The DeployerWhitelist has since been         disabled, but the code is kept in state for the sake of full backwards compatibility.         As of the Bedrock upgrade, the DeployerWhitelist is completely unused by the Optimism         system and could, in theory, be removed entirely.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/legacy/DeployerWhitelist.sol\":\"DeployerWhitelist\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@cwia/=lib/clones-with-immutable-args/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/solmate/\",\":clones-with-immutable-args/=lib/clones-with-immutable-args/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"src/legacy/DeployerWhitelist.sol\":{\"keccak256\":\"0x40a9ec8f0d396bf0af240181646d8b50cc46a2fa760f73dc5cd3eed6184e5cec\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddf76cf897a91d0053f14091c61d1fad53f750fe5927dc7c0684e4c495145667\",\"dweb:/ipfs/QmZLhHaVb88RHR7Nxcs9zvusyqMmSy8tvx71nLrRdH52jw\"]},\"src/universal/ISemver.sol\":{\"keccak256\":\"0xba34562a8026f59886d2e07d1d58d90b9691d00e0788c6263cef6c22740cab44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0826f998632f83c103c3085bf2e872db79a69022b6d2e0444c83a64ca5283c2a\",\"dweb:/ipfs/QmcJ7PNqkAfKqbjFGRordtAg1v9DvcBSKvdTkVvciLyvQR\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "oldOwner",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "OwnerChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "oldOwner",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "WhitelistDisabled",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "deployer",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "bool",
              "name": "whitelisted",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "WhitelistStatusChanged",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "enableArbitraryContractDeployment"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_deployer",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isDeployerAllowed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOwner"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_deployer",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "_isWhitelisted",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setWhitelistedDeployer"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "version",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "whitelist",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "isDeployerAllowed(address)": {
            "params": {
              "_deployer": "Address to check."
            },
            "returns": {
              "_0": "Whether or not the address can deploy contracts."
            }
          },
          "setOwner(address)": {
            "params": {
              "_owner": "Address of the new owner."
            }
          },
          "setWhitelistedDeployer(address,bool)": {
            "params": {
              "_deployer": "Address to update permissions for.",
              "_isWhitelisted": "Whether or not the address is whitelisted."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "enableArbitraryContractDeployment()": {
            "notice": "Permanently enables arbitrary contract deployment and deletes the owner."
          },
          "isDeployerAllowed(address)": {
            "notice": "Checks whether an address is allowed to deploy contracts."
          },
          "owner()": {
            "notice": "Address of the owner of this contract. Note that when this address is set to         address(0), the whitelist is disabled."
          },
          "setOwner(address)": {
            "notice": "Updates the owner of this contract."
          },
          "setWhitelistedDeployer(address,bool)": {
            "notice": "Adds or removes an address from the deployment whitelist."
          },
          "version()": {
            "notice": "Semantic version."
          },
          "whitelist(address)": {
            "notice": "Mapping of deployer addresses to boolean whitelist status."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@cwia/=lib/clones-with-immutable-args/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@rari-capital/solmate/=lib/solmate/",
        "clones-with-immutable-args/=lib/clones-with-immutable-args/src/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "safe-contracts/=lib/safe-contracts/contracts/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 999999
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "src/legacy/DeployerWhitelist.sol": "DeployerWhitelist"
      },
      "libraries": {}
    },
    "sources": {
      "src/legacy/DeployerWhitelist.sol": {
        "keccak256": "0x40a9ec8f0d396bf0af240181646d8b50cc46a2fa760f73dc5cd3eed6184e5cec",
        "urls": [
          "bzz-raw://ddf76cf897a91d0053f14091c61d1fad53f750fe5927dc7c0684e4c495145667",
          "dweb:/ipfs/QmZLhHaVb88RHR7Nxcs9zvusyqMmSy8tvx71nLrRdH52jw"
        ],
        "license": "MIT"
      },
      "src/universal/ISemver.sol": {
        "keccak256": "0xba34562a8026f59886d2e07d1d58d90b9691d00e0788c6263cef6c22740cab44",
        "urls": [
          "bzz-raw://0826f998632f83c103c3085bf2e872db79a69022b6d2e0444c83a64ca5283c2a",
          "dweb:/ipfs/QmcJ7PNqkAfKqbjFGRordtAg1v9DvcBSKvdTkVvciLyvQR"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 66694,
        "contract": "src/legacy/DeployerWhitelist.sol:DeployerWhitelist",
        "label": "owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 66699,
        "contract": "src/legacy/DeployerWhitelist.sol:DeployerWhitelist",
        "label": "whitelist",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_bool)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_mapping(t_address,t_bool)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      }
    }
  },
  "userdoc": {
    "version": 1,
    "kind": "user",
    "methods": {
      "enableArbitraryContractDeployment()": {
        "notice": "Permanently enables arbitrary contract deployment and deletes the owner."
      },
      "isDeployerAllowed(address)": {
        "notice": "Checks whether an address is allowed to deploy contracts."
      },
      "owner()": {
        "notice": "Address of the owner of this contract. Note that when this address is set to         address(0), the whitelist is disabled."
      },
      "setOwner(address)": {
        "notice": "Updates the owner of this contract."
      },
      "setWhitelistedDeployer(address,bool)": {
        "notice": "Adds or removes an address from the deployment whitelist."
      },
      "version()": {
        "notice": "Semantic version."
      },
      "whitelist(address)": {
        "notice": "Mapping of deployer addresses to boolean whitelist status."
      }
    },
    "events": {
      "OwnerChanged(address,address)": {
        "notice": "Emitted when the owner of this contract changes."
      },
      "WhitelistDisabled(address)": {
        "notice": "Emitted when the whitelist is disabled."
      },
      "WhitelistStatusChanged(address,bool)": {
        "notice": "Emitted when the whitelist status of a deployer changes."
      }
    },
    "notice": "DeployerWhitelist is a legacy contract that was originally used to act as a whitelist of         addresses allowed to the Optimism network. The DeployerWhitelist has since been         disabled, but the code is kept in state for the sake of full backwards compatibility.         As of the Bedrock upgrade, the DeployerWhitelist is completely unused by the Optimism         system and could, in theory, be removed entirely."
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "methods": {
      "isDeployerAllowed(address)": {
        "params": {
          "_deployer": "Address to check."
        },
        "returns": {
          "_0": "Whether or not the address can deploy contracts."
        }
      },
      "setOwner(address)": {
        "params": {
          "_owner": "Address of the new owner."
        }
      },
      "setWhitelistedDeployer(address,bool)": {
        "params": {
          "_deployer": "Address to update permissions for.",
          "_isWhitelisted": "Whether or not the address is whitelisted."
        }
      }
    },
    "events": {
      "OwnerChanged(address,address)": {
        "params": {
          "newOwner": "Address of the new owner.",
          "oldOwner": "Address of the previous owner."
        }
      },
      "WhitelistDisabled(address)": {
        "params": {
          "oldOwner": "Address of the final owner of the whitelist."
        }
      },
      "WhitelistStatusChanged(address,bool)": {
        "params": {
          "deployer": "Address of the deployer.",
          "whitelisted": "Boolean indicating whether the deployer is whitelisted."
        }
      }
    },
    "title": "DeployerWhitelist"
  },
  "ast": {
    "absolutePath": "src/legacy/DeployerWhitelist.sol",
    "id": 66826,
    "exportedSymbols": {
      "DeployerWhitelist": [
        66825
      ],
      "ISemver": [
        71843
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:3641:131",
    "nodes": [
      {
        "id": 66686,
        "nodeType": "PragmaDirective",
        "src": "32:23:131",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 66688,
        "nodeType": "ImportDirective",
        "src": "57:52:131",
        "nodes": [],
        "absolutePath": "src/universal/ISemver.sol",
        "file": "src/universal/ISemver.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 66826,
        "sourceUnit": 71844,
        "symbolAliases": [
          {
            "foreign": {
              "id": 66687,
              "name": "ISemver",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 71843,
              "src": "66:7:131",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 66825,
        "nodeType": "ContractDefinition",
        "src": "697:2975:131",
        "nodes": [
          {
            "id": 66694,
            "nodeType": "VariableDeclaration",
            "src": "889:20:131",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 66692,
              "nodeType": "StructuredDocumentation",
              "src": "741:143:131",
              "text": "@notice Address of the owner of this contract. Note that when this address is set to\n         address(0), the whitelist is disabled."
            },
            "functionSelector": "8da5cb5b",
            "mutability": "mutable",
            "name": "owner",
            "nameLocation": "904:5:131",
            "scope": 66825,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 66693,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "889:7:131",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 66699,
            "nodeType": "VariableDeclaration",
            "src": "991:41:131",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 66695,
              "nodeType": "StructuredDocumentation",
              "src": "916:70:131",
              "text": "@notice Mapping of deployer addresses to boolean whitelist status."
            },
            "functionSelector": "9b19251a",
            "mutability": "mutable",
            "name": "whitelist",
            "nameLocation": "1023:9:131",
            "scope": 66825,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 66698,
              "keyType": {
                "id": 66696,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "999:7:131",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "991:24:131",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 66697,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "1010:4:131",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 66706,
            "nodeType": "EventDefinition",
            "src": "1209:55:131",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 66700,
              "nodeType": "StructuredDocumentation",
              "src": "1039:165:131",
              "text": "@notice Emitted when the owner of this contract changes.\n @param oldOwner Address of the previous owner.\n @param newOwner Address of the new owner."
            },
            "eventSelector": "b532073b38c83145e3e5135377a08bf9aab55bc0fd7c1179cd4fb995d2a5159c",
            "name": "OwnerChanged",
            "nameLocation": "1215:12:131",
            "parameters": {
              "id": 66705,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66702,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "oldOwner",
                  "nameLocation": "1236:8:131",
                  "nodeType": "VariableDeclaration",
                  "scope": 66706,
                  "src": "1228:16:131",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66701,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1228:7:131",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66704,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newOwner",
                  "nameLocation": "1254:8:131",
                  "nodeType": "VariableDeclaration",
                  "scope": 66706,
                  "src": "1246:16:131",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66703,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1246:7:131",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1227:36:131"
            }
          },
          {
            "id": 66713,
            "nodeType": "EventDefinition",
            "src": "1478:65:131",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 66707,
              "nodeType": "StructuredDocumentation",
              "src": "1270:203:131",
              "text": "@notice Emitted when the whitelist status of a deployer changes.\n @param deployer    Address of the deployer.\n @param whitelisted Boolean indicating whether the deployer is whitelisted."
            },
            "eventSelector": "8daaf060c3306c38e068a75c054bf96ecd85a3db1252712c4d93632744c42e0d",
            "name": "WhitelistStatusChanged",
            "nameLocation": "1484:22:131",
            "parameters": {
              "id": 66712,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66709,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "deployer",
                  "nameLocation": "1515:8:131",
                  "nodeType": "VariableDeclaration",
                  "scope": 66713,
                  "src": "1507:16:131",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66708,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1507:7:131",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66711,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "whitelisted",
                  "nameLocation": "1530:11:131",
                  "nodeType": "VariableDeclaration",
                  "scope": 66713,
                  "src": "1525:16:131",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 66710,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1525:4:131",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1506:36:131"
            }
          },
          {
            "id": 66718,
            "nodeType": "EventDefinition",
            "src": "1674:42:131",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 66714,
              "nodeType": "StructuredDocumentation",
              "src": "1549:120:131",
              "text": "@notice Emitted when the whitelist is disabled.\n @param oldOwner Address of the final owner of the whitelist."
            },
            "eventSelector": "c0e106cf568e50698fdbde1eff56f5a5c966cc7958e37e276918e9e4ccdf8cd4",
            "name": "WhitelistDisabled",
            "nameLocation": "1680:17:131",
            "parameters": {
              "id": 66717,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66716,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "oldOwner",
                  "nameLocation": "1706:8:131",
                  "nodeType": "VariableDeclaration",
                  "scope": 66718,
                  "src": "1698:16:131",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66715,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1698:7:131",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1697:18:131"
            }
          },
          {
            "id": 66731,
            "nodeType": "ModifierDefinition",
            "src": "1792:157:131",
            "nodes": [],
            "body": {
              "id": 66730,
              "nodeType": "Block",
              "src": "1813:136:131",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 66725,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 66722,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "1831:3:131",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 66723,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1831:10:131",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 66724,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66694,
                          "src": "1845:5:131",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1831:19:131",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4465706c6f79657257686974656c6973743a2066756e6374696f6e2063616e206f6e6c792062652063616c6c656420627920746865206f776e6572206f66207468697320636f6e7472616374",
                        "id": 66726,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1852:78:131",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_944140597ff5a30538e0744b8160db7f0679e9e0dbeb6b224521a395f9d3eb37",
                          "typeString": "literal_string \"DeployerWhitelist: function can only be called by the owner of this contract\""
                        },
                        "value": "DeployerWhitelist: function can only be called by the owner of this contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_944140597ff5a30538e0744b8160db7f0679e9e0dbeb6b224521a395f9d3eb37",
                          "typeString": "literal_string \"DeployerWhitelist: function can only be called by the owner of this contract\""
                        }
                      ],
                      "id": 66721,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1823:7:131",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 66727,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1823:108:131",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66728,
                  "nodeType": "ExpressionStatement",
                  "src": "1823:108:131"
                },
                {
                  "id": 66729,
                  "nodeType": "PlaceholderStatement",
                  "src": "1941:1:131"
                }
              ]
            },
            "documentation": {
              "id": 66719,
              "nodeType": "StructuredDocumentation",
              "src": "1722:65:131",
              "text": "@notice Blocks functions to anyone except the contract owner."
            },
            "name": "onlyOwner",
            "nameLocation": "1801:9:131",
            "parameters": {
              "id": 66720,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1810:2:131"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 66735,
            "nodeType": "VariableDeclaration",
            "src": "2018:40:131",
            "nodes": [],
            "baseFunctions": [
              71842
            ],
            "constant": true,
            "documentation": {
              "id": 66732,
              "nodeType": "StructuredDocumentation",
              "src": "1955:58:131",
              "text": "@notice Semantic version.\n @custom:semver 1.1.0"
            },
            "functionSelector": "54fd4d50",
            "mutability": "constant",
            "name": "version",
            "nameLocation": "2041:7:131",
            "scope": 66825,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 66733,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "2018:6:131",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "312e312e30",
              "id": 66734,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2051:7:131",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_6815ba53416ba06aff1932cc76b3832272bafab9bc8e066be382e32b06ba5546",
                "typeString": "literal_string \"1.1.0\""
              },
              "value": "1.1.0"
            },
            "visibility": "public"
          },
          {
            "id": 66757,
            "nodeType": "FunctionDefinition",
            "src": "2277:209:131",
            "nodes": [],
            "body": {
              "id": 66756,
              "nodeType": "Block",
              "src": "2368:118:131",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 66749,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 66745,
                        "name": "whitelist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66699,
                        "src": "2378:9:131",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 66747,
                      "indexExpression": {
                        "id": 66746,
                        "name": "_deployer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66738,
                        "src": "2388:9:131",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2378:20:131",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 66748,
                      "name": "_isWhitelisted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66740,
                      "src": "2401:14:131",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "2378:37:131",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 66750,
                  "nodeType": "ExpressionStatement",
                  "src": "2378:37:131"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 66752,
                        "name": "_deployer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66738,
                        "src": "2453:9:131",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 66753,
                        "name": "_isWhitelisted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66740,
                        "src": "2464:14:131",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 66751,
                      "name": "WhitelistStatusChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66713,
                      "src": "2430:22:131",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_bool_$returns$__$",
                        "typeString": "function (address,bool)"
                      }
                    },
                    "id": 66754,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2430:49:131",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66755,
                  "nodeType": "EmitStatement",
                  "src": "2425:54:131"
                }
              ]
            },
            "documentation": {
              "id": 66736,
              "nodeType": "StructuredDocumentation",
              "src": "2065:207:131",
              "text": "@notice Adds or removes an address from the deployment whitelist.\n @param _deployer      Address to update permissions for.\n @param _isWhitelisted Whether or not the address is whitelisted."
            },
            "functionSelector": "08fd6322",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 66743,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 66742,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 66731,
                  "src": "2358:9:131"
                },
                "nodeType": "ModifierInvocation",
                "src": "2358:9:131"
              }
            ],
            "name": "setWhitelistedDeployer",
            "nameLocation": "2286:22:131",
            "parameters": {
              "id": 66741,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66738,
                  "mutability": "mutable",
                  "name": "_deployer",
                  "nameLocation": "2317:9:131",
                  "nodeType": "VariableDeclaration",
                  "scope": 66757,
                  "src": "2309:17:131",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66737,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2309:7:131",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 66740,
                  "mutability": "mutable",
                  "name": "_isWhitelisted",
                  "nameLocation": "2333:14:131",
                  "nodeType": "VariableDeclaration",
                  "scope": 66757,
                  "src": "2328:19:131",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 66739,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2328:4:131",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2308:40:131"
            },
            "returnParameters": {
              "id": 66744,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2368:0:131"
            },
            "scope": 66825,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66785,
            "nodeType": "FunctionDefinition",
            "src": "2592:513:131",
            "nodes": [],
            "body": {
              "id": 66784,
              "nodeType": "Block",
              "src": "2645:460:131",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 66771,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 66766,
                          "name": "_owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 66760,
                          "src": "2929:6:131",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 66769,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2947:1:131",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 66768,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2939:7:131",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 66767,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2939:7:131",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 66770,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2939:10:131",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2929:20:131",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4465706c6f79657257686974656c6973743a2063616e206f6e6c792062652064697361626c65642076696120656e61626c65417262697472617279436f6e74726163744465706c6f796d656e74",
                        "id": 66772,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2951:79:131",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6078aace64c07e9c98ebaccae80d05c653e2b929f6126e2db8574ccdff4a07cd",
                          "typeString": "literal_string \"DeployerWhitelist: can only be disabled via enableArbitraryContractDeployment\""
                        },
                        "value": "DeployerWhitelist: can only be disabled via enableArbitraryContractDeployment"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6078aace64c07e9c98ebaccae80d05c653e2b929f6126e2db8574ccdff4a07cd",
                          "typeString": "literal_string \"DeployerWhitelist: can only be disabled via enableArbitraryContractDeployment\""
                        }
                      ],
                      "id": 66765,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2921:7:131",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 66773,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2921:110:131",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66774,
                  "nodeType": "ExpressionStatement",
                  "src": "2921:110:131"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 66776,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66694,
                        "src": "3060:5:131",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 66777,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66760,
                        "src": "3067:6:131",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 66775,
                      "name": "OwnerChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66706,
                      "src": "3047:12:131",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 66778,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3047:27:131",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66779,
                  "nodeType": "EmitStatement",
                  "src": "3042:32:131"
                },
                {
                  "expression": {
                    "id": 66782,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 66780,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66694,
                      "src": "3084:5:131",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 66781,
                      "name": "_owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66760,
                      "src": "3092:6:131",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3084:14:131",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 66783,
                  "nodeType": "ExpressionStatement",
                  "src": "3084:14:131"
                }
              ]
            },
            "documentation": {
              "id": 66758,
              "nodeType": "StructuredDocumentation",
              "src": "2492:95:131",
              "text": "@notice Updates the owner of this contract.\n @param _owner Address of the new owner."
            },
            "functionSelector": "13af4035",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 66763,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 66762,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 66731,
                  "src": "2635:9:131"
                },
                "nodeType": "ModifierInvocation",
                "src": "2635:9:131"
              }
            ],
            "name": "setOwner",
            "nameLocation": "2601:8:131",
            "parameters": {
              "id": 66761,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66760,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "2618:6:131",
                  "nodeType": "VariableDeclaration",
                  "scope": 66785,
                  "src": "2610:14:131",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66759,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2610:7:131",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2609:16:131"
            },
            "returnParameters": {
              "id": 66764,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2645:0:131"
            },
            "scope": 66825,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66803,
            "nodeType": "FunctionDefinition",
            "src": "3200:138:131",
            "nodes": [],
            "body": {
              "id": 66802,
              "nodeType": "Block",
              "src": "3264:74:131",
              "nodes": [],
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 66792,
                        "name": "owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66694,
                        "src": "3297:5:131",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 66791,
                      "name": "WhitelistDisabled",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66718,
                      "src": "3279:17:131",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 66793,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3279:24:131",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 66794,
                  "nodeType": "EmitStatement",
                  "src": "3274:29:131"
                },
                {
                  "expression": {
                    "id": 66800,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 66795,
                      "name": "owner",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66694,
                      "src": "3313:5:131",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 66798,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "3329:1:131",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 66797,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "3321:7:131",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_address_$",
                          "typeString": "type(address)"
                        },
                        "typeName": {
                          "id": 66796,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "3321:7:131",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 66799,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "3321:10:131",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "3313:18:131",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 66801,
                  "nodeType": "ExpressionStatement",
                  "src": "3313:18:131"
                }
              ]
            },
            "documentation": {
              "id": 66786,
              "nodeType": "StructuredDocumentation",
              "src": "3111:84:131",
              "text": "@notice Permanently enables arbitrary contract deployment and deletes the owner."
            },
            "functionSelector": "bdc7b54f",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 66789,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 66788,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 66731,
                  "src": "3254:9:131"
                },
                "nodeType": "ModifierInvocation",
                "src": "3254:9:131"
              }
            ],
            "name": "enableArbitraryContractDeployment",
            "nameLocation": "3209:33:131",
            "parameters": {
              "id": 66787,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3242:2:131"
            },
            "returnParameters": {
              "id": 66790,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3264:0:131"
            },
            "scope": 66825,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 66824,
            "nodeType": "FunctionDefinition",
            "src": "3526:144:131",
            "nodes": [],
            "body": {
              "id": 66823,
              "nodeType": "Block",
              "src": "3601:69:131",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 66820,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          "id": 66816,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 66811,
                            "name": "owner",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66694,
                            "src": "3619:5:131",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 66814,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "3636:1:131",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 66813,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "3628:7:131",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 66812,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "3628:7:131",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 66815,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3628:10:131",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "3619:19:131",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "baseExpression": {
                            "id": 66817,
                            "name": "whitelist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66699,
                            "src": "3642:9:131",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                              "typeString": "mapping(address => bool)"
                            }
                          },
                          "id": 66819,
                          "indexExpression": {
                            "id": 66818,
                            "name": "_deployer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 66806,
                            "src": "3652:9:131",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "3642:20:131",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "3619:43:131",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "id": 66821,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "3618:45:131",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 66810,
                  "id": 66822,
                  "nodeType": "Return",
                  "src": "3611:52:131"
                }
              ]
            },
            "documentation": {
              "id": 66804,
              "nodeType": "StructuredDocumentation",
              "src": "3344:177:131",
              "text": "@notice Checks whether an address is allowed to deploy contracts.\n @param _deployer Address to check.\n @return Whether or not the address can deploy contracts."
            },
            "functionSelector": "b1540a01",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isDeployerAllowed",
            "nameLocation": "3535:17:131",
            "parameters": {
              "id": 66807,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66806,
                  "mutability": "mutable",
                  "name": "_deployer",
                  "nameLocation": "3561:9:131",
                  "nodeType": "VariableDeclaration",
                  "scope": 66824,
                  "src": "3553:17:131",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 66805,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3553:7:131",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3552:19:131"
            },
            "returnParameters": {
              "id": 66810,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 66809,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 66824,
                  "src": "3595:4:131",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 66808,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3595:4:131",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3594:6:131"
            },
            "scope": 66825,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 66690,
              "name": "ISemver",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 71843,
              "src": "727:7:131"
            },
            "id": 66691,
            "nodeType": "InheritanceSpecifier",
            "src": "727:7:131"
          }
        ],
        "canonicalName": "DeployerWhitelist",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 66689,
          "nodeType": "StructuredDocumentation",
          "src": "111:586:131",
          "text": "@custom:legacy\n @custom:proxied\n @custom:predeployed 0x4200000000000000000000000000000000000002\n @title DeployerWhitelist\n @notice DeployerWhitelist is a legacy contract that was originally used to act as a whitelist of\n         addresses allowed to the Optimism network. The DeployerWhitelist has since been\n         disabled, but the code is kept in state for the sake of full backwards compatibility.\n         As of the Bedrock upgrade, the DeployerWhitelist is completely unused by the Optimism\n         system and could, in theory, be removed entirely."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          66825,
          71843
        ],
        "name": "DeployerWhitelist",
        "nameLocation": "706:17:131",
        "scope": 66826,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 131
}