{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "nameref",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "reentrant",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "interval",
              "type": "uint256"
            },
            {
              "internalType": "contract IDripCheck",
              "name": "dripcheck",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "checkparams",
              "type": "bytes"
            },
            {
              "components": [
                {
                  "internalType": "address payable",
                  "name": "target",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Drippie.DripAction[]",
              "name": "actions",
              "type": "tuple[]"
            }
          ],
          "indexed": false,
          "internalType": "struct Drippie.DripConfig",
          "name": "config",
          "type": "tuple"
        }
      ],
      "name": "DripCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "nameref",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "executor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "DripExecuted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "string",
          "name": "nameref",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "enum Drippie.DripStatus",
          "name": "status",
          "type": "uint8"
        }
      ],
      "name": "DripStatusUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "user",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnerUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "ReceivedETH",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "withdrawer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "WithdrewERC20",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "withdrawer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "asset",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "id",
          "type": "uint256"
        }
      ],
      "name": "WithdrewERC721",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "withdrawer",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "WithdrewETH",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        }
      ],
      "name": "CALL",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success_",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "data_",
          "type": "bytes"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_target",
          "type": "address"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "DELEGATECALL",
      "outputs": [
        {
          "internalType": "bool",
          "name": "success_",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "data_",
          "type": "bytes"
        }
      ],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "reentrant",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "interval",
              "type": "uint256"
            },
            {
              "internalType": "contract IDripCheck",
              "name": "dripcheck",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "checkparams",
              "type": "bytes"
            },
            {
              "components": [
                {
                  "internalType": "address payable",
                  "name": "target",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Drippie.DripAction[]",
              "name": "actions",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Drippie.DripConfig",
          "name": "_config",
          "type": "tuple"
        }
      ],
      "name": "create",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "drip",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "drips",
      "outputs": [
        {
          "internalType": "enum Drippie.DripStatus",
          "name": "status",
          "type": "uint8"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "reentrant",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "interval",
              "type": "uint256"
            },
            {
              "internalType": "contract IDripCheck",
              "name": "dripcheck",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "checkparams",
              "type": "bytes"
            },
            {
              "components": [
                {
                  "internalType": "address payable",
                  "name": "target",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                }
              ],
              "internalType": "struct Drippie.DripAction[]",
              "name": "actions",
              "type": "tuple[]"
            }
          ],
          "internalType": "struct Drippie.DripConfig",
          "name": "config",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "last",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "count",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "executable",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "name": "getDripStatus",
      "outputs": [
        {
          "internalType": "enum Drippie.DripStatus",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "setOwner",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "enum Drippie.DripStatus",
          "name": "_status",
          "type": "uint8"
        }
      ],
      "name": "status",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "_asset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawERC20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "_asset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "withdrawERC20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract ERC721",
          "name": "_asset",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_id",
          "type": "uint256"
        }
      ],
      "name": "withdrawERC721",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address payable",
          "name": "_to",
          "type": "address"
        }
      ],
      "name": "withdrawETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060405162002e8338038062002e8383398101604081905262000034916200008c565b600080546001600160a01b0319166001600160a01b03831690811782556040518392839283929091907f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d76908290a350505050620000be565b6000602082840312156200009f57600080fd5b81516001600160a01b0381168114620000b757600080fd5b9392505050565b612db580620000ce6000396000f3fe6080604052600436106100ec5760003560e01c8063690d83201161008a5780639bc94d01116100595780639bc94d01146102e8578063e551cdaa14610308578063edee623914610328578063fc3e3eba1461033b57600080fd5b8063690d8320146102355780636e2d44ae146102555780638da5cb5b146102765780639456fbcc146102c857600080fd5b806344004cc1116100c657806344004cc1146101a55780634782f779146101c55780634d7fba6e146101e557806367148cd21461021557600080fd5b80630d8f46971461012d57806313af4035146101635780634025feb21461018557600080fd5b366101285760405134815233907f4103257eaac983ca79a70d28f90dfc4fa16b619bb0c17ee7cab0d4034c2796249060200160405180910390a2005b600080fd5b34801561013957600080fd5b5061014d610148366004611dc1565b61036b565b60405161015a9190611e6d565b60405180910390f35b34801561016f57600080fd5b5061018361017e366004611e9d565b61039b565b005b34801561019157600080fd5b506101836101a0366004611ec1565b610491565b3480156101b157600080fd5b506101836101c0366004611ec1565b610623565b3480156101d157600080fd5b506101836101e0366004611f02565b6107b4565b3480156101f157600080fd5b50610205610200366004611ff1565b610904565b60405161015a94939291906120bc565b34801561022157600080fd5b50610183610230366004611dc1565b610b36565b34801561024157600080fd5b50610183610250366004611e9d565b610d59565b610268610263366004612212565b610de7565b60405161015a92919061226b565b34801561028257600080fd5b506000546102a39073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161015a565b3480156102d457600080fd5b506101836102e3366004612286565b610ee1565b3480156102f457600080fd5b506101836103033660046122bf565b610ffc565b34801561031457600080fd5b5061018361032336600461231a565b611537565b61026861033636600461237f565b6119bb565b34801561034757600080fd5b5061035b610356366004611dc1565b611ab1565b604051901515815260200161015a565b60006001838360405161037f9291906123cf565b9081526040519081900360200190205460ff1690505b92915050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610421576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064015b60405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b60005473ffffffffffffffffffffffffffffffffffffffff163314610512576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152606401610418565b6040517f23b872dd00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8381166024830152604482018390528416906323b872dd90606401600060405180830381600087803b15801561058857600080fd5b505af115801561059c573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f30b478a5e196e55886228aa87ba74a7dfeba655e0a4d7ba275eabfc22aabb7a88460405161061691815260200190565b60405180910390a4505050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146106a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152606401610418565b6040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83811660048301526024820183905284169063a9059cbb906044016020604051808303816000875af1158015610719573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073d91906123ed565b508273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f6b00f1c7883f053ba83e907fd1965b22fffe3c4111383e725f04638a566cdbfa8460405161061691815260200190565b60005473ffffffffffffffffffffffffffffffffffffffff163314610835576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152606401610418565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d806000811461088f576040519150601f19603f3d011682016040523d82523d6000602084013e610894565b606091505b505090508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f1f12aa8b6d492dd9b98e2b00b0b20830c2a7ded65afac13b60d169a034ae90bc846040516108f791815260200190565b60405180910390a3505050565b805160208183018101805160018083529383019483019490942093905282546040805160a081018252938501805460ff90811615158652600287015494860194909452600386015473ffffffffffffffffffffffffffffffffffffffff169185019190915260048501805493909216949392909160608401916109869061240a565b80601f01602080910402602001604051908101604052809291908181526020018280546109b29061240a565b80156109ff5780601f106109d4576101008083540402835291602001916109ff565b820191906000526020600020905b8154815290600101906020018083116109e257829003601f168201915b5050505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015610b1e576000848152602090819020604080516060810190915260038502909101805473ffffffffffffffffffffffffffffffffffffffff1682526001810180549293919291840191610a839061240a565b80601f0160208091040260200160405190810160405280929190818152602001828054610aaf9061240a565b8015610afc5780601f10610ad157610100808354040283529160200191610afc565b820191906000526020600020905b815481529060010190602001808311610adf57829003601f168201915b5050505050815260200160028201548152505081526020019060010190610a2d565b50505091525050600682015460079092015490919084565b600060018383604051610b4a9291906123cf565b90815260200160405180910390209050610b648383611ab1565b50426006820155600781018054906000610b7d8361248c565b9091555050600581015460005b81811015610cfd576000836001016004018281548110610bac57610bac6124c4565b6000918252602082206003909102018054600282015460405192945073ffffffffffffffffffffffffffffffffffffffff90911691610bef9060018601906124f3565b60006040518083038185875af1925050503d8060008114610c2c576040519150601f19603f3d011682016040523d82523d6000602084013e610c31565b606091505b5050905080610ce8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604c60248201527f447269707069653a20647269702077617320756e7375636365737366756c2c2060448201527f706c6561736520636865636b20796f757220636f6e66696775726174696f6e2060648201527f666f72206d697374616b65730000000000000000000000000000000000000000608482015260a401610418565b50508080610cf59061248c565b915050610b8a565b508383604051610d0e9291906123cf565b60405180910390207fea21435419aad9c54a9d90e2522b6f60bd566401f36fcef661f5f5a28cc0d2c685853342604051610d4b94939291906125d0565b60405180910390a250505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610dda576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152606401610418565b610de481476107b4565b50565b6000805460609073ffffffffffffffffffffffffffffffffffffffff163314610e6c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152606401610418565b8473ffffffffffffffffffffffffffffffffffffffff168385604051610e92919061260d565b60006040518083038185875af1925050503d8060008114610ecf576040519150601f19603f3d011682016040523d82523d6000602084013e610ed4565b606091505b5090969095509350505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610f62576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152606401610418565b6040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152610ff8908390839073ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa158015610fd4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c09190612629565b5050565b60005473ffffffffffffffffffffffffffffffffffffffff16331461107d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152606401610418565b600081600381111561109157611091611e03565b03611144576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604160248201527f447269707069653a2064726970207374617475732063616e206e65766572206260448201527f6520736574206261636b20746f204e4f4e45206166746572206372656174696f60648201527f6e00000000000000000000000000000000000000000000000000000000000000608482015260a401610418565b6000600184846040516111589291906123cf565b9081526040519081900360200190205460ff169050600081600381111561118157611181611e03565b03611234576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604160248201527f447269707069653a206472697020776974682074686174206e616d6520646f6560448201527f73206e6f7420657869737420616e642063616e6e6f742062652075706461746560648201527f6400000000000000000000000000000000000000000000000000000000000000608482015260a401610418565b600381600381111561124857611248611e03565b036112fc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526044602482018190527f447269707069653a206472697020776974682074686174206e616d6520686173908201527f206265656e20617263686976656420616e642063616e6e6f742062652075706460648201527f6174656400000000000000000000000000000000000000000000000000000000608482015260a401610418565b81600381111561130e5761130e611e03565b81600381111561132057611320611e03565b036113d3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604860248201527f447269707069653a2063616e6e6f74207365742064726970207374617475732060448201527f746f207468652073616d6520737461747573206173206974732063757272656e60648201527f7420737461747573000000000000000000000000000000000000000000000000608482015260a401610418565b60038260038111156113e7576113e7611e03565b0361148d57600181600381111561140057611400611e03565b1461148d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603860248201527f447269707069653a2064726970206d757374206669727374206265207061757360448201527f6564206265666f7265206265696e6720617263686976656400000000000000006064820152608401610418565b81600185856040516114a09291906123cf565b90815260405190819003602001902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660018360038111156114e7576114e7611e03565b021790555083836040516114fc9291906123cf565b60405180910390207f407cb3ad05e60ec498fb39417c7a4f6b82d5ba80f82fe512a37b02c93181a2a1858585604051610d4b93929190612642565b60005473ffffffffffffffffffffffffffffffffffffffff1633146115b8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152606401610418565b6000600184846040516115cc9291906123cf565b9081526040519081900360200190205460ff1660038111156115f0576115f0611e03565b1461167d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f447269707069653a206472697020776974682074686174206e616d6520616c7260448201527f65616479206578697374730000000000000000000000000000000000000000006064820152608401610418565b61168a6020820182612665565b1561172657602081013515611721576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603e60248201527f447269707069653a20696620616c6c6f77696e67207265656e7472616e74206460448201527f7269702c206d7573742073657420696e74657276616c20746f207a65726f00006064820152608401610418565b6117e1565b60008160200135116117e1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526044602482018190527f447269707069653a20696e74657276616c206d75737420626520677265617465908201527f72207468616e207a65726f2069662064726970206973206e6f74207265656e7460648201527f72616e7400000000000000000000000000000000000000000000000000000000608482015260a401610418565b6000600184846040516117f59291906123cf565b9081526040516020918190038201902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001178155915061183c90830183612665565b6001820180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055602082013560028201556118876060830160408401611e9d565b6003820180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff929092169190911790556118db6060830183612682565b60048301916118eb919083612736565b5060005b6118fc6080840184612851565b905081101561196f57600582016119166080850185612851565b83818110611926576119266124c4565b905060200281019061193891906128b9565b81546001810183556000928352602090922090916003020161195a82826128ed565b505080806119679061248c565b9150506118ef565b5083836040516119809291906123cf565b60405180910390207fe38d8d98e6cc66f6f520d483c6c5a89289681f897799c4c29d767cf57e76d9a6858585604051610d4b93929190612be0565b6000805460609073ffffffffffffffffffffffffffffffffffffffff163314611a40576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152606401610418565b8373ffffffffffffffffffffffffffffffffffffffff1683604051611a65919061260d565b600060405180830381855af49150503d8060008114611aa0576040519150601f19603f3d011682016040523d82523d6000602084013e611aa5565b606091505b50909590945092505050565b60008060018484604051611ac69291906123cf565b90815260405190819003602001902090506002815460ff166003811115611aef57611aef611e03565b14611b7e57604080517f08c379a00000000000000000000000000000000000000000000000000000000081526020600482015260248101919091527f447269707069653a2073656c6563746564206472697020646f6573206e6f742060448201527f6578697374206f72206973206e6f742063757272656e746c79206163746976656064820152608401610418565b600281015460068201544291611b9391612ce7565b1115611c21576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f447269707069653a206472697020696e74657276616c20686173206e6f74206560448201527f6c61707365642073696e6365206c6173742064726970000000000000000000006064820152608401610418565b60038101546040517fc64b3bb500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063c64b3bb590611c7b9060048086019101612cff565b602060405180830381865afa158015611c98573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cbc91906123ed565b611d6e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604260248201527f447269707069653a2064726970636865636b206661696c656420736f2064726960448201527f70206973206e6f742079657420726561647920746f206265207472696767657260648201527f6564000000000000000000000000000000000000000000000000000000000000608482015260a401610418565b5060019392505050565b60008083601f840112611d8a57600080fd5b50813567ffffffffffffffff811115611da257600080fd5b602083019150836020828501011115611dba57600080fd5b9250929050565b60008060208385031215611dd457600080fd5b823567ffffffffffffffff811115611deb57600080fd5b611df785828601611d78565b90969095509350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60048110611e69577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b602081016103958284611e32565b73ffffffffffffffffffffffffffffffffffffffff81168114610de457600080fd5b600060208284031215611eaf57600080fd5b8135611eba81611e7b565b9392505050565b600080600060608486031215611ed657600080fd5b8335611ee181611e7b565b92506020840135611ef181611e7b565b929592945050506040919091013590565b60008060408385031215611f1557600080fd5b8235611f2081611e7b565b946020939093013593505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600067ffffffffffffffff80841115611f7857611f78611f2e565b604051601f85017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908282118183101715611fbe57611fbe611f2e565b81604052809350858152868686011115611fd757600080fd5b858560208301376000602087830101525050509392505050565b60006020828403121561200357600080fd5b813567ffffffffffffffff81111561201a57600080fd5b8201601f8101841361202b57600080fd5b61203a84823560208401611f5d565b949350505050565b60005b8381101561205d578181015183820152602001612045565b8381111561206c576000848401525b50505050565b6000815180845261208a816020860160208601612042565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6120c68186611e32565b600060206080818401528551151560808401528086015160a084015260408087015173ffffffffffffffffffffffffffffffffffffffff80821660c0870152606091508189015160a060e0880152612122610120880182612072565b60808b01518882037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80016101008a0152805180835291925086019086830190600581901b8401880160005b828110156121d6577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe086830301845284518781511683528a810151898c8501526121b98a850182612072565b918b0151938b0193909352948a0194938a0193915060010161216d565b50968a019b909b52505050509093019390935250949350505050565b600082601f83011261220357600080fd5b611eba83833560208501611f5d565b60008060006060848603121561222757600080fd5b833561223281611e7b565b9250602084013567ffffffffffffffff81111561224e57600080fd5b61225a868287016121f2565b925050604084013590509250925092565b821515815260406020820152600061203a6040830184612072565b6000806040838503121561229957600080fd5b82356122a481611e7b565b915060208301356122b481611e7b565b809150509250929050565b6000806000604084860312156122d457600080fd5b833567ffffffffffffffff8111156122eb57600080fd5b6122f786828701611d78565b90945092505060208401356004811061230f57600080fd5b809150509250925092565b60008060006040848603121561232f57600080fd5b833567ffffffffffffffff8082111561234757600080fd5b61235387838801611d78565b9095509350602086013591508082111561236c57600080fd5b50840160a0818703121561230f57600080fd5b6000806040838503121561239257600080fd5b823561239d81611e7b565b9150602083013567ffffffffffffffff8111156123b957600080fd5b6123c5858286016121f2565b9150509250929050565b8183823760009101908152919050565b8015158114610de457600080fd5b6000602082840312156123ff57600080fd5b8151611eba816123df565b600181811c9082168061241e57607f821691505b602082108103612457577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036124bd576124bd61245d565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008083546125018161240a565b60018281168015612519576001811461254c5761257b565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008416875282151583028701945061257b565b8760005260208060002060005b858110156125725781548a820152908401908201612559565b50505082870194505b50929695505050505050565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b6060815260006125e4606083018688612587565b73ffffffffffffffffffffffffffffffffffffffff949094166020830152506040015292915050565b6000825161261f818460208701612042565b9190910192915050565b60006020828403121561263b57600080fd5b5051919050565b604081526000612656604083018587612587565b905061203a6020830184611e32565b60006020828403121561267757600080fd5b8135611eba816123df565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126126b757600080fd5b83018035915067ffffffffffffffff8211156126d257600080fd5b602001915036819003821315611dba57600080fd5b601f82111561273157600081815260208120601f850160051c8101602086101561270e5750805b601f850160051c820191505b8181101561272d5782815560010161271a565b5050505b505050565b67ffffffffffffffff83111561274e5761274e611f2e565b6127628361275c835461240a565b836126e7565b6000601f8411600181146127b4576000851561277e5750838201355b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600387901b1c1916600186901b17835561284a565b6000838152602090207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0861690835b8281101561280357868501358255602094850194600190920191016127e3565b508682101561283e577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261288657600080fd5b83018035915067ffffffffffffffff8211156128a157600080fd5b6020019150600581901b3603821315611dba57600080fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa183360301811261261f57600080fd5b81356128f881611e7b565b73ffffffffffffffffffffffffffffffffffffffff81167fffffffffffffffffffffffff00000000000000000000000000000000000000008354161782555060018082016020808501357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe186360301811261297257600080fd5b8501803567ffffffffffffffff81111561298b57600080fd5b803603838301131561299c57600080fd5b6129b0816129aa865461240a565b866126e7565b6000601f821160018114612a0457600083156129ce57508382018501355b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600385901b1c1916600184901b178655612a99565b6000868152602090207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0841690835b82811015612a5257868501880135825593870193908901908701612a33565b5084821015612a8f577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88660031b161c198785880101351681555b50508683881b0186555b50505050505050604082013560028201555050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612ae357600080fd5b830160208101925035905067ffffffffffffffff811115612b0357600080fd5b803603821315611dba57600080fd5b81835260006020808501808196508560051b81019150846000805b88811015612bd2578385038a5282357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa1893603018112612b6b578283fd5b880160608135612b7a81611e7b565b73ffffffffffffffffffffffffffffffffffffffff168752612b9e82890183612aae565b828a8a0152612bb0838a018284612587565b6040948501359990940198909852505099860199945091850191600101612b2d565b509298975050505050505050565b604081526000612bf4604083018587612587565b82810360208401528335612c07816123df565b15158152602084810135908201526040840135612c2381611e7b565b73ffffffffffffffffffffffffffffffffffffffff166040820152612c4b6060850185612aae565b60a06060840152612c6060a084018284612587565b91505060808501357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1863603018112612c9857600080fd5b850160208101903567ffffffffffffffff811115612cb557600080fd5b8060051b3603821315612cc757600080fd5b8383036080850152612cda838284612b12565b9998505050505050505050565b60008219821115612cfa57612cfa61245d565b500190565b6000602080835260008454612d138161240a565b80848701526040600180841660008114612d345760018114612d6c57612d9a565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008516838a01528284151560051b8a01019550612d9a565b896000528660002060005b85811015612d925781548b8201860152908301908801612d77565b8a0184019650505b50939897505050505050505056fea164736f6c634300080f000a",
    "sourceMap": "1008:12647:205:-:0;;;3384:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1034:5:92;:14;;-1:-1:-1;;;;;;1034:14:92;-1:-1:-1;;;;;1034:14:92;;;;;;;1064:32;;1034:14;;;;;;;;:5;1064:32;;1034:5;;1064:32;996:107;300:45:203;1996:50:202;3384:53:205;1008:12647;;14:290:322;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:322;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:322:o;:::-;1008:12647:205;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106100ec5760003560e01c8063690d83201161008a5780639bc94d01116100595780639bc94d01146102e8578063e551cdaa14610308578063edee623914610328578063fc3e3eba1461033b57600080fd5b8063690d8320146102355780636e2d44ae146102555780638da5cb5b146102765780639456fbcc146102c857600080fd5b806344004cc1116100c657806344004cc1146101a55780634782f779146101c55780634d7fba6e146101e557806367148cd21461021557600080fd5b80630d8f46971461012d57806313af4035146101635780634025feb21461018557600080fd5b366101285760405134815233907f4103257eaac983ca79a70d28f90dfc4fa16b619bb0c17ee7cab0d4034c2796249060200160405180910390a2005b600080fd5b34801561013957600080fd5b5061014d610148366004611dc1565b61036b565b60405161015a9190611e6d565b60405180910390f35b34801561016f57600080fd5b5061018361017e366004611e9d565b61039b565b005b34801561019157600080fd5b506101836101a0366004611ec1565b610491565b3480156101b157600080fd5b506101836101c0366004611ec1565b610623565b3480156101d157600080fd5b506101836101e0366004611f02565b6107b4565b3480156101f157600080fd5b50610205610200366004611ff1565b610904565b60405161015a94939291906120bc565b34801561022157600080fd5b50610183610230366004611dc1565b610b36565b34801561024157600080fd5b50610183610250366004611e9d565b610d59565b610268610263366004612212565b610de7565b60405161015a92919061226b565b34801561028257600080fd5b506000546102a39073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161015a565b3480156102d457600080fd5b506101836102e3366004612286565b610ee1565b3480156102f457600080fd5b506101836103033660046122bf565b610ffc565b34801561031457600080fd5b5061018361032336600461231a565b611537565b61026861033636600461237f565b6119bb565b34801561034757600080fd5b5061035b610356366004611dc1565b611ab1565b604051901515815260200161015a565b60006001838360405161037f9291906123cf565b9081526040519081900360200190205460ff1690505b92915050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610421576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a4544000000000000000000000000000000000000000060448201526064015b60405180910390fd5b600080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff83169081178255604051909133917f8292fce18fa69edf4db7b94ea2e58241df0ae57f97e0a6c9b29067028bf92d769190a350565b60005473ffffffffffffffffffffffffffffffffffffffff163314610512576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152606401610418565b6040517f23b872dd00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff8381166024830152604482018390528416906323b872dd90606401600060405180830381600087803b15801561058857600080fd5b505af115801561059c573d6000803e3d6000fd5b505050508273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f30b478a5e196e55886228aa87ba74a7dfeba655e0a4d7ba275eabfc22aabb7a88460405161061691815260200190565b60405180910390a4505050565b60005473ffffffffffffffffffffffffffffffffffffffff1633146106a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152606401610418565b6040517fa9059cbb00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83811660048301526024820183905284169063a9059cbb906044016020604051808303816000875af1158015610719573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061073d91906123ed565b508273ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f6b00f1c7883f053ba83e907fd1965b22fffe3c4111383e725f04638a566cdbfa8460405161061691815260200190565b60005473ffffffffffffffffffffffffffffffffffffffff163314610835576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152606401610418565b60008273ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d806000811461088f576040519150601f19603f3d011682016040523d82523d6000602084013e610894565b606091505b505090508273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f1f12aa8b6d492dd9b98e2b00b0b20830c2a7ded65afac13b60d169a034ae90bc846040516108f791815260200190565b60405180910390a3505050565b805160208183018101805160018083529383019483019490942093905282546040805160a081018252938501805460ff90811615158652600287015494860194909452600386015473ffffffffffffffffffffffffffffffffffffffff169185019190915260048501805493909216949392909160608401916109869061240a565b80601f01602080910402602001604051908101604052809291908181526020018280546109b29061240a565b80156109ff5780601f106109d4576101008083540402835291602001916109ff565b820191906000526020600020905b8154815290600101906020018083116109e257829003601f168201915b5050505050815260200160048201805480602002602001604051908101604052809291908181526020016000905b82821015610b1e576000848152602090819020604080516060810190915260038502909101805473ffffffffffffffffffffffffffffffffffffffff1682526001810180549293919291840191610a839061240a565b80601f0160208091040260200160405190810160405280929190818152602001828054610aaf9061240a565b8015610afc5780601f10610ad157610100808354040283529160200191610afc565b820191906000526020600020905b815481529060010190602001808311610adf57829003601f168201915b5050505050815260200160028201548152505081526020019060010190610a2d565b50505091525050600682015460079092015490919084565b600060018383604051610b4a9291906123cf565b90815260200160405180910390209050610b648383611ab1565b50426006820155600781018054906000610b7d8361248c565b9091555050600581015460005b81811015610cfd576000836001016004018281548110610bac57610bac6124c4565b6000918252602082206003909102018054600282015460405192945073ffffffffffffffffffffffffffffffffffffffff90911691610bef9060018601906124f3565b60006040518083038185875af1925050503d8060008114610c2c576040519150601f19603f3d011682016040523d82523d6000602084013e610c31565b606091505b5050905080610ce8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604c60248201527f447269707069653a20647269702077617320756e7375636365737366756c2c2060448201527f706c6561736520636865636b20796f757220636f6e66696775726174696f6e2060648201527f666f72206d697374616b65730000000000000000000000000000000000000000608482015260a401610418565b50508080610cf59061248c565b915050610b8a565b508383604051610d0e9291906123cf565b60405180910390207fea21435419aad9c54a9d90e2522b6f60bd566401f36fcef661f5f5a28cc0d2c685853342604051610d4b94939291906125d0565b60405180910390a250505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610dda576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152606401610418565b610de481476107b4565b50565b6000805460609073ffffffffffffffffffffffffffffffffffffffff163314610e6c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152606401610418565b8473ffffffffffffffffffffffffffffffffffffffff168385604051610e92919061260d565b60006040518083038185875af1925050503d8060008114610ecf576040519150601f19603f3d011682016040523d82523d6000602084013e610ed4565b606091505b5090969095509350505050565b60005473ffffffffffffffffffffffffffffffffffffffff163314610f62576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152606401610418565b6040517f70a08231000000000000000000000000000000000000000000000000000000008152306004820152610ff8908390839073ffffffffffffffffffffffffffffffffffffffff8316906370a0823190602401602060405180830381865afa158015610fd4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906101c09190612629565b5050565b60005473ffffffffffffffffffffffffffffffffffffffff16331461107d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152606401610418565b600081600381111561109157611091611e03565b03611144576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604160248201527f447269707069653a2064726970207374617475732063616e206e65766572206260448201527f6520736574206261636b20746f204e4f4e45206166746572206372656174696f60648201527f6e00000000000000000000000000000000000000000000000000000000000000608482015260a401610418565b6000600184846040516111589291906123cf565b9081526040519081900360200190205460ff169050600081600381111561118157611181611e03565b03611234576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604160248201527f447269707069653a206472697020776974682074686174206e616d6520646f6560448201527f73206e6f7420657869737420616e642063616e6e6f742062652075706461746560648201527f6400000000000000000000000000000000000000000000000000000000000000608482015260a401610418565b600381600381111561124857611248611e03565b036112fc576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526044602482018190527f447269707069653a206472697020776974682074686174206e616d6520686173908201527f206265656e20617263686976656420616e642063616e6e6f742062652075706460648201527f6174656400000000000000000000000000000000000000000000000000000000608482015260a401610418565b81600381111561130e5761130e611e03565b81600381111561132057611320611e03565b036113d3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604860248201527f447269707069653a2063616e6e6f74207365742064726970207374617475732060448201527f746f207468652073616d6520737461747573206173206974732063757272656e60648201527f7420737461747573000000000000000000000000000000000000000000000000608482015260a401610418565b60038260038111156113e7576113e7611e03565b0361148d57600181600381111561140057611400611e03565b1461148d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603860248201527f447269707069653a2064726970206d757374206669727374206265207061757360448201527f6564206265666f7265206265696e6720617263686976656400000000000000006064820152608401610418565b81600185856040516114a09291906123cf565b90815260405190819003602001902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660018360038111156114e7576114e7611e03565b021790555083836040516114fc9291906123cf565b60405180910390207f407cb3ad05e60ec498fb39417c7a4f6b82d5ba80f82fe512a37b02c93181a2a1858585604051610d4b93929190612642565b60005473ffffffffffffffffffffffffffffffffffffffff1633146115b8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152606401610418565b6000600184846040516115cc9291906123cf565b9081526040519081900360200190205460ff1660038111156115f0576115f0611e03565b1461167d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f447269707069653a206472697020776974682074686174206e616d6520616c7260448201527f65616479206578697374730000000000000000000000000000000000000000006064820152608401610418565b61168a6020820182612665565b1561172657602081013515611721576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603e60248201527f447269707069653a20696620616c6c6f77696e67207265656e7472616e74206460448201527f7269702c206d7573742073657420696e74657276616c20746f207a65726f00006064820152608401610418565b6117e1565b60008160200135116117e1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152602060048201526044602482018190527f447269707069653a20696e74657276616c206d75737420626520677265617465908201527f72207468616e207a65726f2069662064726970206973206e6f74207265656e7460648201527f72616e7400000000000000000000000000000000000000000000000000000000608482015260a401610418565b6000600184846040516117f59291906123cf565b9081526040516020918190038201902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00166001178155915061183c90830183612665565b6001820180547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0016911515919091179055602082013560028201556118876060830160408401611e9d565b6003820180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff929092169190911790556118db6060830183612682565b60048301916118eb919083612736565b5060005b6118fc6080840184612851565b905081101561196f57600582016119166080850185612851565b83818110611926576119266124c4565b905060200281019061193891906128b9565b81546001810183556000928352602090922090916003020161195a82826128ed565b505080806119679061248c565b9150506118ef565b5083836040516119809291906123cf565b60405180910390207fe38d8d98e6cc66f6f520d483c6c5a89289681f897799c4c29d767cf57e76d9a6858585604051610d4b93929190612be0565b6000805460609073ffffffffffffffffffffffffffffffffffffffff163314611a40576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f554e415554484f52495a454400000000000000000000000000000000000000006044820152606401610418565b8373ffffffffffffffffffffffffffffffffffffffff1683604051611a65919061260d565b600060405180830381855af49150503d8060008114611aa0576040519150601f19603f3d011682016040523d82523d6000602084013e611aa5565b606091505b50909590945092505050565b60008060018484604051611ac69291906123cf565b90815260405190819003602001902090506002815460ff166003811115611aef57611aef611e03565b14611b7e57604080517f08c379a00000000000000000000000000000000000000000000000000000000081526020600482015260248101919091527f447269707069653a2073656c6563746564206472697020646f6573206e6f742060448201527f6578697374206f72206973206e6f742063757272656e746c79206163746976656064820152608401610418565b600281015460068201544291611b9391612ce7565b1115611c21576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603660248201527f447269707069653a206472697020696e74657276616c20686173206e6f74206560448201527f6c61707365642073696e6365206c6173742064726970000000000000000000006064820152608401610418565b60038101546040517fc64b3bb500000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9091169063c64b3bb590611c7b9060048086019101612cff565b602060405180830381865afa158015611c98573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611cbc91906123ed565b611d6e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604260248201527f447269707069653a2064726970636865636b206661696c656420736f2064726960448201527f70206973206e6f742079657420726561647920746f206265207472696767657260648201527f6564000000000000000000000000000000000000000000000000000000000000608482015260a401610418565b5060019392505050565b60008083601f840112611d8a57600080fd5b50813567ffffffffffffffff811115611da257600080fd5b602083019150836020828501011115611dba57600080fd5b9250929050565b60008060208385031215611dd457600080fd5b823567ffffffffffffffff811115611deb57600080fd5b611df785828601611d78565b90969095509350505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60048110611e69577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b602081016103958284611e32565b73ffffffffffffffffffffffffffffffffffffffff81168114610de457600080fd5b600060208284031215611eaf57600080fd5b8135611eba81611e7b565b9392505050565b600080600060608486031215611ed657600080fd5b8335611ee181611e7b565b92506020840135611ef181611e7b565b929592945050506040919091013590565b60008060408385031215611f1557600080fd5b8235611f2081611e7b565b946020939093013593505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600067ffffffffffffffff80841115611f7857611f78611f2e565b604051601f85017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908282118183101715611fbe57611fbe611f2e565b81604052809350858152868686011115611fd757600080fd5b858560208301376000602087830101525050509392505050565b60006020828403121561200357600080fd5b813567ffffffffffffffff81111561201a57600080fd5b8201601f8101841361202b57600080fd5b61203a84823560208401611f5d565b949350505050565b60005b8381101561205d578181015183820152602001612045565b8381111561206c576000848401525b50505050565b6000815180845261208a816020860160208601612042565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6120c68186611e32565b600060206080818401528551151560808401528086015160a084015260408087015173ffffffffffffffffffffffffffffffffffffffff80821660c0870152606091508189015160a060e0880152612122610120880182612072565b60808b01518882037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff80016101008a0152805180835291925086019086830190600581901b8401880160005b828110156121d6577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe086830301845284518781511683528a810151898c8501526121b98a850182612072565b918b0151938b0193909352948a0194938a0193915060010161216d565b50968a019b909b52505050509093019390935250949350505050565b600082601f83011261220357600080fd5b611eba83833560208501611f5d565b60008060006060848603121561222757600080fd5b833561223281611e7b565b9250602084013567ffffffffffffffff81111561224e57600080fd5b61225a868287016121f2565b925050604084013590509250925092565b821515815260406020820152600061203a6040830184612072565b6000806040838503121561229957600080fd5b82356122a481611e7b565b915060208301356122b481611e7b565b809150509250929050565b6000806000604084860312156122d457600080fd5b833567ffffffffffffffff8111156122eb57600080fd5b6122f786828701611d78565b90945092505060208401356004811061230f57600080fd5b809150509250925092565b60008060006040848603121561232f57600080fd5b833567ffffffffffffffff8082111561234757600080fd5b61235387838801611d78565b9095509350602086013591508082111561236c57600080fd5b50840160a0818703121561230f57600080fd5b6000806040838503121561239257600080fd5b823561239d81611e7b565b9150602083013567ffffffffffffffff8111156123b957600080fd5b6123c5858286016121f2565b9150509250929050565b8183823760009101908152919050565b8015158114610de457600080fd5b6000602082840312156123ff57600080fd5b8151611eba816123df565b600181811c9082168061241e57607f821691505b602082108103612457577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036124bd576124bd61245d565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60008083546125018161240a565b60018281168015612519576001811461254c5761257b565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008416875282151583028701945061257b565b8760005260208060002060005b858110156125725781548a820152908401908201612559565b50505082870194505b50929695505050505050565b8183528181602085013750600060208284010152600060207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116840101905092915050565b6060815260006125e4606083018688612587565b73ffffffffffffffffffffffffffffffffffffffff949094166020830152506040015292915050565b6000825161261f818460208701612042565b9190910192915050565b60006020828403121561263b57600080fd5b5051919050565b604081526000612656604083018587612587565b905061203a6020830184611e32565b60006020828403121561267757600080fd5b8135611eba816123df565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe18436030181126126b757600080fd5b83018035915067ffffffffffffffff8211156126d257600080fd5b602001915036819003821315611dba57600080fd5b601f82111561273157600081815260208120601f850160051c8101602086101561270e5750805b601f850160051c820191505b8181101561272d5782815560010161271a565b5050505b505050565b67ffffffffffffffff83111561274e5761274e611f2e565b6127628361275c835461240a565b836126e7565b6000601f8411600181146127b4576000851561277e5750838201355b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600387901b1c1916600186901b17835561284a565b6000838152602090207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0861690835b8281101561280357868501358255602094850194600190920191016127e3565b508682101561283e577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88860031b161c19848701351681555b505060018560011b0183555b5050505050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe184360301811261288657600080fd5b83018035915067ffffffffffffffff8211156128a157600080fd5b6020019150600581901b3603821315611dba57600080fd5b600082357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa183360301811261261f57600080fd5b81356128f881611e7b565b73ffffffffffffffffffffffffffffffffffffffff81167fffffffffffffffffffffffff00000000000000000000000000000000000000008354161782555060018082016020808501357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe186360301811261297257600080fd5b8501803567ffffffffffffffff81111561298b57600080fd5b803603838301131561299c57600080fd5b6129b0816129aa865461240a565b866126e7565b6000601f821160018114612a0457600083156129ce57508382018501355b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600385901b1c1916600184901b178655612a99565b6000868152602090207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0841690835b82811015612a5257868501880135825593870193908901908701612a33565b5084821015612a8f577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60f88660031b161c198785880101351681555b50508683881b0186555b50505050505050604082013560028201555050565b60008083357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1843603018112612ae357600080fd5b830160208101925035905067ffffffffffffffff811115612b0357600080fd5b803603821315611dba57600080fd5b81835260006020808501808196508560051b81019150846000805b88811015612bd2578385038a5282357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa1893603018112612b6b578283fd5b880160608135612b7a81611e7b565b73ffffffffffffffffffffffffffffffffffffffff168752612b9e82890183612aae565b828a8a0152612bb0838a018284612587565b6040948501359990940198909852505099860199945091850191600101612b2d565b509298975050505050505050565b604081526000612bf4604083018587612587565b82810360208401528335612c07816123df565b15158152602084810135908201526040840135612c2381611e7b565b73ffffffffffffffffffffffffffffffffffffffff166040820152612c4b6060850185612aae565b60a06060840152612c6060a084018284612587565b91505060808501357fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe1863603018112612c9857600080fd5b850160208101903567ffffffffffffffff811115612cb557600080fd5b8060051b3603821315612cc757600080fd5b8383036080850152612cda838284612b12565b9998505050505050505050565b60008219821115612cfa57612cfa61245d565b500190565b6000602080835260008454612d138161240a565b80848701526040600180841660008114612d345760018114612d6c57612d9a565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008516838a01528284151560051b8a01019550612d9a565b896000528660002060005b85811015612d925781548b8201860152908301908801612d77565b8a0184019650505b50939897505050505050505056fea164736f6c634300080f000a",
    "sourceMap": "1008:12647:205:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2140:34:202;;2164:9;160:25:322;;2152:10:202;;2140:34;;148:2:322;133:18;2140:34:202;;;;;;;1008:12647:205;;;;;13531:122;;;;;;;;;;-1:-1:-1;13531:122:205;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1293:144:92;;;;;;;;;;-1:-1:-1;1293:144:92;;;;;:::i;:::-;;:::i;:::-;;4029:268:202;;;;;;;;;;-1:-1:-1;4029:268:202;;;;;:::i;:::-;;:::i;3483:312::-;;;;;;;;;;-1:-1:-1;3483:312:202;;;;;:::i;:::-;;:::i;2599:330::-;;;;;;;;;;-1:-1:-1;2599:330:202;;;;;:::i;:::-;;:::i;3289:41:205:-;;;;;;;;;;-1:-1:-1;3289:41:205;;;;;:::i;:::-;;:::i;:::-;;;;;;;;;;:::i;10168:3223::-;;;;;;;;;;-1:-1:-1;10168:3223:205;;;;;:::i;:::-;;:::i;2303:117:202:-;;;;;;;;;;-1:-1:-1;2303:117:202;;;;;:::i;:::-;;:::i;651:277:203:-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;679:20:92:-;;;;;;;;;;-1:-1:-1;679:20:92;;;;;;;;;;;8826:42:322;8814:55;;;8796:74;;8784:2;8769:18;679:20:92;8650:226:322;3105:145:202;;;;;;;;;;-1:-1:-1;3105:145:202;;;;;:::i;:::-;;:::i;5947:2024:205:-;;;;;;;;;;-1:-1:-1;5947:2024:205;;;;;:::i;:::-;;:::i;3830:1690::-;;;;;;;;;;-1:-1:-1;3830:1690:205;;;;;:::i;:::-;;:::i;1186:313:203:-;;;;;;:::i;:::-;;:::i;8134:1212:205:-;;;;;;;;;;-1:-1:-1;8134:1212:205;;;;;:::i;:::-;;:::i;:::-;;;11196:14:322;;11189:22;11171:41;;11159:2;11144:18;8134:1212:205;11031:187:322;13531:122:205;13598:10;13627:5;13633;;13627:12;;;;;;;:::i;:::-;;;;;;;;;;;;;;:19;;;;-1:-1:-1;13531:122:205;;;;;:::o;1293:144:92:-;767:5;;;;753:10;:19;745:44;;;;;;;11703:2:322;745:44:92;;;11685:21:322;11742:2;11722:18;;;11715:30;11781:14;11761:18;;;11754:42;11813:18;;745:44:92;;;;;;;;;1364:5:::1;:16:::0;;;::::1;;::::0;::::1;::::0;;::::1;::::0;;1396:34:::1;::::0;1364:16;;1409:10:::1;::::0;1396:34:::1;::::0;1364:5;1396:34:::1;1293:144:::0;:::o;4029:268:202:-;767:5:92;;;;753:10;:19;745:44;;;;;;;11703:2:322;745:44:92;;;11685:21:322;11742:2;11722:18;;;11715:30;11781:14;11761:18;;;11754:42;11813:18;;745:44:92;11501:336:322;745:44:92;4123::202::1;::::0;;;;4151:4:::1;4123:44;::::0;::::1;12105:34:322::0;4123:19:202::1;12175:15:322::0;;;12155:18;;;12148:43;12207:18;;;12200:34;;;4123:19:202;::::1;::::0;::::1;::::0;12017:18:322;;4123:44:202::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;4277:6;4237:53;;4264:3;4237:53;;4252:10;4237:53;;;4286:3;4237:53;;;;160:25:322::0;;148:2;133:18;;14:177;4237:53:202::1;;;;;;;;4029:268:::0;;;:::o;3483:312::-;767:5:92;;;;753:10;:19;745:44;;;;;;;11703:2:322;745:44:92;;;11685:21:322;11742:2;11722:18;;;11715:30;11781:14;11761:18;;;11754:42;11813:18;;745:44:92;11501:336:322;745:44:92;3633:29:202::1;::::0;;;;:15:::1;12437:55:322::0;;;3633:29:202::1;::::0;::::1;12419:74:322::0;12509:18;;;12502:34;;;3633:15:202;::::1;::::0;::::1;::::0;12392:18:322;;3633:29:202::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;3771:6;3732:56;;3758:3;3732:56;;3746:10;3732:56;;;3780:7;3732:56;;;;160:25:322::0;;148:2;133:18;;14:177;2599:330:202;767:5:92;;;;753:10;:19;745:44;;;;;;;11703:2:322;745:44:92;;;11685:21:322;11742:2;11722:18;;;11715:30;11781:14;11761:18;;;11754:42;11813:18;;745:44:92;11501:336:322;745:44:92;2748:12:202::1;2765:3;:8;;2782:7;2765:30;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2747:48;;;2909:3;2885:37;;2897:10;2885:37;;;2914:7;2885:37;;;;160:25:322::0;;148:2;133:18;;14:177;2885:37:202::1;;;;;;;;2675:254;2599:330:::0;;:::o;3289:41:205:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3289:41:205;;-1:-1:-1;;3289:41:205;;;;;;;;;;;;;:::o;10168:3223::-;10224:23;10250:5;10256;;10250:12;;;;;;;:::i;:::-;;;;;;;;;;;;;10224:38;;10463:17;10474:5;;10463:10;:17::i;:::-;-1:-1:-1;10952:15:205;10939:10;;;:28;11263:11;;;:13;;;:11;:13;;;:::i;:::-;;;;-1:-1:-1;;11646:20:205;;;:27;11632:11;11683:1631;11707:3;11703:1;:7;11683:1631;;;11988:25;12016:5;:12;;:20;;12037:1;12016:23;;;;;;;;:::i;:::-;;;;;;;;;;;;;12444:13;;12471:12;;;;12444:54;;12016:23;;-1:-1:-1;12444:13:205;;;;;:54;;:13;12486:11;;;12444:54;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;12426:72;;;13215:7;13207:96;;;;;;;15380:2:322;13207:96:205;;;15362:21:322;15419:2;15399:18;;;15392:30;15458:34;15438:18;;;15431:62;15529:34;15509:18;;;15502:62;15601:14;15580:19;;;15573:43;15633:19;;13207:96:205;15178:480:322;13207:96:205;11717:1597;;11712:3;;;;;:::i;:::-;;;;11683:1631;;;;13342:5;;13329:55;;;;;;;:::i;:::-;;;;;;;;;13349:5;;13356:10;13368:15;13329:55;;;;;;;;;:::i;:::-;;;;;;;;10214:3177;;10168:3223;;:::o;2303:117:202:-;767:5:92;;;;753:10;:19;745:44;;;;;;;11703:2:322;745:44:92;;;11685:21:322;11742:2;11722:18;;;11715:30;11781:14;11761:18;;;11754:42;11813:18;;745:44:92;11501:336:322;745:44:92;2374:39:202::1;2386:3;2391:21;2374:11;:39::i;:::-;2303:117:::0;:::o;651:277:203:-;816:13;767:5:92;;831:18:203;;767:5:92;;753:10;:19;745:44;;;;;;;11703:2:322;745:44:92;;;11685:21:322;11742:2;11722:18;;;11715:30;11781:14;11761:18;;;11754:42;11813:18;;745:44:92;11501:336:322;745:44:92;885:7:203::1;:12;;906:6;915:5;885:36;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;865:56:203;;;;-1:-1:-1;651:277:203;-1:-1:-1;;;;651:277:203:o;3105:145:202:-;767:5:92;;;;753:10;:19;745:44;;;;;;;11703:2:322;745:44:92;;;11685:21:322;11742:2;11722:18;;;11715:30;11781:14;11761:18;;;11754:42;11813:18;;745:44:92;11501:336:322;745:44:92;3211:31:202::1;::::0;;;;3236:4:::1;3211:31;::::0;::::1;8796:74:322::0;3184:59:202::1;::::0;3198:6;;3206:3;;3211:16:::1;::::0;::::1;::::0;::::1;::::0;8769:18:322;;3211:31:202::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;3184:59::-;3105:145:::0;;:::o;5947:2024:205:-;767:5:92;;;;753:10;:19;745:44;;;;;;;11703:2:322;745:44:92;;;11685:21:322;11742:2;11722:18;;;11715:30;11781:14;11761:18;;;11754:42;11813:18;;745:44:92;11501:336:322;745:44:92;6232:15:205::1;6221:7;:26;;;;;;;;:::i;:::-;::::0;6213:104:::1;;;::::0;::::1;::::0;;17107:2:322;6213:104:205::1;::::0;::::1;17089:21:322::0;17146:2;17126:18;;;17119:30;17185:34;17165:18;;;17158:62;17256:34;17236:18;;;17229:62;17328:3;17307:19;;;17300:32;17349:19;;6213:104:205::1;16905:469:322::0;6213:104:205::1;6394:15;6412:5;6418;;6412:12;;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;:19;::::1;;::::0;-1:-1:-1;6412:19:205::1;6688:4;:23;;;;;;;;:::i;:::-;::::0;6680:101:::1;;;::::0;::::1;::::0;;17581:2:322;6680:101:205::1;::::0;::::1;17563:21:322::0;17620:2;17600:18;;;17593:30;17659:34;17639:18;;;17632:62;17730:34;17710:18;;;17703:62;17802:3;17781:19;;;17774:32;17823:19;;6680:101:205::1;17379:469:322::0;6680:101:205::1;6945:19;6937:4;:27;;;;;;;;:::i;:::-;::::0;6929:108:::1;;;::::0;::::1;::::0;;18055:2:322;6929:108:205::1;::::0;::::1;18037:21:322::0;18094:2;18074:18;;;18067:30;;;18133:34;18113:18;;;18106:62;18204:34;18184:18;;;18177:62;18276:6;18255:19;;;18248:35;18300:19;;6929:108:205::1;17853:472:322::0;6929:108:205::1;7331:7;7323:15;;;;;;;;:::i;:::-;:4;:15;;;;;;;;:::i;:::-;::::0;7315:100:::1;;;::::0;::::1;::::0;;18532:2:322;7315:100:205::1;::::0;::::1;18514:21:322::0;18571:2;18551:18;;;18544:30;18610:34;18590:18;;;18583:62;18681:34;18661:18;;;18654:62;18753:10;18732:19;;;18725:39;18781:19;;7315:100:205::1;18330:476:322::0;7315:100:205::1;7662:19;7651:7;:30;;;;;;;;:::i;:::-;::::0;7647:155:::1;;7713:17;7705:4;:25;;;;;;;;:::i;:::-;;7697:94;;;::::0;::::1;::::0;;19013:2:322;7697:94:205::1;::::0;::::1;18995:21:322::0;19052:2;19032:18;;;19025:30;19091:34;19071:18;;;19064:62;19162:26;19142:18;;;19135:54;19206:19;;7697:94:205::1;18811:420:322::0;7697:94:205::1;7902:7;7880:5;7886;;7880:12;;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;:29;;;::::1;::::0;;::::1;::::0;::::1;;;;;;:::i;:::-;;;;;;7942:5;;7924:40;;;;;;;:::i;:::-;;;;;;;;;7949:5;;7956:7;7924:40;;;;;;;;:::i;3830:1690::-:0;767:5:92;;;;753:10;:19;745:44;;;;;;;11703:2:322;745:44:92;;;11685:21:322;11742:2;11722:18;;;11715:30;11781:14;11761:18;;;11754:42;11813:18;;745:44:92;11501:336:322;745:44:92;4193:15:205::1;4170:5;4176;;4170:12;;;;;;;:::i;:::-;::::0;;;::::1;::::0;;;;;::::1;::::0;;;:19;::::1;;:38;::::0;::::1;;;;;;:::i;:::-;;4162:94;;;::::0;::::1;::::0;;19795:2:322;4162:94:205::1;::::0;::::1;19777:21:322::0;19834:2;19814:18;;;19807:30;19873:34;19853:18;;;19846:62;19944:13;19924:18;;;19917:41;19975:19;;4162:94:205::1;19593:407:322::0;4162:94:205::1;4542:17;;::::0;::::1;:7:::0;:17:::1;:::i;:::-;4538:276;;;4583:16;::::0;::::1;;:21:::0;4575:96:::1;;;::::0;::::1;::::0;;20453:2:322;4575:96:205::1;::::0;::::1;20435:21:322::0;20492:2;20472:18;;;20465:30;20531:34;20511:18;;;20504:62;20602:32;20582:18;;;20575:60;20652:19;;4575:96:205::1;20251:426:322::0;4575:96:205::1;4538:276;;;4729:1;4710:7;:16;;;:20;4702:101;;;::::0;::::1;::::0;;20884:2:322;4702:101:205::1;::::0;::::1;20866:21:322::0;20923:2;20903:18;;;20896:30;;;20962:34;20942:18;;;20935:62;21033:34;21013:18;;;21006:62;21105:6;21084:19;;;21077:35;21129:19;;4702:101:205::1;20682:472:322::0;4702:101:205::1;4918:23;4944:5;4950;;4944:12;;;;;;;:::i;:::-;::::0;;;::::1;::::0;::::1;::::0;;;;;;;;4966:32;;;::::1;4981:17;4966:32;::::0;;4944:12;-1:-1:-1;5033:17:205::1;::::0;;::::1;::::0;::::1;:::i;:::-;5008:12;::::0;::::1;:42:::0;;;::::1;::::0;::::1;;::::0;;;::::1;::::0;;5084:16:::1;::::0;::::1;;5060:21:::0;;;:40;5135:17:::1;::::0;;;::::1;::::0;::::1;;:::i;:::-;5110:22:::0;;;:42;;;::::1;;::::0;;;::::1;::::0;;;::::1;::::0;;5189:19:::1;;::::0;::::1;::::0;::::1;:::i;:::-;5162:24:::0;;;;:46:::1;::::0;;:24;:46:::1;:::i;:::-;;5319:9;5314:123;5338:15;;::::0;::::1;:7:::0;:15:::1;:::i;:::-;:22;;5334:1;:26;5314:123;;;5381:20:::0;;;5407:15:::1;;::::0;::::1;:7:::0;:15:::1;:::i;:::-;5423:1;5407:18;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;5381:45:::0;;::::1;::::0;::::1;::::0;;-1:-1:-1;5381:45:205;;;::::1;::::0;;;;;::::1;;;;::::0;;::::1;:::i;:::-;;;5362:3;;;;;:::i;:::-;;;;5314:123;;;;5491:5;;5479:34;;;;;;;:::i;:::-;;;;;;;;;5498:5;;5505:7;5479:34;;;;;;;;:::i;1186:313:203:-:0;1335:13;767:5:92;;1350:18:203;;767:5:92;;753:10;:19;745:44;;;;;;;11703:2:322;745:44:92;;;11685:21:322;11742:2;11722:18;;;11715:30;11781:14;11761:18;;;11754:42;11813:18;;745:44:92;11501:336:322;745:44:92;1465:7:203::1;:20;;1486:5;1465:27;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1::0;1445:47:203;;;;-1:-1:-1;1186:313:203;-1:-1:-1;;;1186:313:203:o;8134:1212:205:-;8198:4;8214:23;8240:5;8246;;8240:12;;;;;;;:::i;:::-;;;;;;;;;;;;;;;-1:-1:-1;8367:17:205;8351:12;;;;:33;;;;;;;;:::i;:::-;;8343:110;;;;;;;;31250:2:322;8343:110:205;;;31232:21:322;31269:18;;;31262:30;;;;31328:34;31308:18;;;31301:62;31399:34;31379:18;;;31372:62;31451:19;;8343:110:205;31048:428:322;8343:110:205;8919:21;;;;8906:10;;;;8944:15;;8906:34;;;:::i;:::-;:53;;8885:154;;;;;;;31816:2:322;8885:154:205;;;31798:21:322;31855:2;31835:18;;;31828:30;31894:34;31874:18;;;31867:62;31965:24;31945:18;;;31938:52;32007:19;;8885:154:205;31614:418:322;8885:154:205;9128:22;;;;:54;;;;;:22;;;;;:28;;:54;;9157:24;;;;;9128:54;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9107:167;;;;;;;33263:2:322;9107:167:205;;;33245:21:322;33302:2;33282:18;;;33275:30;33341:34;33321:18;;;33314:62;33412:34;33392:18;;;33385:62;33484:4;33463:19;;;33456:33;33506:19;;9107:167:205;33061:470:322;9107:167:205;-1:-1:-1;9335:4:205;;8134:1212;-1:-1:-1;;;8134:1212:205:o;196:348:322:-;248:8;258:6;312:3;305:4;297:6;293:17;289:27;279:55;;330:1;327;320:12;279:55;-1:-1:-1;353:20:322;;396:18;385:30;;382:50;;;428:1;425;418:12;382:50;465:4;457:6;453:17;441:29;;517:3;510:4;501:6;493;489:19;485:30;482:39;479:59;;;534:1;531;524:12;479:59;196:348;;;;;:::o;549:411::-;620:6;628;681:2;669:9;660:7;656:23;652:32;649:52;;;697:1;694;687:12;649:52;737:9;724:23;770:18;762:6;759:30;756:50;;;802:1;799;792:12;756:50;841:59;892:7;883:6;872:9;868:22;841:59;:::i;:::-;919:8;;815:85;;-1:-1:-1;549:411:322;-1:-1:-1;;;;549:411:322:o;965:184::-;1017:77;1014:1;1007:88;1114:4;1111:1;1104:15;1138:4;1135:1;1128:15;1154:295;1236:1;1229:5;1226:12;1216:200;;1272:77;1269:1;1262:88;1373:4;1370:1;1363:15;1401:4;1398:1;1391:15;1216:200;1425:18;;1154:295::o;1454:211::-;1602:2;1587:18;;1614:45;1591:9;1641:6;1614:45;:::i;1670:154::-;1756:42;1749:5;1745:54;1738:5;1735:65;1725:93;;1814:1;1811;1804:12;1829:247;1888:6;1941:2;1929:9;1920:7;1916:23;1912:32;1909:52;;;1957:1;1954;1947:12;1909:52;1996:9;1983:23;2015:31;2040:5;2015:31;:::i;:::-;2065:5;1829:247;-1:-1:-1;;;1829:247:322:o;2081:472::-;2174:6;2182;2190;2243:2;2231:9;2222:7;2218:23;2214:32;2211:52;;;2259:1;2256;2249:12;2211:52;2298:9;2285:23;2317:31;2342:5;2317:31;:::i;:::-;2367:5;-1:-1:-1;2424:2:322;2409:18;;2396:32;2437:33;2396:32;2437:33;:::i;:::-;2081:472;;2489:7;;-1:-1:-1;;;2543:2:322;2528:18;;;;2515:32;;2081:472::o;3034:323::-;3110:6;3118;3171:2;3159:9;3150:7;3146:23;3142:32;3139:52;;;3187:1;3184;3177:12;3139:52;3226:9;3213:23;3245:31;3270:5;3245:31;:::i;:::-;3295:5;3347:2;3332:18;;;;3319:32;;-1:-1:-1;;;3034:323:322:o;3362:184::-;3414:77;3411:1;3404:88;3511:4;3508:1;3501:15;3535:4;3532:1;3525:15;3551:691;3616:5;3646:18;3687:2;3679:6;3676:14;3673:40;;;3693:18;;:::i;:::-;3827:2;3821:9;3893:2;3881:15;;3732:66;3877:24;;;3903:2;3873:33;3869:42;3857:55;;;3927:18;;;3947:22;;;3924:46;3921:72;;;3973:18;;:::i;:::-;4013:10;4009:2;4002:22;4042:6;4033:15;;4072:6;4064;4057:22;4112:3;4103:6;4098:3;4094:16;4091:25;4088:45;;;4129:1;4126;4119:12;4088:45;4179:6;4174:3;4167:4;4159:6;4155:17;4142:44;4234:1;4227:4;4218:6;4210;4206:19;4202:30;4195:41;;;;3551:691;;;;;:::o;4247:451::-;4316:6;4369:2;4357:9;4348:7;4344:23;4340:32;4337:52;;;4385:1;4382;4375:12;4337:52;4425:9;4412:23;4458:18;4450:6;4447:30;4444:50;;;4490:1;4487;4480:12;4444:50;4513:22;;4566:4;4558:13;;4554:27;-1:-1:-1;4544:55:322;;4595:1;4592;4585:12;4544:55;4618:74;4684:7;4679:2;4666:16;4661:2;4657;4653:11;4618:74;:::i;:::-;4608:84;4247:451;-1:-1:-1;;;;4247:451:322:o;4703:258::-;4775:1;4785:113;4799:6;4796:1;4793:13;4785:113;;;4875:11;;;4869:18;4856:11;;;4849:39;4821:2;4814:10;4785:113;;;4916:6;4913:1;4910:13;4907:48;;;4951:1;4942:6;4937:3;4933:16;4926:27;4907:48;;4703:258;;;:::o;4966:316::-;5007:3;5045:5;5039:12;5072:6;5067:3;5060:19;5088:63;5144:6;5137:4;5132:3;5128:14;5121:4;5114:5;5110:16;5088:63;:::i;:::-;5196:2;5184:15;5201:66;5180:88;5171:98;;;;5271:4;5167:109;;4966:316;-1:-1:-1;;4966:316:322:o;5287:2041::-;5554:45;5589:9;5581:6;5554:45;:::i;:::-;5535:4;5618:2;5656:3;5651:2;5640:9;5636:18;5629:31;5717:6;5711:13;5704:21;5697:29;5691:3;5680:9;5676:19;5669:58;5783:2;5775:6;5771:15;5765:22;5758:4;5747:9;5743:20;5736:52;5807:4;5858:2;5850:6;5846:15;5840:22;5881:42;5978:2;5964:12;5960:21;5954:3;5943:9;5939:19;5932:50;6001:4;5991:14;;6054:2;6046:6;6042:15;6036:22;6095:4;6089:3;6078:9;6074:19;6067:33;6123:53;6171:3;6160:9;6156:19;6140:14;6123:53;:::i;:::-;6225:3;6213:16;;6207:23;6271:22;;;6295:66;6267:95;6261:3;6246:19;;6239:124;6412:21;;6442:22;;;6109:67;;-1:-1:-1;6577:23:322;;;6480:15;;;;6538:1;6534:14;;;6522:27;;6518:36;;6618:1;6628:585;6642:6;6639:1;6636:13;6628:585;;;6728:66;6719:6;6711;6707:19;6703:92;6698:3;6691:105;6825:6;6819:13;6875:2;6870;6864:9;6860:18;6852:6;6845:34;6928:2;6924;6920:11;6914:18;6969:2;6964;6956:6;6952:15;6945:27;6999:49;7044:2;7036:6;7032:15;7016:14;6999:49;:::i;:::-;7091:11;;;7085:18;7068:15;;;7061:43;;;;7156:15;;;;7191:12;;;;6985:63;-1:-1:-1;6664:1:322;6657:9;6628:585;;;-1:-1:-1;7252:18:322;;;7245:34;;;;-1:-1:-1;;;;7295:18:322;;;7288:34;;;;-1:-1:-1;7230:6:322;5287:2041;-1:-1:-1;;;;5287:2041:322:o;7593:221::-;7635:5;7688:3;7681:4;7673:6;7669:17;7665:27;7655:55;;7706:1;7703;7696:12;7655:55;7728:80;7804:3;7795:6;7782:20;7775:4;7767:6;7763:17;7728:80;:::i;7819:523::-;7905:6;7913;7921;7974:2;7962:9;7953:7;7949:23;7945:32;7942:52;;;7990:1;7987;7980:12;7942:52;8029:9;8016:23;8048:31;8073:5;8048:31;:::i;:::-;8098:5;-1:-1:-1;8154:2:322;8139:18;;8126:32;8181:18;8170:30;;8167:50;;;8213:1;8210;8203:12;8167:50;8236:49;8277:7;8268:6;8257:9;8253:22;8236:49;:::i;:::-;8226:59;;;8332:2;8321:9;8317:18;8304:32;8294:42;;7819:523;;;;;:::o;8347:298::-;8530:6;8523:14;8516:22;8505:9;8498:41;8575:2;8570;8559:9;8555:18;8548:30;8479:4;8595:44;8635:2;8624:9;8620:18;8612:6;8595:44;:::i;8881:403::-;8964:6;8972;9025:2;9013:9;9004:7;9000:23;8996:32;8993:52;;;9041:1;9038;9031:12;8993:52;9080:9;9067:23;9099:31;9124:5;9099:31;:::i;:::-;9149:5;-1:-1:-1;9206:2:322;9191:18;;9178:32;9219:33;9178:32;9219:33;:::i;:::-;9271:7;9261:17;;;8881:403;;;;;:::o;9289:571::-;9385:6;9393;9401;9454:2;9442:9;9433:7;9429:23;9425:32;9422:52;;;9470:1;9467;9460:12;9422:52;9510:9;9497:23;9543:18;9535:6;9532:30;9529:50;;;9575:1;9572;9565:12;9529:50;9614:59;9665:7;9656:6;9645:9;9641:22;9614:59;:::i;:::-;9692:8;;-1:-1:-1;9588:85:322;-1:-1:-1;;9777:2:322;9762:18;;9749:32;9810:1;9800:12;;9790:40;;9826:1;9823;9816:12;9790:40;9849:5;9839:15;;;9289:571;;;;;:::o;9865:701::-;9976:6;9984;9992;10045:2;10033:9;10024:7;10020:23;10016:32;10013:52;;;10061:1;10058;10051:12;10013:52;10101:9;10088:23;10130:18;10171:2;10163:6;10160:14;10157:34;;;10187:1;10184;10177:12;10157:34;10226:59;10277:7;10268:6;10257:9;10253:22;10226:59;:::i;:::-;10304:8;;-1:-1:-1;10200:85:322;-1:-1:-1;10392:2:322;10377:18;;10364:32;;-1:-1:-1;10408:16:322;;;10405:36;;;10437:1;10434;10427:12;10405:36;-1:-1:-1;10460:24:322;;10518:3;10500:16;;;10496:26;10493:46;;;10535:1;10532;10525:12;10571:455;10648:6;10656;10709:2;10697:9;10688:7;10684:23;10680:32;10677:52;;;10725:1;10722;10715:12;10677:52;10764:9;10751:23;10783:31;10808:5;10783:31;:::i;:::-;10833:5;-1:-1:-1;10889:2:322;10874:18;;10861:32;10916:18;10905:30;;10902:50;;;10948:1;10945;10938:12;10902:50;10971:49;11012:7;11003:6;10992:9;10988:22;10971:49;:::i;:::-;10961:59;;;10571:455;;;;;:::o;11223:273::-;11408:6;11400;11395:3;11382:33;11364:3;11434:16;;11459:13;;;11434:16;11223:273;-1:-1:-1;11223:273:322:o;12547:118::-;12633:5;12626:13;12619:21;12612:5;12609:32;12599:60;;12655:1;12652;12645:12;12670:245;12737:6;12790:2;12778:9;12769:7;12765:23;12761:32;12758:52;;;12806:1;12803;12796:12;12758:52;12838:9;12832:16;12857:28;12879:5;12857:28;:::i;13130:437::-;13209:1;13205:12;;;;13252;;;13273:61;;13327:4;13319:6;13315:17;13305:27;;13273:61;13380:2;13372:6;13369:14;13349:18;13346:38;13343:218;;13417:77;13414:1;13407:88;13518:4;13515:1;13508:15;13546:4;13543:1;13536:15;13343:218;;13130:437;;;:::o;13572:184::-;13624:77;13621:1;13614:88;13721:4;13718:1;13711:15;13745:4;13742:1;13735:15;13761:195;13800:3;13831:66;13824:5;13821:77;13818:103;;13901:18;;:::i;:::-;-1:-1:-1;13948:1:322;13937:13;;13761:195::o;13961:184::-;14013:77;14010:1;14003:88;14110:4;14107:1;14100:15;14134:4;14131:1;14124:15;14275:898;14401:3;14430:1;14463:6;14457:13;14493:36;14519:9;14493:36;:::i;:::-;14548:1;14565:18;;;14592:191;;;;14797:1;14792:356;;;;14558:590;;14592:191;14640:66;14629:9;14625:82;14620:3;14613:95;14763:6;14756:14;14749:22;14741:6;14737:35;14732:3;14728:45;14721:52;;14592:191;;14792:356;14823:6;14820:1;14813:17;14853:4;14898:2;14895:1;14885:16;14923:1;14937:165;14951:6;14948:1;14945:13;14937:165;;;15029:14;;15016:11;;;15009:35;15072:16;;;;14966:10;;14937:165;;;14941:3;;;15131:6;15126:3;15122:16;15115:23;;14558:590;-1:-1:-1;15164:3:322;;14275:898;-1:-1:-1;;;;;;14275:898:322:o;15663:326::-;15752:6;15747:3;15740:19;15804:6;15797:5;15790:4;15785:3;15781:14;15768:43;;15856:1;15849:4;15840:6;15835:3;15831:16;15827:27;15820:38;15722:3;15978:4;15908:66;15903:2;15895:6;15891:15;15887:88;15882:3;15878:98;15874:109;15867:116;;15663:326;;;;:::o;15994:438::-;16209:2;16198:9;16191:21;16172:4;16229:62;16287:2;16276:9;16272:18;16264:6;16256;16229:62;:::i;:::-;16339:42;16327:55;;;;16322:2;16307:18;;16300:83;-1:-1:-1;16414:2:322;16399:18;16392:34;16221:70;15994:438;-1:-1:-1;;15994:438:322:o;16437:274::-;16566:3;16604:6;16598:13;16620:53;16666:6;16661:3;16654:4;16646:6;16642:17;16620:53;:::i;:::-;16689:16;;;;;16437:274;-1:-1:-1;;16437:274:322:o;16716:184::-;16786:6;16839:2;16827:9;16818:7;16814:23;16810:32;16807:52;;;16855:1;16852;16845:12;16807:52;-1:-1:-1;16878:16:322;;16716:184;-1:-1:-1;16716:184:322:o;19236:352::-;19437:2;19426:9;19419:21;19400:4;19457:62;19515:2;19504:9;19500:18;19492:6;19484;19457:62;:::i;:::-;19449:70;;19528:54;19578:2;19567:9;19563:18;19555:6;19528:54;:::i;20005:241::-;20061:6;20114:2;20102:9;20093:7;20089:23;20085:32;20082:52;;;20130:1;20127;20120:12;20082:52;20169:9;20156:23;20188:28;20210:5;20188:28;:::i;21431:580::-;21508:4;21514:6;21574:11;21561:25;21664:66;21653:8;21637:14;21633:29;21629:102;21609:18;21605:127;21595:155;;21746:1;21743;21736:12;21595:155;21773:33;;21825:20;;;-1:-1:-1;21868:18:322;21857:30;;21854:50;;;21900:1;21897;21890:12;21854:50;21933:4;21921:17;;-1:-1:-1;21964:14:322;21960:27;;;21950:38;;21947:58;;;22001:1;21998;21991:12;22016:544;22117:2;22112:3;22109:11;22106:448;;;22153:1;22178:5;22174:2;22167:17;22223:4;22219:2;22209:19;22293:2;22281:10;22277:19;22274:1;22270:27;22264:4;22260:38;22329:4;22317:10;22314:20;22311:47;;;-1:-1:-1;22352:4:322;22311:47;22407:2;22402:3;22398:12;22395:1;22391:20;22385:4;22381:31;22371:41;;22462:82;22480:2;22473:5;22470:13;22462:82;;;22525:17;;;22506:1;22495:13;22462:82;;;22466:3;;;22106:448;22016:544;;;:::o;22796:1321::-;22918:18;22913:3;22910:27;22907:53;;;22940:18;;:::i;:::-;22969:93;23058:3;23018:38;23050:4;23044:11;23018:38;:::i;:::-;23012:4;22969:93;:::i;:::-;23088:1;23113:2;23108:3;23105:11;23130:1;23125:734;;;;23903:1;23920:3;23917:93;;;-1:-1:-1;23976:19:322;;;23963:33;23917:93;22702:66;22693:1;22689:11;;;22685:84;22681:89;22671:100;22777:1;22773:11;;;22668:117;24023:78;;23098:1013;;23125:734;14222:1;14215:14;;;14259:4;14246:18;;23170:66;23161:76;;;23320:9;23342:229;23356:7;23353:1;23350:14;23342:229;;;23445:19;;;23432:33;23417:49;;23552:4;23537:20;;;;23505:1;23493:14;;;;23372:12;23342:229;;;23346:3;23599;23590:7;23587:16;23584:219;;;23719:66;23713:3;23707;23704:1;23700:11;23696:21;23692:94;23688:99;23675:9;23670:3;23666:19;23653:33;23649:139;23641:6;23634:155;23584:219;;;23846:1;23840:3;23837:1;23833:11;23829:19;23823:4;23816:33;23098:1013;;;22796:1321;;;:::o;24122:635::-;24246:4;24252:6;24312:11;24299:25;24402:66;24391:8;24375:14;24371:29;24367:102;24347:18;24343:127;24333:155;;24484:1;24481;24474:12;24333:155;24511:33;;24563:20;;;-1:-1:-1;24606:18:322;24595:30;;24592:50;;;24638:1;24635;24628:12;24592:50;24671:4;24659:17;;-1:-1:-1;24722:1:322;24718:14;;;24702;24698:35;24688:46;;24685:66;;;24747:1;24744;24737:12;24762:387;24859:4;24917:11;24904:25;25007:66;24996:8;24980:14;24976:29;24972:102;24952:18;24948:127;24938:155;;25089:1;25086;25079:12;25154:2227;25327:5;25314:19;25342:33;25367:7;25342:33;:::i;:::-;25499:42;25490:7;25486:56;25417:66;25410:4;25404:11;25400:84;25397:146;25391:4;25384:160;;25563:1;25601:2;25595:4;25591:13;25623:2;25684;25677:5;25673:14;25660:28;25763:66;25755:5;25739:14;25735:26;25731:99;25711:18;25707:124;25697:152;;25845:1;25842;25835:12;25697:152;25870:30;;25923:18;;25964;25953:30;;25950:50;;;25996:1;25993;25986:12;25950:50;26051:6;26035:14;26031:27;26026:2;26020:4;26016:13;26012:47;26009:67;;;26072:1;26069;26062:12;26009:67;26085:108;26186:6;26140:44;26172:10;26166:17;26140:44;:::i;:::-;26128:10;26085:108;:::i;:::-;26219:1;26247:2;26239:6;26236:14;26264:1;26259:777;;;;27082:1;27099:6;27096:108;;;-1:-1:-1;27164:20:322;;;27160:29;;27147:43;27096:108;22702:66;22693:1;22689:11;;;22685:84;22681:89;22671:100;22777:1;22773:11;;;22668:117;27217:89;;26229:1087;;26259:777;14222:1;14215:14;;;14259:4;14246:18;;26307:66;26295:79;;;26463:9;26485:236;26499:7;26496:1;26493:14;26485:236;;;26590:20;;;26586:29;;26573:43;26558:59;;26689:18;;;;26644:15;;;;26515:10;;26485:236;;;26489:3;26749:6;26740:7;26737:19;26734:235;;;26885:66;26879:3;26870:6;26867:1;26863:14;26859:24;26855:97;26851:102;26845:2;26833:9;26827:4;26823:20;26819:29;26806:43;26802:152;26794:6;26787:168;26734:235;;;27022:2;27013:6;27009:2;27005:15;27001:24;26989:10;26982:44;26229:1087;;;;;;;;27370:2;27363:5;27359:14;27346:28;27342:1;27336:4;27332:12;27325:50;25154:2227;;:::o;27386:559::-;27444:5;27451:6;27511:3;27498:17;27593:66;27582:8;27566:14;27562:29;27558:102;27538:18;27534:127;27524:155;;27675:1;27672;27665:12;27524:155;27703:33;;27807:4;27794:18;;;-1:-1:-1;27755:21:322;;-1:-1:-1;27835:18:322;27824:30;;27821:50;;;27867:1;27864;27857:12;27821:50;27914:6;27898:14;27894:27;27887:5;27883:39;27880:59;;;27935:1;27932;27925:12;27950:1422;28069:6;28064:3;28057:19;28039:3;28095:4;28136:2;28131:3;28127:12;28161:11;28188;28181:18;;28238:6;28235:1;28231:14;28224:5;28220:26;28208:38;;28269:5;28292:1;28313;28323:1023;28339:6;28334:3;28331:15;28323:1023;;;28414:5;28408:4;28404:16;28399:3;28392:29;28473:6;28460:20;28559:66;28551:5;28535:14;28531:26;28527:99;28507:18;28503:124;28493:152;;28641:1;28638;28631:12;28493:152;28673:30;;28726:4;28758:21;;28792:33;28758:21;28792:33;:::i;:::-;28864:42;28851:56;28838:70;;28955:57;28995:16;;;28999:7;28955:57;:::i;:::-;29047:2;29042;29036:4;29032:13;29025:25;29077:69;29142:2;29136:4;29132:13;29118:12;29104;29077:69;:::i;:::-;29169:4;29221:16;;;29208:30;29193:13;;;;29186:53;;;;-1:-1:-1;;29324:12:322;;;;29063:83;-1:-1:-1;29289:15:322;;;;28365:1;28356:11;28323:1023;;;-1:-1:-1;29362:4:322;;27950:1422;-1:-1:-1;;;;;;;;27950:1422:322:o;29377:1666::-;29624:2;29613:9;29606:21;29587:4;29650:62;29708:2;29697:9;29693:18;29685:6;29677;29650:62;:::i;:::-;29760:9;29752:6;29748:22;29743:2;29732:9;29728:18;29721:50;29806:6;29793:20;29822:28;29844:5;29822:28;:::i;:::-;29881:13;29874:21;29859:37;;29954:2;29942:15;;;29929:29;29912:15;;;29905:54;30008:2;29996:15;;29983:29;30021:33;29983:29;30021:33;:::i;:::-;30100:42;30087:56;30082:2;30070:15;;30063:81;30187:57;30238:4;30226:17;;30230:6;30187:57;:::i;:::-;30279:4;30272;30264:6;30260:17;30253:31;30307:73;30374:4;30366:6;30362:17;30348:12;30334;30307:73;:::i;:::-;30293:87;;;30440:4;30432:6;30428:17;30415:31;30522:66;30513:6;30497:14;30493:27;30489:100;30469:18;30465:125;30455:153;;30604:1;30601;30594:12;30455:153;30632:31;;30744:2;30731:16;;;30686:21;30770:18;30759:30;;30756:50;;;30802:1;30799;30792:12;30756:50;30858:6;30855:1;30851:14;30835;30831:35;30822:7;30818:49;30815:69;;;30880:1;30877;30870:12;30815:69;30931:6;30923;30919:19;30912:4;30904:6;30900:17;30893:46;30956:81;31030:6;31022;31013:7;30956:81;:::i;:::-;30948:89;29377:1666;-1:-1:-1;;;;;;;;;29377:1666:322:o;31481:128::-;31521:3;31552:1;31548:6;31545:1;31542:13;31539:39;;;31558:18;;:::i;:::-;-1:-1:-1;31594:9:322;;31481:128::o;32037:1019::-;32144:4;32173:2;32202;32191:9;32184:21;32225:1;32258:6;32252:13;32288:36;32314:9;32288:36;:::i;:::-;32360:6;32355:2;32344:9;32340:18;32333:34;32386:2;32407:1;32439:2;32428:9;32424:18;32456:1;32451:216;;;;32681:1;32676:354;;;;32417:613;;32451:216;32514:66;32503:9;32499:82;32494:2;32483:9;32479:18;32472:110;32654:2;32642:6;32635:14;32628:22;32625:1;32621:30;32610:9;32606:46;32602:55;32595:62;;32451:216;;32676:354;32707:6;32704:1;32697:17;32755:2;32752:1;32742:16;32780:1;32794:180;32808:6;32805:1;32802:13;32794:180;;;32901:14;;32877:17;;;32873:26;;32866:50;32944:16;;;;32823:10;;32794:180;;;32998:17;;32994:26;;;-1:-1:-1;;32417:613:322;-1:-1:-1;33047:3:322;;32037:1019;-1:-1:-1;;;;;;;;32037:1019:322:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "CALL(address,bytes,uint256)": "6e2d44ae",
    "DELEGATECALL(address,bytes)": "edee6239",
    "create(string,(bool,uint256,address,bytes,(address,bytes,uint256)[]))": "e551cdaa",
    "drip(string)": "67148cd2",
    "drips(string)": "4d7fba6e",
    "executable(string)": "fc3e3eba",
    "getDripStatus(string)": "0d8f4697",
    "owner()": "8da5cb5b",
    "setOwner(address)": "13af4035",
    "status(string,uint8)": "9bc94d01",
    "withdrawERC20(address,address)": "9456fbcc",
    "withdrawERC20(address,address,uint256)": "44004cc1",
    "withdrawERC721(address,address,uint256)": "4025feb2",
    "withdrawETH(address)": "690d8320",
    "withdrawETH(address,uint256)": "4782f779"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"nameref\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"reentrant\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"interval\",\"type\":\"uint256\"},{\"internalType\":\"contract IDripCheck\",\"name\":\"dripcheck\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"checkparams\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address payable\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"internalType\":\"struct Drippie.DripAction[]\",\"name\":\"actions\",\"type\":\"tuple[]\"}],\"indexed\":false,\"internalType\":\"struct Drippie.DripConfig\",\"name\":\"config\",\"type\":\"tuple\"}],\"name\":\"DripCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"nameref\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"executor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"}],\"name\":\"DripExecuted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"string\",\"name\":\"nameref\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"enum Drippie.DripStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"name\":\"DripStatusUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnerUpdated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ReceivedETH\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrewERC20\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"asset\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"id\",\"type\":\"uint256\"}],\"name\":\"WithdrewERC721\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"WithdrewETH\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"CALL\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success_\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data_\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"DELEGATECALL\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"success_\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"data_\",\"type\":\"bytes\"}],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"reentrant\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"interval\",\"type\":\"uint256\"},{\"internalType\":\"contract IDripCheck\",\"name\":\"dripcheck\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"checkparams\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address payable\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"internalType\":\"struct Drippie.DripAction[]\",\"name\":\"actions\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Drippie.DripConfig\",\"name\":\"_config\",\"type\":\"tuple\"}],\"name\":\"create\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"drip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"drips\",\"outputs\":[{\"internalType\":\"enum Drippie.DripStatus\",\"name\":\"status\",\"type\":\"uint8\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"reentrant\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"interval\",\"type\":\"uint256\"},{\"internalType\":\"contract IDripCheck\",\"name\":\"dripcheck\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"checkparams\",\"type\":\"bytes\"},{\"components\":[{\"internalType\":\"address payable\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"}],\"internalType\":\"struct Drippie.DripAction[]\",\"name\":\"actions\",\"type\":\"tuple[]\"}],\"internalType\":\"struct Drippie.DripConfig\",\"name\":\"config\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"last\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"count\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"executable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"name\":\"getDripStatus\",\"outputs\":[{\"internalType\":\"enum Drippie.DripStatus\",\"name\":\"\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"setOwner\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"enum Drippie.DripStatus\",\"name\":\"_status\",\"type\":\"uint8\"}],\"name\":\"status\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"_asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"_asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"withdrawERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract ERC721\",\"name\":\"_asset\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_id\",\"type\":\"uint256\"}],\"name\":\"withdrawERC721\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address payable\",\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"withdrawETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"events\":{\"DripCreated(string,string,(bool,uint256,address,bytes,(address,bytes,uint256)[]))\":{\"params\":{\"config\":\"Config for the created drip.\",\"name\":\"Unindexed name parameter (unhashed).\",\"nameref\":\"Indexed name parameter (hashed).\"}},\"DripExecuted(string,string,address,uint256)\":{\"params\":{\"executor\":\"Address that executed the drip.\",\"name\":\"Unindexed name parameter (unhashed).\",\"nameref\":\"Indexed name parameter (hashed).\",\"timestamp\":\"Time when the drip was executed.\"}},\"DripStatusUpdated(string,string,uint8)\":{\"params\":{\"name\":\"Unindexed name parameter (unhashed).\",\"nameref\":\"Indexed name parameter (hashed).\",\"status\":\"New drip status.\"}}},\"kind\":\"dev\",\"methods\":{\"CALL(address,bytes,uint256)\":{\"params\":{\"_data\":\"Data to send with the call.\",\"_target\":\"Address to call.\",\"_value\":\"ETH value to send with the call.\"},\"returns\":{\"data_\":\"Bytes data returned by the call.\",\"success_\":\"Boolean success value.\"}},\"DELEGATECALL(address,bytes)\":{\"params\":{\"_data\":\"Data to send with the call.\",\"_target\":\"Address to call.\"},\"returns\":{\"data_\":\"Bytes data returned by the call.\",\"success_\":\"Boolean success value.\"}},\"create(string,(bool,uint256,address,bytes,(address,bytes,uint256)[]))\":{\"params\":{\"_config\":\"Configuration for the drip.\",\"_name\":\"Name of the drip.\"}},\"drip(string)\":{\"params\":{\"_name\":\"Name of the drip to trigger.\"}},\"executable(string)\":{\"params\":{\"_name\":\"Drip to check.\"},\"returns\":{\"_0\":\"True if the drip is executable, reverts otherwise.\"}},\"getDripStatus(string)\":{\"params\":{\"_name\":\"Drip to check.\"},\"returns\":{\"_0\":\"DripStatus of the given drip.\"}},\"status(string,uint8)\":{\"params\":{\"_name\":\"Name of the drip to update.\",\"_status\":\"New drip status.\"}},\"withdrawERC20(address,address)\":{\"params\":{\"_asset\":\"ERC20 token to withdraw.\",\"_to\":\"Address to receive the ERC20 balance.\"}},\"withdrawERC20(address,address,uint256)\":{\"params\":{\"_amount\":\"Amount of ERC20 to withdraw.\",\"_asset\":\"ERC20 token to withdraw.\",\"_to\":\"Address to receive the ERC20 balance.\"}},\"withdrawERC721(address,address,uint256)\":{\"params\":{\"_asset\":\"ERC721 token to withdraw.\",\"_id\":\"Token ID of the ERC721 token to withdraw.\",\"_to\":\"Address to receive the ERC721 token.\"}},\"withdrawETH(address)\":{\"params\":{\"_to\":\"Address to receive the ETH balance.\"}},\"withdrawETH(address,uint256)\":{\"params\":{\"_amount\":\"Amount of ETH to withdraw.\",\"_to\":\"Address to receive the ETH balance.\"}}},\"title\":\"Drippie\",\"version\":1},\"userdoc\":{\"events\":{\"DripCreated(string,string,(bool,uint256,address,bytes,(address,bytes,uint256)[]))\":{\"notice\":\"Emitted when a new drip is created.\"},\"DripExecuted(string,string,address,uint256)\":{\"notice\":\"Emitted when a drip is executed.\"},\"DripStatusUpdated(string,string,uint8)\":{\"notice\":\"Emitted when a drip status is updated.\"},\"ReceivedETH(address,uint256)\":{\"notice\":\"Emitted when ETH is received by this address.\"},\"WithdrewERC20(address,address,address,uint256)\":{\"notice\":\"Emitted when ERC20 tokens are withdrawn from this address.\"},\"WithdrewERC721(address,address,address,uint256)\":{\"notice\":\"Emitted when ERC20 tokens are withdrawn from this address.\"},\"WithdrewETH(address,address,uint256)\":{\"notice\":\"Emitted when ETH is withdrawn from this address.\"}},\"kind\":\"user\",\"methods\":{\"CALL(address,bytes,uint256)\":{\"notice\":\"Sends a CALL to a target address.\"},\"DELEGATECALL(address,bytes)\":{\"notice\":\"Sends a DELEGATECALL to a target address.\"},\"create(string,(bool,uint256,address,bytes,(address,bytes,uint256)[]))\":{\"notice\":\"Creates a new drip with the given name and configuration. Once created, drips cannot         be modified in any way (this is a security measure). If you want to update a drip,         simply pause (and potentially archive) the existing drip and create a new one.\"},\"drip(string)\":{\"notice\":\"Triggers a drip. This function is deliberately left as a public function because the         assumption being made here is that setting the drip to ACTIVE is an affirmative         signal that the drip should be executable according to the drip parameters, drip         check, and drip interval. Note that drip parameters are read entirely from the state         and are not supplied as user input, so there should not be any way for a         non-authorized user to influence the behavior of the drip. Note that the drip check         is executed only **once** at the beginning of the call to the drip function and will         not be executed again between the drip actions within this call.\"},\"drips(string)\":{\"notice\":\"Maps from drip names to drip states.\"},\"executable(string)\":{\"notice\":\"Checks if a given drip is executable.\"},\"getDripStatus(string)\":{\"notice\":\"Returns the status of a given drip.\"},\"status(string,uint8)\":{\"notice\":\"Sets the status for a given drip. The behavior of this function depends on the         status that the user is trying to set. A drip can always move between ACTIVE and         PAUSED, but it can never move back to NONE and once ARCHIVED, it can never move back         to ACTIVE or PAUSED.\"},\"withdrawERC20(address,address)\":{\"notice\":\"Withdraws full ERC20 balance to the recipient.\"},\"withdrawERC20(address,address,uint256)\":{\"notice\":\"Withdraws partial ERC20 balance to the recipient.\"},\"withdrawERC721(address,address,uint256)\":{\"notice\":\"Withdraws ERC721 token to the recipient.\"},\"withdrawETH(address)\":{\"notice\":\"Withdraws full ETH balance to the recipient.\"},\"withdrawETH(address,uint256)\":{\"notice\":\"Withdraws partial ETH balance to the recipient.\"}},\"notice\":\"Drippie is a system for managing automated contract interactions. A specific interaction         is called a \\\"drip\\\" and can be executed according to some condition (called a dripcheck)         and an execution interval. Drips cannot be executed faster than the execution interval.         Drips can trigger arbitrary contract calls where the calling contract is this contract         address. Drips can also send ETH value, which makes them ideal for keeping addresses         sufficiently funded with ETH. Drippie is designed to be connected with smart contract         automation services so that drips can be executed automatically. However, Drippie is         specifically designed to be separated from these services so that trust assumptions are         better compartmentalized.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/periphery/drippie/Drippie.sol\":\"Drippie\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@cwia/=lib/clones-with-immutable-args/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/solmate/\",\":clones-with-immutable-args/=lib/clones-with-immutable-args/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/solmate/src/auth/Owned.sol\":{\"keccak256\":\"0x7e91c80b0dd1a14a19cb9e661b99924043adab6d9d893bbfcf3a6a3dc23a6743\",\"license\":\"AGPL-3.0-only\",\"urls\":[\"bzz-raw://515890d9fc87d6762dae2354a3a0714a26c652f0ea5bb631122be1968ef8c0e9\",\"dweb:/ipfs/QmTRpQ7uoAR1vCACKJm14Ba3oKVLqcA9reTwbHAPxawVpM\"]},\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0x43aa1509bb753f053143530705d9c4eee415691d26a4779769bf028a74e6ac69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb440672ebad7d487c1600e406e140fd1ffc4bd7520c86b5709183ca2602da58\",\"dweb:/ipfs/QmNgZaBoAZwnwm4mTL1cUZnMtvt1iZnruMnfpJnDu6upuc\"]},\"lib/solmate/src/tokens/ERC721.sol\":{\"keccak256\":\"0xdac91feb466e74905737338d80cac5303eb7aedcbe76eda11c45eaa728451075\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe01292f5b4d2182859cc30a773f5e9d1a91d02bd8b40fbb73a591cd67896408\",\"dweb:/ipfs/QmTUKUuFJ4QZRD8ge6eTorfni9RKhBtPo1wFVm3GFSgLW8\"]},\"src/periphery/AssetReceiver.sol\":{\"keccak256\":\"0xbc5d4ccba1ed72f72f9809c35437e7b31f88ebefa0a7d0c7781b66edec157862\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c2fd1ea62a73886ac3dea5500b23cee17bc6a66208e2bc2e94f566d34c6480f3\",\"dweb:/ipfs/QmaQXPLryUCVueDmiRimU28mSzgWLqgSxsQx2BF2U837na\"]},\"src/periphery/Transactor.sol\":{\"keccak256\":\"0x66d538c0c0ae7297a1f261777c50b06e841efb5e8a3b09cdde6cdde32dfa3b63\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://cab02028604b71a9acd1b6282cc867aec09b4e91fc64570c69d3484a0a7c12fe\",\"dweb:/ipfs/QmcxJ64nQde5XQY9b714NB6z6RnziNUhod12DgXDqNPcWe\"]},\"src/periphery/drippie/Drippie.sol\":{\"keccak256\":\"0xa9ada97041d3e3b3f9980829847d2efbde64134373d8599b03658d56f6c7fcd1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f396ea70f8f4a6e3c6080b1e5a62ab5f61f3fb89879c40ca3bfb8bb4fdfe539c\",\"dweb:/ipfs/QmPytYPh9kXNeAjhqpTosksQRTpn5fUC6GACurvMvx6yAz\"]},\"src/periphery/drippie/IDripCheck.sol\":{\"keccak256\":\"0x4db01d51dc47813980a9a8d76e5f14783b6cfed23e4237260281edbe06dad628\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ce87d7ed0e12be217066aafdc0d16ff563cdc6807ecbe2eb58b751d00e984d6\",\"dweb:/ipfs/QmNWzTdxGk6ZDagpbz5RHCTWBkoSoPzaNtcSHppw3rBsmN\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "nameref",
              "type": "string",
              "indexed": true
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "struct Drippie.DripConfig",
              "name": "config",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bool",
                  "name": "reentrant",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "interval",
                  "type": "uint256"
                },
                {
                  "internalType": "contract IDripCheck",
                  "name": "dripcheck",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "checkparams",
                  "type": "bytes"
                },
                {
                  "internalType": "struct Drippie.DripAction[]",
                  "name": "actions",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address payable",
                      "name": "target",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    },
                    {
                      "internalType": "uint256",
                      "name": "value",
                      "type": "uint256"
                    }
                  ]
                }
              ],
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DripCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "nameref",
              "type": "string",
              "indexed": true
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "executor",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "timestamp",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DripExecuted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "nameref",
              "type": "string",
              "indexed": true
            },
            {
              "internalType": "string",
              "name": "name",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "enum Drippie.DripStatus",
              "name": "status",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DripStatusUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnerUpdated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ReceivedETH",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "withdrawer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "asset",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "WithdrewERC20",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "withdrawer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "asset",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "id",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "WithdrewERC721",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "withdrawer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "WithdrewETH",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_target",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "_value",
              "type": "uint256"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "CALL",
          "outputs": [
            {
              "internalType": "bool",
              "name": "success_",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "data_",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_target",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "DELEGATECALL",
          "outputs": [
            {
              "internalType": "bool",
              "name": "success_",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "data_",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "struct Drippie.DripConfig",
              "name": "_config",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bool",
                  "name": "reentrant",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "interval",
                  "type": "uint256"
                },
                {
                  "internalType": "contract IDripCheck",
                  "name": "dripcheck",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "checkparams",
                  "type": "bytes"
                },
                {
                  "internalType": "struct Drippie.DripAction[]",
                  "name": "actions",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address payable",
                      "name": "target",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    },
                    {
                      "internalType": "uint256",
                      "name": "value",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "create"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "drip"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "drips",
          "outputs": [
            {
              "internalType": "enum Drippie.DripStatus",
              "name": "status",
              "type": "uint8"
            },
            {
              "internalType": "struct Drippie.DripConfig",
              "name": "config",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bool",
                  "name": "reentrant",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "interval",
                  "type": "uint256"
                },
                {
                  "internalType": "contract IDripCheck",
                  "name": "dripcheck",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "checkparams",
                  "type": "bytes"
                },
                {
                  "internalType": "struct Drippie.DripAction[]",
                  "name": "actions",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "address payable",
                      "name": "target",
                      "type": "address"
                    },
                    {
                      "internalType": "bytes",
                      "name": "data",
                      "type": "bytes"
                    },
                    {
                      "internalType": "uint256",
                      "name": "value",
                      "type": "uint256"
                    }
                  ]
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "last",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "count",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "executable",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getDripStatus",
          "outputs": [
            {
              "internalType": "enum Drippie.DripStatus",
              "name": "",
              "type": "uint8"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setOwner"
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "enum Drippie.DripStatus",
              "name": "_status",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "status"
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20",
              "name": "_asset",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawERC20"
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC20",
              "name": "_asset",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawERC20"
        },
        {
          "inputs": [
            {
              "internalType": "contract ERC721",
              "name": "_asset",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_id",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawERC721"
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawETH"
        },
        {
          "inputs": [
            {
              "internalType": "address payable",
              "name": "_to",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawETH"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "CALL(address,bytes,uint256)": {
            "params": {
              "_data": "Data to send with the call.",
              "_target": "Address to call.",
              "_value": "ETH value to send with the call."
            },
            "returns": {
              "data_": "Bytes data returned by the call.",
              "success_": "Boolean success value."
            }
          },
          "DELEGATECALL(address,bytes)": {
            "params": {
              "_data": "Data to send with the call.",
              "_target": "Address to call."
            },
            "returns": {
              "data_": "Bytes data returned by the call.",
              "success_": "Boolean success value."
            }
          },
          "create(string,(bool,uint256,address,bytes,(address,bytes,uint256)[]))": {
            "params": {
              "_config": "Configuration for the drip.",
              "_name": "Name of the drip."
            }
          },
          "drip(string)": {
            "params": {
              "_name": "Name of the drip to trigger."
            }
          },
          "executable(string)": {
            "params": {
              "_name": "Drip to check."
            },
            "returns": {
              "_0": "True if the drip is executable, reverts otherwise."
            }
          },
          "getDripStatus(string)": {
            "params": {
              "_name": "Drip to check."
            },
            "returns": {
              "_0": "DripStatus of the given drip."
            }
          },
          "status(string,uint8)": {
            "params": {
              "_name": "Name of the drip to update.",
              "_status": "New drip status."
            }
          },
          "withdrawERC20(address,address)": {
            "params": {
              "_asset": "ERC20 token to withdraw.",
              "_to": "Address to receive the ERC20 balance."
            }
          },
          "withdrawERC20(address,address,uint256)": {
            "params": {
              "_amount": "Amount of ERC20 to withdraw.",
              "_asset": "ERC20 token to withdraw.",
              "_to": "Address to receive the ERC20 balance."
            }
          },
          "withdrawERC721(address,address,uint256)": {
            "params": {
              "_asset": "ERC721 token to withdraw.",
              "_id": "Token ID of the ERC721 token to withdraw.",
              "_to": "Address to receive the ERC721 token."
            }
          },
          "withdrawETH(address)": {
            "params": {
              "_to": "Address to receive the ETH balance."
            }
          },
          "withdrawETH(address,uint256)": {
            "params": {
              "_amount": "Amount of ETH to withdraw.",
              "_to": "Address to receive the ETH balance."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "CALL(address,bytes,uint256)": {
            "notice": "Sends a CALL to a target address."
          },
          "DELEGATECALL(address,bytes)": {
            "notice": "Sends a DELEGATECALL to a target address."
          },
          "create(string,(bool,uint256,address,bytes,(address,bytes,uint256)[]))": {
            "notice": "Creates a new drip with the given name and configuration. Once created, drips cannot         be modified in any way (this is a security measure). If you want to update a drip,         simply pause (and potentially archive) the existing drip and create a new one."
          },
          "drip(string)": {
            "notice": "Triggers a drip. This function is deliberately left as a public function because the         assumption being made here is that setting the drip to ACTIVE is an affirmative         signal that the drip should be executable according to the drip parameters, drip         check, and drip interval. Note that drip parameters are read entirely from the state         and are not supplied as user input, so there should not be any way for a         non-authorized user to influence the behavior of the drip. Note that the drip check         is executed only **once** at the beginning of the call to the drip function and will         not be executed again between the drip actions within this call."
          },
          "drips(string)": {
            "notice": "Maps from drip names to drip states."
          },
          "executable(string)": {
            "notice": "Checks if a given drip is executable."
          },
          "getDripStatus(string)": {
            "notice": "Returns the status of a given drip."
          },
          "status(string,uint8)": {
            "notice": "Sets the status for a given drip. The behavior of this function depends on the         status that the user is trying to set. A drip can always move between ACTIVE and         PAUSED, but it can never move back to NONE and once ARCHIVED, it can never move back         to ACTIVE or PAUSED."
          },
          "withdrawERC20(address,address)": {
            "notice": "Withdraws full ERC20 balance to the recipient."
          },
          "withdrawERC20(address,address,uint256)": {
            "notice": "Withdraws partial ERC20 balance to the recipient."
          },
          "withdrawERC721(address,address,uint256)": {
            "notice": "Withdraws ERC721 token to the recipient."
          },
          "withdrawETH(address)": {
            "notice": "Withdraws full ETH balance to the recipient."
          },
          "withdrawETH(address,uint256)": {
            "notice": "Withdraws partial ETH balance to the recipient."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@cwia/=lib/clones-with-immutable-args/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@rari-capital/solmate/=lib/solmate/",
        "clones-with-immutable-args/=lib/clones-with-immutable-args/src/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "safe-contracts/=lib/safe-contracts/contracts/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 999999
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "src/periphery/drippie/Drippie.sol": "Drippie"
      },
      "libraries": {}
    },
    "sources": {
      "lib/solmate/src/auth/Owned.sol": {
        "keccak256": "0x7e91c80b0dd1a14a19cb9e661b99924043adab6d9d893bbfcf3a6a3dc23a6743",
        "urls": [
          "bzz-raw://515890d9fc87d6762dae2354a3a0714a26c652f0ea5bb631122be1968ef8c0e9",
          "dweb:/ipfs/QmTRpQ7uoAR1vCACKJm14Ba3oKVLqcA9reTwbHAPxawVpM"
        ],
        "license": "AGPL-3.0-only"
      },
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0x43aa1509bb753f053143530705d9c4eee415691d26a4779769bf028a74e6ac69",
        "urls": [
          "bzz-raw://fb440672ebad7d487c1600e406e140fd1ffc4bd7520c86b5709183ca2602da58",
          "dweb:/ipfs/QmNgZaBoAZwnwm4mTL1cUZnMtvt1iZnruMnfpJnDu6upuc"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/tokens/ERC721.sol": {
        "keccak256": "0xdac91feb466e74905737338d80cac5303eb7aedcbe76eda11c45eaa728451075",
        "urls": [
          "bzz-raw://fe01292f5b4d2182859cc30a773f5e9d1a91d02bd8b40fbb73a591cd67896408",
          "dweb:/ipfs/QmTUKUuFJ4QZRD8ge6eTorfni9RKhBtPo1wFVm3GFSgLW8"
        ],
        "license": "MIT"
      },
      "src/periphery/AssetReceiver.sol": {
        "keccak256": "0xbc5d4ccba1ed72f72f9809c35437e7b31f88ebefa0a7d0c7781b66edec157862",
        "urls": [
          "bzz-raw://c2fd1ea62a73886ac3dea5500b23cee17bc6a66208e2bc2e94f566d34c6480f3",
          "dweb:/ipfs/QmaQXPLryUCVueDmiRimU28mSzgWLqgSxsQx2BF2U837na"
        ],
        "license": "MIT"
      },
      "src/periphery/Transactor.sol": {
        "keccak256": "0x66d538c0c0ae7297a1f261777c50b06e841efb5e8a3b09cdde6cdde32dfa3b63",
        "urls": [
          "bzz-raw://cab02028604b71a9acd1b6282cc867aec09b4e91fc64570c69d3484a0a7c12fe",
          "dweb:/ipfs/QmcxJ64nQde5XQY9b714NB6z6RnziNUhod12DgXDqNPcWe"
        ],
        "license": "MIT"
      },
      "src/periphery/drippie/Drippie.sol": {
        "keccak256": "0xa9ada97041d3e3b3f9980829847d2efbde64134373d8599b03658d56f6c7fcd1",
        "urls": [
          "bzz-raw://f396ea70f8f4a6e3c6080b1e5a62ab5f61f3fb89879c40ca3bfb8bb4fdfe539c",
          "dweb:/ipfs/QmPytYPh9kXNeAjhqpTosksQRTpn5fUC6GACurvMvx6yAz"
        ],
        "license": "MIT"
      },
      "src/periphery/drippie/IDripCheck.sol": {
        "keccak256": "0x4db01d51dc47813980a9a8d76e5f14783b6cfed23e4237260281edbe06dad628",
        "urls": [
          "bzz-raw://0ce87d7ed0e12be217066aafdc0d16ff563cdc6807ecbe2eb58b751d00e984d6",
          "dweb:/ipfs/QmNWzTdxGk6ZDagpbz5RHCTWBkoSoPzaNtcSHppw3rBsmN"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 43345,
        "contract": "src/periphery/drippie/Drippie.sol:Drippie",
        "label": "owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 80129,
        "contract": "src/periphery/drippie/Drippie.sol:Drippie",
        "label": "drips",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_string_memory_ptr,t_struct(DripState)80092_storage)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_address_payable": {
        "encoding": "inplace",
        "label": "address payable",
        "numberOfBytes": "20"
      },
      "t_array(t_struct(DripAction)80067_storage)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "struct Drippie.DripAction[]",
        "numberOfBytes": "32",
        "base": "t_struct(DripAction)80067_storage"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_contract(IDripCheck)80506": {
        "encoding": "inplace",
        "label": "contract IDripCheck",
        "numberOfBytes": "20"
      },
      "t_enum(DripStatus)80060": {
        "encoding": "inplace",
        "label": "enum Drippie.DripStatus",
        "numberOfBytes": "1"
      },
      "t_mapping(t_string_memory_ptr,t_struct(DripState)80092_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct Drippie.DripState)",
        "numberOfBytes": "32",
        "value": "t_struct(DripState)80092_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(DripAction)80067_storage": {
        "encoding": "inplace",
        "label": "struct Drippie.DripAction",
        "numberOfBytes": "96",
        "members": [
          {
            "astId": 80062,
            "contract": "src/periphery/drippie/Drippie.sol:Drippie",
            "label": "target",
            "offset": 0,
            "slot": "0",
            "type": "t_address_payable"
          },
          {
            "astId": 80064,
            "contract": "src/periphery/drippie/Drippie.sol:Drippie",
            "label": "data",
            "offset": 0,
            "slot": "1",
            "type": "t_bytes_storage"
          },
          {
            "astId": 80066,
            "contract": "src/periphery/drippie/Drippie.sol:Drippie",
            "label": "value",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          }
        ]
      },
      "t_struct(DripConfig)80081_storage": {
        "encoding": "inplace",
        "label": "struct Drippie.DripConfig",
        "numberOfBytes": "160",
        "members": [
          {
            "astId": 80069,
            "contract": "src/periphery/drippie/Drippie.sol:Drippie",
            "label": "reentrant",
            "offset": 0,
            "slot": "0",
            "type": "t_bool"
          },
          {
            "astId": 80071,
            "contract": "src/periphery/drippie/Drippie.sol:Drippie",
            "label": "interval",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 80074,
            "contract": "src/periphery/drippie/Drippie.sol:Drippie",
            "label": "dripcheck",
            "offset": 0,
            "slot": "2",
            "type": "t_contract(IDripCheck)80506"
          },
          {
            "astId": 80076,
            "contract": "src/periphery/drippie/Drippie.sol:Drippie",
            "label": "checkparams",
            "offset": 0,
            "slot": "3",
            "type": "t_bytes_storage"
          },
          {
            "astId": 80080,
            "contract": "src/periphery/drippie/Drippie.sol:Drippie",
            "label": "actions",
            "offset": 0,
            "slot": "4",
            "type": "t_array(t_struct(DripAction)80067_storage)dyn_storage"
          }
        ]
      },
      "t_struct(DripState)80092_storage": {
        "encoding": "inplace",
        "label": "struct Drippie.DripState",
        "numberOfBytes": "256",
        "members": [
          {
            "astId": 80084,
            "contract": "src/periphery/drippie/Drippie.sol:Drippie",
            "label": "status",
            "offset": 0,
            "slot": "0",
            "type": "t_enum(DripStatus)80060"
          },
          {
            "astId": 80087,
            "contract": "src/periphery/drippie/Drippie.sol:Drippie",
            "label": "config",
            "offset": 0,
            "slot": "1",
            "type": "t_struct(DripConfig)80081_storage"
          },
          {
            "astId": 80089,
            "contract": "src/periphery/drippie/Drippie.sol:Drippie",
            "label": "last",
            "offset": 0,
            "slot": "6",
            "type": "t_uint256"
          },
          {
            "astId": 80091,
            "contract": "src/periphery/drippie/Drippie.sol:Drippie",
            "label": "count",
            "offset": 0,
            "slot": "7",
            "type": "t_uint256"
          }
        ]
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  },
  "userdoc": {
    "version": 1,
    "kind": "user",
    "methods": {
      "CALL(address,bytes,uint256)": {
        "notice": "Sends a CALL to a target address."
      },
      "DELEGATECALL(address,bytes)": {
        "notice": "Sends a DELEGATECALL to a target address."
      },
      "create(string,(bool,uint256,address,bytes,(address,bytes,uint256)[]))": {
        "notice": "Creates a new drip with the given name and configuration. Once created, drips cannot         be modified in any way (this is a security measure). If you want to update a drip,         simply pause (and potentially archive) the existing drip and create a new one."
      },
      "drip(string)": {
        "notice": "Triggers a drip. This function is deliberately left as a public function because the         assumption being made here is that setting the drip to ACTIVE is an affirmative         signal that the drip should be executable according to the drip parameters, drip         check, and drip interval. Note that drip parameters are read entirely from the state         and are not supplied as user input, so there should not be any way for a         non-authorized user to influence the behavior of the drip. Note that the drip check         is executed only **once** at the beginning of the call to the drip function and will         not be executed again between the drip actions within this call."
      },
      "drips(string)": {
        "notice": "Maps from drip names to drip states."
      },
      "executable(string)": {
        "notice": "Checks if a given drip is executable."
      },
      "getDripStatus(string)": {
        "notice": "Returns the status of a given drip."
      },
      "status(string,uint8)": {
        "notice": "Sets the status for a given drip. The behavior of this function depends on the         status that the user is trying to set. A drip can always move between ACTIVE and         PAUSED, but it can never move back to NONE and once ARCHIVED, it can never move back         to ACTIVE or PAUSED."
      },
      "withdrawERC20(address,address)": {
        "notice": "Withdraws full ERC20 balance to the recipient."
      },
      "withdrawERC20(address,address,uint256)": {
        "notice": "Withdraws partial ERC20 balance to the recipient."
      },
      "withdrawERC721(address,address,uint256)": {
        "notice": "Withdraws ERC721 token to the recipient."
      },
      "withdrawETH(address)": {
        "notice": "Withdraws full ETH balance to the recipient."
      },
      "withdrawETH(address,uint256)": {
        "notice": "Withdraws partial ETH balance to the recipient."
      }
    },
    "events": {
      "DripCreated(string,string,(bool,uint256,address,bytes,(address,bytes,uint256)[]))": {
        "notice": "Emitted when a new drip is created."
      },
      "DripExecuted(string,string,address,uint256)": {
        "notice": "Emitted when a drip is executed."
      },
      "DripStatusUpdated(string,string,uint8)": {
        "notice": "Emitted when a drip status is updated."
      },
      "ReceivedETH(address,uint256)": {
        "notice": "Emitted when ETH is received by this address."
      },
      "WithdrewERC20(address,address,address,uint256)": {
        "notice": "Emitted when ERC20 tokens are withdrawn from this address."
      },
      "WithdrewERC721(address,address,address,uint256)": {
        "notice": "Emitted when ERC20 tokens are withdrawn from this address."
      },
      "WithdrewETH(address,address,uint256)": {
        "notice": "Emitted when ETH is withdrawn from this address."
      }
    },
    "notice": "Drippie is a system for managing automated contract interactions. A specific interaction         is called a \"drip\" and can be executed according to some condition (called a dripcheck)         and an execution interval. Drips cannot be executed faster than the execution interval.         Drips can trigger arbitrary contract calls where the calling contract is this contract         address. Drips can also send ETH value, which makes them ideal for keeping addresses         sufficiently funded with ETH. Drippie is designed to be connected with smart contract         automation services so that drips can be executed automatically. However, Drippie is         specifically designed to be separated from these services so that trust assumptions are         better compartmentalized."
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "methods": {
      "CALL(address,bytes,uint256)": {
        "params": {
          "_data": "Data to send with the call.",
          "_target": "Address to call.",
          "_value": "ETH value to send with the call."
        },
        "returns": {
          "data_": "Bytes data returned by the call.",
          "success_": "Boolean success value."
        }
      },
      "DELEGATECALL(address,bytes)": {
        "params": {
          "_data": "Data to send with the call.",
          "_target": "Address to call."
        },
        "returns": {
          "data_": "Bytes data returned by the call.",
          "success_": "Boolean success value."
        }
      },
      "create(string,(bool,uint256,address,bytes,(address,bytes,uint256)[]))": {
        "params": {
          "_config": "Configuration for the drip.",
          "_name": "Name of the drip."
        }
      },
      "drip(string)": {
        "params": {
          "_name": "Name of the drip to trigger."
        }
      },
      "executable(string)": {
        "params": {
          "_name": "Drip to check."
        },
        "returns": {
          "_0": "True if the drip is executable, reverts otherwise."
        }
      },
      "getDripStatus(string)": {
        "params": {
          "_name": "Drip to check."
        },
        "returns": {
          "_0": "DripStatus of the given drip."
        }
      },
      "status(string,uint8)": {
        "params": {
          "_name": "Name of the drip to update.",
          "_status": "New drip status."
        }
      },
      "withdrawERC20(address,address)": {
        "params": {
          "_asset": "ERC20 token to withdraw.",
          "_to": "Address to receive the ERC20 balance."
        }
      },
      "withdrawERC20(address,address,uint256)": {
        "params": {
          "_amount": "Amount of ERC20 to withdraw.",
          "_asset": "ERC20 token to withdraw.",
          "_to": "Address to receive the ERC20 balance."
        }
      },
      "withdrawERC721(address,address,uint256)": {
        "params": {
          "_asset": "ERC721 token to withdraw.",
          "_id": "Token ID of the ERC721 token to withdraw.",
          "_to": "Address to receive the ERC721 token."
        }
      },
      "withdrawETH(address)": {
        "params": {
          "_to": "Address to receive the ETH balance."
        }
      },
      "withdrawETH(address,uint256)": {
        "params": {
          "_amount": "Amount of ETH to withdraw.",
          "_to": "Address to receive the ETH balance."
        }
      }
    },
    "events": {
      "DripCreated(string,string,(bool,uint256,address,bytes,(address,bytes,uint256)[]))": {
        "params": {
          "config": "Config for the created drip.",
          "name": "Unindexed name parameter (unhashed).",
          "nameref": "Indexed name parameter (hashed)."
        }
      },
      "DripExecuted(string,string,address,uint256)": {
        "params": {
          "executor": "Address that executed the drip.",
          "name": "Unindexed name parameter (unhashed).",
          "nameref": "Indexed name parameter (hashed).",
          "timestamp": "Time when the drip was executed."
        }
      },
      "DripStatusUpdated(string,string,uint8)": {
        "params": {
          "name": "Unindexed name parameter (unhashed).",
          "nameref": "Indexed name parameter (hashed).",
          "status": "New drip status."
        }
      }
    },
    "title": "Drippie"
  },
  "ast": {
    "absolutePath": "src/periphery/drippie/Drippie.sol",
    "id": 80496,
    "exportedSymbols": {
      "AssetReceiver": [
        79843
      ],
      "Drippie": [
        80495
      ],
      "IDripCheck": [
        80506
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:13624:205",
    "nodes": [
      {
        "id": 80048,
        "nodeType": "PragmaDirective",
        "src": "32:23:205",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 80050,
        "nodeType": "ImportDirective",
        "src": "57:53:205",
        "nodes": [],
        "absolutePath": "src/periphery/AssetReceiver.sol",
        "file": "../AssetReceiver.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 80496,
        "sourceUnit": 79844,
        "symbolAliases": [
          {
            "foreign": {
              "id": 80049,
              "name": "AssetReceiver",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 79843,
              "src": "66:13:205",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 80052,
        "nodeType": "ImportDirective",
        "src": "111:46:205",
        "nodes": [],
        "absolutePath": "src/periphery/drippie/IDripCheck.sol",
        "file": "./IDripCheck.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 80496,
        "sourceUnit": 80507,
        "symbolAliases": [
          {
            "foreign": {
              "id": 80051,
              "name": "IDripCheck",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 80506,
              "src": "120:10:205",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 80495,
        "nodeType": "ContractDefinition",
        "src": "1008:12647:205",
        "nodes": [
          {
            "id": 80060,
            "nodeType": "EnumDefinition",
            "src": "1426:86:205",
            "nodes": [],
            "canonicalName": "Drippie.DripStatus",
            "members": [
              {
                "id": 80056,
                "name": "NONE",
                "nameLocation": "1452:4:205",
                "nodeType": "EnumValue",
                "src": "1452:4:205"
              },
              {
                "id": 80057,
                "name": "PAUSED",
                "nameLocation": "1466:6:205",
                "nodeType": "EnumValue",
                "src": "1466:6:205"
              },
              {
                "id": 80058,
                "name": "ACTIVE",
                "nameLocation": "1482:6:205",
                "nodeType": "EnumValue",
                "src": "1482:6:205"
              },
              {
                "id": 80059,
                "name": "ARCHIVED",
                "nameLocation": "1498:8:205",
                "nodeType": "EnumValue",
                "src": "1498:8:205"
              }
            ],
            "name": "DripStatus",
            "nameLocation": "1431:10:205"
          },
          {
            "id": 80067,
            "nodeType": "StructDefinition",
            "src": "1560:100:205",
            "nodes": [],
            "canonicalName": "Drippie.DripAction",
            "members": [
              {
                "constant": false,
                "id": 80062,
                "mutability": "mutable",
                "name": "target",
                "nameLocation": "1604:6:205",
                "nodeType": "VariableDeclaration",
                "scope": 80067,
                "src": "1588:22:205",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address_payable",
                  "typeString": "address payable"
                },
                "typeName": {
                  "id": 80061,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1588:15:205",
                  "stateMutability": "payable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address_payable",
                    "typeString": "address payable"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 80064,
                "mutability": "mutable",
                "name": "data",
                "nameLocation": "1626:4:205",
                "nodeType": "VariableDeclaration",
                "scope": 80067,
                "src": "1620:10:205",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 80063,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "1620:5:205",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 80066,
                "mutability": "mutable",
                "name": "value",
                "nameLocation": "1648:5:205",
                "nodeType": "VariableDeclaration",
                "scope": 80067,
                "src": "1640:13:205",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 80065,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1640:7:205",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "DripAction",
            "nameLocation": "1567:10:205",
            "scope": 80495,
            "visibility": "public"
          },
          {
            "id": 80081,
            "nodeType": "StructDefinition",
            "src": "1729:162:205",
            "nodes": [],
            "canonicalName": "Drippie.DripConfig",
            "members": [
              {
                "constant": false,
                "id": 80069,
                "mutability": "mutable",
                "name": "reentrant",
                "nameLocation": "1762:9:205",
                "nodeType": "VariableDeclaration",
                "scope": 80081,
                "src": "1757:14:205",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                },
                "typeName": {
                  "id": 80068,
                  "name": "bool",
                  "nodeType": "ElementaryTypeName",
                  "src": "1757:4:205",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 80071,
                "mutability": "mutable",
                "name": "interval",
                "nameLocation": "1789:8:205",
                "nodeType": "VariableDeclaration",
                "scope": 80081,
                "src": "1781:16:205",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 80070,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1781:7:205",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 80074,
                "mutability": "mutable",
                "name": "dripcheck",
                "nameLocation": "1818:9:205",
                "nodeType": "VariableDeclaration",
                "scope": 80081,
                "src": "1807:20:205",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_IDripCheck_$80506",
                  "typeString": "contract IDripCheck"
                },
                "typeName": {
                  "id": 80073,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 80072,
                    "name": "IDripCheck",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 80506,
                    "src": "1807:10:205"
                  },
                  "referencedDeclaration": 80506,
                  "src": "1807:10:205",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IDripCheck_$80506",
                    "typeString": "contract IDripCheck"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 80076,
                "mutability": "mutable",
                "name": "checkparams",
                "nameLocation": "1843:11:205",
                "nodeType": "VariableDeclaration",
                "scope": 80081,
                "src": "1837:17:205",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 80075,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "1837:5:205",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 80080,
                "mutability": "mutable",
                "name": "actions",
                "nameLocation": "1877:7:205",
                "nodeType": "VariableDeclaration",
                "scope": 80081,
                "src": "1864:20:205",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_array$_t_struct$_DripAction_$80067_storage_$dyn_storage_ptr",
                  "typeString": "struct Drippie.DripAction[]"
                },
                "typeName": {
                  "baseType": {
                    "id": 80078,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 80077,
                      "name": "DripAction",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 80067,
                      "src": "1864:10:205"
                    },
                    "referencedDeclaration": 80067,
                    "src": "1864:10:205",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DripAction_$80067_storage_ptr",
                      "typeString": "struct Drippie.DripAction"
                    }
                  },
                  "id": 80079,
                  "nodeType": "ArrayTypeName",
                  "src": "1864:12:205",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_DripAction_$80067_storage_$dyn_storage_ptr",
                    "typeString": "struct Drippie.DripAction[]"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "DripConfig",
            "nameLocation": "1736:10:205",
            "scope": 80495,
            "visibility": "public"
          },
          {
            "id": 80092,
            "nodeType": "StructDefinition",
            "src": "1953:123:205",
            "nodes": [],
            "canonicalName": "Drippie.DripState",
            "members": [
              {
                "constant": false,
                "id": 80084,
                "mutability": "mutable",
                "name": "status",
                "nameLocation": "1991:6:205",
                "nodeType": "VariableDeclaration",
                "scope": 80092,
                "src": "1980:17:205",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_enum$_DripStatus_$80060",
                  "typeString": "enum Drippie.DripStatus"
                },
                "typeName": {
                  "id": 80083,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 80082,
                    "name": "DripStatus",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 80060,
                    "src": "1980:10:205"
                  },
                  "referencedDeclaration": 80060,
                  "src": "1980:10:205",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_DripStatus_$80060",
                    "typeString": "enum Drippie.DripStatus"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 80087,
                "mutability": "mutable",
                "name": "config",
                "nameLocation": "2018:6:205",
                "nodeType": "VariableDeclaration",
                "scope": 80092,
                "src": "2007:17:205",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_DripConfig_$80081_storage_ptr",
                  "typeString": "struct Drippie.DripConfig"
                },
                "typeName": {
                  "id": 80086,
                  "nodeType": "UserDefinedTypeName",
                  "pathNode": {
                    "id": 80085,
                    "name": "DripConfig",
                    "nodeType": "IdentifierPath",
                    "referencedDeclaration": 80081,
                    "src": "2007:10:205"
                  },
                  "referencedDeclaration": 80081,
                  "src": "2007:10:205",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DripConfig_$80081_storage_ptr",
                    "typeString": "struct Drippie.DripConfig"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 80089,
                "mutability": "mutable",
                "name": "last",
                "nameLocation": "2042:4:205",
                "nodeType": "VariableDeclaration",
                "scope": 80092,
                "src": "2034:12:205",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 80088,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2034:7:205",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 80091,
                "mutability": "mutable",
                "name": "count",
                "nameLocation": "2064:5:205",
                "nodeType": "VariableDeclaration",
                "scope": 80092,
                "src": "2056:13:205",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 80090,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "2056:7:205",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "DripState",
            "nameLocation": "1960:9:205",
            "scope": 80495,
            "visibility": "public"
          },
          {
            "id": 80102,
            "nodeType": "EventDefinition",
            "src": "2360:74:205",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 80093,
              "nodeType": "StructuredDocumentation",
              "src": "2082:215:205",
              "text": "@notice Emitted when a new drip is created.\n @param nameref Indexed name parameter (hashed).\n @param name    Unindexed name parameter (unhashed).\n @param config  Config for the created drip."
            },
            "eventSelector": "e38d8d98e6cc66f6f520d483c6c5a89289681f897799c4c29d767cf57e76d9a6",
            "name": "DripCreated",
            "nameLocation": "2366:11:205",
            "parameters": {
              "id": 80101,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80095,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "nameref",
                  "nameLocation": "2393:7:205",
                  "nodeType": "VariableDeclaration",
                  "scope": 80102,
                  "src": "2378:22:205",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 80094,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2378:6:205",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80097,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "2409:4:205",
                  "nodeType": "VariableDeclaration",
                  "scope": 80102,
                  "src": "2402:11:205",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 80096,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2402:6:205",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80100,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "config",
                  "nameLocation": "2426:6:205",
                  "nodeType": "VariableDeclaration",
                  "scope": 80102,
                  "src": "2415:17:205",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DripConfig_$80081_memory_ptr",
                    "typeString": "struct Drippie.DripConfig"
                  },
                  "typeName": {
                    "id": 80099,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 80098,
                      "name": "DripConfig",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 80081,
                      "src": "2415:10:205"
                    },
                    "referencedDeclaration": 80081,
                    "src": "2415:10:205",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DripConfig_$80081_storage_ptr",
                      "typeString": "struct Drippie.DripConfig"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2377:56:205"
            }
          },
          {
            "id": 80112,
            "nodeType": "EventDefinition",
            "src": "2709:80:205",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 80103,
              "nodeType": "StructuredDocumentation",
              "src": "2440:206:205",
              "text": "@notice Emitted when a drip status is updated.\n @param nameref Indexed name parameter (hashed).\n @param name    Unindexed name parameter (unhashed).\n @param status  New drip status."
            },
            "eventSelector": "407cb3ad05e60ec498fb39417c7a4f6b82d5ba80f82fe512a37b02c93181a2a1",
            "name": "DripStatusUpdated",
            "nameLocation": "2715:17:205",
            "parameters": {
              "id": 80111,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80105,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "nameref",
                  "nameLocation": "2748:7:205",
                  "nodeType": "VariableDeclaration",
                  "scope": 80112,
                  "src": "2733:22:205",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 80104,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2733:6:205",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80107,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "2764:4:205",
                  "nodeType": "VariableDeclaration",
                  "scope": 80112,
                  "src": "2757:11:205",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 80106,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2757:6:205",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80110,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "status",
                  "nameLocation": "2781:6:205",
                  "nodeType": "VariableDeclaration",
                  "scope": 80112,
                  "src": "2770:17:205",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_DripStatus_$80060",
                    "typeString": "enum Drippie.DripStatus"
                  },
                  "typeName": {
                    "id": 80109,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 80108,
                      "name": "DripStatus",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 80060,
                      "src": "2770:10:205"
                    },
                    "referencedDeclaration": 80060,
                    "src": "2770:10:205",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_DripStatus_$80060",
                      "typeString": "enum Drippie.DripStatus"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2732:56:205"
            }
          },
          {
            "id": 80123,
            "nodeType": "EventDefinition",
            "src": "3137:93:205",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 80113,
              "nodeType": "StructuredDocumentation",
              "src": "2795:279:205",
              "text": "@notice Emitted when a drip is executed.\n @param nameref   Indexed name parameter (hashed).\n @param name      Unindexed name parameter (unhashed).\n @param executor  Address that executed the drip.\n @param timestamp Time when the drip was executed."
            },
            "eventSelector": "ea21435419aad9c54a9d90e2522b6f60bd566401f36fcef661f5f5a28cc0d2c6",
            "name": "DripExecuted",
            "nameLocation": "3143:12:205",
            "parameters": {
              "id": 80122,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80115,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "nameref",
                  "nameLocation": "3171:7:205",
                  "nodeType": "VariableDeclaration",
                  "scope": 80123,
                  "src": "3156:22:205",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 80114,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3156:6:205",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80117,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "name",
                  "nameLocation": "3187:4:205",
                  "nodeType": "VariableDeclaration",
                  "scope": 80123,
                  "src": "3180:11:205",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 80116,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3180:6:205",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80119,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "executor",
                  "nameLocation": "3201:8:205",
                  "nodeType": "VariableDeclaration",
                  "scope": 80123,
                  "src": "3193:16:205",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 80118,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3193:7:205",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80121,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "3219:9:205",
                  "nodeType": "VariableDeclaration",
                  "scope": 80123,
                  "src": "3211:17:205",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 80120,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3211:7:205",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3155:74:205"
            }
          },
          {
            "id": 80129,
            "nodeType": "VariableDeclaration",
            "src": "3289:41:205",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 80124,
              "nodeType": "StructuredDocumentation",
              "src": "3236:48:205",
              "text": "@notice Maps from drip names to drip states."
            },
            "functionSelector": "4d7fba6e",
            "mutability": "mutable",
            "name": "drips",
            "nameLocation": "3325:5:205",
            "scope": 80495,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_DripState_$80092_storage_$",
              "typeString": "mapping(string => struct Drippie.DripState)"
            },
            "typeName": {
              "id": 80128,
              "keyType": {
                "id": 80125,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "3297:6:205",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              },
              "nodeType": "Mapping",
              "src": "3289:28:205",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_DripState_$80092_storage_$",
                "typeString": "mapping(string => struct Drippie.DripState)"
              },
              "valueType": {
                "id": 80127,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 80126,
                  "name": "DripState",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 80092,
                  "src": "3307:9:205"
                },
                "referencedDeclaration": 80092,
                "src": "3307:9:205",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_DripState_$80092_storage_ptr",
                  "typeString": "struct Drippie.DripState"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 80138,
            "nodeType": "FunctionDefinition",
            "src": "3384:53:205",
            "nodes": [],
            "body": {
              "id": 80137,
              "nodeType": "Block",
              "src": "3434:3:205",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 80134,
                    "name": "_owner",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 80131,
                    "src": "3426:6:205",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 80135,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 80133,
                  "name": "AssetReceiver",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 79843,
                  "src": "3412:13:205"
                },
                "nodeType": "ModifierInvocation",
                "src": "3412:21:205"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 80132,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80131,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "3404:6:205",
                  "nodeType": "VariableDeclaration",
                  "scope": 80138,
                  "src": "3396:14:205",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 80130,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3396:7:205",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3395:16:205"
            },
            "returnParameters": {
              "id": 80136,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3434:0:205"
            },
            "scope": 80495,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 80265,
            "nodeType": "FunctionDefinition",
            "src": "3830:1690:205",
            "nodes": [],
            "body": {
              "id": 80264,
              "nodeType": "Block",
              "src": "3917:1603:205",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_DripStatus_$80060",
                          "typeString": "enum Drippie.DripStatus"
                        },
                        "id": 80156,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 80150,
                              "name": "drips",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80129,
                              "src": "4170:5:205",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_DripState_$80092_storage_$",
                                "typeString": "mapping(string memory => struct Drippie.DripState storage ref)"
                              }
                            },
                            "id": 80152,
                            "indexExpression": {
                              "id": 80151,
                              "name": "_name",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80141,
                              "src": "4176:5:205",
                              "typeDescriptions": {
                                "typeIdentifier": "t_string_calldata_ptr",
                                "typeString": "string calldata"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "4170:12:205",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DripState_$80092_storage",
                              "typeString": "struct Drippie.DripState storage ref"
                            }
                          },
                          "id": 80153,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 80084,
                          "src": "4170:19:205",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DripStatus_$80060",
                            "typeString": "enum Drippie.DripStatus"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 80154,
                            "name": "DripStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80060,
                            "src": "4193:10:205",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_DripStatus_$80060_$",
                              "typeString": "type(enum Drippie.DripStatus)"
                            }
                          },
                          "id": 80155,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "NONE",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 80056,
                          "src": "4193:15:205",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DripStatus_$80060",
                            "typeString": "enum Drippie.DripStatus"
                          }
                        },
                        "src": "4170:38:205",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "447269707069653a206472697020776974682074686174206e616d6520616c726561647920657869737473",
                        "id": 80157,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4210:45:205",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6e9ea697668bb2e4b33154cf5e088c1417030b11b156bfb0fc27419f090c00fd",
                          "typeString": "literal_string \"Drippie: drip with that name already exists\""
                        },
                        "value": "Drippie: drip with that name already exists"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6e9ea697668bb2e4b33154cf5e088c1417030b11b156bfb0fc27419f090c00fd",
                          "typeString": "literal_string \"Drippie: drip with that name already exists\""
                        }
                      ],
                      "id": 80149,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4162:7:205",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 80158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4162:94:205",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80159,
                  "nodeType": "ExpressionStatement",
                  "src": "4162:94:205"
                },
                {
                  "condition": {
                    "expression": {
                      "id": 80160,
                      "name": "_config",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80144,
                      "src": "4542:7:205",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DripConfig_$80081_calldata_ptr",
                        "typeString": "struct Drippie.DripConfig calldata"
                      }
                    },
                    "id": 80161,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "reentrant",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 80069,
                    "src": "4542:17:205",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 80179,
                    "nodeType": "Block",
                    "src": "4688:126:205",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 80175,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 80172,
                                  "name": "_config",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 80144,
                                  "src": "4710:7:205",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_DripConfig_$80081_calldata_ptr",
                                    "typeString": "struct Drippie.DripConfig calldata"
                                  }
                                },
                                "id": 80173,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "interval",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 80071,
                                "src": "4710:16:205",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": ">",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 80174,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4729:1:205",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "4710:20:205",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "447269707069653a20696e74657276616c206d7573742062652067726561746572207468616e207a65726f2069662064726970206973206e6f74207265656e7472616e74",
                              "id": 80176,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4732:70:205",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_2eac6d472c5cd672e7a525975cd0d9b953ab4be20dd15046548bc9968edcdfad",
                                "typeString": "literal_string \"Drippie: interval must be greater than zero if drip is not reentrant\""
                              },
                              "value": "Drippie: interval must be greater than zero if drip is not reentrant"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_2eac6d472c5cd672e7a525975cd0d9b953ab4be20dd15046548bc9968edcdfad",
                                "typeString": "literal_string \"Drippie: interval must be greater than zero if drip is not reentrant\""
                              }
                            ],
                            "id": 80171,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4702:7:205",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 80177,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4702:101:205",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 80178,
                        "nodeType": "ExpressionStatement",
                        "src": "4702:101:205"
                      }
                    ]
                  },
                  "id": 80180,
                  "nodeType": "IfStatement",
                  "src": "4538:276:205",
                  "trueBody": {
                    "id": 80170,
                    "nodeType": "Block",
                    "src": "4561:121:205",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 80166,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 80163,
                                  "name": "_config",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 80144,
                                  "src": "4583:7:205",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_DripConfig_$80081_calldata_ptr",
                                    "typeString": "struct Drippie.DripConfig calldata"
                                  }
                                },
                                "id": 80164,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "interval",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 80071,
                                "src": "4583:16:205",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "hexValue": "30",
                                "id": 80165,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4603:1:205",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              },
                              "src": "4583:21:205",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "447269707069653a20696620616c6c6f77696e67207265656e7472616e7420647269702c206d7573742073657420696e74657276616c20746f207a65726f",
                              "id": 80167,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "4606:64:205",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_91015eeb17423ff7e8a078d19f29fcb28e06be97a9852aae88e68e69f4d04c70",
                                "typeString": "literal_string \"Drippie: if allowing reentrant drip, must set interval to zero\""
                              },
                              "value": "Drippie: if allowing reentrant drip, must set interval to zero"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_91015eeb17423ff7e8a078d19f29fcb28e06be97a9852aae88e68e69f4d04c70",
                                "typeString": "literal_string \"Drippie: if allowing reentrant drip, must set interval to zero\""
                              }
                            ],
                            "id": 80162,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "4575:7:205",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 80168,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4575:96:205",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 80169,
                        "nodeType": "ExpressionStatement",
                        "src": "4575:96:205"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    80183
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80183,
                      "mutability": "mutable",
                      "name": "state",
                      "nameLocation": "4936:5:205",
                      "nodeType": "VariableDeclaration",
                      "scope": 80264,
                      "src": "4918:23:205",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DripState_$80092_storage_ptr",
                        "typeString": "struct Drippie.DripState"
                      },
                      "typeName": {
                        "id": 80182,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 80181,
                          "name": "DripState",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 80092,
                          "src": "4918:9:205"
                        },
                        "referencedDeclaration": 80092,
                        "src": "4918:9:205",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DripState_$80092_storage_ptr",
                          "typeString": "struct Drippie.DripState"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80187,
                  "initialValue": {
                    "baseExpression": {
                      "id": 80184,
                      "name": "drips",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80129,
                      "src": "4944:5:205",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_DripState_$80092_storage_$",
                        "typeString": "mapping(string memory => struct Drippie.DripState storage ref)"
                      }
                    },
                    "id": 80186,
                    "indexExpression": {
                      "id": 80185,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80141,
                      "src": "4950:5:205",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "4944:12:205",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DripState_$80092_storage",
                      "typeString": "struct Drippie.DripState storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4918:38:205"
                },
                {
                  "expression": {
                    "id": 80193,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 80188,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80183,
                        "src": "4966:5:205",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DripState_$80092_storage_ptr",
                          "typeString": "struct Drippie.DripState storage pointer"
                        }
                      },
                      "id": 80190,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 80084,
                      "src": "4966:12:205",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DripStatus_$80060",
                        "typeString": "enum Drippie.DripStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 80191,
                        "name": "DripStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80060,
                        "src": "4981:10:205",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_DripStatus_$80060_$",
                          "typeString": "type(enum Drippie.DripStatus)"
                        }
                      },
                      "id": 80192,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "PAUSED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 80057,
                      "src": "4981:17:205",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DripStatus_$80060",
                        "typeString": "enum Drippie.DripStatus"
                      }
                    },
                    "src": "4966:32:205",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_DripStatus_$80060",
                      "typeString": "enum Drippie.DripStatus"
                    }
                  },
                  "id": 80194,
                  "nodeType": "ExpressionStatement",
                  "src": "4966:32:205"
                },
                {
                  "expression": {
                    "id": 80202,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "expression": {
                          "id": 80195,
                          "name": "state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80183,
                          "src": "5008:5:205",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DripState_$80092_storage_ptr",
                            "typeString": "struct Drippie.DripState storage pointer"
                          }
                        },
                        "id": 80198,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "config",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 80087,
                        "src": "5008:12:205",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DripConfig_$80081_storage",
                          "typeString": "struct Drippie.DripConfig storage ref"
                        }
                      },
                      "id": 80199,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "reentrant",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 80069,
                      "src": "5008:22:205",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 80200,
                        "name": "_config",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80144,
                        "src": "5033:7:205",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DripConfig_$80081_calldata_ptr",
                          "typeString": "struct Drippie.DripConfig calldata"
                        }
                      },
                      "id": 80201,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "reentrant",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 80069,
                      "src": "5033:17:205",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "5008:42:205",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 80203,
                  "nodeType": "ExpressionStatement",
                  "src": "5008:42:205"
                },
                {
                  "expression": {
                    "id": 80211,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "expression": {
                          "id": 80204,
                          "name": "state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80183,
                          "src": "5060:5:205",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DripState_$80092_storage_ptr",
                            "typeString": "struct Drippie.DripState storage pointer"
                          }
                        },
                        "id": 80207,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "config",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 80087,
                        "src": "5060:12:205",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DripConfig_$80081_storage",
                          "typeString": "struct Drippie.DripConfig storage ref"
                        }
                      },
                      "id": 80208,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "interval",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 80071,
                      "src": "5060:21:205",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 80209,
                        "name": "_config",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80144,
                        "src": "5084:7:205",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DripConfig_$80081_calldata_ptr",
                          "typeString": "struct Drippie.DripConfig calldata"
                        }
                      },
                      "id": 80210,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "interval",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 80071,
                      "src": "5084:16:205",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5060:40:205",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 80212,
                  "nodeType": "ExpressionStatement",
                  "src": "5060:40:205"
                },
                {
                  "expression": {
                    "id": 80220,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "expression": {
                          "id": 80213,
                          "name": "state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80183,
                          "src": "5110:5:205",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DripState_$80092_storage_ptr",
                            "typeString": "struct Drippie.DripState storage pointer"
                          }
                        },
                        "id": 80216,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "config",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 80087,
                        "src": "5110:12:205",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DripConfig_$80081_storage",
                          "typeString": "struct Drippie.DripConfig storage ref"
                        }
                      },
                      "id": 80217,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "dripcheck",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 80074,
                      "src": "5110:22:205",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IDripCheck_$80506",
                        "typeString": "contract IDripCheck"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 80218,
                        "name": "_config",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80144,
                        "src": "5135:7:205",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DripConfig_$80081_calldata_ptr",
                          "typeString": "struct Drippie.DripConfig calldata"
                        }
                      },
                      "id": 80219,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "dripcheck",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 80074,
                      "src": "5135:17:205",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IDripCheck_$80506",
                        "typeString": "contract IDripCheck"
                      }
                    },
                    "src": "5110:42:205",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IDripCheck_$80506",
                      "typeString": "contract IDripCheck"
                    }
                  },
                  "id": 80221,
                  "nodeType": "ExpressionStatement",
                  "src": "5110:42:205"
                },
                {
                  "expression": {
                    "id": 80229,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "expression": {
                          "id": 80222,
                          "name": "state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80183,
                          "src": "5162:5:205",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DripState_$80092_storage_ptr",
                            "typeString": "struct Drippie.DripState storage pointer"
                          }
                        },
                        "id": 80225,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "config",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 80087,
                        "src": "5162:12:205",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DripConfig_$80081_storage",
                          "typeString": "struct Drippie.DripConfig storage ref"
                        }
                      },
                      "id": 80226,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "checkparams",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 80076,
                      "src": "5162:24:205",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 80227,
                        "name": "_config",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80144,
                        "src": "5189:7:205",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DripConfig_$80081_calldata_ptr",
                          "typeString": "struct Drippie.DripConfig calldata"
                        }
                      },
                      "id": 80228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "checkparams",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 80076,
                      "src": "5189:19:205",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes calldata"
                      }
                    },
                    "src": "5162:46:205",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 80230,
                  "nodeType": "ExpressionStatement",
                  "src": "5162:46:205"
                },
                {
                  "body": {
                    "id": 80256,
                    "nodeType": "Block",
                    "src": "5367:70:205",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 80250,
                                  "name": "_config",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 80144,
                                  "src": "5407:7:205",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_DripConfig_$80081_calldata_ptr",
                                    "typeString": "struct Drippie.DripConfig calldata"
                                  }
                                },
                                "id": 80251,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "actions",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 80080,
                                "src": "5407:15:205",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_DripAction_$80067_calldata_ptr_$dyn_calldata_ptr",
                                  "typeString": "struct Drippie.DripAction calldata[] calldata"
                                }
                              },
                              "id": 80253,
                              "indexExpression": {
                                "id": 80252,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 80232,
                                "src": "5423:1:205",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5407:18:205",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DripAction_$80067_calldata_ptr",
                                "typeString": "struct Drippie.DripAction calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_DripAction_$80067_calldata_ptr",
                                "typeString": "struct Drippie.DripAction calldata"
                              }
                            ],
                            "expression": {
                              "expression": {
                                "expression": {
                                  "id": 80243,
                                  "name": "state",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 80183,
                                  "src": "5381:5:205",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_DripState_$80092_storage_ptr",
                                    "typeString": "struct Drippie.DripState storage pointer"
                                  }
                                },
                                "id": 80247,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "config",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 80087,
                                "src": "5381:12:205",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_DripConfig_$80081_storage",
                                  "typeString": "struct Drippie.DripConfig storage ref"
                                }
                              },
                              "id": 80248,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "actions",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 80080,
                              "src": "5381:20:205",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_struct$_DripAction_$80067_storage_$dyn_storage",
                                "typeString": "struct Drippie.DripAction storage ref[] storage ref"
                              }
                            },
                            "id": 80249,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "5381:25:205",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_struct$_DripAction_$80067_storage_$dyn_storage_ptr_$_t_struct$_DripAction_$80067_storage_$returns$__$bound_to$_t_array$_t_struct$_DripAction_$80067_storage_$dyn_storage_ptr_$",
                              "typeString": "function (struct Drippie.DripAction storage ref[] storage pointer,struct Drippie.DripAction storage ref)"
                            }
                          },
                          "id": 80254,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5381:45:205",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 80255,
                        "nodeType": "ExpressionStatement",
                        "src": "5381:45:205"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 80239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 80235,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80232,
                      "src": "5334:1:205",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "expression": {
                          "id": 80236,
                          "name": "_config",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80144,
                          "src": "5338:7:205",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DripConfig_$80081_calldata_ptr",
                            "typeString": "struct Drippie.DripConfig calldata"
                          }
                        },
                        "id": 80237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "actions",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 80080,
                        "src": "5338:15:205",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_DripAction_$80067_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct Drippie.DripAction calldata[] calldata"
                        }
                      },
                      "id": 80238,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "5338:22:205",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5334:26:205",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 80257,
                  "initializationExpression": {
                    "assignments": [
                      80232
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 80232,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5327:1:205",
                        "nodeType": "VariableDeclaration",
                        "scope": 80257,
                        "src": "5319:9:205",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 80231,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5319:7:205",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 80234,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 80233,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "5331:1:205",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5319:13:205"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 80241,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5362:3:205",
                      "subExpression": {
                        "id": 80240,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80232,
                        "src": "5362:1:205",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 80242,
                    "nodeType": "ExpressionStatement",
                    "src": "5362:3:205"
                  },
                  "nodeType": "ForStatement",
                  "src": "5314:123:205"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 80259,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80141,
                        "src": "5491:5:205",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 80260,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80141,
                        "src": "5498:5:205",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 80261,
                        "name": "_config",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80144,
                        "src": "5505:7:205",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DripConfig_$80081_calldata_ptr",
                          "typeString": "struct Drippie.DripConfig calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_struct$_DripConfig_$80081_calldata_ptr",
                          "typeString": "struct Drippie.DripConfig calldata"
                        }
                      ],
                      "id": 80258,
                      "name": "DripCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80102,
                      "src": "5479:11:205",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_struct$_DripConfig_$80081_memory_ptr_$returns$__$",
                        "typeString": "function (string memory,string memory,struct Drippie.DripConfig memory)"
                      }
                    },
                    "id": 80262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5479:34:205",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80263,
                  "nodeType": "EmitStatement",
                  "src": "5474:39:205"
                }
              ]
            },
            "documentation": {
              "id": 80139,
              "nodeType": "StructuredDocumentation",
              "src": "3443:382:205",
              "text": "@notice Creates a new drip with the given name and configuration. Once created, drips cannot\n         be modified in any way (this is a security measure). If you want to update a drip,\n         simply pause (and potentially archive) the existing drip and create a new one.\n @param _name   Name of the drip.\n @param _config Configuration for the drip."
            },
            "functionSelector": "e551cdaa",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 80147,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 80146,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 43357,
                  "src": "3907:9:205"
                },
                "nodeType": "ModifierInvocation",
                "src": "3907:9:205"
              }
            ],
            "name": "create",
            "nameLocation": "3839:6:205",
            "parameters": {
              "id": 80145,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80141,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "3862:5:205",
                  "nodeType": "VariableDeclaration",
                  "scope": 80265,
                  "src": "3846:21:205",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 80140,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "3846:6:205",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80144,
                  "mutability": "mutable",
                  "name": "_config",
                  "nameLocation": "3889:7:205",
                  "nodeType": "VariableDeclaration",
                  "scope": 80265,
                  "src": "3869:27:205",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DripConfig_$80081_calldata_ptr",
                    "typeString": "struct Drippie.DripConfig"
                  },
                  "typeName": {
                    "id": 80143,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 80142,
                      "name": "DripConfig",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 80081,
                      "src": "3869:10:205"
                    },
                    "referencedDeclaration": 80081,
                    "src": "3869:10:205",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DripConfig_$80081_storage_ptr",
                      "typeString": "struct Drippie.DripConfig"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3845:52:205"
            },
            "returnParameters": {
              "id": 80148,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3917:0:205"
            },
            "scope": 80495,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 80343,
            "nodeType": "FunctionDefinition",
            "src": "5947:2024:205",
            "nodes": [],
            "body": {
              "id": 80342,
              "nodeType": "Block",
              "src": "6025:1946:205",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_DripStatus_$80060",
                          "typeString": "enum Drippie.DripStatus"
                        },
                        "id": 80280,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 80277,
                          "name": "_status",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80271,
                          "src": "6221:7:205",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DripStatus_$80060",
                            "typeString": "enum Drippie.DripStatus"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "expression": {
                            "id": 80278,
                            "name": "DripStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80060,
                            "src": "6232:10:205",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_DripStatus_$80060_$",
                              "typeString": "type(enum Drippie.DripStatus)"
                            }
                          },
                          "id": 80279,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "NONE",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 80056,
                          "src": "6232:15:205",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DripStatus_$80060",
                            "typeString": "enum Drippie.DripStatus"
                          }
                        },
                        "src": "6221:26:205",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "447269707069653a2064726970207374617475732063616e206e6576657220626520736574206261636b20746f204e4f4e45206166746572206372656174696f6e",
                        "id": 80281,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6249:67:205",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1d9d6db8873f6709c110a58e7747570b7b0cffd72d2da932e27c4b163ce62de4",
                          "typeString": "literal_string \"Drippie: drip status can never be set back to NONE after creation\""
                        },
                        "value": "Drippie: drip status can never be set back to NONE after creation"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1d9d6db8873f6709c110a58e7747570b7b0cffd72d2da932e27c4b163ce62de4",
                          "typeString": "literal_string \"Drippie: drip status can never be set back to NONE after creation\""
                        }
                      ],
                      "id": 80276,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6213:7:205",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 80282,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6213:104:205",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80283,
                  "nodeType": "ExpressionStatement",
                  "src": "6213:104:205"
                },
                {
                  "assignments": [
                    80286
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80286,
                      "mutability": "mutable",
                      "name": "curr",
                      "nameLocation": "6405:4:205",
                      "nodeType": "VariableDeclaration",
                      "scope": 80342,
                      "src": "6394:15:205",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DripStatus_$80060",
                        "typeString": "enum Drippie.DripStatus"
                      },
                      "typeName": {
                        "id": 80285,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 80284,
                          "name": "DripStatus",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 80060,
                          "src": "6394:10:205"
                        },
                        "referencedDeclaration": 80060,
                        "src": "6394:10:205",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_DripStatus_$80060",
                          "typeString": "enum Drippie.DripStatus"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80291,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 80287,
                        "name": "drips",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80129,
                        "src": "6412:5:205",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_DripState_$80092_storage_$",
                          "typeString": "mapping(string memory => struct Drippie.DripState storage ref)"
                        }
                      },
                      "id": 80289,
                      "indexExpression": {
                        "id": 80288,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80268,
                        "src": "6418:5:205",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "6412:12:205",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DripState_$80092_storage",
                        "typeString": "struct Drippie.DripState storage ref"
                      }
                    },
                    "id": 80290,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "status",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 80084,
                    "src": "6412:19:205",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_DripStatus_$80060",
                      "typeString": "enum Drippie.DripStatus"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "6394:37:205"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_DripStatus_$80060",
                          "typeString": "enum Drippie.DripStatus"
                        },
                        "id": 80296,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 80293,
                          "name": "curr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80286,
                          "src": "6688:4:205",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DripStatus_$80060",
                            "typeString": "enum Drippie.DripStatus"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "expression": {
                            "id": 80294,
                            "name": "DripStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80060,
                            "src": "6696:10:205",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_DripStatus_$80060_$",
                              "typeString": "type(enum Drippie.DripStatus)"
                            }
                          },
                          "id": 80295,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "NONE",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 80056,
                          "src": "6696:15:205",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DripStatus_$80060",
                            "typeString": "enum Drippie.DripStatus"
                          }
                        },
                        "src": "6688:23:205",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "447269707069653a206472697020776974682074686174206e616d6520646f6573206e6f7420657869737420616e642063616e6e6f742062652075706461746564",
                        "id": 80297,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6713:67:205",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f5d47cb8b4bbd1f0f436ac91ab1c428f7bac59817e7fc1f17ecc3179ac5e18bb",
                          "typeString": "literal_string \"Drippie: drip with that name does not exist and cannot be updated\""
                        },
                        "value": "Drippie: drip with that name does not exist and cannot be updated"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f5d47cb8b4bbd1f0f436ac91ab1c428f7bac59817e7fc1f17ecc3179ac5e18bb",
                          "typeString": "literal_string \"Drippie: drip with that name does not exist and cannot be updated\""
                        }
                      ],
                      "id": 80292,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6680:7:205",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 80298,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6680:101:205",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80299,
                  "nodeType": "ExpressionStatement",
                  "src": "6680:101:205"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_DripStatus_$80060",
                          "typeString": "enum Drippie.DripStatus"
                        },
                        "id": 80304,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 80301,
                          "name": "curr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80286,
                          "src": "6937:4:205",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DripStatus_$80060",
                            "typeString": "enum Drippie.DripStatus"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "expression": {
                            "id": 80302,
                            "name": "DripStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80060,
                            "src": "6945:10:205",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_DripStatus_$80060_$",
                              "typeString": "type(enum Drippie.DripStatus)"
                            }
                          },
                          "id": 80303,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "ARCHIVED",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 80059,
                          "src": "6945:19:205",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DripStatus_$80060",
                            "typeString": "enum Drippie.DripStatus"
                          }
                        },
                        "src": "6937:27:205",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "447269707069653a206472697020776974682074686174206e616d6520686173206265656e20617263686976656420616e642063616e6e6f742062652075706461746564",
                        "id": 80305,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "6966:70:205",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c646eec7fb4f196d2558cace17875a41e1cdef5f04244862ee1ca2d2a7de4ee2",
                          "typeString": "literal_string \"Drippie: drip with that name has been archived and cannot be updated\""
                        },
                        "value": "Drippie: drip with that name has been archived and cannot be updated"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_c646eec7fb4f196d2558cace17875a41e1cdef5f04244862ee1ca2d2a7de4ee2",
                          "typeString": "literal_string \"Drippie: drip with that name has been archived and cannot be updated\""
                        }
                      ],
                      "id": 80300,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6929:7:205",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 80306,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6929:108:205",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80307,
                  "nodeType": "ExpressionStatement",
                  "src": "6929:108:205"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_DripStatus_$80060",
                          "typeString": "enum Drippie.DripStatus"
                        },
                        "id": 80311,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 80309,
                          "name": "curr",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80286,
                          "src": "7323:4:205",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DripStatus_$80060",
                            "typeString": "enum Drippie.DripStatus"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "id": 80310,
                          "name": "_status",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80271,
                          "src": "7331:7:205",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DripStatus_$80060",
                            "typeString": "enum Drippie.DripStatus"
                          }
                        },
                        "src": "7323:15:205",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "447269707069653a2063616e6e6f742073657420647269702073746174757320746f207468652073616d6520737461747573206173206974732063757272656e7420737461747573",
                        "id": 80312,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7340:74:205",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7cd6f0db9ebdd0f9c3c658c07e9e2e39bcc6b82f6b9a3ceb63ceedc5f0014189",
                          "typeString": "literal_string \"Drippie: cannot set drip status to the same status as its current status\""
                        },
                        "value": "Drippie: cannot set drip status to the same status as its current status"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7cd6f0db9ebdd0f9c3c658c07e9e2e39bcc6b82f6b9a3ceb63ceedc5f0014189",
                          "typeString": "literal_string \"Drippie: cannot set drip status to the same status as its current status\""
                        }
                      ],
                      "id": 80308,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7315:7:205",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 80313,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7315:100:205",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80314,
                  "nodeType": "ExpressionStatement",
                  "src": "7315:100:205"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_enum$_DripStatus_$80060",
                      "typeString": "enum Drippie.DripStatus"
                    },
                    "id": 80318,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 80315,
                      "name": "_status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80271,
                      "src": "7651:7:205",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DripStatus_$80060",
                        "typeString": "enum Drippie.DripStatus"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 80316,
                        "name": "DripStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80060,
                        "src": "7662:10:205",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_DripStatus_$80060_$",
                          "typeString": "type(enum Drippie.DripStatus)"
                        }
                      },
                      "id": 80317,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "ARCHIVED",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 80059,
                      "src": "7662:19:205",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DripStatus_$80060",
                        "typeString": "enum Drippie.DripStatus"
                      }
                    },
                    "src": "7651:30:205",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 80328,
                  "nodeType": "IfStatement",
                  "src": "7647:155:205",
                  "trueBody": {
                    "id": 80327,
                    "nodeType": "Block",
                    "src": "7683:119:205",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_enum$_DripStatus_$80060",
                                "typeString": "enum Drippie.DripStatus"
                              },
                              "id": 80323,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 80320,
                                "name": "curr",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 80286,
                                "src": "7705:4:205",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_DripStatus_$80060",
                                  "typeString": "enum Drippie.DripStatus"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 80321,
                                  "name": "DripStatus",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 80060,
                                  "src": "7713:10:205",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_DripStatus_$80060_$",
                                    "typeString": "type(enum Drippie.DripStatus)"
                                  }
                                },
                                "id": 80322,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "PAUSED",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 80057,
                                "src": "7713:17:205",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_DripStatus_$80060",
                                  "typeString": "enum Drippie.DripStatus"
                                }
                              },
                              "src": "7705:25:205",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "447269707069653a2064726970206d75737420666972737420626520706175736564206265666f7265206265696e67206172636869766564",
                              "id": 80324,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "7732:58:205",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_8b0f3947c996a34c6853d78e42f7055514033339ec42b29f528e1f65c4dbe9c4",
                                "typeString": "literal_string \"Drippie: drip must first be paused before being archived\""
                              },
                              "value": "Drippie: drip must first be paused before being archived"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_8b0f3947c996a34c6853d78e42f7055514033339ec42b29f528e1f65c4dbe9c4",
                                "typeString": "literal_string \"Drippie: drip must first be paused before being archived\""
                              }
                            ],
                            "id": 80319,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "7697:7:205",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 80325,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7697:94:205",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 80326,
                        "nodeType": "ExpressionStatement",
                        "src": "7697:94:205"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 80334,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "baseExpression": {
                          "id": 80329,
                          "name": "drips",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80129,
                          "src": "7880:5:205",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_DripState_$80092_storage_$",
                            "typeString": "mapping(string memory => struct Drippie.DripState storage ref)"
                          }
                        },
                        "id": 80331,
                        "indexExpression": {
                          "id": 80330,
                          "name": "_name",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80268,
                          "src": "7886:5:205",
                          "typeDescriptions": {
                            "typeIdentifier": "t_string_calldata_ptr",
                            "typeString": "string calldata"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "7880:12:205",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DripState_$80092_storage",
                          "typeString": "struct Drippie.DripState storage ref"
                        }
                      },
                      "id": 80332,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "status",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 80084,
                      "src": "7880:19:205",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DripStatus_$80060",
                        "typeString": "enum Drippie.DripStatus"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 80333,
                      "name": "_status",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80271,
                      "src": "7902:7:205",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_DripStatus_$80060",
                        "typeString": "enum Drippie.DripStatus"
                      }
                    },
                    "src": "7880:29:205",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_DripStatus_$80060",
                      "typeString": "enum Drippie.DripStatus"
                    }
                  },
                  "id": 80335,
                  "nodeType": "ExpressionStatement",
                  "src": "7880:29:205"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 80337,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80268,
                        "src": "7942:5:205",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 80338,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80268,
                        "src": "7949:5:205",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 80339,
                        "name": "_status",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80271,
                        "src": "7956:7:205",
                        "typeDescriptions": {
                          "typeIdentifier": "t_enum$_DripStatus_$80060",
                          "typeString": "enum Drippie.DripStatus"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_enum$_DripStatus_$80060",
                          "typeString": "enum Drippie.DripStatus"
                        }
                      ],
                      "id": 80336,
                      "name": "DripStatusUpdated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80112,
                      "src": "7924:17:205",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_enum$_DripStatus_$80060_$returns$__$",
                        "typeString": "function (string memory,string memory,enum Drippie.DripStatus)"
                      }
                    },
                    "id": 80340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7924:40:205",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80341,
                  "nodeType": "EmitStatement",
                  "src": "7919:45:205"
                }
              ]
            },
            "documentation": {
              "id": 80266,
              "nodeType": "StructuredDocumentation",
              "src": "5526:416:205",
              "text": "@notice Sets the status for a given drip. The behavior of this function depends on the\n         status that the user is trying to set. A drip can always move between ACTIVE and\n         PAUSED, but it can never move back to NONE and once ARCHIVED, it can never move back\n         to ACTIVE or PAUSED.\n @param _name   Name of the drip to update.\n @param _status New drip status."
            },
            "functionSelector": "9bc94d01",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 80274,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 80273,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 43357,
                  "src": "6015:9:205"
                },
                "nodeType": "ModifierInvocation",
                "src": "6015:9:205"
              }
            ],
            "name": "status",
            "nameLocation": "5956:6:205",
            "parameters": {
              "id": 80272,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80268,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "5979:5:205",
                  "nodeType": "VariableDeclaration",
                  "scope": 80343,
                  "src": "5963:21:205",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 80267,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "5963:6:205",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 80271,
                  "mutability": "mutable",
                  "name": "_status",
                  "nameLocation": "5997:7:205",
                  "nodeType": "VariableDeclaration",
                  "scope": 80343,
                  "src": "5986:18:205",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_DripStatus_$80060",
                    "typeString": "enum Drippie.DripStatus"
                  },
                  "typeName": {
                    "id": 80270,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 80269,
                      "name": "DripStatus",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 80060,
                      "src": "5986:10:205"
                    },
                    "referencedDeclaration": 80060,
                    "src": "5986:10:205",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_DripStatus_$80060",
                      "typeString": "enum Drippie.DripStatus"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5962:43:205"
            },
            "returnParameters": {
              "id": 80275,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6025:0:205"
            },
            "scope": 80495,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 80395,
            "nodeType": "FunctionDefinition",
            "src": "8134:1212:205",
            "nodes": [],
            "body": {
              "id": 80394,
              "nodeType": "Block",
              "src": "8204:1142:205",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    80353
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80353,
                      "mutability": "mutable",
                      "name": "state",
                      "nameLocation": "8232:5:205",
                      "nodeType": "VariableDeclaration",
                      "scope": 80394,
                      "src": "8214:23:205",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DripState_$80092_storage_ptr",
                        "typeString": "struct Drippie.DripState"
                      },
                      "typeName": {
                        "id": 80352,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 80351,
                          "name": "DripState",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 80092,
                          "src": "8214:9:205"
                        },
                        "referencedDeclaration": 80092,
                        "src": "8214:9:205",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DripState_$80092_storage_ptr",
                          "typeString": "struct Drippie.DripState"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80357,
                  "initialValue": {
                    "baseExpression": {
                      "id": 80354,
                      "name": "drips",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80129,
                      "src": "8240:5:205",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_DripState_$80092_storage_$",
                        "typeString": "mapping(string memory => struct Drippie.DripState storage ref)"
                      }
                    },
                    "id": 80356,
                    "indexExpression": {
                      "id": 80355,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80346,
                      "src": "8246:5:205",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8240:12:205",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DripState_$80092_storage",
                      "typeString": "struct Drippie.DripState storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8214:38:205"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_enum$_DripStatus_$80060",
                          "typeString": "enum Drippie.DripStatus"
                        },
                        "id": 80363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 80359,
                            "name": "state",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80353,
                            "src": "8351:5:205",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DripState_$80092_storage_ptr",
                              "typeString": "struct Drippie.DripState storage pointer"
                            }
                          },
                          "id": 80360,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "status",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 80084,
                          "src": "8351:12:205",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DripStatus_$80060",
                            "typeString": "enum Drippie.DripStatus"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 80361,
                            "name": "DripStatus",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80060,
                            "src": "8367:10:205",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_enum$_DripStatus_$80060_$",
                              "typeString": "type(enum Drippie.DripStatus)"
                            }
                          },
                          "id": 80362,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "ACTIVE",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 80058,
                          "src": "8367:17:205",
                          "typeDescriptions": {
                            "typeIdentifier": "t_enum$_DripStatus_$80060",
                            "typeString": "enum Drippie.DripStatus"
                          }
                        },
                        "src": "8351:33:205",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "447269707069653a2073656c6563746564206472697020646f6573206e6f74206578697374206f72206973206e6f742063757272656e746c7920616374697665",
                        "id": 80364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8386:66:205",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_992b2abf356f1dc57af279d12026c173397e12d52cf79b07408a9d3c74e1af4f",
                          "typeString": "literal_string \"Drippie: selected drip does not exist or is not currently active\""
                        },
                        "value": "Drippie: selected drip does not exist or is not currently active"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_992b2abf356f1dc57af279d12026c173397e12d52cf79b07408a9d3c74e1af4f",
                          "typeString": "literal_string \"Drippie: selected drip does not exist or is not currently active\""
                        }
                      ],
                      "id": 80358,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8343:7:205",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 80365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8343:110:205",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80366,
                  "nodeType": "ExpressionStatement",
                  "src": "8343:110:205"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 80376,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 80373,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 80368,
                              "name": "state",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80353,
                              "src": "8906:5:205",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DripState_$80092_storage_ptr",
                                "typeString": "struct Drippie.DripState storage pointer"
                              }
                            },
                            "id": 80369,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "last",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 80089,
                            "src": "8906:10:205",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "expression": {
                              "expression": {
                                "id": 80370,
                                "name": "state",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 80353,
                                "src": "8919:5:205",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_DripState_$80092_storage_ptr",
                                  "typeString": "struct Drippie.DripState storage pointer"
                                }
                              },
                              "id": 80371,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "config",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 80087,
                              "src": "8919:12:205",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DripConfig_$80081_storage",
                                "typeString": "struct Drippie.DripConfig storage ref"
                              }
                            },
                            "id": 80372,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "interval",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 80071,
                            "src": "8919:21:205",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8906:34:205",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "expression": {
                            "id": 80374,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "8944:5:205",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 80375,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "8944:15:205",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "8906:53:205",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "447269707069653a206472697020696e74657276616c20686173206e6f7420656c61707365642073696e6365206c6173742064726970",
                        "id": 80377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8973:56:205",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b6b44356f52be5e3aab04a9961c05385899b4cbbf9c6b1baf115f1e3c71870ef",
                          "typeString": "literal_string \"Drippie: drip interval has not elapsed since last drip\""
                        },
                        "value": "Drippie: drip interval has not elapsed since last drip"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b6b44356f52be5e3aab04a9961c05385899b4cbbf9c6b1baf115f1e3c71870ef",
                          "typeString": "literal_string \"Drippie: drip interval has not elapsed since last drip\""
                        }
                      ],
                      "id": 80367,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "8885:7:205",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 80378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8885:154:205",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80379,
                  "nodeType": "ExpressionStatement",
                  "src": "8885:154:205"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 80385,
                                "name": "state",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 80353,
                                "src": "9157:5:205",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_DripState_$80092_storage_ptr",
                                  "typeString": "struct Drippie.DripState storage pointer"
                                }
                              },
                              "id": 80386,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "config",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 80087,
                              "src": "9157:12:205",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DripConfig_$80081_storage",
                                "typeString": "struct Drippie.DripConfig storage ref"
                              }
                            },
                            "id": 80387,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "checkparams",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 80076,
                            "src": "9157:24:205",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_storage",
                              "typeString": "bytes storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_storage",
                              "typeString": "bytes storage ref"
                            }
                          ],
                          "expression": {
                            "expression": {
                              "expression": {
                                "id": 80381,
                                "name": "state",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 80353,
                                "src": "9128:5:205",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_DripState_$80092_storage_ptr",
                                  "typeString": "struct Drippie.DripState storage pointer"
                                }
                              },
                              "id": 80382,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "config",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 80087,
                              "src": "9128:12:205",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DripConfig_$80081_storage",
                                "typeString": "struct Drippie.DripConfig storage ref"
                              }
                            },
                            "id": 80383,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "dripcheck",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 80074,
                            "src": "9128:22:205",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IDripCheck_$80506",
                              "typeString": "contract IDripCheck"
                            }
                          },
                          "id": 80384,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "check",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 80505,
                          "src": "9128:28:205",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_bytes_memory_ptr_$returns$_t_bool_$",
                            "typeString": "function (bytes memory) view external returns (bool)"
                          }
                        },
                        "id": 80388,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9128:54:205",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "447269707069653a2064726970636865636b206661696c656420736f2064726970206973206e6f742079657420726561647920746f20626520747269676765726564",
                        "id": 80389,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9196:68:205",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_96ca8b21fbc7d628e015a633545eb6b32b721f6b21c2072ec2826d343d7f66f3",
                          "typeString": "literal_string \"Drippie: dripcheck failed so drip is not yet ready to be triggered\""
                        },
                        "value": "Drippie: dripcheck failed so drip is not yet ready to be triggered"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_96ca8b21fbc7d628e015a633545eb6b32b721f6b21c2072ec2826d343d7f66f3",
                          "typeString": "literal_string \"Drippie: dripcheck failed so drip is not yet ready to be triggered\""
                        }
                      ],
                      "id": 80380,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "9107:7:205",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 80390,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9107:167:205",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80391,
                  "nodeType": "ExpressionStatement",
                  "src": "9107:167:205"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 80392,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "9335:4:205",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 80350,
                  "id": 80393,
                  "nodeType": "Return",
                  "src": "9328:11:205"
                }
              ]
            },
            "documentation": {
              "id": 80344,
              "nodeType": "StructuredDocumentation",
              "src": "7977:152:205",
              "text": "@notice Checks if a given drip is executable.\n @param _name Drip to check.\n @return True if the drip is executable, reverts otherwise."
            },
            "functionSelector": "fc3e3eba",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "executable",
            "nameLocation": "8143:10:205",
            "parameters": {
              "id": 80347,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80346,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "8170:5:205",
                  "nodeType": "VariableDeclaration",
                  "scope": 80395,
                  "src": "8154:21:205",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 80345,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "8154:6:205",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8153:23:205"
            },
            "returnParameters": {
              "id": 80350,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80349,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 80395,
                  "src": "8198:4:205",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 80348,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "8198:4:205",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8197:6:205"
            },
            "scope": 80495,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 80479,
            "nodeType": "FunctionDefinition",
            "src": "10168:3223:205",
            "nodes": [],
            "body": {
              "id": 80478,
              "nodeType": "Block",
              "src": "10214:3177:205",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    80403
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80403,
                      "mutability": "mutable",
                      "name": "state",
                      "nameLocation": "10242:5:205",
                      "nodeType": "VariableDeclaration",
                      "scope": 80478,
                      "src": "10224:23:205",
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DripState_$80092_storage_ptr",
                        "typeString": "struct Drippie.DripState"
                      },
                      "typeName": {
                        "id": 80402,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 80401,
                          "name": "DripState",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 80092,
                          "src": "10224:9:205"
                        },
                        "referencedDeclaration": 80092,
                        "src": "10224:9:205",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DripState_$80092_storage_ptr",
                          "typeString": "struct Drippie.DripState"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80407,
                  "initialValue": {
                    "baseExpression": {
                      "id": 80404,
                      "name": "drips",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80129,
                      "src": "10250:5:205",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_DripState_$80092_storage_$",
                        "typeString": "mapping(string memory => struct Drippie.DripState storage ref)"
                      }
                    },
                    "id": 80406,
                    "indexExpression": {
                      "id": 80405,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80398,
                      "src": "10256:5:205",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_calldata_ptr",
                        "typeString": "string calldata"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10250:12:205",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DripState_$80092_storage",
                      "typeString": "struct Drippie.DripState storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10224:38:205"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 80409,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80398,
                        "src": "10474:5:205",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      ],
                      "id": 80408,
                      "name": "executable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80395,
                      "src": "10463:10:205",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_string_calldata_ptr_$returns$_t_bool_$",
                        "typeString": "function (string calldata) view returns (bool)"
                      }
                    },
                    "id": 80410,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10463:17:205",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 80411,
                  "nodeType": "ExpressionStatement",
                  "src": "10463:17:205"
                },
                {
                  "expression": {
                    "id": 80417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 80412,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80403,
                        "src": "10939:5:205",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DripState_$80092_storage_ptr",
                          "typeString": "struct Drippie.DripState storage pointer"
                        }
                      },
                      "id": 80414,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "last",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 80089,
                      "src": "10939:10:205",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 80415,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "10952:5:205",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 80416,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "10952:15:205",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10939:28:205",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 80418,
                  "nodeType": "ExpressionStatement",
                  "src": "10939:28:205"
                },
                {
                  "expression": {
                    "id": 80422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "++",
                    "prefix": false,
                    "src": "11263:13:205",
                    "subExpression": {
                      "expression": {
                        "id": 80419,
                        "name": "state",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80403,
                        "src": "11263:5:205",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DripState_$80092_storage_ptr",
                          "typeString": "struct Drippie.DripState storage pointer"
                        }
                      },
                      "id": 80421,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "count",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 80091,
                      "src": "11263:11:205",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 80423,
                  "nodeType": "ExpressionStatement",
                  "src": "11263:13:205"
                },
                {
                  "assignments": [
                    80425
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 80425,
                      "mutability": "mutable",
                      "name": "len",
                      "nameLocation": "11640:3:205",
                      "nodeType": "VariableDeclaration",
                      "scope": 80478,
                      "src": "11632:11:205",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 80424,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "11632:7:205",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 80430,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "expression": {
                          "id": 80426,
                          "name": "state",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80403,
                          "src": "11646:5:205",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DripState_$80092_storage_ptr",
                            "typeString": "struct Drippie.DripState storage pointer"
                          }
                        },
                        "id": 80427,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "config",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 80087,
                        "src": "11646:12:205",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_DripConfig_$80081_storage",
                          "typeString": "struct Drippie.DripConfig storage ref"
                        }
                      },
                      "id": 80428,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "actions",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 80080,
                      "src": "11646:20:205",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_DripAction_$80067_storage_$dyn_storage",
                        "typeString": "struct Drippie.DripAction storage ref[] storage ref"
                      }
                    },
                    "id": 80429,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "11646:27:205",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11632:41:205"
                },
                {
                  "body": {
                    "id": 80467,
                    "nodeType": "Block",
                    "src": "11717:1597:205",
                    "statements": [
                      {
                        "assignments": [
                          80443
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 80443,
                            "mutability": "mutable",
                            "name": "action",
                            "nameLocation": "12007:6:205",
                            "nodeType": "VariableDeclaration",
                            "scope": 80467,
                            "src": "11988:25:205",
                            "stateVariable": false,
                            "storageLocation": "storage",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_DripAction_$80067_storage_ptr",
                              "typeString": "struct Drippie.DripAction"
                            },
                            "typeName": {
                              "id": 80442,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 80441,
                                "name": "DripAction",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 80067,
                                "src": "11988:10:205"
                              },
                              "referencedDeclaration": 80067,
                              "src": "11988:10:205",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DripAction_$80067_storage_ptr",
                                "typeString": "struct Drippie.DripAction"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 80449,
                        "initialValue": {
                          "baseExpression": {
                            "expression": {
                              "expression": {
                                "id": 80444,
                                "name": "state",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 80403,
                                "src": "12016:5:205",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_DripState_$80092_storage_ptr",
                                  "typeString": "struct Drippie.DripState storage pointer"
                                }
                              },
                              "id": 80445,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "config",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 80087,
                              "src": "12016:12:205",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_DripConfig_$80081_storage",
                                "typeString": "struct Drippie.DripConfig storage ref"
                              }
                            },
                            "id": 80446,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "actions",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 80080,
                            "src": "12016:20:205",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_DripAction_$80067_storage_$dyn_storage",
                              "typeString": "struct Drippie.DripAction storage ref[] storage ref"
                            }
                          },
                          "id": 80448,
                          "indexExpression": {
                            "id": 80447,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 80432,
                            "src": "12037:1:205",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "12016:23:205",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_DripAction_$80067_storage",
                            "typeString": "struct Drippie.DripAction storage ref"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "11988:51:205"
                      },
                      {
                        "assignments": [
                          80451,
                          null
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 80451,
                            "mutability": "mutable",
                            "name": "success",
                            "nameLocation": "12432:7:205",
                            "nodeType": "VariableDeclaration",
                            "scope": 80467,
                            "src": "12427:12:205",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "typeName": {
                              "id": 80450,
                              "name": "bool",
                              "nodeType": "ElementaryTypeName",
                              "src": "12427:4:205",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "visibility": "internal"
                          },
                          null
                        ],
                        "id": 80461,
                        "initialValue": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 80458,
                                "name": "action",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 80443,
                                "src": "12486:6:205",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_DripAction_$80067_storage_ptr",
                                  "typeString": "struct Drippie.DripAction storage pointer"
                                }
                              },
                              "id": 80459,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "data",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 80064,
                              "src": "12486:11:205",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_storage",
                                "typeString": "bytes storage ref"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_storage",
                                  "typeString": "bytes storage ref"
                                }
                              ],
                              "expression": {
                                "expression": {
                                  "id": 80452,
                                  "name": "action",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 80443,
                                  "src": "12444:6:205",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_DripAction_$80067_storage_ptr",
                                    "typeString": "struct Drippie.DripAction storage pointer"
                                  }
                                },
                                "id": 80453,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "target",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 80062,
                                "src": "12444:13:205",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address_payable",
                                  "typeString": "address payable"
                                }
                              },
                              "id": 80454,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "call",
                              "nodeType": "MemberAccess",
                              "src": "12444:18:205",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                                "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                              }
                            },
                            "id": 80457,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "names": [
                              "value"
                            ],
                            "nodeType": "FunctionCallOptions",
                            "options": [
                              {
                                "expression": {
                                  "id": 80455,
                                  "name": "action",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 80443,
                                  "src": "12471:6:205",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_DripAction_$80067_storage_ptr",
                                    "typeString": "struct Drippie.DripAction storage pointer"
                                  }
                                },
                                "id": 80456,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "value",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 80066,
                                "src": "12471:12:205",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "src": "12444:41:205",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_barecall_payable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$value",
                              "typeString": "function (bytes memory) payable returns (bool,bytes memory)"
                            }
                          },
                          "id": 80460,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "12444:54:205",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                            "typeString": "tuple(bool,bytes memory)"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "12426:72:205"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 80463,
                              "name": "success",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 80451,
                              "src": "13215:7:205",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "447269707069653a20647269702077617320756e7375636365737366756c2c20706c6561736520636865636b20796f757220636f6e66696775726174696f6e20666f72206d697374616b6573",
                              "id": 80464,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "13224:78:205",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_1acdd72c2324d77f1c7ac65cd414afd8e9f0837bfac7e5b36e0764c49bb474f7",
                                "typeString": "literal_string \"Drippie: drip was unsuccessful, please check your configuration for mistakes\""
                              },
                              "value": "Drippie: drip was unsuccessful, please check your configuration for mistakes"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_1acdd72c2324d77f1c7ac65cd414afd8e9f0837bfac7e5b36e0764c49bb474f7",
                                "typeString": "literal_string \"Drippie: drip was unsuccessful, please check your configuration for mistakes\""
                              }
                            ],
                            "id": 80462,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "13207:7:205",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 80465,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13207:96:205",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 80466,
                        "nodeType": "ExpressionStatement",
                        "src": "13207:96:205"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 80437,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 80435,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80432,
                      "src": "11703:1:205",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 80436,
                      "name": "len",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80425,
                      "src": "11707:3:205",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11703:7:205",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 80468,
                  "initializationExpression": {
                    "assignments": [
                      80432
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 80432,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "11696:1:205",
                        "nodeType": "VariableDeclaration",
                        "scope": 80468,
                        "src": "11688:9:205",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 80431,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "11688:7:205",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 80434,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 80433,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "11700:1:205",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "11688:13:205"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 80439,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "11712:3:205",
                      "subExpression": {
                        "id": 80438,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80432,
                        "src": "11712:1:205",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 80440,
                    "nodeType": "ExpressionStatement",
                    "src": "11712:3:205"
                  },
                  "nodeType": "ForStatement",
                  "src": "11683:1631:205"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 80470,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80398,
                        "src": "13342:5:205",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "id": 80471,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80398,
                        "src": "13349:5:205",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      {
                        "expression": {
                          "id": 80472,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "13356:3:205",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 80473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "13356:10:205",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 80474,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "13368:5:205",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 80475,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "src": "13368:15:205",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 80469,
                      "name": "DripExecuted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 80123,
                      "src": "13329:12:205",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (string memory,string memory,address,uint256)"
                      }
                    },
                    "id": 80476,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13329:55:205",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 80477,
                  "nodeType": "EmitStatement",
                  "src": "13324:60:205"
                }
              ]
            },
            "documentation": {
              "id": 80396,
              "nodeType": "StructuredDocumentation",
              "src": "9352:811:205",
              "text": "@notice Triggers a drip. This function is deliberately left as a public function because the\n         assumption being made here is that setting the drip to ACTIVE is an affirmative\n         signal that the drip should be executable according to the drip parameters, drip\n         check, and drip interval. Note that drip parameters are read entirely from the state\n         and are not supplied as user input, so there should not be any way for a\n         non-authorized user to influence the behavior of the drip. Note that the drip check\n         is executed only **once** at the beginning of the call to the drip function and will\n         not be executed again between the drip actions within this call.\n @param _name Name of the drip to trigger."
            },
            "functionSelector": "67148cd2",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "drip",
            "nameLocation": "10177:4:205",
            "parameters": {
              "id": 80399,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80398,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "10198:5:205",
                  "nodeType": "VariableDeclaration",
                  "scope": 80479,
                  "src": "10182:21:205",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 80397,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "10182:6:205",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10181:23:205"
            },
            "returnParameters": {
              "id": 80400,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10214:0:205"
            },
            "scope": 80495,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 80494,
            "nodeType": "FunctionDefinition",
            "src": "13531:122:205",
            "nodes": [],
            "body": {
              "id": 80493,
              "nodeType": "Block",
              "src": "13610:43:205",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 80488,
                        "name": "drips",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80129,
                        "src": "13627:5:205",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_string_memory_ptr_$_t_struct$_DripState_$80092_storage_$",
                          "typeString": "mapping(string memory => struct Drippie.DripState storage ref)"
                        }
                      },
                      "id": 80490,
                      "indexExpression": {
                        "id": 80489,
                        "name": "_name",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80482,
                        "src": "13633:5:205",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_calldata_ptr",
                          "typeString": "string calldata"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "13627:12:205",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_DripState_$80092_storage",
                        "typeString": "struct Drippie.DripState storage ref"
                      }
                    },
                    "id": 80491,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "status",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 80084,
                    "src": "13627:19:205",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_DripStatus_$80060",
                      "typeString": "enum Drippie.DripStatus"
                    }
                  },
                  "functionReturnParameters": 80487,
                  "id": 80492,
                  "nodeType": "Return",
                  "src": "13620:26:205"
                }
              ]
            },
            "documentation": {
              "id": 80480,
              "nodeType": "StructuredDocumentation",
              "src": "13397:129:205",
              "text": "@notice Returns the status of a given drip.\n @param _name Drip to check.\n @return DripStatus of the given drip."
            },
            "functionSelector": "0d8f4697",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDripStatus",
            "nameLocation": "13540:13:205",
            "parameters": {
              "id": 80483,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80482,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "13570:5:205",
                  "nodeType": "VariableDeclaration",
                  "scope": 80494,
                  "src": "13554:21:205",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_calldata_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 80481,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "13554:6:205",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13553:23:205"
            },
            "returnParameters": {
              "id": 80487,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 80486,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 80494,
                  "src": "13598:10:205",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_DripStatus_$80060",
                    "typeString": "enum Drippie.DripStatus"
                  },
                  "typeName": {
                    "id": 80485,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 80484,
                      "name": "DripStatus",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 80060,
                      "src": "13598:10:205"
                    },
                    "referencedDeclaration": 80060,
                    "src": "13598:10:205",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_DripStatus_$80060",
                      "typeString": "enum Drippie.DripStatus"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13597:12:205"
            },
            "scope": 80495,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 80054,
              "name": "AssetReceiver",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 79843,
              "src": "1028:13:205"
            },
            "id": 80055,
            "nodeType": "InheritanceSpecifier",
            "src": "1028:13:205"
          }
        ],
        "canonicalName": "Drippie",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 80053,
          "nodeType": "StructuredDocumentation",
          "src": "159:849:205",
          "text": "@title Drippie\n @notice Drippie is a system for managing automated contract interactions. A specific interaction\n         is called a \"drip\" and can be executed according to some condition (called a dripcheck)\n         and an execution interval. Drips cannot be executed faster than the execution interval.\n         Drips can trigger arbitrary contract calls where the calling contract is this contract\n         address. Drips can also send ETH value, which makes them ideal for keeping addresses\n         sufficiently funded with ETH. Drippie is designed to be connected with smart contract\n         automation services so that drips can be executed automatically. However, Drippie is\n         specifically designed to be separated from these services so that trust assumptions are\n         better compartmentalized."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          80495,
          79843,
          79913,
          43394
        ],
        "name": "Drippie",
        "nameLocation": "1017:7:205",
        "scope": 80496,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 205
}