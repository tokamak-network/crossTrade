{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "uint256",
          "name": "version",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "opaqueData",
          "type": "bytes"
        }
      ],
      "name": "TransactionDeposited",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "withdrawalHash",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bool",
          "name": "success",
          "type": "bool"
        }
      ],
      "name": "WithdrawalFinalized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "withdrawalHash",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        }
      ],
      "name": "WithdrawalProven",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "GUARDIAN",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "L2_ORACLE",
      "outputs": [
        {
          "internalType": "contract L2OutputOracle",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "SYSTEM_CONFIG",
      "outputs": [
        {
          "internalType": "contract SystemConfig",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_value",
          "type": "uint256"
        },
        {
          "internalType": "uint64",
          "name": "_gasLimit",
          "type": "uint64"
        },
        {
          "internalType": "bool",
          "name": "_isCreation",
          "type": "bool"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "depositTransaction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "depositedAmount",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "donateETH",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "gasLimit",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "internalType": "struct Types.WithdrawalTransaction",
          "name": "_tx",
          "type": "tuple"
        }
      ],
      "name": "finalizeWithdrawalTransaction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "finalizedWithdrawals",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "guardian",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_nativeTokenAddress",
          "type": "address"
        },
        {
          "internalType": "contract L2OutputOracle",
          "name": "_l2Oracle",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_guardian",
          "type": "address"
        },
        {
          "internalType": "contract SystemConfig",
          "name": "_systemConfig",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_paused",
          "type": "bool"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_l2OutputIndex",
          "type": "uint256"
        }
      ],
      "name": "isOutputFinalized",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "l2Oracle",
      "outputs": [
        {
          "internalType": "contract L2OutputOracle",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "l2Sender",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint64",
          "name": "_byteCount",
          "type": "uint64"
        }
      ],
      "name": "minimumGasLimit",
      "outputs": [
        {
          "internalType": "uint64",
          "name": "",
          "type": "uint64"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nativeTokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "onApprove",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "params",
      "outputs": [
        {
          "internalType": "uint128",
          "name": "prevBaseFee",
          "type": "uint128"
        },
        {
          "internalType": "uint64",
          "name": "prevBoughtGas",
          "type": "uint64"
        },
        {
          "internalType": "uint64",
          "name": "prevBlockNum",
          "type": "uint64"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "nonce",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "target",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "value",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "gasLimit",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "data",
              "type": "bytes"
            }
          ],
          "internalType": "struct Types.WithdrawalTransaction",
          "name": "_tx",
          "type": "tuple"
        },
        {
          "internalType": "uint256",
          "name": "_l2OutputIndex",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bytes32",
              "name": "version",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "stateRoot",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "messagePasserStorageRoot",
              "type": "bytes32"
            },
            {
              "internalType": "bytes32",
              "name": "latestBlockhash",
              "type": "bytes32"
            }
          ],
          "internalType": "struct Types.OutputRootProof",
          "name": "_outputRootProof",
          "type": "tuple"
        },
        {
          "internalType": "bytes[]",
          "name": "_withdrawalProof",
          "type": "bytes[]"
        }
      ],
      "name": "proveWithdrawalTransaction",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "provenWithdrawals",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "outputRoot",
          "type": "bytes32"
        },
        {
          "internalType": "uint128",
          "name": "timestamp",
          "type": "uint128"
        },
        {
          "internalType": "uint128",
          "name": "l2OutputIndex",
          "type": "uint128"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "systemConfig",
      "outputs": [
        {
          "internalType": "contract SystemConfig",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "unpackOnApproveData",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "_minGasLimit",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "_message",
          "type": "bytes"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b50620000236000808080600162000029565b6200022b565b600054600390610100900460ff161580156200004c575060005460ff8083169116105b620000b55760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805461ffff191660ff831617610100908117909155603880546001600160a01b03808a166001600160a01b03199283161790925560328054821661dead1790556035805460368054898616908516179055603780548a861694169390931790925585151592891690930260ff19166001600160a81b0319909116171790556200013f62000188565b6000805461ff001916905560405160ff821681527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050505050565b600054610100900460ff16620001f55760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401620000ac565b60408051606081018252633b9aca0080825260006020830152436001600160401b031691909201819052600160c01b0217600155565b615ed1806200023b6000396000f3fe6080604052600436106101a45760003560e01c80638456cb59116100e1578063a14238e71161008a578063e965084c11610064578063e965084c14610624578063e9e05c42146106b0578063f0498750146106d0578063fc5b5fda146106fb57600080fd5b8063a14238e71461051a578063a35d99df1461054a578063cff0ab961461058357600080fd5b806392a162cf116100bb57806392a162cf1461048d5780639b5f694a146104bb5780639bf62d82146104ed57600080fd5b80638456cb59146104585780638b4c40b0146103015780638c3152e91461046d57600080fd5b8063452a93201161014e57806354fd4d501161012857806354fd4d501461039d5780635c975abb146103f35780636dbffb781461040d578063724c184c1461042d57600080fd5b8063452a9320146103235780634870496f146103505780634d0047ee1461037057600080fd5b806333d7e2bd1161017f57806333d7e2bd146102bf5780633f4ba83a146102ec5780634273ca161461030357600080fd5b80621c2ff61461021557806301ffc9a71461026b5780631d01364c1461029b57600080fd5b36610210576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4e6f7420616c6c6f77206465706f73697420746f204552432d32303a2045544860448201526064015b60405180910390fd5b600080fd5b34801561022157600080fd5b50603554610100900473ffffffffffffffffffffffffffffffffffffffff165b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b34801561027757600080fd5b5061028b61028636600461515e565b61071b565b6040519015158152602001610262565b3480156102a757600080fd5b506102b160395481565b604051908152602001610262565b3480156102cb57600080fd5b506036546102419073ffffffffffffffffffffffffffffffffffffffff1681565b3480156102f857600080fd5b506103016107b4565b005b34801561030f57600080fd5b5061028b61031e3660046151c5565b6108b9565b34801561032f57600080fd5b506037546102419073ffffffffffffffffffffffffffffffffffffffff1681565b34801561035c57600080fd5b5061030161036b36600461541f565b6109cc565b34801561037c57600080fd5b506038546102419073ffffffffffffffffffffffffffffffffffffffff1681565b3480156103a957600080fd5b506103e66040518060400160405280600681526020017f312e31302e30000000000000000000000000000000000000000000000000000081525081565b6040516102629190615571565b3480156103ff57600080fd5b5060355461028b9060ff1681565b34801561041957600080fd5b5061028b610428366004615584565b611001565b34801561043957600080fd5b5060375473ffffffffffffffffffffffffffffffffffffffff16610241565b34801561046457600080fd5b506103016110ba565b34801561047957600080fd5b5061030161048836600461559d565b6111bc565b34801561049957600080fd5b506104ad6104a83660046155da565b611c53565b60405161026292919061560f565b3480156104c757600080fd5b5060355461024190610100900473ffffffffffffffffffffffffffffffffffffffff1681565b3480156104f957600080fd5b506032546102419073ffffffffffffffffffffffffffffffffffffffff1681565b34801561052657600080fd5b5061028b610535366004615584565b60336020526000908152604090205460ff1681565b34801561055657600080fd5b5061056a61056536600461564b565b611c9c565b60405167ffffffffffffffff9091168152602001610262565b34801561058f57600080fd5b506001546105eb906fffffffffffffffffffffffffffffffff81169067ffffffffffffffff7001000000000000000000000000000000008204811691780100000000000000000000000000000000000000000000000090041683565b604080516fffffffffffffffffffffffffffffffff909416845267ffffffffffffffff9283166020850152911690820152606001610262565b34801561063057600080fd5b5061068261063f366004615584565b603460205260009081526040902080546001909101546fffffffffffffffffffffffffffffffff8082169170010000000000000000000000000000000090041683565b604080519384526fffffffffffffffffffffffffffffffff9283166020850152911690820152606001610262565b3480156106bc57600080fd5b506103016106cb366004615674565b611cb5565b3480156106dc57600080fd5b5060365473ffffffffffffffffffffffffffffffffffffffff16610241565b34801561070757600080fd5b506103016107163660046156f1565b611cc3565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f4273ca160000000000000000000000000000000000000000000000000000000014806107ae57507fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b60375473ffffffffffffffffffffffffffffffffffffffff16331461085b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f4f7074696d69736d506f7274616c3a206f6e6c7920677561726469616e20636160448201527f6e20756e706175736500000000000000000000000000000000000000000000006064820152608401610207565b603580547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690556040513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa906020015b60405180910390a1565b60385460009073ffffffffffffffffffffffffffffffffffffffff163314610963576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f6f6e6c7920616363657074206e617469766520746f6b656e20617070726f766560448201527f2063616c6c6261636b00000000000000000000000000000000000000000000006064820152608401610207565b6000806109a585858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611c5392505050565b915091506109be8889888563ffffffff16600086611ed7565b506001979650505050505050565b60355460ff1615610a39576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4f7074696d69736d506f7274616c3a20706175736564000000000000000000006044820152606401610207565b3073ffffffffffffffffffffffffffffffffffffffff16856040015173ffffffffffffffffffffffffffffffffffffffff1603610af8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603f60248201527f4f7074696d69736d506f7274616c3a20796f752063616e6e6f742073656e642060448201527f6d6573736167657320746f2074686520706f7274616c20636f6e7472616374006064820152608401610207565b6035546040517fa25ae55700000000000000000000000000000000000000000000000000000000815260048101869052600091610100900473ffffffffffffffffffffffffffffffffffffffff169063a25ae55790602401606060405180830381865afa158015610b6d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b919190615782565b519050610bab610ba6368690038601866157e7565b6121b1565b8114610c39576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f4f7074696d69736d506f7274616c3a20696e76616c6964206f7574707574207260448201527f6f6f742070726f6f6600000000000000000000000000000000000000000000006064820152608401610207565b6000610c448761220d565b6000818152603460209081526040918290208251606081018452815481526001909101546fffffffffffffffffffffffffffffffff8082169383018490527001000000000000000000000000000000009091041692810192909252919250901580610d5e5750805160355460408084015190517fa25ae5570000000000000000000000000000000000000000000000000000000081526fffffffffffffffffffffffffffffffff909116600482015261010090910473ffffffffffffffffffffffffffffffffffffffff169063a25ae55790602401606060405180830381865afa158015610d36573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d5a9190615782565b5114155b610dea576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603760248201527f4f7074696d69736d506f7274616c3a207769746864726177616c20686173682060448201527f68617320616c7265616479206265656e2070726f76656e0000000000000000006064820152608401610207565b60408051602081018490526000918101829052606001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815282825280516020918201209083018190529250610eb39101604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152828201909152600182527f0100000000000000000000000000000000000000000000000000000000000000602083015290610ea9888a61584d565b8a6040013561223d565b610f3f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f4f7074696d69736d506f7274616c3a20696e76616c696420776974686472617760448201527f616c20696e636c7573696f6e2070726f6f6600000000000000000000000000006064820152608401610207565b604080516060810182528581526fffffffffffffffffffffffffffffffff42811660208084019182528c831684860190815260008981526034835286812095518655925190518416700100000000000000000000000000000000029316929092176001909301929092558b830151908c0151925173ffffffffffffffffffffffffffffffffffffffff918216939091169186917f67a6208cfcc0801d50f6cbe764733f4fddf66ac0b04442061a8a8c0cb6b63f629190a4505050505050505050565b6035546040517fa25ae557000000000000000000000000000000000000000000000000000000008152600481018390526000916107ae9161010090910473ffffffffffffffffffffffffffffffffffffffff169063a25ae55790602401606060405180830381865afa15801561107b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061109f9190615782565b602001516fffffffffffffffffffffffffffffffff16612261565b60375473ffffffffffffffffffffffffffffffffffffffff163314611161576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f4f7074696d69736d506f7274616c3a206f6e6c7920677561726469616e20636160448201527f6e207061757365000000000000000000000000000000000000000000000000006064820152608401610207565b603580547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790556040513381527f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258906020016108af565b60355460ff1615611229576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4f7074696d69736d506f7274616c3a20706175736564000000000000000000006044820152606401610207565b60325473ffffffffffffffffffffffffffffffffffffffff1661dead146112d2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603f60248201527f4f7074696d69736d506f7274616c3a2063616e206f6e6c79207472696767657260448201527f206f6e65207769746864726177616c20706572207472616e73616374696f6e006064820152608401610207565b60006112dd8261220d565b60008181526034602090815260408083208151606081018352815481526001909101546fffffffffffffffffffffffffffffffff808216948301859052700100000000000000000000000000000000909104169181019190915292935090036113c8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f4f7074696d69736d506f7274616c3a207769746864726177616c20686173206e60448201527f6f74206265656e2070726f76656e2079657400000000000000000000000000006064820152608401610207565b603560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663887862726040518163ffffffff1660e01b8152600401602060405180830381865afa158015611435573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061145991906158d1565b81602001516fffffffffffffffffffffffffffffffff161015611524576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604b60248201527f4f7074696d69736d506f7274616c3a207769746864726177616c2074696d657360448201527f74616d70206c657373207468616e204c32204f7261636c65207374617274696e60648201527f672074696d657374616d70000000000000000000000000000000000000000000608482015260a401610207565b61154381602001516fffffffffffffffffffffffffffffffff16612261565b6115f5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604560248201527f4f7074696d69736d506f7274616c3a2070726f76656e2077697468647261776160448201527f6c2066696e616c697a6174696f6e20706572696f6420686173206e6f7420656c60648201527f6170736564000000000000000000000000000000000000000000000000000000608482015260a401610207565b60355460408281015190517fa25ae5570000000000000000000000000000000000000000000000000000000081526fffffffffffffffffffffffffffffffff9091166004820152600091610100900473ffffffffffffffffffffffffffffffffffffffff169063a25ae55790602401606060405180830381865afa158015611681573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116a59190615782565b825181519192501461175f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604960248201527f4f7074696d69736d506f7274616c3a206f757470757420726f6f742070726f7660448201527f656e206973206e6f74207468652073616d652061732063757272656e74206f7560648201527f7470757420726f6f740000000000000000000000000000000000000000000000608482015260a401610207565b61177e81602001516fffffffffffffffffffffffffffffffff16612261565b611830576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604360248201527f4f7074696d69736d506f7274616c3a206f75747075742070726f706f73616c2060448201527f66696e616c697a6174696f6e20706572696f6420686173206e6f7420656c617060648201527f7365640000000000000000000000000000000000000000000000000000000000608482015260a401610207565b60008381526033602052604090205460ff16156118cf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603560248201527f4f7074696d69736d506f7274616c3a207769746864726177616c20686173206160448201527f6c7265616479206265656e2066696e616c697a656400000000000000000000006064820152608401610207565b600083815260336020908152604090912080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790558401516032805473ffffffffffffffffffffffffffffffffffffffff9092167fffffffffffffffffffffffff0000000000000000000000000000000000000000909216919091179055606084015115611b295760385460408581015190517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff80831660248301529092169163095ea7b39190839063dd62ed3e90604401602060405180830381865afa1580156119e0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a0491906158d1565b8760600151611a139190615919565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815273ffffffffffffffffffffffffffffffffffffffff909216600483015260248201526044016020604051808303816000875af1158015611a83573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aa79190615931565b611b0d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f4f7074696d69736d20617070726f76656420746f6b656e206661696c656400006044820152606401610207565b836060015160396000828254611b23919061594e565b90915550505b6000611b448560400151866080015160008860a00151612306565b603280547fffffffffffffffffffffffff00000000000000000000000000000000000000001661dead17905560405190915084907fdb5c7652857aa163daadd670e116628fb42e869d8ac4251ef8971d9e5727df1b90611ba990841515815260200190565b60405180910390a280158015611bbf5750326001145b15611c4c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f4f7074696d69736d506f7274616c3a207769746864726177616c206661696c6560448201527f64000000000000000000000000000000000000000000000000000000000000006064820152608401610207565b5050505050565b60006060600483511015611c7857505060408051602081019091526000815262030d40905b825160208401805160e01c93509060048114611c95576004820192505b5050915091565b6000611ca9826010615965565b6107ae90615208615995565b611c4c338686868686611ed7565b600054600390610100900460ff16158015611ce5575060005460ff8083169116105b611d71576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610207565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001660ff8316176101009081179091556038805473ffffffffffffffffffffffffffffffffffffffff808a167fffffffffffffffffffffffff00000000000000000000000000000000000000009283161790925560328054821661dead1790556035805460368054898616908516179055603780548a86169416939093179092558515159289169093027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00167fffffffffffffffffffffff00000000000000000000000000000000000000000090911617179055611e71612364565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16905560405160ff821681527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050505050565b8260005a90508515611f2057603854611f089073ffffffffffffffffffffffffffffffffffffffff16893089612447565b8560396000828254611f1a9190615919565b90915550505b8315611fcc5773ffffffffffffffffffffffffffffffffffffffff871615611fcc57604080517f08c379a00000000000000000000000000000000000000000000000000000000081526020600482015260248101919091527f4f7074696d69736d506f7274616c3a206d7573742073656e6420746f2061646460448201527f72657373283029207768656e206372656174696e67206120636f6e74726163746064820152608401610207565b611fd68351611c9c565b67ffffffffffffffff168567ffffffffffffffff161015612079576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f4f7074696d69736d506f7274616c3a20676173206c696d697420746f6f20736d60448201527f616c6c00000000000000000000000000000000000000000000000000000000006064820152608401610207565b6201d4c0835111156120e7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f4f7074696d69736d506f7274616c3a206461746120746f6f206c6172676500006044820152606401610207565b33328114612108575033731111000000000000000000000000000000001111015b600087888888886040516020016121239594939291906159c1565b604051602081830303815290604052905060008973ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fb3813568d9991fc951961fcb4c784893574240a28925604d09fc577c55bb7c32846040516121939190615571565b60405180910390a450506121a782826124e2565b5050505050505050565b600081600001518260200151836040015184606001516040516020016121f0949392919093845260208401929092526040830152606082015260800190565b604051602081830303815290604052805190602001209050919050565b80516020808301516040808501516060860151608087015160a088015193516000976121f0979096959101615a26565b60008061224986612805565b905061225781868686612837565b9695505050505050565b6000603560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f4daa2916040518163ffffffff1660e01b8152600401602060405180830381865afa1580156122d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122f491906158d1565b6122fe9083615919565b421192915050565b6000806000612316866000612867565b90508061234c576308c379a06000526020805278185361666543616c6c3a204e6f7420656e6f756768206761736058526064601cfd5b600080855160208701888b5af1979650505050505050565b600054610100900460ff166123fb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610207565b60408051606081018252633b9aca00808252600060208301524367ffffffffffffffff169190920181905278010000000000000000000000000000000000000000000000000217600155565b6040805173ffffffffffffffffffffffffffffffffffffffff85811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd000000000000000000000000000000000000000000000000000000001790526124dc908590612885565b50505050565b600154600090612518907801000000000000000000000000000000000000000000000000900467ffffffffffffffff164361594e565b90506000612524612996565b90506000816020015160ff16826000015163ffffffff166125459190615aac565b9050821561267c5760015460009061257c908390700100000000000000000000000000000000900467ffffffffffffffff16615b14565b90506000836040015160ff16836125939190615b88565b6001546125b39084906fffffffffffffffffffffffffffffffff16615b88565b6125bd9190615aac565b60015490915060009061260e906125e79084906fffffffffffffffffffffffffffffffff16615c44565b866060015163ffffffff168760a001516fffffffffffffffffffffffffffffffff16612a5c565b9050600186111561263d5761263a6125e782876040015160ff1660018a612635919061594e565b612a7b565b90505b6fffffffffffffffffffffffffffffffff16780100000000000000000000000000000000000000000000000067ffffffffffffffff4316021760015550505b600180548691906010906126af908490700100000000000000000000000000000000900467ffffffffffffffff16615995565b92506101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550816000015163ffffffff16600160000160109054906101000a900467ffffffffffffffff1667ffffffffffffffff161315612792576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603e60248201527f5265736f757263654d65746572696e673a2063616e6e6f7420627579206d6f7260448201527f6520676173207468616e20617661696c61626c6520676173206c696d697400006064820152608401610207565b6001546000906127be906fffffffffffffffffffffffffffffffff1667ffffffffffffffff8816615cb8565b905060006127d048633b9aca00612ad0565b6127da9083615cf5565b905060005a6127e9908861594e565b9050808211156121a7576121a7612800828461594e565b612ae7565b6060818051906020012060405160200161282191815260200190565b6040516020818303038152906040529050919050565b600061285e84612848878686612b10565b8051602091820120825192909101919091201490565b95945050505050565b600080603f83619c4001026040850201603f5a021015949350505050565b60006128e7826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff1661358e9092919063ffffffff16565b80519091501561299157808060200190518101906129059190615931565b612991576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610207565b505050565b6040805160c08082018352600080835260208301819052828401819052606083018190526080830181905260a083015260365483517fcc731b020000000000000000000000000000000000000000000000000000000081529351929373ffffffffffffffffffffffffffffffffffffffff9091169263cc731b02926004808401939192918290030181865afa158015612a33573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a579190615d2e565b905090565b6000612a71612a6b858561359d565b836135ad565b90505b9392505050565b6000670de0b6b3a7640000612abc612a938583615aac565b612aa590670de0b6b3a7640000615b14565b612ab785670de0b6b3a7640000615b88565b6135bc565b612ac69086615b88565b612a719190615aac565b600081831015612ae05781612a74565b5090919050565b6000805a90505b825a612afa908361594e565b101561299157612b0982615dcd565b9150612aee565b60606000845111612b7d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f4d65726b6c65547269653a20656d707479206b657900000000000000000000006044820152606401610207565b6000612b88846135ed565b90506000612b95866136d9565b9050600084604051602001612bac91815260200190565b60405160208183030381529060405290506000805b8451811015613505576000858281518110612bde57612bde615e05565b602002602001015190508451831115612c79576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f4d65726b6c65547269653a206b657920696e646578206578636565647320746f60448201527f74616c206b6579206c656e6774680000000000000000000000000000000000006064820152608401610207565b82600003612d325780518051602091820120604051612cc792612ca192910190815260200190565b604051602081830303815290604052858051602091820120825192909101919091201490565b612d2d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4d65726b6c65547269653a20696e76616c696420726f6f7420686173680000006044820152606401610207565b612e89565b805151602011612de85780518051602091820120604051612d5c92612ca192910190815260200190565b612d2d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f4d65726b6c65547269653a20696e76616c6964206c6172676520696e7465726e60448201527f616c2068617368000000000000000000000000000000000000000000000000006064820152608401610207565b805184516020808701919091208251919092012014612e89576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4d65726b6c65547269653a20696e76616c696420696e7465726e616c206e6f6460448201527f65206861736800000000000000000000000000000000000000000000000000006064820152608401610207565b612e9560106001615919565b81602001515103613071578451830361300957612ecf8160200151601081518110612ec257612ec2615e05565b602002602001015161373c565b96506000875111612f62576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603b60248201527f4d65726b6c65547269653a2076616c7565206c656e677468206d75737420626560448201527f2067726561746572207468616e207a65726f20286272616e63682900000000006064820152608401610207565b60018651612f70919061594e565b8214612ffe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f4d65726b6c65547269653a2076616c7565206e6f6465206d757374206265206c60448201527f617374206e6f646520696e2070726f6f6620286272616e6368290000000000006064820152608401610207565b505050505050612a74565b600085848151811061301d5761301d615e05565b602001015160f81c60f81b60f81c9050600082602001518260ff168151811061304857613048615e05565b6020026020010151905061305b8161389c565b9550613068600186615919565b945050506134f2565b60028160200151510361346a576000613089826138c1565b90506000816000815181106130a0576130a0615e05565b016020015160f81c905060006130b7600283615e34565b6130c2906002615e56565b905060006130d3848360ff166138e5565b905060006130e18a896138e5565b905060006130ef838361391b565b905080835114613181576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f4d65726b6c65547269653a20706174682072656d61696e646572206d7573742060448201527f736861726520616c6c206e6962626c65732077697468206b65790000000000006064820152608401610207565b60ff851660021480613196575060ff85166003145b15613385578082511461322b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603d60248201527f4d65726b6c65547269653a206b65792072656d61696e646572206d757374206260448201527f65206964656e746963616c20746f20706174682072656d61696e6465720000006064820152608401610207565b6132458760200151600181518110612ec257612ec2615e05565b9c5060008d51116132d8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603960248201527f4d65726b6c65547269653a2076616c7565206c656e677468206d75737420626560448201527f2067726561746572207468616e207a65726f20286c65616629000000000000006064820152608401610207565b60018c516132e6919061594e565b8814613374576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603860248201527f4d65726b6c65547269653a2076616c7565206e6f6465206d757374206265206c60448201527f617374206e6f646520696e2070726f6f6620286c6561662900000000000000006064820152608401610207565b505050505050505050505050612a74565b60ff85161580613398575060ff85166001145b156133d7576133c487602001516001815181106133b7576133b7615e05565b602002602001015161389c565b99506133d0818a615919565b985061345f565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f4d65726b6c65547269653a2072656365697665642061206e6f6465207769746860448201527f20616e20756e6b6e6f776e2070726566697800000000000000000000000000006064820152608401610207565b5050505050506134f2565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f4d65726b6c65547269653a20726563656976656420616e20756e70617273656160448201527f626c65206e6f64650000000000000000000000000000000000000000000000006064820152608401610207565b50806134fd81615dcd565b915050612bc1565b506040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f4d65726b6c65547269653a2072616e206f7574206f662070726f6f6620656c6560448201527f6d656e74730000000000000000000000000000000000000000000000000000006064820152608401610207565b6060612a7184846000856139cf565b600081831215612ae05781612a74565b6000818312612ae05781612a74565b6000612a74670de0b6b3a7640000836135d486613b65565b6135de9190615b88565b6135e89190615aac565b613da9565b80516060908067ffffffffffffffff81111561360b5761360b615264565b60405190808252806020026020018201604052801561365057816020015b60408051808201909152606080825260208201528152602001906001900390816136295790505b50915060005b818110156136d257604051806040016040528085838151811061367b5761367b615e05565b602002602001015181526020016136aa86848151811061369d5761369d615e05565b6020026020010151613fe8565b8152508382815181106136bf576136bf615e05565b6020908102919091010152600101613656565b5050919050565b606080604051905082518060011b603f8101601f1916830160405280835250602084016020830160005b83811015613731578060011b82018184015160001a8060041c8253600f811660018301535050600101613703565b509295945050505050565b6060600080600061374c85613ffb565b91945092509050600081600181111561376757613767615e79565b146137f4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603960248201527f524c505265616465723a206465636f646564206974656d207479706520666f7260448201527f206279746573206973206e6f7420612064617461206974656d000000000000006064820152608401610207565b6137fe8284615919565b85511461388d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603460248201527f524c505265616465723a2062797465732076616c756520636f6e7461696e732060448201527f616e20696e76616c69642072656d61696e6465720000000000000000000000006064820152608401610207565b61285e85602001518484614a68565b606060208260000151106138b8576138b38261373c565b6107ae565b6107ae82614afc565b60606107ae6138e08360200151600081518110612ec257612ec2615e05565b6136d9565b60608251821061390457506040805160208101909152600081526107ae565b612a748383848651613916919061594e565b614b12565b600080825184511061392e578251613931565b83515b90505b80821080156139b8575082828151811061395057613950615e05565b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191684838151811061398f5761398f615e05565b01602001517fff0000000000000000000000000000000000000000000000000000000000000016145b156139c857816001019150613934565b5092915050565b606082471015613a61576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610207565b73ffffffffffffffffffffffffffffffffffffffff85163b613adf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610207565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051613b089190615ea8565b60006040518083038185875af1925050503d8060008114613b45576040519150601f19603f3d011682016040523d82523d6000602084013e613b4a565b606091505b5091509150613b5a828286614cea565b979650505050505050565b6000808213613bd0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f554e444546494e454400000000000000000000000000000000000000000000006044820152606401610207565b60006060613bdd84614d3d565b03609f8181039490941b90931c6c465772b2bbbb5f824b15207a3081018102606090811d6d0388eaa27412d5aca026815d636e018202811d6d0df99ac502031bf953eff472fdcc018202811d6d13cdffb29d51d99322bdff5f2211018202811d6d0a0f742023def783a307a986912e018202811d6d01920d8043ca89b5239253284e42018202811d6c0b7a86d7375468fac667a0a527016c29508e458543d8aa4df2abee7883018302821d6d0139601a2efabe717e604cbb4894018302821d6d02247f7a7b6594320649aa03aba1018302821d7fffffffffffffffffffffffffffffffffffffff73c0c716a594e00d54e3c4cbc9018302821d7ffffffffffffffffffffffffffffffffffffffdc7b88c420e53a9890533129f6f01830290911d7fffffffffffffffffffffffffffffffffffffff465fda27eb4d63ded474e5f832019091027ffffffffffffffff5f6af8f7b3396644f18e157960000000000000000000000000105711340daa0d5f769dba1915cef59f0815a5506027d0267a36c0c95b3975ab3ee5b203a7614a3f75373f047d803ae7b6687f2b393909302929092017d57115e47018c7177eebf7cd370a3356a1b7863008a5ae8028c72b88642840160ae1d92915050565b60007ffffffffffffffffffffffffffffffffffffffffffffffffdb731c958f34d94c18213613dda57506000919050565b680755bf798b4a1bf1e58212613e4c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f4558505f4f564552464c4f5700000000000000000000000000000000000000006044820152606401610207565b6503782dace9d9604e83901b059150600060606bb17217f7d1cf79abc9e3b39884821b056b80000000000000000000000001901d6bb17217f7d1cf79abc9e3b39881029093037fffffffffffffffffffffffffffffffffffffffdbf3ccf1604d263450f02a550481018102606090811d6d0277594991cfc85f6e2461837cd9018202811d7fffffffffffffffffffffffffffffffffffffe5adedaa1cb095af9e4da10e363c018202811d6db1bbb201f443cf962f1a1d3db4a5018202811d7ffffffffffffffffffffffffffffffffffffd38dc772608b0ae56cce01296c0eb018202811d6e05180bb14799ab47a8a8cb2a527d57016d02d16720577bd19bf614176fe9ea6c10fe68e7fd37d0007b713f765084018402831d9081019084017ffffffffffffffffffffffffffffffffffffffe2c69812cf03b0763fd454a8f7e010290911d6e0587f503bb6ea29d25fcb7401964500190910279d835ebba824c98fb31b83b2ca45c000000000000000000000000010574029d9dc38563c32e5c2f6dc192ee70ef65f9978af30260c3939093039290921c92915050565b60606107ae613ff683614e13565b614efc565b6000806000808460000151116140b9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604a60248201527f524c505265616465723a206c656e677468206f6620616e20524c50206974656d60448201527f206d7573742062652067726561746572207468616e207a65726f20746f20626560648201527f206465636f6461626c6500000000000000000000000000000000000000000000608482015260a401610207565b6020840151805160001a607f81116140de576000600160009450945094505050614a61565b60b781116142ec5760006140f360808361594e565b9050808760000151116141ae576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604e60248201527f524c505265616465723a206c656e677468206f6620636f6e74656e74206d757360448201527f742062652067726561746572207468616e20737472696e67206c656e6774682060648201527f2873686f727420737472696e6729000000000000000000000000000000000000608482015260a401610207565b6001838101517fff0000000000000000000000000000000000000000000000000000000000000016908214158061422757507f80000000000000000000000000000000000000000000000000000000000000007fff00000000000000000000000000000000000000000000000000000000000000821610155b6142d9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604d60248201527f524c505265616465723a20696e76616c6964207072656669782c2073696e676c60448201527f652062797465203c203078383020617265206e6f74207072656669786564202860648201527f73686f727420737472696e672900000000000000000000000000000000000000608482015260a401610207565b5060019550935060009250614a61915050565b60bf811161463a57600061430160b78361594e565b9050808760000151116143bc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152605160248201527f524c505265616465723a206c656e677468206f6620636f6e74656e74206d757360448201527f74206265203e207468616e206c656e677468206f6620737472696e67206c656e60648201527f67746820286c6f6e6720737472696e6729000000000000000000000000000000608482015260a401610207565b60018301517fff0000000000000000000000000000000000000000000000000000000000000016600081900361449a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604a60248201527f524c505265616465723a206c656e677468206f6620636f6e74656e74206d757360448201527f74206e6f74206861766520616e79206c656164696e67207a65726f7320286c6f60648201527f6e6720737472696e672900000000000000000000000000000000000000000000608482015260a401610207565b600184015160088302610100031c6037811161455e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604860248201527f524c505265616465723a206c656e677468206f6620636f6e74656e74206d757360448201527f742062652067726561746572207468616e20353520627974657320286c6f6e6760648201527f20737472696e6729000000000000000000000000000000000000000000000000608482015260a401610207565b6145688184615919565b89511161461d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604c60248201527f524c505265616465723a206c656e677468206f6620636f6e74656e74206d757360448201527f742062652067726561746572207468616e20746f74616c206c656e677468202860648201527f6c6f6e6720737472696e67290000000000000000000000000000000000000000608482015260a401610207565b614628836001615919565b9750955060009450614a619350505050565b60f7811161471b57600061464f60c08361594e565b90508087600001511161470a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604a60248201527f524c505265616465723a206c656e677468206f6620636f6e74656e74206d757360448201527f742062652067726561746572207468616e206c697374206c656e67746820287360648201527f686f7274206c6973742900000000000000000000000000000000000000000000608482015260a401610207565b600195509350849250614a61915050565b600061472860f78361594e565b9050808760000151116147e3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604d60248201527f524c505265616465723a206c656e677468206f6620636f6e74656e74206d757360448201527f74206265203e207468616e206c656e677468206f66206c697374206c656e677460648201527f6820286c6f6e67206c6973742900000000000000000000000000000000000000608482015260a401610207565b60018301517fff000000000000000000000000000000000000000000000000000000000000001660008190036148c1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604860248201527f524c505265616465723a206c656e677468206f6620636f6e74656e74206d757360448201527f74206e6f74206861766520616e79206c656164696e67207a65726f7320286c6f60648201527f6e67206c69737429000000000000000000000000000000000000000000000000608482015260a401610207565b600184015160088302610100031c60378111614985576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604660248201527f524c505265616465723a206c656e677468206f6620636f6e74656e74206d757360448201527f742062652067726561746572207468616e20353520627974657320286c6f6e6760648201527f206c697374290000000000000000000000000000000000000000000000000000608482015260a401610207565b61498f8184615919565b895111614a44576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604a60248201527f524c505265616465723a206c656e677468206f6620636f6e74656e74206d757360448201527f742062652067726561746572207468616e20746f74616c206c656e677468202860648201527f6c6f6e67206c6973742900000000000000000000000000000000000000000000608482015260a401610207565b614a4f836001615919565b9750955060019450614a619350505050565b9193909250565b60608167ffffffffffffffff811115614a8357614a83615264565b6040519080825280601f01601f191660200182016040528015614aad576020820181803683370190505b5090508115612a74576000614ac28486615919565b90506020820160005b84811015614ae3578281015182820152602001614acb565b84811115614af2576000858301525b5050509392505050565b60606107ae826020015160008460000151614a68565b60608182601f011015614b81576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f736c6963655f6f766572666c6f770000000000000000000000000000000000006044820152606401610207565b828284011015614bed576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f736c6963655f6f766572666c6f770000000000000000000000000000000000006044820152606401610207565b81830184511015614c5a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f736c6963655f6f75744f66426f756e64730000000000000000000000000000006044820152606401610207565b606082158015614c795760405191506000825260208201604052614ce1565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015614cb2578051835260209283019201614c9a565b5050858452601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016604052505b50949350505050565b60608315614cf9575081612a74565b825115614d095782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102079190615571565b6000808211614da8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f554e444546494e454400000000000000000000000000000000000000000000006044820152606401610207565b5060016fffffffffffffffffffffffffffffffff821160071b82811c67ffffffffffffffff1060061b1782811c63ffffffff1060051b1782811c61ffff1060041b1782811c60ff10600390811b90911783811c600f1060021b1783811c909110821b1791821c111790565b60408051808201909152600080825260208201526000825111614ede576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604a60248201527f524c505265616465723a206c656e677468206f6620616e20524c50206974656d60448201527f206d7573742062652067726561746572207468616e207a65726f20746f20626560648201527f206465636f6461626c6500000000000000000000000000000000000000000000608482015260a401610207565b50604080518082019091528151815260209182019181019190915290565b60606000806000614f0c85613ffb565b919450925090506001816001811115614f2757614f27615e79565b14614fb4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603860248201527f524c505265616465723a206465636f646564206974656d207479706520666f7260448201527f206c697374206973206e6f742061206c697374206974656d00000000000000006064820152608401610207565b8451614fc08385615919565b1461504d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f524c505265616465723a206c697374206974656d2068617320616e20696e766160448201527f6c696420646174612072656d61696e64657200000000000000000000000000006064820152608401610207565b604080516020808252610420820190925290816020015b60408051808201909152600080825260208201528152602001906001900390816150645790505093506000835b8651811015615152576000806150d76040518060400160405280858c600001516150bb919061594e565b8152602001858c602001516150d09190615919565b9052613ffb565b5091509150604051806040016040528083836150f39190615919565b8152602001848b602001516151089190615919565b81525088858151811061511d5761511d615e05565b6020908102919091010152615133600185615919565b935061513f8183615919565b6151499084615919565b92505050615091565b50845250919392505050565b60006020828403121561517057600080fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114612a7457600080fd5b73ffffffffffffffffffffffffffffffffffffffff811681146151c257600080fd5b50565b6000806000806000608086880312156151dd57600080fd5b85356151e8816151a0565b945060208601356151f8816151a0565b935060408601359250606086013567ffffffffffffffff8082111561521c57600080fd5b818801915088601f83011261523057600080fd5b81358181111561523f57600080fd5b89602082850101111561525157600080fd5b9699959850939650602001949392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156152da576152da615264565b604052919050565b600082601f8301126152f357600080fd5b813567ffffffffffffffff81111561530d5761530d615264565b61533e60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601615293565b81815284602083860101111561535357600080fd5b816020850160208301376000918101602001919091529392505050565b600060c0828403121561538257600080fd5b60405160c0810167ffffffffffffffff82821081831117156153a6576153a6615264565b8160405282935084358352602085013591506153c1826151a0565b816020840152604085013591506153d7826151a0565b816040840152606085013560608401526080850135608084015260a085013591508082111561540557600080fd5b50615412858286016152e2565b60a0830152505092915050565b600080600080600085870360e081121561543857600080fd5b863567ffffffffffffffff8082111561545057600080fd5b61545c8a838b01615370565b97506020890135965060807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08401121561549557600080fd5b60408901955060c08901359250808311156154af57600080fd5b828901925089601f8401126154c357600080fd5b82359150808211156154d457600080fd5b508860208260051b84010111156154ea57600080fd5b959894975092955050506020019190565b60005b838110156155165781810151838201526020016154fe565b838111156124dc5750506000910152565b6000815180845261553f8160208601602086016154fb565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081526000612a746020830184615527565b60006020828403121561559657600080fd5b5035919050565b6000602082840312156155af57600080fd5b813567ffffffffffffffff8111156155c657600080fd5b6155d284828501615370565b949350505050565b6000602082840312156155ec57600080fd5b813567ffffffffffffffff81111561560357600080fd5b6155d2848285016152e2565b63ffffffff83168152604060208201526000612a716040830184615527565b803567ffffffffffffffff8116811461564657600080fd5b919050565b60006020828403121561565d57600080fd5b612a748261562e565b80151581146151c257600080fd5b600080600080600060a0868803121561568c57600080fd5b8535615697816151a0565b9450602086013593506156ac6040870161562e565b925060608601356156bc81615666565b9150608086013567ffffffffffffffff8111156156d857600080fd5b6156e4888289016152e2565b9150509295509295909350565b600080600080600060a0868803121561570957600080fd5b8535615714816151a0565b94506020860135615724816151a0565b93506040860135615734816151a0565b92506060860135615744816151a0565b9150608086013561575481615666565b809150509295509295909350565b80516fffffffffffffffffffffffffffffffff8116811461564657600080fd5b60006060828403121561579457600080fd5b6040516060810181811067ffffffffffffffff821117156157b7576157b7615264565b604052825181526157ca60208401615762565b60208201526157db60408401615762565b60408201529392505050565b6000608082840312156157f957600080fd5b6040516080810181811067ffffffffffffffff8211171561581c5761581c615264565b8060405250823581526020830135602082015260408301356040820152606083013560608201528091505092915050565b600067ffffffffffffffff8084111561586857615868615264565b8360051b6020615879818301615293565b86815291850191818101903684111561589157600080fd5b865b848110156158c5578035868111156158ab5760008081fd5b6158b736828b016152e2565b845250918301918301615893565b50979650505050505050565b6000602082840312156158e357600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000821982111561592c5761592c6158ea565b500190565b60006020828403121561594357600080fd5b8151612a7481615666565b600082821015615960576159606158ea565b500390565b600067ffffffffffffffff8083168185168183048111821515161561598c5761598c6158ea565b02949350505050565b600067ffffffffffffffff8083168185168083038211156159b8576159b86158ea565b01949350505050565b8581528460208201527fffffffffffffffff0000000000000000000000000000000000000000000000008460c01b16604082015282151560f81b604882015260008251615a158160498501602087016154fb565b919091016049019695505050505050565b868152600073ffffffffffffffffffffffffffffffffffffffff808816602084015280871660408401525084606083015283608083015260c060a0830152615a7160c0830184615527565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600082615abb57615abb615a7d565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83147f800000000000000000000000000000000000000000000000000000000000000083141615615b0f57615b0f6158ea565b500590565b6000808312837f800000000000000000000000000000000000000000000000000000000000000001831281151615615b4e57615b4e6158ea565b837f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff018313811615615b8257615b826158ea565b50500390565b60007f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600084136000841385830485118282161615615bc957615bc96158ea565b7f80000000000000000000000000000000000000000000000000000000000000006000871286820588128184161615615c0457615c046158ea565b60008712925087820587128484161615615c2057615c206158ea565b87850587128184161615615c3657615c366158ea565b505050929093029392505050565b6000808212827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03841381151615615c7e57615c7e6158ea565b827f8000000000000000000000000000000000000000000000000000000000000000038412811615615cb257615cb26158ea565b50500190565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615615cf057615cf06158ea565b500290565b600082615d0457615d04615a7d565b500490565b805163ffffffff8116811461564657600080fd5b805160ff8116811461564657600080fd5b600060c08284031215615d4057600080fd5b60405160c0810181811067ffffffffffffffff82111715615d6357615d63615264565b604052615d6f83615d09565b8152615d7d60208401615d1d565b6020820152615d8e60408401615d1d565b6040820152615d9f60608401615d09565b6060820152615db060808401615d09565b6080820152615dc160a08401615762565b60a08201529392505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203615dfe57615dfe6158ea565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060ff831680615e4757615e47615a7d565b8060ff84160691505092915050565b600060ff821660ff841680821015615e7057615e706158ea565b90039392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60008251615eba8184602087016154fb565b919091019291505056fea164736f6c634300080f000a",
    "sourceMap": "1338:23022:79:-:0;;;5355:264;;;;;;;;;-1:-1:-1;5379:233:79;5433:1;;;;5597:4;5379:10;:233::i;:::-;1338:23022;;5909:510;4396:13:26;;2762:1:123;;4396:13:26;;;;;4395:14;:40;;;;-1:-1:-1;4413:12:26;;:22;;;;:12;;:22;4395:40;4387:99;;;;-1:-1:-1;;;4387:99:26;;216:2:156;4387:99:26;;;198:21:156;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:156;;;338:44;399:19;;4387:99:26;;;;;;;;;4496:12;:22;;-1:-1:-1;;4528:20:26;4496:22;;;4528:20;4496:22;4528:20;;;;;;6165:18:79::1;:40:::0;;-1:-1:-1;;;;;6165:40:79;;::::1;-1:-1:-1::0;;;;;;6165:40:79;;::::1;;::::0;;;6215:8:::1;:38:::0;;;::::1;1337:42:123;6215:38:79;::::0;;6263:8:::1;:20:::0;;6293:12:::1;:28:::0;;;;::::1;::::0;;::::1;;::::0;;6331:8:::1;:20:::0;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;6361:16;::::1;;6263:20:::0;;::::1;::::0;;::::1;-1:-1:-1::0;;6361:16:79;-1:-1:-1;;;;;;6361:16:79;;;;::::1;::::0;;6387:25:::1;:23;:25::i;:::-;4585:5:26::0;4569:21;;-1:-1:-1;;4569:21:26;;;4605:20;;601:4:156;589:17;;571:36;;4605:20:26;;559:2:156;544:18;4605:20:26;;;;;;;5909:510:79;;;;;;:::o;8362:180:81:-;4888:13:26;;;;;;;4880:69;;;;-1:-1:-1;;;4880:69:26;;820:2:156;4880:69:26;;;802:21:156;859:2;839:18;;;832:30;898:34;878:18;;;871:62;-1:-1:-1;;;949:18:156;;;942:41;1000:19;;4880:69:26;618:407:156;4880:69:26;8442:93:81::1;::::0;;::::1;::::0;::::1;::::0;;8472:6:::1;8442:93:::0;;;-1:-1:-1;8442:93:81::1;::::0;::::1;::::0;8519:12:::1;-1:-1:-1::0;;;;;8442:93:81::1;::::0;;;;;;;-1:-1:-1;;;8433:102:81::1;;:6;:102:::0;8362:180::o;618:407:156:-;1338:23022:79;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106101a45760003560e01c80638456cb59116100e1578063a14238e71161008a578063e965084c11610064578063e965084c14610624578063e9e05c42146106b0578063f0498750146106d0578063fc5b5fda146106fb57600080fd5b8063a14238e71461051a578063a35d99df1461054a578063cff0ab961461058357600080fd5b806392a162cf116100bb57806392a162cf1461048d5780639b5f694a146104bb5780639bf62d82146104ed57600080fd5b80638456cb59146104585780638b4c40b0146103015780638c3152e91461046d57600080fd5b8063452a93201161014e57806354fd4d501161012857806354fd4d501461039d5780635c975abb146103f35780636dbffb781461040d578063724c184c1461042d57600080fd5b8063452a9320146103235780634870496f146103505780634d0047ee1461037057600080fd5b806333d7e2bd1161017f57806333d7e2bd146102bf5780633f4ba83a146102ec5780634273ca161461030357600080fd5b80621c2ff61461021557806301ffc9a71461026b5780631d01364c1461029b57600080fd5b36610210576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820181905260248201527f4e6f7420616c6c6f77206465706f73697420746f204552432d32303a2045544860448201526064015b60405180910390fd5b600080fd5b34801561022157600080fd5b50603554610100900473ffffffffffffffffffffffffffffffffffffffff165b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b34801561027757600080fd5b5061028b61028636600461515e565b61071b565b6040519015158152602001610262565b3480156102a757600080fd5b506102b160395481565b604051908152602001610262565b3480156102cb57600080fd5b506036546102419073ffffffffffffffffffffffffffffffffffffffff1681565b3480156102f857600080fd5b506103016107b4565b005b34801561030f57600080fd5b5061028b61031e3660046151c5565b6108b9565b34801561032f57600080fd5b506037546102419073ffffffffffffffffffffffffffffffffffffffff1681565b34801561035c57600080fd5b5061030161036b36600461541f565b6109cc565b34801561037c57600080fd5b506038546102419073ffffffffffffffffffffffffffffffffffffffff1681565b3480156103a957600080fd5b506103e66040518060400160405280600681526020017f312e31302e30000000000000000000000000000000000000000000000000000081525081565b6040516102629190615571565b3480156103ff57600080fd5b5060355461028b9060ff1681565b34801561041957600080fd5b5061028b610428366004615584565b611001565b34801561043957600080fd5b5060375473ffffffffffffffffffffffffffffffffffffffff16610241565b34801561046457600080fd5b506103016110ba565b34801561047957600080fd5b5061030161048836600461559d565b6111bc565b34801561049957600080fd5b506104ad6104a83660046155da565b611c53565b60405161026292919061560f565b3480156104c757600080fd5b5060355461024190610100900473ffffffffffffffffffffffffffffffffffffffff1681565b3480156104f957600080fd5b506032546102419073ffffffffffffffffffffffffffffffffffffffff1681565b34801561052657600080fd5b5061028b610535366004615584565b60336020526000908152604090205460ff1681565b34801561055657600080fd5b5061056a61056536600461564b565b611c9c565b60405167ffffffffffffffff9091168152602001610262565b34801561058f57600080fd5b506001546105eb906fffffffffffffffffffffffffffffffff81169067ffffffffffffffff7001000000000000000000000000000000008204811691780100000000000000000000000000000000000000000000000090041683565b604080516fffffffffffffffffffffffffffffffff909416845267ffffffffffffffff9283166020850152911690820152606001610262565b34801561063057600080fd5b5061068261063f366004615584565b603460205260009081526040902080546001909101546fffffffffffffffffffffffffffffffff8082169170010000000000000000000000000000000090041683565b604080519384526fffffffffffffffffffffffffffffffff9283166020850152911690820152606001610262565b3480156106bc57600080fd5b506103016106cb366004615674565b611cb5565b3480156106dc57600080fd5b5060365473ffffffffffffffffffffffffffffffffffffffff16610241565b34801561070757600080fd5b506103016107163660046156f1565b611cc3565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f4273ca160000000000000000000000000000000000000000000000000000000014806107ae57507fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b60375473ffffffffffffffffffffffffffffffffffffffff16331461085b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f4f7074696d69736d506f7274616c3a206f6e6c7920677561726469616e20636160448201527f6e20756e706175736500000000000000000000000000000000000000000000006064820152608401610207565b603580547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001690556040513381527f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa906020015b60405180910390a1565b60385460009073ffffffffffffffffffffffffffffffffffffffff163314610963576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f6f6e6c7920616363657074206e617469766520746f6b656e20617070726f766560448201527f2063616c6c6261636b00000000000000000000000000000000000000000000006064820152608401610207565b6000806109a585858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611c5392505050565b915091506109be8889888563ffffffff16600086611ed7565b506001979650505050505050565b60355460ff1615610a39576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4f7074696d69736d506f7274616c3a20706175736564000000000000000000006044820152606401610207565b3073ffffffffffffffffffffffffffffffffffffffff16856040015173ffffffffffffffffffffffffffffffffffffffff1603610af8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603f60248201527f4f7074696d69736d506f7274616c3a20796f752063616e6e6f742073656e642060448201527f6d6573736167657320746f2074686520706f7274616c20636f6e7472616374006064820152608401610207565b6035546040517fa25ae55700000000000000000000000000000000000000000000000000000000815260048101869052600091610100900473ffffffffffffffffffffffffffffffffffffffff169063a25ae55790602401606060405180830381865afa158015610b6d573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b919190615782565b519050610bab610ba6368690038601866157e7565b6121b1565b8114610c39576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f4f7074696d69736d506f7274616c3a20696e76616c6964206f7574707574207260448201527f6f6f742070726f6f6600000000000000000000000000000000000000000000006064820152608401610207565b6000610c448761220d565b6000818152603460209081526040918290208251606081018452815481526001909101546fffffffffffffffffffffffffffffffff8082169383018490527001000000000000000000000000000000009091041692810192909252919250901580610d5e5750805160355460408084015190517fa25ae5570000000000000000000000000000000000000000000000000000000081526fffffffffffffffffffffffffffffffff909116600482015261010090910473ffffffffffffffffffffffffffffffffffffffff169063a25ae55790602401606060405180830381865afa158015610d36573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d5a9190615782565b5114155b610dea576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603760248201527f4f7074696d69736d506f7274616c3a207769746864726177616c20686173682060448201527f68617320616c7265616479206265656e2070726f76656e0000000000000000006064820152608401610207565b60408051602081018490526000918101829052606001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815282825280516020918201209083018190529250610eb39101604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152828201909152600182527f0100000000000000000000000000000000000000000000000000000000000000602083015290610ea9888a61584d565b8a6040013561223d565b610f3f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f4f7074696d69736d506f7274616c3a20696e76616c696420776974686472617760448201527f616c20696e636c7573696f6e2070726f6f6600000000000000000000000000006064820152608401610207565b604080516060810182528581526fffffffffffffffffffffffffffffffff42811660208084019182528c831684860190815260008981526034835286812095518655925190518416700100000000000000000000000000000000029316929092176001909301929092558b830151908c0151925173ffffffffffffffffffffffffffffffffffffffff918216939091169186917f67a6208cfcc0801d50f6cbe764733f4fddf66ac0b04442061a8a8c0cb6b63f629190a4505050505050505050565b6035546040517fa25ae557000000000000000000000000000000000000000000000000000000008152600481018390526000916107ae9161010090910473ffffffffffffffffffffffffffffffffffffffff169063a25ae55790602401606060405180830381865afa15801561107b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061109f9190615782565b602001516fffffffffffffffffffffffffffffffff16612261565b60375473ffffffffffffffffffffffffffffffffffffffff163314611161576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f4f7074696d69736d506f7274616c3a206f6e6c7920677561726469616e20636160448201527f6e207061757365000000000000000000000000000000000000000000000000006064820152608401610207565b603580547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790556040513381527f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258906020016108af565b60355460ff1615611229576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601660248201527f4f7074696d69736d506f7274616c3a20706175736564000000000000000000006044820152606401610207565b60325473ffffffffffffffffffffffffffffffffffffffff1661dead146112d2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603f60248201527f4f7074696d69736d506f7274616c3a2063616e206f6e6c79207472696767657260448201527f206f6e65207769746864726177616c20706572207472616e73616374696f6e006064820152608401610207565b60006112dd8261220d565b60008181526034602090815260408083208151606081018352815481526001909101546fffffffffffffffffffffffffffffffff808216948301859052700100000000000000000000000000000000909104169181019190915292935090036113c8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f4f7074696d69736d506f7274616c3a207769746864726177616c20686173206e60448201527f6f74206265656e2070726f76656e2079657400000000000000000000000000006064820152608401610207565b603560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663887862726040518163ffffffff1660e01b8152600401602060405180830381865afa158015611435573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061145991906158d1565b81602001516fffffffffffffffffffffffffffffffff161015611524576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604b60248201527f4f7074696d69736d506f7274616c3a207769746864726177616c2074696d657360448201527f74616d70206c657373207468616e204c32204f7261636c65207374617274696e60648201527f672074696d657374616d70000000000000000000000000000000000000000000608482015260a401610207565b61154381602001516fffffffffffffffffffffffffffffffff16612261565b6115f5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604560248201527f4f7074696d69736d506f7274616c3a2070726f76656e2077697468647261776160448201527f6c2066696e616c697a6174696f6e20706572696f6420686173206e6f7420656c60648201527f6170736564000000000000000000000000000000000000000000000000000000608482015260a401610207565b60355460408281015190517fa25ae5570000000000000000000000000000000000000000000000000000000081526fffffffffffffffffffffffffffffffff9091166004820152600091610100900473ffffffffffffffffffffffffffffffffffffffff169063a25ae55790602401606060405180830381865afa158015611681573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116a59190615782565b825181519192501461175f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604960248201527f4f7074696d69736d506f7274616c3a206f757470757420726f6f742070726f7660448201527f656e206973206e6f74207468652073616d652061732063757272656e74206f7560648201527f7470757420726f6f740000000000000000000000000000000000000000000000608482015260a401610207565b61177e81602001516fffffffffffffffffffffffffffffffff16612261565b611830576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604360248201527f4f7074696d69736d506f7274616c3a206f75747075742070726f706f73616c2060448201527f66696e616c697a6174696f6e20706572696f6420686173206e6f7420656c617060648201527f7365640000000000000000000000000000000000000000000000000000000000608482015260a401610207565b60008381526033602052604090205460ff16156118cf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603560248201527f4f7074696d69736d506f7274616c3a207769746864726177616c20686173206160448201527f6c7265616479206265656e2066696e616c697a656400000000000000000000006064820152608401610207565b600083815260336020908152604090912080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001660011790558401516032805473ffffffffffffffffffffffffffffffffffffffff9092167fffffffffffffffffffffffff0000000000000000000000000000000000000000909216919091179055606084015115611b295760385460408581015190517fdd62ed3e00000000000000000000000000000000000000000000000000000000815230600482015273ffffffffffffffffffffffffffffffffffffffff80831660248301529092169163095ea7b39190839063dd62ed3e90604401602060405180830381865afa1580156119e0573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a0491906158d1565b8760600151611a139190615919565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e085901b16815273ffffffffffffffffffffffffffffffffffffffff909216600483015260248201526044016020604051808303816000875af1158015611a83573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611aa79190615931565b611b0d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f4f7074696d69736d20617070726f76656420746f6b656e206661696c656400006044820152606401610207565b836060015160396000828254611b23919061594e565b90915550505b6000611b448560400151866080015160008860a00151612306565b603280547fffffffffffffffffffffffff00000000000000000000000000000000000000001661dead17905560405190915084907fdb5c7652857aa163daadd670e116628fb42e869d8ac4251ef8971d9e5727df1b90611ba990841515815260200190565b60405180910390a280158015611bbf5750326001145b15611c4c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602160248201527f4f7074696d69736d506f7274616c3a207769746864726177616c206661696c6560448201527f64000000000000000000000000000000000000000000000000000000000000006064820152608401610207565b5050505050565b60006060600483511015611c7857505060408051602081019091526000815262030d40905b825160208401805160e01c93509060048114611c95576004820192505b5050915091565b6000611ca9826010615965565b6107ae90615208615995565b611c4c338686868686611ed7565b600054600390610100900460ff16158015611ce5575060005460ff8083169116105b611d71576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a65640000000000000000000000000000000000006064820152608401610207565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001660ff8316176101009081179091556038805473ffffffffffffffffffffffffffffffffffffffff808a167fffffffffffffffffffffffff00000000000000000000000000000000000000009283161790925560328054821661dead1790556035805460368054898616908516179055603780548a86169416939093179092558515159289169093027fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00167fffffffffffffffffffffff00000000000000000000000000000000000000000090911617179055611e71612364565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16905560405160ff821681527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050505050565b8260005a90508515611f2057603854611f089073ffffffffffffffffffffffffffffffffffffffff16893089612447565b8560396000828254611f1a9190615919565b90915550505b8315611fcc5773ffffffffffffffffffffffffffffffffffffffff871615611fcc57604080517f08c379a00000000000000000000000000000000000000000000000000000000081526020600482015260248101919091527f4f7074696d69736d506f7274616c3a206d7573742073656e6420746f2061646460448201527f72657373283029207768656e206372656174696e67206120636f6e74726163746064820152608401610207565b611fd68351611c9c565b67ffffffffffffffff168567ffffffffffffffff161015612079576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f4f7074696d69736d506f7274616c3a20676173206c696d697420746f6f20736d60448201527f616c6c00000000000000000000000000000000000000000000000000000000006064820152608401610207565b6201d4c0835111156120e7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601e60248201527f4f7074696d69736d506f7274616c3a206461746120746f6f206c6172676500006044820152606401610207565b33328114612108575033731111000000000000000000000000000000001111015b600087888888886040516020016121239594939291906159c1565b604051602081830303815290604052905060008973ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff167fb3813568d9991fc951961fcb4c784893574240a28925604d09fc577c55bb7c32846040516121939190615571565b60405180910390a450506121a782826124e2565b5050505050505050565b600081600001518260200151836040015184606001516040516020016121f0949392919093845260208401929092526040830152606082015260800190565b604051602081830303815290604052805190602001209050919050565b80516020808301516040808501516060860151608087015160a088015193516000976121f0979096959101615a26565b60008061224986612805565b905061225781868686612837565b9695505050505050565b6000603560019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f4daa2916040518163ffffffff1660e01b8152600401602060405180830381865afa1580156122d0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122f491906158d1565b6122fe9083615919565b421192915050565b6000806000612316866000612867565b90508061234c576308c379a06000526020805278185361666543616c6c3a204e6f7420656e6f756768206761736058526064601cfd5b600080855160208701888b5af1979650505050505050565b600054610100900460ff166123fb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e670000000000000000000000000000000000000000006064820152608401610207565b60408051606081018252633b9aca00808252600060208301524367ffffffffffffffff169190920181905278010000000000000000000000000000000000000000000000000217600155565b6040805173ffffffffffffffffffffffffffffffffffffffff85811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd000000000000000000000000000000000000000000000000000000001790526124dc908590612885565b50505050565b600154600090612518907801000000000000000000000000000000000000000000000000900467ffffffffffffffff164361594e565b90506000612524612996565b90506000816020015160ff16826000015163ffffffff166125459190615aac565b9050821561267c5760015460009061257c908390700100000000000000000000000000000000900467ffffffffffffffff16615b14565b90506000836040015160ff16836125939190615b88565b6001546125b39084906fffffffffffffffffffffffffffffffff16615b88565b6125bd9190615aac565b60015490915060009061260e906125e79084906fffffffffffffffffffffffffffffffff16615c44565b866060015163ffffffff168760a001516fffffffffffffffffffffffffffffffff16612a5c565b9050600186111561263d5761263a6125e782876040015160ff1660018a612635919061594e565b612a7b565b90505b6fffffffffffffffffffffffffffffffff16780100000000000000000000000000000000000000000000000067ffffffffffffffff4316021760015550505b600180548691906010906126af908490700100000000000000000000000000000000900467ffffffffffffffff16615995565b92506101000a81548167ffffffffffffffff021916908367ffffffffffffffff160217905550816000015163ffffffff16600160000160109054906101000a900467ffffffffffffffff1667ffffffffffffffff161315612792576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603e60248201527f5265736f757263654d65746572696e673a2063616e6e6f7420627579206d6f7260448201527f6520676173207468616e20617661696c61626c6520676173206c696d697400006064820152608401610207565b6001546000906127be906fffffffffffffffffffffffffffffffff1667ffffffffffffffff8816615cb8565b905060006127d048633b9aca00612ad0565b6127da9083615cf5565b905060005a6127e9908861594e565b9050808211156121a7576121a7612800828461594e565b612ae7565b6060818051906020012060405160200161282191815260200190565b6040516020818303038152906040529050919050565b600061285e84612848878686612b10565b8051602091820120825192909101919091201490565b95945050505050565b600080603f83619c4001026040850201603f5a021015949350505050565b60006128e7826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff1661358e9092919063ffffffff16565b80519091501561299157808060200190518101906129059190615931565b612991576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f742073756363656564000000000000000000000000000000000000000000006064820152608401610207565b505050565b6040805160c08082018352600080835260208301819052828401819052606083018190526080830181905260a083015260365483517fcc731b020000000000000000000000000000000000000000000000000000000081529351929373ffffffffffffffffffffffffffffffffffffffff9091169263cc731b02926004808401939192918290030181865afa158015612a33573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612a579190615d2e565b905090565b6000612a71612a6b858561359d565b836135ad565b90505b9392505050565b6000670de0b6b3a7640000612abc612a938583615aac565b612aa590670de0b6b3a7640000615b14565b612ab785670de0b6b3a7640000615b88565b6135bc565b612ac69086615b88565b612a719190615aac565b600081831015612ae05781612a74565b5090919050565b6000805a90505b825a612afa908361594e565b101561299157612b0982615dcd565b9150612aee565b60606000845111612b7d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601560248201527f4d65726b6c65547269653a20656d707479206b657900000000000000000000006044820152606401610207565b6000612b88846135ed565b90506000612b95866136d9565b9050600084604051602001612bac91815260200190565b60405160208183030381529060405290506000805b8451811015613505576000858281518110612bde57612bde615e05565b602002602001015190508451831115612c79576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f4d65726b6c65547269653a206b657920696e646578206578636565647320746f60448201527f74616c206b6579206c656e6774680000000000000000000000000000000000006064820152608401610207565b82600003612d325780518051602091820120604051612cc792612ca192910190815260200190565b604051602081830303815290604052858051602091820120825192909101919091201490565b612d2d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f4d65726b6c65547269653a20696e76616c696420726f6f7420686173680000006044820152606401610207565b612e89565b805151602011612de85780518051602091820120604051612d5c92612ca192910190815260200190565b612d2d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602760248201527f4d65726b6c65547269653a20696e76616c6964206c6172676520696e7465726e60448201527f616c2068617368000000000000000000000000000000000000000000000000006064820152608401610207565b805184516020808701919091208251919092012014612e89576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f4d65726b6c65547269653a20696e76616c696420696e7465726e616c206e6f6460448201527f65206861736800000000000000000000000000000000000000000000000000006064820152608401610207565b612e9560106001615919565b81602001515103613071578451830361300957612ecf8160200151601081518110612ec257612ec2615e05565b602002602001015161373c565b96506000875111612f62576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603b60248201527f4d65726b6c65547269653a2076616c7565206c656e677468206d75737420626560448201527f2067726561746572207468616e207a65726f20286272616e63682900000000006064820152608401610207565b60018651612f70919061594e565b8214612ffe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f4d65726b6c65547269653a2076616c7565206e6f6465206d757374206265206c60448201527f617374206e6f646520696e2070726f6f6620286272616e6368290000000000006064820152608401610207565b505050505050612a74565b600085848151811061301d5761301d615e05565b602001015160f81c60f81b60f81c9050600082602001518260ff168151811061304857613048615e05565b6020026020010151905061305b8161389c565b9550613068600186615919565b945050506134f2565b60028160200151510361346a576000613089826138c1565b90506000816000815181106130a0576130a0615e05565b016020015160f81c905060006130b7600283615e34565b6130c2906002615e56565b905060006130d3848360ff166138e5565b905060006130e18a896138e5565b905060006130ef838361391b565b905080835114613181576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f4d65726b6c65547269653a20706174682072656d61696e646572206d7573742060448201527f736861726520616c6c206e6962626c65732077697468206b65790000000000006064820152608401610207565b60ff851660021480613196575060ff85166003145b15613385578082511461322b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603d60248201527f4d65726b6c65547269653a206b65792072656d61696e646572206d757374206260448201527f65206964656e746963616c20746f20706174682072656d61696e6465720000006064820152608401610207565b6132458760200151600181518110612ec257612ec2615e05565b9c5060008d51116132d8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603960248201527f4d65726b6c65547269653a2076616c7565206c656e677468206d75737420626560448201527f2067726561746572207468616e207a65726f20286c65616629000000000000006064820152608401610207565b60018c516132e6919061594e565b8814613374576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603860248201527f4d65726b6c65547269653a2076616c7565206e6f6465206d757374206265206c60448201527f617374206e6f646520696e2070726f6f6620286c6561662900000000000000006064820152608401610207565b505050505050505050505050612a74565b60ff85161580613398575060ff85166001145b156133d7576133c487602001516001815181106133b7576133b7615e05565b602002602001015161389c565b99506133d0818a615919565b985061345f565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f4d65726b6c65547269653a2072656365697665642061206e6f6465207769746860448201527f20616e20756e6b6e6f776e2070726566697800000000000000000000000000006064820152608401610207565b5050505050506134f2565b6040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f4d65726b6c65547269653a20726563656976656420616e20756e70617273656160448201527f626c65206e6f64650000000000000000000000000000000000000000000000006064820152608401610207565b50806134fd81615dcd565b915050612bc1565b506040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602560248201527f4d65726b6c65547269653a2072616e206f7574206f662070726f6f6620656c6560448201527f6d656e74730000000000000000000000000000000000000000000000000000006064820152608401610207565b6060612a7184846000856139cf565b600081831215612ae05781612a74565b6000818312612ae05781612a74565b6000612a74670de0b6b3a7640000836135d486613b65565b6135de9190615b88565b6135e89190615aac565b613da9565b80516060908067ffffffffffffffff81111561360b5761360b615264565b60405190808252806020026020018201604052801561365057816020015b60408051808201909152606080825260208201528152602001906001900390816136295790505b50915060005b818110156136d257604051806040016040528085838151811061367b5761367b615e05565b602002602001015181526020016136aa86848151811061369d5761369d615e05565b6020026020010151613fe8565b8152508382815181106136bf576136bf615e05565b6020908102919091010152600101613656565b5050919050565b606080604051905082518060011b603f8101601f1916830160405280835250602084016020830160005b83811015613731578060011b82018184015160001a8060041c8253600f811660018301535050600101613703565b509295945050505050565b6060600080600061374c85613ffb565b91945092509050600081600181111561376757613767615e79565b146137f4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603960248201527f524c505265616465723a206465636f646564206974656d207479706520666f7260448201527f206279746573206973206e6f7420612064617461206974656d000000000000006064820152608401610207565b6137fe8284615919565b85511461388d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603460248201527f524c505265616465723a2062797465732076616c756520636f6e7461696e732060448201527f616e20696e76616c69642072656d61696e6465720000000000000000000000006064820152608401610207565b61285e85602001518484614a68565b606060208260000151106138b8576138b38261373c565b6107ae565b6107ae82614afc565b60606107ae6138e08360200151600081518110612ec257612ec2615e05565b6136d9565b60608251821061390457506040805160208101909152600081526107ae565b612a748383848651613916919061594e565b614b12565b600080825184511061392e578251613931565b83515b90505b80821080156139b8575082828151811061395057613950615e05565b602001015160f81c60f81b7effffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff191684838151811061398f5761398f615e05565b01602001517fff0000000000000000000000000000000000000000000000000000000000000016145b156139c857816001019150613934565b5092915050565b606082471015613a61576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c00000000000000000000000000000000000000000000000000006064820152608401610207565b73ffffffffffffffffffffffffffffffffffffffff85163b613adf576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610207565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051613b089190615ea8565b60006040518083038185875af1925050503d8060008114613b45576040519150601f19603f3d011682016040523d82523d6000602084013e613b4a565b606091505b5091509150613b5a828286614cea565b979650505050505050565b6000808213613bd0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f554e444546494e454400000000000000000000000000000000000000000000006044820152606401610207565b60006060613bdd84614d3d565b03609f8181039490941b90931c6c465772b2bbbb5f824b15207a3081018102606090811d6d0388eaa27412d5aca026815d636e018202811d6d0df99ac502031bf953eff472fdcc018202811d6d13cdffb29d51d99322bdff5f2211018202811d6d0a0f742023def783a307a986912e018202811d6d01920d8043ca89b5239253284e42018202811d6c0b7a86d7375468fac667a0a527016c29508e458543d8aa4df2abee7883018302821d6d0139601a2efabe717e604cbb4894018302821d6d02247f7a7b6594320649aa03aba1018302821d7fffffffffffffffffffffffffffffffffffffff73c0c716a594e00d54e3c4cbc9018302821d7ffffffffffffffffffffffffffffffffffffffdc7b88c420e53a9890533129f6f01830290911d7fffffffffffffffffffffffffffffffffffffff465fda27eb4d63ded474e5f832019091027ffffffffffffffff5f6af8f7b3396644f18e157960000000000000000000000000105711340daa0d5f769dba1915cef59f0815a5506027d0267a36c0c95b3975ab3ee5b203a7614a3f75373f047d803ae7b6687f2b393909302929092017d57115e47018c7177eebf7cd370a3356a1b7863008a5ae8028c72b88642840160ae1d92915050565b60007ffffffffffffffffffffffffffffffffffffffffffffffffdb731c958f34d94c18213613dda57506000919050565b680755bf798b4a1bf1e58212613e4c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600c60248201527f4558505f4f564552464c4f5700000000000000000000000000000000000000006044820152606401610207565b6503782dace9d9604e83901b059150600060606bb17217f7d1cf79abc9e3b39884821b056b80000000000000000000000001901d6bb17217f7d1cf79abc9e3b39881029093037fffffffffffffffffffffffffffffffffffffffdbf3ccf1604d263450f02a550481018102606090811d6d0277594991cfc85f6e2461837cd9018202811d7fffffffffffffffffffffffffffffffffffffe5adedaa1cb095af9e4da10e363c018202811d6db1bbb201f443cf962f1a1d3db4a5018202811d7ffffffffffffffffffffffffffffffffffffd38dc772608b0ae56cce01296c0eb018202811d6e05180bb14799ab47a8a8cb2a527d57016d02d16720577bd19bf614176fe9ea6c10fe68e7fd37d0007b713f765084018402831d9081019084017ffffffffffffffffffffffffffffffffffffffe2c69812cf03b0763fd454a8f7e010290911d6e0587f503bb6ea29d25fcb7401964500190910279d835ebba824c98fb31b83b2ca45c000000000000000000000000010574029d9dc38563c32e5c2f6dc192ee70ef65f9978af30260c3939093039290921c92915050565b60606107ae613ff683614e13565b614efc565b6000806000808460000151116140b9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604a60248201527f524c505265616465723a206c656e677468206f6620616e20524c50206974656d60448201527f206d7573742062652067726561746572207468616e207a65726f20746f20626560648201527f206465636f6461626c6500000000000000000000000000000000000000000000608482015260a401610207565b6020840151805160001a607f81116140de576000600160009450945094505050614a61565b60b781116142ec5760006140f360808361594e565b9050808760000151116141ae576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604e60248201527f524c505265616465723a206c656e677468206f6620636f6e74656e74206d757360448201527f742062652067726561746572207468616e20737472696e67206c656e6774682060648201527f2873686f727420737472696e6729000000000000000000000000000000000000608482015260a401610207565b6001838101517fff0000000000000000000000000000000000000000000000000000000000000016908214158061422757507f80000000000000000000000000000000000000000000000000000000000000007fff00000000000000000000000000000000000000000000000000000000000000821610155b6142d9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604d60248201527f524c505265616465723a20696e76616c6964207072656669782c2073696e676c60448201527f652062797465203c203078383020617265206e6f74207072656669786564202860648201527f73686f727420737472696e672900000000000000000000000000000000000000608482015260a401610207565b5060019550935060009250614a61915050565b60bf811161463a57600061430160b78361594e565b9050808760000151116143bc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152605160248201527f524c505265616465723a206c656e677468206f6620636f6e74656e74206d757360448201527f74206265203e207468616e206c656e677468206f6620737472696e67206c656e60648201527f67746820286c6f6e6720737472696e6729000000000000000000000000000000608482015260a401610207565b60018301517fff0000000000000000000000000000000000000000000000000000000000000016600081900361449a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604a60248201527f524c505265616465723a206c656e677468206f6620636f6e74656e74206d757360448201527f74206e6f74206861766520616e79206c656164696e67207a65726f7320286c6f60648201527f6e6720737472696e672900000000000000000000000000000000000000000000608482015260a401610207565b600184015160088302610100031c6037811161455e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604860248201527f524c505265616465723a206c656e677468206f6620636f6e74656e74206d757360448201527f742062652067726561746572207468616e20353520627974657320286c6f6e6760648201527f20737472696e6729000000000000000000000000000000000000000000000000608482015260a401610207565b6145688184615919565b89511161461d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604c60248201527f524c505265616465723a206c656e677468206f6620636f6e74656e74206d757360448201527f742062652067726561746572207468616e20746f74616c206c656e677468202860648201527f6c6f6e6720737472696e67290000000000000000000000000000000000000000608482015260a401610207565b614628836001615919565b9750955060009450614a619350505050565b60f7811161471b57600061464f60c08361594e565b90508087600001511161470a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604a60248201527f524c505265616465723a206c656e677468206f6620636f6e74656e74206d757360448201527f742062652067726561746572207468616e206c697374206c656e67746820287360648201527f686f7274206c6973742900000000000000000000000000000000000000000000608482015260a401610207565b600195509350849250614a61915050565b600061472860f78361594e565b9050808760000151116147e3576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604d60248201527f524c505265616465723a206c656e677468206f6620636f6e74656e74206d757360448201527f74206265203e207468616e206c656e677468206f66206c697374206c656e677460648201527f6820286c6f6e67206c6973742900000000000000000000000000000000000000608482015260a401610207565b60018301517fff000000000000000000000000000000000000000000000000000000000000001660008190036148c1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604860248201527f524c505265616465723a206c656e677468206f6620636f6e74656e74206d757360448201527f74206e6f74206861766520616e79206c656164696e67207a65726f7320286c6f60648201527f6e67206c69737429000000000000000000000000000000000000000000000000608482015260a401610207565b600184015160088302610100031c60378111614985576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604660248201527f524c505265616465723a206c656e677468206f6620636f6e74656e74206d757360448201527f742062652067726561746572207468616e20353520627974657320286c6f6e6760648201527f206c697374290000000000000000000000000000000000000000000000000000608482015260a401610207565b61498f8184615919565b895111614a44576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604a60248201527f524c505265616465723a206c656e677468206f6620636f6e74656e74206d757360448201527f742062652067726561746572207468616e20746f74616c206c656e677468202860648201527f6c6f6e67206c6973742900000000000000000000000000000000000000000000608482015260a401610207565b614a4f836001615919565b9750955060019450614a619350505050565b9193909250565b60608167ffffffffffffffff811115614a8357614a83615264565b6040519080825280601f01601f191660200182016040528015614aad576020820181803683370190505b5090508115612a74576000614ac28486615919565b90506020820160005b84811015614ae3578281015182820152602001614acb565b84811115614af2576000858301525b5050509392505050565b60606107ae826020015160008460000151614a68565b60608182601f011015614b81576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f736c6963655f6f766572666c6f770000000000000000000000000000000000006044820152606401610207565b828284011015614bed576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600e60248201527f736c6963655f6f766572666c6f770000000000000000000000000000000000006044820152606401610207565b81830184511015614c5a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f736c6963655f6f75744f66426f756e64730000000000000000000000000000006044820152606401610207565b606082158015614c795760405191506000825260208201604052614ce1565b6040519150601f8416801560200281840101858101878315602002848b0101015b81831015614cb2578051835260209283019201614c9a565b5050858452601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016604052505b50949350505050565b60608315614cf9575081612a74565b825115614d095782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102079190615571565b6000808211614da8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600960248201527f554e444546494e454400000000000000000000000000000000000000000000006044820152606401610207565b5060016fffffffffffffffffffffffffffffffff821160071b82811c67ffffffffffffffff1060061b1782811c63ffffffff1060051b1782811c61ffff1060041b1782811c60ff10600390811b90911783811c600f1060021b1783811c909110821b1791821c111790565b60408051808201909152600080825260208201526000825111614ede576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604a60248201527f524c505265616465723a206c656e677468206f6620616e20524c50206974656d60448201527f206d7573742062652067726561746572207468616e207a65726f20746f20626560648201527f206465636f6461626c6500000000000000000000000000000000000000000000608482015260a401610207565b50604080518082019091528151815260209182019181019190915290565b60606000806000614f0c85613ffb565b919450925090506001816001811115614f2757614f27615e79565b14614fb4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603860248201527f524c505265616465723a206465636f646564206974656d207479706520666f7260448201527f206c697374206973206e6f742061206c697374206974656d00000000000000006064820152608401610207565b8451614fc08385615919565b1461504d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603260248201527f524c505265616465723a206c697374206974656d2068617320616e20696e766160448201527f6c696420646174612072656d61696e64657200000000000000000000000000006064820152608401610207565b604080516020808252610420820190925290816020015b60408051808201909152600080825260208201528152602001906001900390816150645790505093506000835b8651811015615152576000806150d76040518060400160405280858c600001516150bb919061594e565b8152602001858c602001516150d09190615919565b9052613ffb565b5091509150604051806040016040528083836150f39190615919565b8152602001848b602001516151089190615919565b81525088858151811061511d5761511d615e05565b6020908102919091010152615133600185615919565b935061513f8183615919565b6151499084615919565b92505050615091565b50845250919392505050565b60006020828403121561517057600080fd5b81357fffffffff0000000000000000000000000000000000000000000000000000000081168114612a7457600080fd5b73ffffffffffffffffffffffffffffffffffffffff811681146151c257600080fd5b50565b6000806000806000608086880312156151dd57600080fd5b85356151e8816151a0565b945060208601356151f8816151a0565b935060408601359250606086013567ffffffffffffffff8082111561521c57600080fd5b818801915088601f83011261523057600080fd5b81358181111561523f57600080fd5b89602082850101111561525157600080fd5b9699959850939650602001949392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156152da576152da615264565b604052919050565b600082601f8301126152f357600080fd5b813567ffffffffffffffff81111561530d5761530d615264565b61533e60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601615293565b81815284602083860101111561535357600080fd5b816020850160208301376000918101602001919091529392505050565b600060c0828403121561538257600080fd5b60405160c0810167ffffffffffffffff82821081831117156153a6576153a6615264565b8160405282935084358352602085013591506153c1826151a0565b816020840152604085013591506153d7826151a0565b816040840152606085013560608401526080850135608084015260a085013591508082111561540557600080fd5b50615412858286016152e2565b60a0830152505092915050565b600080600080600085870360e081121561543857600080fd5b863567ffffffffffffffff8082111561545057600080fd5b61545c8a838b01615370565b97506020890135965060807fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc08401121561549557600080fd5b60408901955060c08901359250808311156154af57600080fd5b828901925089601f8401126154c357600080fd5b82359150808211156154d457600080fd5b508860208260051b84010111156154ea57600080fd5b959894975092955050506020019190565b60005b838110156155165781810151838201526020016154fe565b838111156124dc5750506000910152565b6000815180845261553f8160208601602086016154fb565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081526000612a746020830184615527565b60006020828403121561559657600080fd5b5035919050565b6000602082840312156155af57600080fd5b813567ffffffffffffffff8111156155c657600080fd5b6155d284828501615370565b949350505050565b6000602082840312156155ec57600080fd5b813567ffffffffffffffff81111561560357600080fd5b6155d2848285016152e2565b63ffffffff83168152604060208201526000612a716040830184615527565b803567ffffffffffffffff8116811461564657600080fd5b919050565b60006020828403121561565d57600080fd5b612a748261562e565b80151581146151c257600080fd5b600080600080600060a0868803121561568c57600080fd5b8535615697816151a0565b9450602086013593506156ac6040870161562e565b925060608601356156bc81615666565b9150608086013567ffffffffffffffff8111156156d857600080fd5b6156e4888289016152e2565b9150509295509295909350565b600080600080600060a0868803121561570957600080fd5b8535615714816151a0565b94506020860135615724816151a0565b93506040860135615734816151a0565b92506060860135615744816151a0565b9150608086013561575481615666565b809150509295509295909350565b80516fffffffffffffffffffffffffffffffff8116811461564657600080fd5b60006060828403121561579457600080fd5b6040516060810181811067ffffffffffffffff821117156157b7576157b7615264565b604052825181526157ca60208401615762565b60208201526157db60408401615762565b60408201529392505050565b6000608082840312156157f957600080fd5b6040516080810181811067ffffffffffffffff8211171561581c5761581c615264565b8060405250823581526020830135602082015260408301356040820152606083013560608201528091505092915050565b600067ffffffffffffffff8084111561586857615868615264565b8360051b6020615879818301615293565b86815291850191818101903684111561589157600080fd5b865b848110156158c5578035868111156158ab5760008081fd5b6158b736828b016152e2565b845250918301918301615893565b50979650505050505050565b6000602082840312156158e357600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b6000821982111561592c5761592c6158ea565b500190565b60006020828403121561594357600080fd5b8151612a7481615666565b600082821015615960576159606158ea565b500390565b600067ffffffffffffffff8083168185168183048111821515161561598c5761598c6158ea565b02949350505050565b600067ffffffffffffffff8083168185168083038211156159b8576159b86158ea565b01949350505050565b8581528460208201527fffffffffffffffff0000000000000000000000000000000000000000000000008460c01b16604082015282151560f81b604882015260008251615a158160498501602087016154fb565b919091016049019695505050505050565b868152600073ffffffffffffffffffffffffffffffffffffffff808816602084015280871660408401525084606083015283608083015260c060a0830152615a7160c0830184615527565b98975050505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600082615abb57615abb615a7d565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff83147f800000000000000000000000000000000000000000000000000000000000000083141615615b0f57615b0f6158ea565b500590565b6000808312837f800000000000000000000000000000000000000000000000000000000000000001831281151615615b4e57615b4e6158ea565b837f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff018313811615615b8257615b826158ea565b50500390565b60007f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff600084136000841385830485118282161615615bc957615bc96158ea565b7f80000000000000000000000000000000000000000000000000000000000000006000871286820588128184161615615c0457615c046158ea565b60008712925087820587128484161615615c2057615c206158ea565b87850587128184161615615c3657615c366158ea565b505050929093029392505050565b6000808212827f7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03841381151615615c7e57615c7e6158ea565b827f8000000000000000000000000000000000000000000000000000000000000000038412811615615cb257615cb26158ea565b50500190565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615615cf057615cf06158ea565b500290565b600082615d0457615d04615a7d565b500490565b805163ffffffff8116811461564657600080fd5b805160ff8116811461564657600080fd5b600060c08284031215615d4057600080fd5b60405160c0810181811067ffffffffffffffff82111715615d6357615d63615264565b604052615d6f83615d09565b8152615d7d60208401615d1d565b6020820152615d8e60408401615d1d565b6040820152615d9f60608401615d09565b6060820152615db060808401615d09565b6080820152615dc160a08401615762565b60a08201529392505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203615dfe57615dfe6158ea565b5060010190565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b600060ff831680615e4757615e47615a7d565b8060ff84160691505092915050565b600060ff821660ff841680821015615e7057615e706158ea565b90039392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60008251615eba8184602087016154fb565b919091019291505056fea164736f6c634300080f000a",
    "sourceMap": "1338:23022:79:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8420:42;;;;;216:2:156;8420:42:79;;;198:21:156;;;235:18;;;228:30;294:34;274:18;;;267:62;346:18;;8420:42:79;;;;;;;;1338:23022;;;;6494:92;;;;;;;;;;-1:-1:-1;6571:8:79;;;;;;;6494:92;;;575:42:156;563:55;;;545:74;;533:2;518:18;6494:92:79;;;;;;;;91:198:78;;;;;;;;;;-1:-1:-1;91:198:78;;;;;:::i;:::-;;:::i;:::-;;;1132:14:156;;1125:22;1107:41;;1095:2;1080:18;91:198:78;967:187:156;3373:30:79;;;;;;;;;;;;;;;;;;;1305:25:156;;;1293:2;1278:18;3373:30:79;1159:177:156;3103:32:79;;;;;;;;;;-1:-1:-1;3103:32:79;;;;;;;;7169:180;;;;;;;;;;;;;:::i;:::-;;18888:483;;;;;;;;;;-1:-1:-1;18888:483:79;;;;;:::i;:::-;;:::i;3254:23::-;;;;;;;;;;-1:-1:-1;3254:23:79;;;;;;;;9648:3746;;;;;;;;;;-1:-1:-1;9648:3746:79;;;;;:::i;:::-;;:::i;3333:33::-;;;;;;;;;;-1:-1:-1;3333:33:79;;;;;;;;5251:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;2865:18::-;;;;;;;;;;-1:-1:-1;2865:18:79;;;;;;;;23745:180;;;;;;;;;;-1:-1:-1;23745:180:79;;;;;:::i;:::-;;:::i;6826:84::-;;;;;;;;;;-1:-1:-1;6895:8:79;;;;6826:84;;6952:173;;;;;;;;;;;;;:::i;13507:5176::-;;;;;;;;;;-1:-1:-1;13507:5176:79;;;;;:::i;:::-;;:::i;390:1019:78:-;;;;;;;;;;-1:-1:-1;390:1019:78;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;2979:30:79:-;;;;;;;;;;-1:-1:-1;2979:30:79;;;;;;;;;;;2376:23;;;;;;;;;;-1:-1:-1;2376:23:79;;;;;;;;2490:52;;;;;;;;;;-1:-1:-1;2490:52:79;;;;;:::i;:::-;;;;;;;;;;;;;;;;7842:120;;;;;;;;;;-1:-1:-1;7842:120:79;;;;;:::i;:::-;;:::i;:::-;;;8994:18:156;8982:31;;;8964:50;;8952:2;8937:18;7842:120:79;8820:200:156;2999:28:81;;;;;;;;;;-1:-1:-1;2999:28:81;;;;;;;;;;;;;;;;;;;;;;;;;9253:34:156;9241:47;;;9223:66;;9308:18;9362:15;;;9357:2;9342:18;;9335:43;9414:15;;9394:18;;;9387:43;9211:2;9196:18;2999:28:81;9025:411:156;2624:61:79;;;;;;;;;;-1:-1:-1;2624:61:79;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9643:25:156;;;9687:34;9757:15;;;9752:2;9737:18;;9730:43;9809:15;;9789:18;;;9782:43;9631:2;9616:18;2624:61:79;9441:390:156;20174:272:79;;;;;;;;;;-1:-1:-1;20174:272:79;;;;;:::i;:::-;;:::i;6659:98::-;;;;;;;;;;-1:-1:-1;6738:12:79;;;;6659:98;;5909:510;;;;;;;;;;-1:-1:-1;5909:510:79;;;;;:::i;:::-;;:::i;91:198:78:-;161:4;184:43;;;199:28;184:43;;:98;;-1:-1:-1;231:51:78;;;246:36;231:51;184:98;177:105;91:198;-1:-1:-1;;91:198:78:o;7169:180:79:-;7229:8;;;;7215:10;:22;7207:76;;;;;;;11756:2:156;7207:76:79;;;11738:21:156;11795:2;11775:18;;;11768:30;11834:34;11814:18;;;11807:62;11905:11;11885:18;;;11878:39;11934:19;;7207:76:79;11554:405:156;7207:76:79;7293:6;:14;;;;;;7322:20;;7331:10;545:74:156;;7322:20:79;;533:2:156;518:18;7322:20:79;;;;;;;;7169:180::o;18888:483::-;19110:18;;19060:4;;19110:18;;19088:10;:41;19080:95;;;;;;;12166:2:156;19080:95:79;;;12148:21:156;12205:2;12185:18;;;12178:30;12244:34;12224:18;;;12217:62;12315:11;12295:18;;;12288:39;12344:19;;19080:95:79;11964:405:156;19080:95:79;19186:19;19207:21;19232:26;19252:5;;19232:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;19232:19:79;;-1:-1:-1;;;19232:26:79:i;:::-;19185:73;;;;19268:75;19288:6;19296;19304:7;19313:12;19268:75;;19327:5;19334:8;19268:19;:75::i;:::-;-1:-1:-1;19360:4:79;;18888:483;-1:-1:-1;;;;;;;18888:483:79:o;9648:3746::-;5121:6;;;;:15;5113:50;;;;;;;12576:2:156;5113:50:79;;;12558:21:156;12615:2;12595:18;;;12588:30;12654:24;12634:18;;;12627:52;12696:18;;5113:50:79;12374:346:156;5113:50:79;10180:4:::1;10158:27;;:3;:10;;;:27;;::::0;10150:103:::1;;;::::0;::::1;::::0;;12927:2:156;10150:103:79::1;::::0;::::1;12909:21:156::0;12966:2;12946:18;;;12939:30;13005:34;12985:18;;;12978:62;13076:33;13056:18;;;13049:61;13127:19;;10150:103:79::1;12725:427:156::0;10150:103:79::1;10451:8;::::0;:36:::1;::::0;;;;::::1;::::0;::::1;1305:25:156::0;;;10430:18:79::1;::::0;10451:8:::1;::::0;::::1;;;::::0;:20:::1;::::0;1278:18:156;;10451:36:79::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:47:::0;;-1:-1:-1;10632:45:79::1;;;::::0;;::::1;::::0;::::1;10660:16:::0;10632:45:::1;:::i;:::-;:27;:45::i;:::-;10618:10;:59;10597:135;;;::::0;::::1;::::0;;14829:2:156;10597:135:79::1;::::0;::::1;14811:21:156::0;14868:2;14848:18;;;14841:30;14907:34;14887:18;;;14880:62;14978:11;14958:18;;;14951:39;15007:19;;10597:135:79::1;14627:405:156::0;10597:135:79::1;10843:22;10868:27;10891:3;10868:22;:27::i;:::-;10905:40;10948:33:::0;;;:17:::1;:33;::::0;;;;;;;;10905:76;;::::1;::::0;::::1;::::0;;;;;;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;::::1;;::::0;;;;;;;10843:52;;-1:-1:-1;10905:76:79;11535:31;;:145:::1;;-1:-1:-1::0;11653:27:79;;11586:8:::1;::::0;11607:30:::1;::::0;;::::1;::::0;11586:52;;;;;15213:34:156;15201:47;;;11586:52:79::1;::::0;::::1;15183:66:156::0;11586:8:79::1;::::0;;::::1;;;::::0;:20:::1;::::0;15156:18:156;;11586:52:79::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:63:::0;:94:::1;;11535:145;11514:247;;;::::0;::::1;::::0;;15462:2:156;11514:247:79::1;::::0;::::1;15444:21:156::0;15501:2;15481:18;;;15474:30;15540:34;15520:18;;;15513:62;15611:25;15591:18;;;15584:53;15654:19;;11514:247:79::1;15260:419:156::0;11514:247:79::1;12041:147;::::0;;::::1;::::0;::::1;15858:25:156::0;;;11997:18:79::1;15899::156::0;;;15892:34;;;15831:18;;12041:147:79::1;::::0;;;;;::::1;::::0;;;;;;12018:180;;12041:147:::1;12018:180:::0;;::::1;::::0;12606:22;;::::1;1305:25:156::0;;;12018:180:79;-1:-1:-1;12551:161:79::1;::::0;1278:18:156;12606:22:79::1;::::0;;;;;::::1;::::0;;;12551:161;;::::1;::::0;;;::::1;::::0;;::::1;12606:22;12551:161:::0;::::1;::::0;12606:22;12551:161:::1;12639:16:::0;;12551:161:::1;:::i;:::-;12657:16;:41;;;12551:37;:161::i;:::-;12530:258;;;::::0;::::1;::::0;;17260:2:156;12530:258:79::1;::::0;::::1;17242:21:156::0;17299:2;17279:18;;;17272:30;17338:34;17318:18;;;17311:62;17409:20;17389:18;;;17382:48;17447:19;;12530:258:79::1;17058:414:156::0;12530:258:79::1;13106:165;::::0;;::::1;::::0;::::1;::::0;;;;;::::1;13192:15;13106:165:::0;::::1;;::::0;;::::1;::::0;;;;;::::1;::::0;;;;;;-1:-1:-1;13070:33:79;;;:17:::1;:33:::0;;;;;:201;;;;;;;;;::::1;::::0;::::1;::::0;::::1;::::0;;;::::1;;::::0;;::::1;::::0;;;;13376:10;;::::1;::::0;13364;;::::1;::::0;13331:56;;::::1;::::0;;::::1;::::0;;;::::1;::::0;13088:14;;13331:56:::1;::::0;-1:-1:-1;13331:56:79::1;9913:3481;;;;9648:3746:::0;;;;;:::o;23745:180::-;23871:8;;:36;;;;;;;;1305:25:156;;;23819:4:79;;23842:76;;23871:8;;;;;;;:20;;1278:18:156;;23871:36:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:46;;;23842:76;;:28;:76::i;6952:173::-;7010:8;;;;6996:10;:22;6988:74;;;;;;;17679:2:156;6988:74:79;;;17661:21:156;17718:2;17698:18;;;17691:30;17757:34;17737:18;;;17730:62;17828:9;17808:18;;;17801:37;17855:19;;6988:74:79;17477:403:156;6988:74:79;7072:6;:13;;;;7081:4;7072:13;;;7100:18;;7107:10;545:74:156;;7100:18:79;;533:2:156;518:18;7100::79;375:250:156;13507:5176:79;5121:6;;;;:15;5113:50;;;;;;;12576:2:156;5113:50:79;;;12558:21:156;12615:2;12595:18;;;12588:30;12654:24;12634:18;;;12627:52;12696:18;;5113:50:79;12374:346:156;5113:50:79;13875:8:::1;::::0;:39:::1;:8;1337:42:123;13875:39:79;13854:137;;;::::0;::::1;::::0;;18087:2:156;13854:137:79::1;::::0;::::1;18069:21:156::0;18126:2;18106:18;;;18099:30;18165:34;18145:18;;;18138:62;18236:33;18216:18;;;18209:61;18287:19;;13854:137:79::1;17885:427:156::0;13854:137:79::1;14074:22;14099:27;14122:3;14099:22;:27::i;:::-;14136:40;14179:33:::0;;;:17:::1;:33;::::0;;;;;;;14136:76;;::::1;::::0;::::1;::::0;;;;;;::::1;::::0;;::::1;::::0;::::1;::::0;;::::1;::::0;;::::1;::::0;;;;;;::::1;;::::0;;;;;;;14074:52;;-1:-1:-1;14462:31:79;;14454:94:::1;;;::::0;::::1;::::0;;18519:2:156;14454:94:79::1;::::0;::::1;18501:21:156::0;18558:2;18538:18;;;18531:30;18597:34;18577:18;;;18570:62;18668:20;18648:18;;;18641:48;18706:19;;14454:94:79::1;18317:414:156::0;14454:94:79::1;14865:8;;;;;;;;;;;:26;;;:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14835:16;:26;;;:58;;;;14814:180;;;::::0;::::1;::::0;;19127:2:156;14814:180:79::1;::::0;::::1;19109:21:156::0;19166:2;19146:18;;;19139:30;19205:34;19185:18;;;19178:62;19276:34;19256:18;;;19249:62;19348:13;19327:19;;;19320:42;19379:19;;14814:180:79::1;18925:479:156::0;14814:180:79::1;15384:56;15413:16;:26;;;15384:56;;:28;:56::i;:::-;15363:172;;;::::0;::::1;::::0;;19611:2:156;15363:172:79::1;::::0;::::1;19593:21:156::0;19650:2;19630:18;;;19623:30;19689:34;19669:18;;;19662:62;19760:34;19740:18;;;19733:62;19832:7;19811:19;;;19804:36;19857:19;;15363:172:79::1;19409:473:156::0;15363:172:79::1;15745:8;::::0;15766:30:::1;::::0;;::::1;::::0;15745:52;;;;;15213:34:156;15201:47;;;15745:52:79::1;::::0;::::1;15183:66:156::0;15706:36:79::1;::::0;15745:8:::1;::::0;::::1;;;::::0;:20:::1;::::0;15156:18:156;;15745:52:79::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16108:27:::0;;16085:19;;15706:91;;-1:-1:-1;16085:50:79::1;16064:170;;;::::0;::::1;::::0;;20089:2:156;16064:170:79::1;::::0;::::1;20071:21:156::0;20128:2;20108:18;;;20101:30;20167:34;20147:18;;;20140:62;20238:34;20218:18;;;20211:62;20310:11;20289:19;;;20282:40;20339:19;;16064:170:79::1;19887:477:156::0;16064:170:79::1;16333:48;16362:8;:18;;;16333:48;;:28;:48::i;:::-;16312:162;;;::::0;::::1;::::0;;20571:2:156;16312:162:79::1;::::0;::::1;20553:21:156::0;20610:2;20590:18;;;20583:30;20649:34;20629:18;;;20622:62;20720:34;20700:18;;;20693:62;20792:5;20771:19;;;20764:34;20815:19;;16312:162:79::1;20369:471:156::0;16312:162:79::1;16590:36;::::0;;;:20:::1;:36;::::0;;;;;::::1;;:45;16582:111;;;::::0;::::1;::::0;;21047:2:156;16582:111:79::1;::::0;::::1;21029:21:156::0;21086:2;21066:18;;;21059:30;21125:34;21105:18;;;21098:62;21196:23;21176:18;;;21169:51;21237:19;;16582:111:79::1;20845:417:156::0;16582:111:79::1;16773:36;::::0;;;:20:::1;:36;::::0;;;;;;;:43;;;::::1;16812:4;16773:43;::::0;;16921:10;::::1;::::0;16910:8:::1;:21:::0;;::::1;::::0;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;16945:9:::1;::::0;::::1;::::0;:13;16941:336:::1;;17006:18;::::0;17055:10:::1;::::0;;::::1;::::0;17079:63;;;;;17124:4:::1;17079:63;::::0;::::1;21502:34:156::0;17006:18:79::1;21572:15:156::0;;;21552:18;;;21545:43;17006:18:79;;::::1;::::0;16999:34:::1;::::0;17055:10;17006:18;;17079:36:::1;::::0;21414:18:156;;17079:63:79::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;17067:3;:9;;;:75;;;;:::i;:::-;16999:161;::::0;;::::1;::::0;;;;;;22125:42:156;22113:55;;;16999:161:79::1;::::0;::::1;22095:74:156::0;22185:18;;;22178:34;22068:18;;16999:161:79::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16974:250;;;::::0;::::1;::::0;;22675:2:156;16974:250:79::1;::::0;::::1;22657:21:156::0;22714:2;22694:18;;;22687:30;22753:32;22733:18;;;22726:60;22803:18;;16974:250:79::1;22473:354:156::0;16974:250:79::1;17257:3;:9;;;17238:15;;:28;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;16941:336:79::1;17896:12;17911:62;17935:3;:10;;;17947:3;:12;;;17961:1;17964:3;:8;;;17911:23;:62::i;:::-;18041:8;:38:::0;;;::::1;1337:42:123;18041:38:79;::::0;;18238:44:::1;::::0;17896:77;;-1:-1:-1;18258:14:79;;18238:44:::1;::::0;::::1;::::0;17896:77;1132:14:156;1125:22;1107:41;;1095:2;1080:18;;967:187;18238:44:79::1;;;;;;;;18546:16:::0;::::1;::::0;::::1;:61;;-1:-1:-1::0;18566:9:79::1;1015:1:123;18566:41:79;18546:61;18542:135;;;18623:43;::::0;::::1;::::0;;23164:2:156;18623:43:79::1;::::0;::::1;23146:21:156::0;23203:2;23183:18;;;23176:30;23242:34;23222:18;;;23215:62;23313:3;23293:18;;;23286:31;23334:19;;18623:43:79::1;22962:397:156::0;18542:135:79::1;13609:5074;;;;13507:5176:::0;:::o;390:1019:78:-;460:19;481:21;533:1;518:5;:12;:16;514:103;;;-1:-1:-1;;597:9:78;;;;;;;;;-1:-1:-1;597:9:78;;565:7;;514:103;919:11;;1047:2;1037:13;;1229:11;;1224:3;1220:21;;-1:-1:-1;1037:13:78;1276:1;1264:14;;1254:139;;1377:1;1371:4;1367:12;1355:24;;1254:139;;;390:1019;;;:::o;7842:120:79:-;7907:6;7932:15;:10;7945:2;7932:15;:::i;:::-;:23;;7950:5;7932:23;:::i;20174:272::-;20364:75;20384:10;20396:3;20401:6;20409:9;20420:11;20433:5;20364:19;:75::i;5909:510::-;4396:13:26;;2762:1:123;;4396:13:26;;;;;4395:14;:40;;;;-1:-1:-1;4413:12:26;;:22;;;;:12;;:22;4395:40;4387:99;;;;;;;24082:2:156;4387:99:26;;;24064:21:156;24121:2;24101:18;;;24094:30;24160:34;24140:18;;;24133:62;24231:16;24211:18;;;24204:44;24265:19;;4387:99:26;23880:410:156;4387:99:26;4496:12;:22;;4528:20;;4496:22;;;4528:20;4496:22;4528:20;;;;;;6165:18:79::1;:40:::0;;::::1;::::0;;::::1;::::0;;;::::1;;::::0;;;6215:8:::1;:38:::0;;;::::1;1337:42:123;6215:38:79;::::0;;6263:8:::1;:20:::0;;6293:12:::1;:28:::0;;;;::::1;::::0;;::::1;;::::0;;6331:8:::1;:20:::0;;;;::::1;::::0;::::1;::::0;;;::::1;::::0;;;6361:16;::::1;;6263:20:::0;;::::1;::::0;;::::1;4496:22:26::0;6361:16:79;;;;;;::::1;::::0;;6387:25:::1;:23;:25::i;:::-;4585:5:26::0;4569:21;;;;;;4605:20;;24467:4:156;24455:17;;24437:36;;4605:20:26;;24425:2:156;24410:18;4605:20:26;;;;;;;5909:510:79;;;;;;:::o;21263:2184::-;21481:9;3417:18:81;3438:9;3417:30;-1:-1:-1;21549:10:79;;21545:155:::1;;21582:18;::::0;21575:75:::1;::::0;21582:18:::1;;21619:7:::0;21636:4:::1;21643:6:::0;21575:43:::1;:75::i;:::-;21683:6;21664:15;;:25;;;;;;;:::i;:::-;::::0;;;-1:-1:-1;;21545:155:79::1;21839:11;21835:136;;;21874:17;::::0;::::1;::::0;21866:94:::1;;;::::0;;::::1;::::0;;24686:2:156;21866:94:79::1;::::0;::::1;24668:21:156::0;24705:18;;;24698:30;;;;24764:34;24744:18;;;24737:62;24835:34;24815:18;;;24808:62;24887:19;;21866:94:79::1;24484:428:156::0;21866:94:79::1;22139:37;22162:5;:12;22139:15;:37::i;:::-;22126:50;;:9;:50;;;;22118:98;;;::::0;::::1;::::0;;25119:2:156;22118:98:79::1;::::0;::::1;25101:21:156::0;25158:2;25138:18;;;25131:30;25197:34;25177:18;;;25170:62;25268:5;25248:18;;;25241:33;25291:19;;22118:98:79::1;24917:399:156::0;22118:98:79::1;22611:7;22595:5;:12;:23;;22587:66;;;::::0;::::1;::::0;;25523:2:156;22587:66:79::1;::::0;::::1;25505:21:156::0;25562:2;25542:18;;;25535:30;25601:32;25581:18;;;25574:60;25651:18;;22587:66:79::1;25321:354:156::0;22587:66:79::1;22759:10;22797:9;22783:23:::0;::::1;22779:108;;-1:-1:-1::0;22865:10:79::1;741:42:152::0;1213:27;22779:108:79::1;23144:23;23187:6;23195;23203:9;23214:11;23227:5;23170:63;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;23144:89;;1963:1;23407:3;23380:60;;23401:4;23380:60;;;23429:10;23380:60;;;;;;:::i;:::-;;;;;;;;21496:1951;;3548:29:81::0;3557:7;3566:10;3548:8;:29::i;:::-;3339:245;21263:2184:79;;;;;;;:::o;4937:384:127:-;5036:7;5113:16;:24;;;5155:16;:26;;;5199:16;:41;;;5258:16;:32;;;5085:219;;;;;;;;;;26781:25:156;;;26837:2;26822:18;;26815:34;;;;26880:2;26865:18;;26858:34;26923:2;26908:18;;26901:34;26768:3;26753:19;;26550:391;5085:219:127;;;;;;;;;;;;;5062:252;;;;;;5055:259;;4937:384;;;:::o;4432:211::-;4566:9;;4577:10;;;;;4589;;;;;4601:9;;;;4612:12;;;;4626:8;;;;4555:80;;4519:7;;4555:80;;4566:9;;4577:10;4626:8;4555:80;;:::i;1041:343:136:-;1234:11;1261:16;1280:19;1294:4;1280:13;:19::i;:::-;1261:38;;1318:59;1350:3;1355:6;1363;1371:5;1318:31;:59::i;:::-;1309:68;1041:343;-1:-1:-1;;;;;;1041:343:136:o;24178:180:79:-;24259:4;24313:8;;;;;;;;;;;:36;;;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;24300:51;;:10;:51;:::i;:::-;24282:15;:69;;24178:180;-1:-1:-1;;24178:180:79:o;4419:2320:129:-;4589:4;4609:13;4632:15;4650:21;4660:7;4669:1;4650:9;:21::i;:::-;4632:39;;4782:10;4772:1146;;4894:10;4891:1;4884:21;5009:2;5005;4998:14;5747:56;5743:2;5736:68;5900:3;5896:2;5889:15;4772:1146;6666:4;6630;6589:9;6583:16;6549:2;6538:9;6534:18;6491:6;6449:7;6415:5;6389:309;6361:337;4419:2320;-1:-1:-1;;;;;;;4419:2320:129:o;8362:180:81:-;4888:13:26;;;;;;;4880:69;;;;;;;27809:2:156;4880:69:26;;;27791:21:156;27848:2;27828:18;;;27821:30;27887:34;27867:18;;;27860:62;27958:13;27938:18;;;27931:41;27989:19;;4880:69:26;27607:407:156;4880:69:26;8442:93:81::1;::::0;;::::1;::::0;::::1;::::0;;8472:6:::1;8442:93:::0;;;-1:-1:-1;8442:93:81::1;::::0;::::1;::::0;8519:12:::1;8442:93;;::::0;;;;;;;8433:102;::::1;;:6;:102:::0;8362:180::o;974:241:31:-;1139:68;;;28231:42:156;28300:15;;;1139:68:31;;;28282:34:156;28352:15;;28332:18;;;28325:43;28384:18;;;;28377:34;;;1139:68:31;;;;;;;;;;28194:18:156;;;;1139:68:31;;;;;;;;;;1162:27;1139:68;;;1112:96;;1132:5;;1112:19;:96::i;:::-;974:241;;;;:::o;3817:4037:81:-;3984:6;:19;3949:17;;3969:34;;3984:19;;;;;3969:12;:34;:::i;:::-;3949:54;;4014:28;4045:17;:15;:17::i;:::-;4014:48;;4072:26;4171:6;:27;;;4163:36;;4128:6;:23;;;4120:32;;4113:87;;;;:::i;:::-;4072:128;-1:-1:-1;4215:13:81;;4211:2229;;4572:6;:20;4535:19;;4557:59;;4597:19;;4572:20;;;;;4557:59;:::i;:::-;4535:81;;4630:19;4761:6;:34;;;4753:43;;4724:19;:73;;;;:::i;:::-;4668:6;:18;4653:50;;4691:12;;4668:18;;4653:50;:::i;:::-;4652:146;;;;:::i;:::-;5017:6;:18;4630:168;;-1:-1:-1;4939:17:81;;4959:232;;5002:50;;4630:168;;5017:18;;5002:50;:::i;:::-;5091:6;:21;;;5083:30;;5153:6;:21;;;5145:30;;4959:16;:232::i;:::-;4939:252;;5468:1;5456:9;:13;5452:741;;;5741:437;5788:239;5845:10;5910:6;:34;;;5902:43;;6002:1;5990:9;:13;;;;:::i;:::-;5788:16;:239::i;5741:437::-;5728:450;;5452:741;6286:49;;6387:42;6349:24;6416:12;6387:42;;;6286:6;6387:42;-1:-1:-1;;4211:2229:81;6534:6;:31;;6558:7;;6534:6;:20;;:31;;6558:7;;6534:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;6652:6;:23;;;6644:32;;6611:6;:20;;;;;;;;;;;;6603:29;;6596:81;;6575:190;;;;;;;30532:2:156;6575:190:81;;;30514:21:156;30571:2;30551:18;;;30544:30;30610:34;30590:18;;;30583:62;30681:32;30661:18;;;30654:60;30731:19;;6575:190:81;30330:426:156;6575:190:81;6877:6;:18;6827:20;;6850:46;;6877:18;;6850:16;;;:46;:::i;:::-;6827:69;;7378:15;7411:31;7420:13;7435:6;7411:8;:31::i;:::-;7396:46;;:12;:46;:::i;:::-;7378:64;;7722:15;7754:9;7740:23;;:11;:23;:::i;:::-;7722:41;;7787:7;7777;:17;7773:75;;;7810:27;7819:17;7829:7;7819;:17;:::i;:::-;7810:8;:27::i;2052:142:136:-;2116:18;2181:4;2171:15;;;;;;2154:33;;;;;;31248:19:156;;31292:2;31283:12;;31119:182;2154:33:136;;;;;;;;;;;;;2146:41;;2052:142;;;:::o;2253:281:135:-;2446:11;2482:45;2494:6;2502:24;2506:4;2512:6;2520:5;2502:3;:24::i;:::-;6693:17:121;;;;;;;6672;;;;;;;;;;:38;;6569:148;2482:45:135;2473:54;2253:281;-1:-1:-1;;;;;2253:281:135:o;3615:365:129:-;3696:4;3712:15;3931:2;3916:12;3909:5;3905:24;3901:33;3896:2;3887:7;3883:16;3879:56;3874:2;3867:5;3863:14;3860:76;3853:84;;3615:365;-1:-1:-1;;;;3615:365:129:o;3747:706:31:-;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;4192:27;;;;:69;;;;;:::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:31;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;;;;31508:2:156;4351:85:31;;;31490:21:156;31547:2;31527:18;;;31520:30;31586:34;31566:18;;;31559:62;31657:12;31637:18;;;31630:40;31687:19;;4351:85:31;31306:406:156;4351:85:31;3817:636;3747:706;;:::o;9108:152:79:-;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9224:12:79;;:29;;;;;;;-1:-1:-1;;9224:12:79;;;;;:27;;:29;;;;;-1:-1:-1;;9224:29:79;;;;;;:12;:29;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9217:36;;9108:152;:::o;537:161:119:-;616:6;641:50;656:28;671:6;679:4;656:14;:28::i;:::-;686:4;641:14;:50::i;:::-;634:57;;537:161;;;;;;:::o;1040:228::-;1138:6;1257:4;1180:72;1213:19;1220:12;1257:4;1213:19;:::i;:::-;1205:28;;:4;:28;:::i;:::-;1235:16;:9;1247:4;1235:16;:::i;:::-;1180:24;:72::i;:::-;1164:89;;:12;:89;:::i;:::-;1163:98;;;;:::i;413:105:44:-;471:7;502:1;497;:6;;:14;;510:1;497:14;;;-1:-1:-1;506:1:44;;490:21;-1:-1:-1;413:105:44:o;407:192:120:-;461:9;484:18;505:9;484:30;;524:69;556:7;544:9;531:22;;:10;:22;:::i;:::-;:32;524:69;;;579:3;;;:::i;:::-;;;524:69;;2830:6314:135;2923:19;2976:1;2962:4;:11;:15;2954:49;;;;;;;33349:2:156;2954:49:135;;;33331:21:156;33388:2;33368:18;;;33361:30;33427:23;33407:18;;;33400:51;33468:18;;2954:49:135;33147:345:156;2954:49:135;3014:23;3040:19;3052:6;3040:11;:19::i;:::-;3014:45;;3069:16;3088:21;3104:4;3088:15;:21::i;:::-;3069:40;;3119:26;3165:5;3148:23;;;;;;31248:19:156;;31292:2;31283:12;;31119:182;3148:23:135;;;;;;;;;;;;;3119:52;;3181:23;3295:9;3290:5790;3314:5;:12;3310:1;:16;3290:5790;;;3347:27;3377:5;3383:1;3377:8;;;;;;;;:::i;:::-;;;;;;;3347:38;;3516:3;:10;3497:15;:29;;3489:88;;;;;;;33888:2:156;3489:88:135;;;33870:21:156;33927:2;33907:18;;;33900:30;33966:34;33946:18;;;33939:62;34037:16;34017:18;;;34010:44;34071:19;;3489:88:135;33686:410:156;3489:88:135;3596:15;3615:1;3596:20;3592:837;;3768:19;;3758:30;;;;;;;3741:48;;3729:76;;3741:48;;3758:30;3741:48;31248:19:156;;;31292:2;31283:12;;31119:182;3741:48:135;;;;;;;;;;;;;3791:13;6693:17:121;;;;;;;6672;;;;;;;;;;:38;;6569:148;3729:76:135;3700:176;;;;;;;34303:2:156;3700:176:135;;;34285:21:156;34342:2;34322:18;;;34315:30;34381:31;34361:18;;;34354:59;34430:18;;3700:176:135;34101:353:156;3700:176:135;3592:837;;;3901:19;;:26;3931:2;-1:-1:-1;3897:532:135;;4097:19;;4087:30;;;;;;;4070:48;;4058:76;;4070:48;;4087:30;4070:48;31248:19:156;;;31292:2;31283:12;;31119:182;4058:76:135;4029:186;;;;;;;34661:2:156;4029:186:135;;;34643:21:156;34700:2;34680:18;;;34673:30;34739:34;34719:18;;;34712:62;34810:9;34790:18;;;34783:37;34837:19;;4029:186:135;34459:403:156;3897:532:135;4336:19;;6693:17:121;;;;;;;;;;6672;;;;;;;:38;4316:98:135;;;;;;;35069:2:156;4316:98:135;;;35051:21:156;35108:2;35088:18;;;35081:30;35147:34;35127:18;;;35120:62;35218:8;35198:18;;;35191:36;35244:19;;4316:98:135;34867:402:156;4316:98:135;936:14;803:2;949:1;936:14;:::i;:::-;4447:11;:19;;;:26;:48;4443:4627;;4538:3;:10;4519:15;:29;4515:1346;;5047:52;5067:11;:19;;;803:2;5067:31;;;;;;;;:::i;:::-;;;;;;;5047:19;:52::i;:::-;5038:61;;5145:1;5129:6;:13;:17;5121:89;;;;;;;35476:2:156;5121:89:135;;;35458:21:156;35515:2;35495:18;;;35488:30;35554:34;35534:18;;;35527:62;35625:29;35605:18;;;35598:57;35672:19;;5121:89:135;35274:423:156;5121:89:135;5322:1;5307:5;:12;:16;;;;:::i;:::-;5302:1;:21;5294:92;;;;;;;35904:2:156;5294:92:135;;;35886:21:156;35943:2;35923:18;;;35916:30;35982:34;35962:18;;;35955:62;36053:28;36033:18;;;36026:56;36099:19;;5294:92:135;35702:422:156;5294:92:135;5409:13;;;;;;;;4515:1346;5609:15;5633:3;5637:15;5633:20;;;;;;;;:::i;:::-;;;;;;;;;5627:27;;5609:45;;5676:33;5712:11;:19;;;5732:9;5712:30;;;;;;;;;;:::i;:::-;;;;;;;5676:66;;5780:20;5791:8;5780:10;:20::i;:::-;5764:36;-1:-1:-1;5822:20:135;5841:1;5822:20;;:::i;:::-;;;5447:414;;4443:4627;;;1105:1;5885:11;:19;;;:26;:59;5881:3189;;5964:17;5984:25;5997:11;5984:12;:25::i;:::-;5964:45;;6027:12;6048:4;6053:1;6048:7;;;;;;;;:::i;:::-;;;;;;;;-1:-1:-1;6074:12:135;6094:10;6103:1;6048:7;6094:10;:::i;:::-;6089:16;;:1;:16;:::i;:::-;6074:31;;6123:26;6152:25;6164:4;6170:6;6152:25;;:11;:25::i;:::-;6123:54;;6195:25;6223:33;6235:3;6240:15;6223:11;:33::i;:::-;6195:61;;6274:26;6303:51;6326:13;6341:12;6303:22;:51::i;:::-;6274:80;;6661:18;6637:13;:20;:42;6608:171;;;;;;;36693:2:156;6608:171:135;;;36675:21:156;36732:2;36712:18;;;36705:30;36771:34;36751:18;;;36744:62;36842:28;36822:18;;;36815:56;36888:19;;6608:171:135;36491:422:156;6608:171:135;6802:26;;;1447:1;6802:26;;:55;;-1:-1:-1;6832:25:135;;;1553:1;6832:25;6802:55;6798:2169;;;7498:18;7475:12;:19;:41;7442:185;;;;;;;37120:2:156;7442:185:135;;;37102:21:156;37159:2;37139:18;;;37132:30;37198:34;37178:18;;;37171:62;37269:31;37249:18;;;37242:59;37318:19;;7442:185:135;36918:425:156;7442:185:135;7985:43;8005:11;:19;;;8025:1;8005:22;;;;;;;;:::i;7985:43::-;7976:52;;8074:1;8058:6;:13;:17;8050:87;;;;;;;37550:2:156;8050:87:135;;;37532:21:156;37589:2;37569:18;;;37562:30;37628:34;37608:18;;;37601:62;37699:27;37679:18;;;37672:55;37744:19;;8050:87:135;37348:421:156;8050:87:135;8249:1;8234:5;:12;:16;;;;:::i;:::-;8229:1;:21;8221:90;;;;;;;37976:2:156;8221:90:135;;;37958:21:156;38015:2;37995:18;;;37988:30;38054:34;38034:18;;;38027:62;38125:26;38105:18;;;38098:54;38169:19;;8221:90:135;37774:420:156;8221:90:135;8334:13;;;;;;;;;;;;;;6798:2169;8376:31;;;;;:65;;-1:-1:-1;8411:30:135;;;1339:1;8411:30;8376:65;8372:595;;;8748:34;8759:11;:19;;;8779:1;8759:22;;;;;;;;:::i;:::-;;;;;;;8748:10;:34::i;:::-;8732:50;-1:-1:-1;8804:37:135;8823:18;8804:37;;:::i;:::-;;;8372:595;;;8888:60;;;;;38401:2:156;8888:60:135;;;38383:21:156;38440:2;38420:18;;;38413:30;38479:34;38459:18;;;38452:62;38550:20;38530:18;;;38523:48;38588:19;;8888:60:135;38199:414:156;8372:595:135;5946:3035;;;;;;5881:3189;;;9005:50;;;;;38820:2:156;9005:50:135;;;38802:21:156;38859:2;38839:18;;;38832:30;38898:34;38878:18;;;38871:62;38969:10;38949:18;;;38942:38;38997:19;;9005:50:135;38618:404:156;5881:3189:135;-1:-1:-1;3328:3:135;;;;:::i;:::-;;;;3290:5790;;;-1:-1:-1;9090:47:135;;;;;39229:2:156;9090:47:135;;;39211:21:156;39268:2;39248:18;;;39241:30;39307:34;39287:18;;;39280:62;39378:7;39358:18;;;39351:35;39403:19;;9090:47:135;39027:401:156;3861:223:38;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;311:102:45:-;367:6;397:1;392;:6;;:14;;405:1;392:14;;491:101;547:6;576:1;572;:5;:13;;584:1;572:13;;1208:273:65;1267:6;1391:36;491:4;1410:1;1399:8;1405:1;1399:5;:8::i;:::-;:12;;;;:::i;:::-;1398:28;;;;:::i;:::-;1391:6;:36::i;9434:390:135:-;9553:13;;9500:24;;9553:13;9585:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;9585:22:135;;;;;;;;;;;;;;;;9576:31;;9622:9;9617:201;9641:6;9637:1;:10;9617:201;;;9676:72;;;;;;;;9696:6;9703:1;9696:9;;;;;;;;:::i;:::-;;;;;;;9676:72;;;;9716:29;9735:6;9742:1;9735:9;;;;;;;;:::i;:::-;;;;;;;9716:18;:29::i;:::-;9676:72;;;9664:6;9671:1;9664:9;;;;;;;;:::i;:::-;;;;;;;;;;:84;9790:3;;9617:201;;;;9526:298;9434:390;;;:::o;4332:1978:121:-;4395:12;4419:21;4550:4;4544:11;4532:23;;4663:6;4657:13;4836:11;4830:4;4826:22;5195:4;5180:13;5176:24;5169:4;5165:9;5161:40;5151:8;5147:55;5141:4;5134:69;5293:13;5283:8;5276:31;;5434:4;5426:6;5422:17;5571:4;5561:8;5557:19;5662:4;5647:622;5675:11;5672:1;5669:18;5647:622;;;5854:1;5848:4;5844:12;5830;5826:31;5996:1;5984:10;5980:18;5974:25;5968:4;5963:37;6119:1;6113:4;6109:12;6101:6;6093:29;6249:4;6246:1;6242:12;6235:4;6227:6;6223:17;6215:40;-1:-1:-1;;5702:4:121;5695:12;5647:622;;;-1:-1:-1;6295:8:121;;4332:1978;-1:-1:-1;;;;;4332:1978:121:o;3993:464:133:-;4055:17;4085:18;4105;4125:20;4149:18;4163:3;4149:13;:18::i;:::-;4084:83;;-1:-1:-1;4084:83:133;-1:-1:-1;4084:83:133;-1:-1:-1;4198:21:133;4186:8;:33;;;;;;;;:::i;:::-;;4178:103;;;;;;;39824:2:156;4178:103:133;;;39806:21:156;39863:2;39843:18;;;39836:30;39902:34;39882:18;;;39875:62;39973:27;39953:18;;;39946:55;40018:19;;4178:103:133;39622:421:156;4178:103:133;4314:23;4327:10;4314;:23;:::i;:::-;4300:10;;:37;4292:102;;;;;;;40250:2:156;4292:102:133;;;40232:21:156;40289:2;40269:18;;;40262:30;40328:34;40308:18;;;40301:62;40399:22;40379:18;;;40372:50;40439:19;;4292:102:133;40048:416:156;4292:102:133;4412:38;4418:3;:7;;;4427:10;4439;4412:5;:38::i;10121:193:135:-;10195:16;10244:2;10229:5;:12;;;:17;:78;;10281:26;10301:5;10281:19;:26::i;:::-;10229:78;;;10249:29;10272:5;10249:22;:29::i;10495:172::-;10562:21;10606:54;10622:37;10642:5;:13;;;10656:1;10642:16;;;;;;;;:::i;10622:37::-;10606:15;:54::i;3805:237:121:-;3880:12;3918:6;:13;3908:6;:23;3904:70;;-1:-1:-1;3954:9:121;;;;;;;;;-1:-1:-1;3954:9:121;;3947:16;;3904:70;3990:45;3996:6;4004;4028;4012;:13;:22;;;;:::i;:::-;3990:5;:45::i;10892:321:135:-;10980:15;11007:11;11034:2;:9;11022:2;:9;:21;11021:47;;11059:2;:9;11021:47;;;11047:2;:9;11021:47;11007:61;;11078:129;11095:3;11085:7;:13;:43;;;;;11117:2;11120:7;11117:11;;;;;;;;:::i;:::-;;;;;;;;;11102:26;;;:2;11105:7;11102:11;;;;;;;;:::i;:::-;;;;;;;:26;11085:43;11078:129;;;11173:9;;;;;11078:129;;;10997:216;10892:321;;;;:::o;4948:499:38:-;5113:12;5170:5;5145:21;:30;;5137:81;;;;;;;40671:2:156;5137:81:38;;;40653:21:156;40710:2;40690:18;;;40683:30;40749:34;40729:18;;;40722:62;40820:8;40800:18;;;40793:36;40846:19;;5137:81:38;40469:402:156;5137:81:38;1465:19;;;;5228:60;;;;;;;41078:2:156;5228:60:38;;;41060:21:156;41117:2;41097:18;;;41090:30;41156:31;41136:18;;;41129:59;41205:18;;5228:60:38;40876:353:156;5228:60:38;5300:12;5314:23;5341:6;:11;;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:38:o;4596:2947:65:-;4644:8;4700:1;4696;:5;4688:27;;;;;;;41715:2:156;4688:27:65;;;41697:21:156;41754:1;41734:18;;;41727:29;41792:11;41772:18;;;41765:39;41821:18;;4688:27:65;41513:332:156;4688:27:65;5107:8;5145:2;5125:16;5138:1;5125:4;:16::i;:::-;5118:29;5175:3;:7;;;5161:22;;;;5208:17;;;6001:31;5997:35;;6052:5;;5459:2;6051:13;;;6068:32;6050:50;6120:5;;6119:13;;6136:33;6118:51;6189:5;;6188:13;;6205:33;6187:51;6258:5;;6257:13;;6274:33;6256:51;6327:5;;6326:13;;6343:32;6325:50;6395:5;;6394:13;;6411:30;6393:48;5398:31;5394:35;;5449:5;;5448:13;;5465:32;5447:50;5517:5;;5516:13;;5533:32;5515:50;5585:5;;5584:13;;5583:50;;5653:5;;5652:13;;5651:50;;5721:5;;5720:13;;;5719:50;;5787:5;;;:46;;6735:10;7125:43;7120:48;7232:71;:75;;;;7227:80;;;;7380:72;7375:77;7523:3;7517:9;;;-1:-1:-1;;4596:2947:65:o;1487:3103::-;1536:8;1718:21;1713:1;:26;1709:40;;-1:-1:-1;1748:1:65;;1487:3103;-1:-1:-1;1487:3103:65:o;1709:40::-;1948:21;1943:1;:26;1939:54;;1971:22;;;;;42052:2:156;1971:22:65;;;42034:21:156;42091:2;42071:18;;;42064:30;42130:14;42110:18;;;42103:42;42162:18;;1971:22:65;41850:336:156;1939:54:65;2266:5;2260:2;2255:7;;;2254:17;;-1:-1:-1;2535:8:65;2601:2;2559:29;2548:7;;;2547:41;2591:5;2547:49;2546:57;;2629:29;2625:33;;2621:37;;;3300:35;;;3355:5;;2935:2;3354:13;;;3371:32;3353:50;3423:5;;3422:13;;3421:51;;3492:5;;3491:13;;3508:34;3490:52;3562:5;;3561:13;;3560:53;;3633:5;;3632:13;;3649:35;3631:53;2941:32;2874:31;2870:35;;2925:5;;2924:13;;2923:50;;;2998:5;;;:40;;3058:5;3057:13;;;3074:35;3056:53;3127:5;;;3136:40;3127:50;4002:10;4502:49;4489:62;4564:3;:7;;;;4488:84;;;;;;-1:-1:-1;;1487:3103:65:o;3732:130:133:-;3791:21;3831:24;3840:14;3850:3;3840:9;:14::i;:::-;3831:8;:24::i;5246:4079::-;5335:15;5352;5369:17;5705:1;5692:3;:10;;;:14;5684:101;;;;;;;42393:2:156;5684:101:133;;;42375:21:156;42432:2;42412:18;;;42405:30;42471:34;42451:18;;;42444:62;42542:34;42522:18;;;42515:62;42614:12;42593:19;;;42586:41;42644:19;;5684:101:133;42191:478:156;5684:101:133;5816:7;;;;5898:10;;5796:17;5890:19;5943:4;5933:14;;5929:3390;;5999:1;6002;6005:21;5991:36;;;;;;;;;;5929:3390;6058:4;6048:6;:14;6044:3275;;6164:14;6181:13;6190:4;6181:6;:13;:::i;:::-;6164:30;;6247:6;6234:3;:10;;;:19;6209:140;;;;;;;42876:2:156;6209:140:133;;;42858:21:156;42915:2;42895:18;;;42888:30;42954:34;42934:18;;;42927:62;43025:34;43005:18;;;42998:62;43097:16;43076:19;;;43069:45;43131:19;;6209:140:133;42674:482:156;6209:140:133;6471:1;6462:11;;;6456:18;6476:14;6452:39;;6544:11;;;;:41;;-1:-1:-1;6559:26:133;;;;;;6544:41;6519:177;;;;;;;43363:2:156;6519:177:133;;;43345:21:156;43402:2;43382:18;;;43375:30;43441:34;43421:18;;;43414:62;43512:34;43492:18;;;43485:62;43584:15;43563:19;;;43556:44;43617:19;;6519:177:133;43161:481:156;6519:177:133;-1:-1:-1;6719:1:133;;-1:-1:-1;6722:6:133;-1:-1:-1;6730:21:133;;-1:-1:-1;6711:41:133;;-1:-1:-1;;6711:41:133;6044:3275;6783:4;6773:6;:14;6769:2550;;6831:19;6853:13;6862:4;6853:6;:13;:::i;:::-;6831:35;;6919:11;6906:3;:10;;;:24;6881:164;;;;;;;43849:2:156;6881:164:133;;;43831:21:156;43888:2;43868:18;;;43861:30;43927:34;43907:18;;;43900:62;43998:34;43978:18;;;43971:62;44070:19;44049;;;44042:48;44107:19;;6881:164:133;43647:485:156;6881:164:133;7167:1;7158:11;;7152:18;7172:14;7148:39;7060:25;7240:26;;;7215:143;;;;;;;44339:2:156;7215:143:133;;;44321:21:156;44378:2;44358:18;;;44351:30;44417:34;44397:18;;;44390:62;44488:34;44468:18;;;44461:62;44560:12;44539:19;;;44532:41;44590:19;;7215:143:133;44137:478:156;7215:143:133;7488:1;7479:11;;7473:18;7455:1;7451:19;;7446:3;7442:29;7438:54;7537:2;7528:11;;7520:96;;;;;;;44822:2:156;7520:96:133;;;44804:21:156;44861:2;44841:18;;;44834:30;44900:34;44880:18;;;44873:62;44971:34;44951:18;;;44944:62;45043:10;45022:19;;;45015:39;45071:19;;7520:96:133;44620:476:156;7520:96:133;7669:20;7683:6;7669:11;:20;:::i;:::-;7656:10;;:33;7631:168;;;;;;;45303:2:156;7631:168:133;;;45285:21:156;45342:2;45322:18;;;45315:30;45381:34;45361:18;;;45354:62;45452:34;45432:18;;;45425:62;45524:14;45503:19;;;45496:43;45556:19;;7631:168:133;45101:480:156;7631:168:133;7822:15;7826:11;7822:1;:15;:::i;:::-;7814:55;-1:-1:-1;7839:6:133;-1:-1:-1;7847:21:133;;-1:-1:-1;7814:55:133;;-1:-1:-1;;;;7814:55:133;6769:2550;7900:4;7890:6;:14;7886:1433;;8003:15;8021:13;8030:4;8021:6;:13;:::i;:::-;8003:31;;8070:7;8057:3;:10;;;:20;8049:107;;;;;;;45788:2:156;8049:107:133;;;45770:21:156;45827:2;45807:18;;;45800:30;45866:34;45846:18;;;45839:62;45937:34;45917:18;;;45910:62;46009:12;45988:19;;;45981:41;46039:19;;8049:107:133;45586:478:156;8049:107:133;8179:1;;-1:-1:-1;8182:7:133;-1:-1:-1;8179:1:133;;-1:-1:-1;8171:42:133;;-1:-1:-1;;8171:42:133;7886:1433;8270:20;8293:13;8302:4;8293:6;:13;:::i;:::-;8270:36;;8359:12;8346:3;:10;;;:25;8321:161;;;;;;;46271:2:156;8321:161:133;;;46253:21:156;46310:2;46290:18;;;46283:30;46349:34;46329:18;;;46322:62;46420:34;46400:18;;;46393:62;46492:15;46471:19;;;46464:44;46525:19;;8321:161:133;46069:481:156;8321:161:133;8604:1;8595:11;;8589:18;8609:14;8585:39;8497:25;8677:26;;;8652:141;;;;;;;46757:2:156;8652:141:133;;;46739:21:156;46796:2;46776:18;;;46769:30;46835:34;46815:18;;;46808:62;46906:34;46886:18;;;46879:62;46978:10;46957:19;;;46950:39;47006:19;;8652:141:133;46555:476:156;8652:141:133;8926:1;8917:11;;8911:18;8892:1;8888:20;;8883:3;8879:30;8875:55;8976:2;8966:12;;8958:95;;;;;;;47238:2:156;8958:95:133;;;47220:21:156;47277:2;47257:18;;;47250:30;47316:34;47296:18;;;47289:62;47387:34;47367:18;;;47360:62;47459:8;47438:19;;;47431:37;47485:19;;8958:95:133;47036:474:156;8958:95:133;9106:22;9121:7;9106:12;:22;:::i;:::-;9093:10;;:35;9068:168;;;;;;;47717:2:156;9068:168:133;;;47699:21:156;47756:2;47736:18;;;47729:30;47795:34;47775:18;;;47768:62;47866:34;47846:18;;;47839:62;47938:12;47917:19;;;47910:41;47968:19;;9068:168:133;47515:478:156;9068:168:133;9259:16;9263:12;9259:1;:16;:::i;:::-;9251:57;-1:-1:-1;9277:7:133;-1:-1:-1;9286:21:133;;-1:-1:-1;9251:57:133;;-1:-1:-1;;;;9251:57:133;5246:4079;;;;;;:::o;9585:780::-;9676:17;9722:7;9712:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;9712:18:133;-1:-1:-1;9705:25:133;-1:-1:-1;9740:54:133;;9772:11;9740:54;10053:11;10067:36;10096:7;10088:4;10067:36;:::i;:::-;10053:50;;10158:2;10152:4;10148:13;10183:1;10197:87;10211:7;10208:1;10205:14;10197:87;;;10269:11;;;10263:18;10249:12;;;10242:40;10234:2;10227:10;10197:87;;;10307:7;10304:1;10301:14;10298:51;;;10345:1;10335:7;10329:4;10325:18;10318:29;10298:51;;;10122:237;9585:780;;;;;:::o;4847:137::-;4912:17;4948:29;4954:3;:7;;;4963:1;4966:3;:10;;;4948:5;:29::i;660:2816:121:-;752:12;824:7;808;818:2;808:12;:23;;800:50;;;;;;;48200:2:156;800:50:121;;;48182:21:156;48239:2;48219:18;;;48212:30;48278:16;48258:18;;;48251:44;48312:18;;800:50:121;47998:338:156;800:50:121;892:6;881:7;872:6;:16;:26;;864:53;;;;;;;48200:2:156;864:53:121;;;48182:21:156;48239:2;48219:18;;;48212:30;48278:16;48258:18;;;48251:44;48312:18;;864:53:121;47998:338:156;864:53:121;965:7;956:6;:16;939:6;:13;:33;;931:63;;;;;;;48543:2:156;931:63:121;;;48525:21:156;48582:2;48562:18;;;48555:30;48621:19;48601:18;;;48594:47;48658:18;;931:63:121;48341:341:156;931:63:121;1015:22;1078:15;;1106:1931;;;;3178:4;3172:11;3159:24;;3365:1;3354:9;3347:20;3413:4;3402:9;3398:20;3392:4;3385:34;1071:2362;;1106:1931;1288:4;1282:11;1269:24;;1947:2;1938:7;1934:16;2329:9;2322:17;2316:4;2312:28;2300:9;2289;2285:25;2281:60;2377:7;2373:2;2369:16;2629:6;2615:9;2608:17;2602:4;2598:28;2586:9;2578:6;2574:22;2570:57;2566:70;2403:389;2662:3;2658:2;2655:11;2403:389;;;2780:9;;2769:21;;2703:4;2695:13;;;;2735;2403:389;;;-1:-1:-1;;2810:26:121;;;3018:2;3001:11;3014:7;2997:25;2991:4;2984:39;-1:-1:-1;1071:2362:121;-1:-1:-1;3460:9:121;660:2816;-1:-1:-1;;;;660:2816:121:o;7561:742:38:-;7707:12;7735:7;7731:566;;;-1:-1:-1;7765:10:38;7758:17;;7731:566;7876:17;;:21;7872:415;;8120:10;8114:17;8180:15;8167:10;8163:2;8159:19;8152:44;7872:415;8259:12;8252:20;;;;;;;;;;;:::i;15328:575:65:-;15376:9;15409:1;15405;:5;15397:27;;;;;;;41715:2:156;15397:27:65;;;41697:21:156;41754:1;41734:18;;;41727:29;41792:11;41772:18;;;41765:39;41821:18;;15397:27:65;41513:332:156;15397:27:65;-1:-1:-1;15821:1:65;15473:34;-1:-1:-1;;15467:1:65;15463:49;15566:9;;;15546:18;15543:33;15540:1;15536:41;15530:48;15624:9;;;15612:10;15609:25;15606:1;15602:33;15596:40;15678:9;;;15670:6;15667:21;15664:1;15660:29;15654:36;15730:9;;;15724:4;15721:19;15718:1;15714:27;;;15708:34;;;15781:9;;;15776:3;15773:18;15770:1;15766:26;15760:33;15832:9;;;15824:18;;;15817:26;;15811:33;15876:9;;;-1:-1:-1;15862:25:65;;15328:575::o;1298:390:133:-;-1:-1:-1;;;;;;;;;;;;;;;;;1453:1:133;1440:3;:10;:14;1432:101;;;;;;;42393:2:156;1432:101:133;;;42375:21:156;42432:2;42412:18;;;42405:30;42471:34;42451:18;;;42444:62;42542:34;42522:18;;;42515:62;42614:12;42593:19;;;42586:41;42644:19;;1432:101:133;42191:478:156;1432:101:133;-1:-1:-1;1640:41:133;;;;;;;;;1658:10;;1640:41;;1610:2;1601:12;;;1640:41;;;;;;;;1298:390::o;1840:1740::-;1901:21;1935:18;1955;1975:20;1999:18;2013:3;1999:13;:18::i;:::-;1934:83;;-1:-1:-1;1934:83:133;-1:-1:-1;1934:83:133;-1:-1:-1;2048:21:133;2036:8;:33;;;;;;;;:::i;:::-;;2028:102;;;;;;;48889:2:156;2028:102:133;;;48871:21:156;48928:2;48908:18;;;48901:30;48967:34;48947:18;;;48940:62;49038:26;49018:18;;;49011:54;49082:19;;2028:102:133;48687:420:156;2028:102:133;2176:10;;2149:23;2162:10;2149;:23;:::i;:::-;:37;2141:100;;;;;;;49314:2:156;2141:100:133;;;49296:21:156;49353:2;49333:18;;;49326:30;49392:34;49372:18;;;49365:62;49463:20;49443:18;;;49436:48;49501:19;;2141:100:133;49112:414:156;2141:100:133;2651:30;;;1123:2;2651:30;;;;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;2651:30:133;;;;;;;;;;;;;;-1:-1:-1;2644:37:133;-1:-1:-1;2692:17:133;2740:10;2760:681;2776:10;;2767:19;;2760:681;;;2803:18;2823;2846:150;2877:105;;;;;;;;2908:6;2895:3;:10;;;:19;;;;:::i;:::-;2877:105;;;;2972:6;2961:3;:7;;;2940:38;;;;:::i;:::-;2877:105;;2846:13;:150::i;:::-;2802:194;;;;;3201:153;;;;;;;;3248:10;3235;:23;;;;:::i;:::-;3201:153;;;;3332:6;3321:3;:7;;;3300:38;;;;:::i;:::-;3201:153;;;3183:4;3188:9;3183:15;;;;;;;;:::i;:::-;;;;;;;;;;:171;3369:14;3382:1;3369:14;;:::i;:::-;;-1:-1:-1;3407:23:133;3420:10;3407;:23;:::i;:::-;3397:33;;;;:::i;:::-;;;2788:653;;2760:681;;;-1:-1:-1;3541:23:133;;-1:-1:-1;3548:4:133;;1840:1740;-1:-1:-1;;;1840:1740:133:o;630:332:156:-;688:6;741:2;729:9;720:7;716:23;712:32;709:52;;;757:1;754;747:12;709:52;796:9;783:23;846:66;839:5;835:78;828:5;825:89;815:117;;928:1;925;918:12;1594:154;1680:42;1673:5;1669:54;1662:5;1659:65;1649:93;;1738:1;1735;1728:12;1649:93;1594:154;:::o;1753:936::-;1850:6;1858;1866;1874;1882;1935:3;1923:9;1914:7;1910:23;1906:33;1903:53;;;1952:1;1949;1942:12;1903:53;1991:9;1978:23;2010:31;2035:5;2010:31;:::i;:::-;2060:5;-1:-1:-1;2117:2:156;2102:18;;2089:32;2130:33;2089:32;2130:33;:::i;:::-;2182:7;-1:-1:-1;2236:2:156;2221:18;;2208:32;;-1:-1:-1;2291:2:156;2276:18;;2263:32;2314:18;2344:14;;;2341:34;;;2371:1;2368;2361:12;2341:34;2409:6;2398:9;2394:22;2384:32;;2454:7;2447:4;2443:2;2439:13;2435:27;2425:55;;2476:1;2473;2466:12;2425:55;2516:2;2503:16;2542:2;2534:6;2531:14;2528:34;;;2558:1;2555;2548:12;2528:34;2603:7;2598:2;2589:6;2585:2;2581:15;2577:24;2574:37;2571:57;;;2624:1;2621;2614:12;2571:57;1753:936;;;;-1:-1:-1;1753:936:156;;-1:-1:-1;2655:2:156;2647:11;;2677:6;1753:936;-1:-1:-1;;;1753:936:156:o;2925:184::-;2977:77;2974:1;2967:88;3074:4;3071:1;3064:15;3098:4;3095:1;3088:15;3114:334;3185:2;3179:9;3241:2;3231:13;;3246:66;3227:86;3215:99;;3344:18;3329:34;;3365:22;;;3326:62;3323:88;;;3391:18;;:::i;:::-;3427:2;3420:22;3114:334;;-1:-1:-1;3114:334:156:o;3453:589::-;3495:5;3548:3;3541:4;3533:6;3529:17;3525:27;3515:55;;3566:1;3563;3556:12;3515:55;3602:6;3589:20;3628:18;3624:2;3621:26;3618:52;;;3650:18;;:::i;:::-;3694:114;3802:4;3733:66;3726:4;3722:2;3718:13;3714:86;3710:97;3694:114;:::i;:::-;3833:2;3824:7;3817:19;3879:3;3872:4;3867:2;3859:6;3855:15;3851:26;3848:35;3845:55;;;3896:1;3893;3886:12;3845:55;3961:2;3954:4;3946:6;3942:17;3935:4;3926:7;3922:18;3909:55;4009:1;3984:16;;;4002:4;3980:27;3973:38;;;;3988:7;3453:589;-1:-1:-1;;;3453:589:156:o;4047:1032::-;4115:5;4163:4;4151:9;4146:3;4142:19;4138:30;4135:50;;;4181:1;4178;4171:12;4135:50;4214:2;4208:9;4256:4;4248:6;4244:17;4280:18;4348:6;4336:10;4333:22;4328:2;4316:10;4313:18;4310:46;4307:72;;;4359:18;;:::i;:::-;4399:10;4395:2;4388:22;4428:6;4419:15;;4471:9;4458:23;4450:6;4443:39;4534:2;4523:9;4519:18;4506:32;4491:47;;4547:33;4572:7;4547:33;:::i;:::-;4613:7;4608:2;4600:6;4596:15;4589:32;4673:2;4662:9;4658:18;4645:32;4630:47;;4686:33;4711:7;4686:33;:::i;:::-;4752:7;4747:2;4739:6;4735:15;4728:32;4821:2;4810:9;4806:18;4793:32;4788:2;4780:6;4776:15;4769:57;4888:3;4877:9;4873:19;4860:33;4854:3;4846:6;4842:16;4835:59;4945:3;4934:9;4930:19;4917:33;4903:47;;4973:2;4965:6;4962:14;4959:34;;;4989:1;4986;4979:12;4959:34;;5027:45;5068:3;5059:6;5048:9;5044:22;5027:45;:::i;:::-;5021:3;5013:6;5009:16;5002:71;;;4047:1032;;;;:::o;5084:1173::-;5284:6;5292;5300;5308;5316;5360:9;5351:7;5347:23;5390:3;5386:2;5382:12;5379:32;;;5407:1;5404;5397:12;5379:32;5447:9;5434:23;5476:18;5517:2;5509:6;5506:14;5503:34;;;5533:1;5530;5523:12;5503:34;5556:72;5620:7;5611:6;5600:9;5596:22;5556:72;:::i;:::-;5546:82;;5675:2;5664:9;5660:18;5647:32;5637:42;;5772:3;5703:66;5699:2;5695:75;5691:85;5688:105;;;5789:1;5786;5779:12;5688:105;5827:2;5816:9;5812:18;5802:28;;5883:3;5872:9;5868:19;5855:33;5839:49;;5913:2;5903:8;5900:16;5897:36;;;5929:1;5926;5919:12;5897:36;5967:8;5956:9;5952:24;5942:34;;6014:7;6007:4;6003:2;5999:13;5995:27;5985:55;;6036:1;6033;6026:12;5985:55;6076:2;6063:16;6049:30;;6102:2;6094:6;6091:14;6088:34;;;6118:1;6115;6108:12;6088:34;;6171:7;6166:2;6156:6;6153:1;6149:14;6145:2;6141:23;6137:32;6134:45;6131:65;;;6192:1;6189;6182:12;6131:65;5084:1173;;;;-1:-1:-1;5084:1173:156;;-1:-1:-1;;;6223:2:156;6215:11;;6245:6;5084:1173::o;6262:258::-;6334:1;6344:113;6358:6;6355:1;6352:13;6344:113;;;6434:11;;;6428:18;6415:11;;;6408:39;6380:2;6373:10;6344:113;;;6475:6;6472:1;6469:13;6466:48;;;-1:-1:-1;;6510:1:156;6492:16;;6485:27;6262:258::o;6525:317::-;6567:3;6605:5;6599:12;6632:6;6627:3;6620:19;6648:63;6704:6;6697:4;6692:3;6688:14;6681:4;6674:5;6670:16;6648:63;:::i;:::-;6756:2;6744:15;6761:66;6740:88;6731:98;;;;6831:4;6727:109;;6525:317;-1:-1:-1;;6525:317:156:o;6847:220::-;6996:2;6985:9;6978:21;6959:4;7016:45;7057:2;7046:9;7042:18;7034:6;7016:45;:::i;7072:180::-;7131:6;7184:2;7172:9;7163:7;7159:23;7155:32;7152:52;;;7200:1;7197;7190:12;7152:52;-1:-1:-1;7223:23:156;;7072:180;-1:-1:-1;7072:180:156:o;7257:374::-;7356:6;7409:2;7397:9;7388:7;7384:23;7380:32;7377:52;;;7425:1;7422;7415:12;7377:52;7465:9;7452:23;7498:18;7490:6;7487:30;7484:50;;;7530:1;7527;7520:12;7484:50;7553:72;7617:7;7608:6;7597:9;7593:22;7553:72;:::i;:::-;7543:82;7257:374;-1:-1:-1;;;;7257:374:156:o;7636:320::-;7704:6;7757:2;7745:9;7736:7;7732:23;7728:32;7725:52;;;7773:1;7770;7763:12;7725:52;7813:9;7800:23;7846:18;7838:6;7835:30;7832:50;;;7878:1;7875;7868:12;7832:50;7901:49;7942:7;7933:6;7922:9;7918:22;7901:49;:::i;7961:304::-;8146:10;8138:6;8134:23;8123:9;8116:42;8194:2;8189;8178:9;8174:18;8167:30;8097:4;8214:45;8255:2;8244:9;8240:18;8232:6;8214:45;:::i;8455:171::-;8522:20;;8582:18;8571:30;;8561:41;;8551:69;;8616:1;8613;8606:12;8551:69;8455:171;;;:::o;8631:184::-;8689:6;8742:2;8730:9;8721:7;8717:23;8713:32;8710:52;;;8758:1;8755;8748:12;8710:52;8781:28;8799:9;8781:28;:::i;9836:118::-;9922:5;9915:13;9908:21;9901:5;9898:32;9888:60;;9944:1;9941;9934:12;9959:732;10059:6;10067;10075;10083;10091;10144:3;10132:9;10123:7;10119:23;10115:33;10112:53;;;10161:1;10158;10151:12;10112:53;10200:9;10187:23;10219:31;10244:5;10219:31;:::i;:::-;10269:5;-1:-1:-1;10321:2:156;10306:18;;10293:32;;-1:-1:-1;10344:37:156;10377:2;10362:18;;10344:37;:::i;:::-;10334:47;;10433:2;10422:9;10418:18;10405:32;10446:30;10468:7;10446:30;:::i;:::-;10495:7;-1:-1:-1;10553:3:156;10538:19;;10525:33;10581:18;10570:30;;10567:50;;;10613:1;10610;10603:12;10567:50;10636:49;10677:7;10668:6;10657:9;10653:22;10636:49;:::i;:::-;10626:59;;;9959:732;;;;;;;;:::o;10696:853::-;10834:6;10842;10850;10858;10866;10919:3;10907:9;10898:7;10894:23;10890:33;10887:53;;;10936:1;10933;10926:12;10887:53;10975:9;10962:23;10994:31;11019:5;10994:31;:::i;:::-;11044:5;-1:-1:-1;11101:2:156;11086:18;;11073:32;11114:33;11073:32;11114:33;:::i;:::-;11166:7;-1:-1:-1;11225:2:156;11210:18;;11197:32;11238:33;11197:32;11238:33;:::i;:::-;11290:7;-1:-1:-1;11349:2:156;11334:18;;11321:32;11362:33;11321:32;11362:33;:::i;:::-;11414:7;-1:-1:-1;11473:3:156;11458:19;;11445:33;11487:30;11445:33;11487:30;:::i;:::-;11536:7;11526:17;;;10696:853;;;;;;;;:::o;13157:192::-;13236:13;;13289:34;13278:46;;13268:57;;13258:85;;13339:1;13336;13329:12;13354:616;13457:6;13510:2;13498:9;13489:7;13485:23;13481:32;13478:52;;;13526:1;13523;13516:12;13478:52;13559:2;13553:9;13601:2;13593:6;13589:15;13670:6;13658:10;13655:22;13634:18;13622:10;13619:34;13616:62;13613:88;;;13681:18;;:::i;:::-;13717:2;13710:22;13756:16;;13741:32;;13806:49;13851:2;13836:18;;13806:49;:::i;:::-;13801:2;13793:6;13789:15;13782:74;13889:49;13934:2;13923:9;13919:18;13889:49;:::i;:::-;13884:2;13872:15;;13865:74;13876:6;13354:616;-1:-1:-1;;;13354:616:156:o;13975:647::-;14068:6;14121:3;14109:9;14100:7;14096:23;14092:33;14089:53;;;14138:1;14135;14128:12;14089:53;14171:2;14165:9;14213:3;14205:6;14201:16;14283:6;14271:10;14268:22;14247:18;14235:10;14232:34;14229:62;14226:88;;;14294:18;;:::i;:::-;14334:10;14330:2;14323:22;;14382:9;14369:23;14361:6;14354:39;14454:2;14443:9;14439:18;14426:32;14421:2;14413:6;14409:15;14402:57;14520:2;14509:9;14505:18;14492:32;14487:2;14479:6;14475:15;14468:57;14586:2;14575:9;14571:18;14558:32;14553:2;14545:6;14541:15;14534:57;14610:6;14600:16;;;13975:647;;;;:::o;16119:934::-;16255:9;16289:18;16330:2;16322:6;16319:14;16316:40;;;16336:18;;:::i;:::-;16382:6;16379:1;16375:14;16408:4;16432:28;16456:2;16452;16448:11;16432:28;:::i;:::-;16494:19;;;16564:14;;;;16529:12;;;;16601:14;16590:26;;16587:46;;;16629:1;16626;16619:12;16587:46;16653:5;16667:353;16683:6;16678:3;16675:15;16667:353;;;16769:3;16756:17;16805:2;16792:11;16789:19;16786:109;;;16849:1;16878:2;16874;16867:14;16786:109;16920:57;16962:14;16948:11;16941:5;16937:23;16920:57;:::i;:::-;16908:70;;-1:-1:-1;16998:12:156;;;;16700;;16667:353;;;-1:-1:-1;17042:5:156;16119:934;-1:-1:-1;;;;;;;16119:934:156:o;18736:184::-;18806:6;18859:2;18847:9;18838:7;18834:23;18830:32;18827:52;;;18875:1;18872;18865:12;18827:52;-1:-1:-1;18898:16:156;;18736:184;-1:-1:-1;18736:184:156:o;21599:::-;21651:77;21648:1;21641:88;21748:4;21745:1;21738:15;21772:4;21769:1;21762:15;21788:128;21828:3;21859:1;21855:6;21852:1;21849:13;21846:39;;;21865:18;;:::i;:::-;-1:-1:-1;21901:9:156;;21788:128::o;22223:245::-;22290:6;22343:2;22331:9;22322:7;22318:23;22314:32;22311:52;;;22359:1;22356;22349:12;22311:52;22391:9;22385:16;22410:28;22432:5;22410:28;:::i;22832:125::-;22872:4;22900:1;22897;22894:8;22891:34;;;22905:18;;:::i;:::-;-1:-1:-1;22942:9:156;;22832:125::o;23364:270::-;23403:7;23435:18;23480:2;23477:1;23473:10;23510:2;23507:1;23503:10;23566:3;23562:2;23558:12;23553:3;23550:21;23543:3;23536:11;23529:19;23525:47;23522:73;;;23575:18;;:::i;:::-;23615:13;;23364:270;-1:-1:-1;;;;23364:270:156:o;23639:236::-;23678:3;23706:18;23751:2;23748:1;23744:10;23781:2;23778:1;23774:10;23812:3;23808:2;23804:12;23799:3;23796:21;23793:47;;;23820:18;;:::i;:::-;23856:13;;23639:236;-1:-1:-1;;;;23639:236:156:o;25680:642::-;25943:6;25938:3;25931:19;25980:6;25975:2;25970:3;25966:12;25959:28;26039:66;26030:6;26025:3;26021:16;26017:89;26012:2;26007:3;26003:12;25996:111;26160:6;26153:14;26146:22;26141:3;26137:32;26132:2;26127:3;26123:12;26116:54;25913:3;26199:6;26193:13;26215:60;26268:6;26263:2;26258:3;26254:12;26249:2;26241:6;26237:15;26215:60;:::i;:::-;26295:16;;;;26313:2;26291:25;;25680:642;-1:-1:-1;;;;;;25680:642:156:o;26946:656::-;27233:6;27222:9;27215:25;27196:4;27259:42;27349:2;27341:6;27337:15;27332:2;27321:9;27317:18;27310:43;27401:2;27393:6;27389:15;27384:2;27373:9;27369:18;27362:43;;27441:6;27436:2;27425:9;27421:18;27414:34;27485:6;27479:3;27468:9;27464:19;27457:35;27529:3;27523;27512:9;27508:19;27501:32;27550:46;27591:3;27580:9;27576:19;27568:6;27550:46;:::i;:::-;27542:54;26946:656;-1:-1:-1;;;;;;;;26946:656:156:o;28422:184::-;28474:77;28471:1;28464:88;28571:4;28568:1;28561:15;28595:4;28592:1;28585:15;28611:308;28650:1;28676;28666:35;;28681:18;;:::i;:::-;28798:66;28795:1;28792:73;28723:66;28720:1;28717:73;28713:153;28710:179;;;28869:18;;:::i;:::-;-1:-1:-1;28903:10:156;;28611:308::o;28924:369::-;28963:4;28999:1;28996;28992:9;29108:1;29040:66;29036:74;29033:1;29029:82;29024:2;29017:10;29013:99;29010:125;;;29115:18;;:::i;:::-;29234:1;29166:66;29162:74;29159:1;29155:82;29151:2;29147:91;29144:117;;;29241:18;;:::i;:::-;-1:-1:-1;;29278:9:156;;28924:369::o;29298:655::-;29337:7;29369:66;29461:1;29458;29454:9;29489:1;29486;29482:9;29534:1;29530:2;29526:10;29523:1;29520:17;29515:2;29511;29507:11;29503:35;29500:61;;;29541:18;;:::i;:::-;29580:66;29672:1;29669;29665:9;29719:1;29715:2;29710:11;29707:1;29703:19;29698:2;29694;29690:11;29686:37;29683:63;;;29726:18;;:::i;:::-;29772:1;29769;29765:9;29755:19;;29819:1;29815:2;29810:11;29807:1;29803:19;29798:2;29794;29790:11;29786:37;29783:63;;;29826:18;;:::i;:::-;29891:1;29887:2;29882:11;29879:1;29875:19;29870:2;29866;29862:11;29858:37;29855:63;;;29898:18;;:::i;:::-;-1:-1:-1;;;29938:9:156;;;;;29298:655;-1:-1:-1;;;29298:655:156:o;29958:367::-;29997:3;30032:1;30029;30025:9;30141:1;30073:66;30069:74;30066:1;30062:82;30057:2;30050:10;30046:99;30043:125;;;30148:18;;:::i;:::-;30267:1;30199:66;30195:74;30192:1;30188:82;30184:2;30180:91;30177:117;;;30274:18;;:::i;:::-;-1:-1:-1;;30310:9:156;;29958:367::o;30761:228::-;30801:7;30927:1;30859:66;30855:74;30852:1;30849:81;30844:1;30837:9;30830:17;30826:105;30823:131;;;30934:18;;:::i;:::-;-1:-1:-1;30974:9:156;;30761:228::o;30994:120::-;31034:1;31060;31050:35;;31065:18;;:::i;:::-;-1:-1:-1;31099:9:156;;30994:120::o;31717:167::-;31795:13;;31848:10;31837:22;;31827:33;;31817:61;;31874:1;31871;31864:12;31889:160;31966:13;;32019:4;32008:16;;31998:27;;31988:55;;32039:1;32036;32029:12;32054:888;32157:6;32210:3;32198:9;32189:7;32185:23;32181:33;32178:53;;;32227:1;32224;32217:12;32178:53;32260:2;32254:9;32302:3;32294:6;32290:16;32372:6;32360:10;32357:22;32336:18;32324:10;32321:34;32318:62;32315:88;;;32383:18;;:::i;:::-;32419:2;32412:22;32458:39;32487:9;32458:39;:::i;:::-;32450:6;32443:55;32531:47;32574:2;32563:9;32559:18;32531:47;:::i;:::-;32526:2;32518:6;32514:15;32507:72;32612:47;32655:2;32644:9;32640:18;32612:47;:::i;:::-;32607:2;32599:6;32595:15;32588:72;32693:48;32737:2;32726:9;32722:18;32693:48;:::i;:::-;32688:2;32680:6;32676:15;32669:73;32776:49;32820:3;32809:9;32805:19;32776:49;:::i;:::-;32770:3;32762:6;32758:16;32751:75;32860:50;32905:3;32894:9;32890:19;32860:50;:::i;:::-;32854:3;32842:16;;32835:76;32846:6;32054:888;-1:-1:-1;;;32054:888:156:o;32947:195::-;32986:3;33017:66;33010:5;33007:77;33004:103;;33087:18;;:::i;:::-;-1:-1:-1;33134:1:156;33123:13;;32947:195::o;33497:184::-;33549:77;33546:1;33539:88;33646:4;33643:1;33636:15;33670:4;33667:1;33660:15;36129:157;36159:1;36193:4;36190:1;36186:12;36217:3;36207:37;;36224:18;;:::i;:::-;36276:3;36269:4;36266:1;36262:12;36258:22;36253:27;;;36129:157;;;;:::o;36291:195::-;36329:4;36366;36363:1;36359:12;36398:4;36395:1;36391:12;36423:3;36418;36415:12;36412:38;;;36430:18;;:::i;:::-;36467:13;;;36291:195;-1:-1:-1;;;36291:195:156:o;39433:184::-;39485:77;39482:1;39475:88;39582:4;39579:1;39572:15;39606:4;39603:1;39596:15;41234:274;41363:3;41401:6;41395:13;41417:53;41463:6;41458:3;41451:4;41443:6;41439:17;41417:53;:::i;:::-;41486:16;;;;;41234:274;-1:-1:-1;;41234:274:156:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "GUARDIAN()": "724c184c",
    "L2_ORACLE()": "001c2ff6",
    "SYSTEM_CONFIG()": "f0498750",
    "depositTransaction(address,uint256,uint64,bool,bytes)": "e9e05c42",
    "depositedAmount()": "1d01364c",
    "donateETH()": "8b4c40b0",
    "finalizeWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes))": "8c3152e9",
    "finalizedWithdrawals(bytes32)": "a14238e7",
    "guardian()": "452a9320",
    "initialize(address,address,address,address,bool)": "fc5b5fda",
    "isOutputFinalized(uint256)": "6dbffb78",
    "l2Oracle()": "9b5f694a",
    "l2Sender()": "9bf62d82",
    "minimumGasLimit(uint64)": "a35d99df",
    "nativeTokenAddress()": "4d0047ee",
    "onApprove(address,address,uint256,bytes)": "4273ca16",
    "params()": "cff0ab96",
    "pause()": "8456cb59",
    "paused()": "5c975abb",
    "proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])": "4870496f",
    "provenWithdrawals(bytes32)": "e965084c",
    "supportsInterface(bytes4)": "01ffc9a7",
    "systemConfig()": "33d7e2bd",
    "unpackOnApproveData(bytes)": "92a162cf",
    "unpause()": "3f4ba83a",
    "version()": "54fd4d50"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"version\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"opaqueData\",\"type\":\"bytes\"}],\"name\":\"TransactionDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"withdrawalHash\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"name\":\"WithdrawalFinalized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"withdrawalHash\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"}],\"name\":\"WithdrawalProven\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"GUARDIAN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"L2_ORACLE\",\"outputs\":[{\"internalType\":\"contract L2OutputOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"SYSTEM_CONFIG\",\"outputs\":[{\"internalType\":\"contract SystemConfig\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"},{\"internalType\":\"uint64\",\"name\":\"_gasLimit\",\"type\":\"uint64\"},{\"internalType\":\"bool\",\"name\":\"_isCreation\",\"type\":\"bool\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"depositTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"depositedAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"donateETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Types.WithdrawalTransaction\",\"name\":\"_tx\",\"type\":\"tuple\"}],\"name\":\"finalizeWithdrawalTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"finalizedWithdrawals\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"guardian\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_nativeTokenAddress\",\"type\":\"address\"},{\"internalType\":\"contract L2OutputOracle\",\"name\":\"_l2Oracle\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_guardian\",\"type\":\"address\"},{\"internalType\":\"contract SystemConfig\",\"name\":\"_systemConfig\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_paused\",\"type\":\"bool\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_l2OutputIndex\",\"type\":\"uint256\"}],\"name\":\"isOutputFinalized\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"l2Oracle\",\"outputs\":[{\"internalType\":\"contract L2OutputOracle\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"l2Sender\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint64\",\"name\":\"_byteCount\",\"type\":\"uint64\"}],\"name\":\"minimumGasLimit\",\"outputs\":[{\"internalType\":\"uint64\",\"name\":\"\",\"type\":\"uint64\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nativeTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"onApprove\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"params\",\"outputs\":[{\"internalType\":\"uint128\",\"name\":\"prevBaseFee\",\"type\":\"uint128\"},{\"internalType\":\"uint64\",\"name\":\"prevBoughtGas\",\"type\":\"uint64\"},{\"internalType\":\"uint64\",\"name\":\"prevBlockNum\",\"type\":\"uint64\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"nonce\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"value\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"gasLimit\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"internalType\":\"struct Types.WithdrawalTransaction\",\"name\":\"_tx\",\"type\":\"tuple\"},{\"internalType\":\"uint256\",\"name\":\"_l2OutputIndex\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bytes32\",\"name\":\"version\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"stateRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"messagePasserStorageRoot\",\"type\":\"bytes32\"},{\"internalType\":\"bytes32\",\"name\":\"latestBlockhash\",\"type\":\"bytes32\"}],\"internalType\":\"struct Types.OutputRootProof\",\"name\":\"_outputRootProof\",\"type\":\"tuple\"},{\"internalType\":\"bytes[]\",\"name\":\"_withdrawalProof\",\"type\":\"bytes[]\"}],\"name\":\"proveWithdrawalTransaction\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"provenWithdrawals\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"outputRoot\",\"type\":\"bytes32\"},{\"internalType\":\"uint128\",\"name\":\"timestamp\",\"type\":\"uint128\"},{\"internalType\":\"uint128\",\"name\":\"l2OutputIndex\",\"type\":\"uint128\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"systemConfig\",\"outputs\":[{\"internalType\":\"contract SystemConfig\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"unpackOnApproveData\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"_minGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"custom:proxied\":\"@title OptimismPortal\",\"events\":{\"Paused(address)\":{\"params\":{\"account\":\"Address of the account triggering the pause.\"}},\"TransactionDeposited(address,address,uint256,bytes)\":{\"params\":{\"from\":\"Address that triggered the deposit transaction.\",\"opaqueData\":\"ABI encoded deposit data to be parsed off-chain.\",\"to\":\"Address that the deposit transaction is directed to.\",\"version\":\"Version of this deposit transaction event.\"}},\"Unpaused(address)\":{\"params\":{\"account\":\"Address of the account triggering the unpause.\"}},\"WithdrawalFinalized(bytes32,bool)\":{\"params\":{\"success\":\"Whether the withdrawal transaction was successful.\",\"withdrawalHash\":\"Hash of the withdrawal transaction.\"}},\"WithdrawalProven(bytes32,address,address)\":{\"params\":{\"from\":\"Address that triggered the withdrawal transaction.\",\"to\":\"Address that the withdrawal transaction is directed to.\",\"withdrawalHash\":\"Hash of the withdrawal transaction.\"}}},\"kind\":\"dev\",\"methods\":{\"GUARDIAN()\":{\"custom:legacy\":\"\"},\"L2_ORACLE()\":{\"custom:legacy\":\"\"},\"SYSTEM_CONFIG()\":{\"custom:legacy\":\"\"},\"depositTransaction(address,uint256,uint64,bool,bytes)\":{\"params\":{\"_data\":\"Data to trigger the recipient with.\",\"_gasLimit\":\"Amount of L2 gas to purchase by burning gas on L1.\",\"_isCreation\":\"Whether or not the transaction is a contract creation.\",\"_to\":\"Target address on L2.\",\"_value\":\"Native token value to send to the recipient.\"}},\"finalizeWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes))\":{\"params\":{\"_tx\":\"Withdrawal transaction to finalize.\"}},\"initialize(address,address,address,address,bool)\":{\"params\":{\"_guardian\":\"Address that can pause withdrawals.\",\"_l2Oracle\":\"Address of the L2OutputOracle contract.\",\"_paused\":\"Sets the contract's pausability state.\",\"_systemConfig\":\"Address of the SystemConfig contract.\"}},\"isOutputFinalized(uint256)\":{\"params\":{\"_l2OutputIndex\":\"Index of the L2 output to check.\"},\"returns\":{\"_0\":\"Whether or not the output is finalized.\"}},\"minimumGasLimit(uint64)\":{\"params\":{\"_byteCount\":\"Number of bytes in the calldata.\"},\"returns\":{\"_0\":\"The minimum gas limit for a deposit.\"}},\"onApprove(address,address,uint256,bytes)\":{\"params\":{\"_amount\":\"Approved amount\",\"_data\":\"Data used in OnApprove contract\",\"_owner\":\"Account that called approveAndCall\"}},\"proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])\":{\"params\":{\"_l2OutputIndex\":\"L2 output index to prove against.\",\"_outputRootProof\":\"Inclusion proof of the L2ToL1MessagePasser contract's storage root.\",\"_tx\":\"Withdrawal transaction to finalize.\",\"_withdrawalProof\":\"Inclusion proof of the withdrawal in L2ToL1MessagePasser contract.\"}},\"unpackOnApproveData(bytes)\":{\"params\":{\"_data\":\"Data used in OnApprove contract\"}}},\"stateVariables\":{\"guardian\":{\"custom:network-specific\":\"\"},\"l2Oracle\":{\"custom:network-specific\":\"\"},\"systemConfig\":{\"custom:network-specific\":\"\"},\"version\":{\"custom:semver\":\"1.10.0\"}},\"version\":1},\"userdoc\":{\"events\":{\"Paused(address)\":{\"notice\":\"Emitted when the pause is triggered.\"},\"TransactionDeposited(address,address,uint256,bytes)\":{\"notice\":\"Emitted when a transaction is deposited from L1 to L2.         The parameters of this event are read by the rollup node and used to derive deposit         transactions on L2.\"},\"Unpaused(address)\":{\"notice\":\"Emitted when the pause is lifted.\"},\"WithdrawalFinalized(bytes32,bool)\":{\"notice\":\"Emitted when a withdrawal transaction is finalized.\"},\"WithdrawalProven(bytes32,address,address)\":{\"notice\":\"Emitted when a withdrawal transaction is proven.\"}},\"kind\":\"user\",\"methods\":{\"GUARDIAN()\":{\"notice\":\"Getter for the Guardian\"},\"L2_ORACLE()\":{\"notice\":\"Getter for the L2OutputOracle\"},\"SYSTEM_CONFIG()\":{\"notice\":\"Getter for the SystemConfig\"},\"constructor\":{\"notice\":\"Constructs the OptimismPortal contract.\"},\"depositTransaction(address,uint256,uint64,bool,bytes)\":{\"notice\":\"deriving deposit transactions. Note that if a deposit is made by a contract, its         address will be aliased when retrieved using `tx.origin` or `msg.sender`. Consider         using the CrossDomainMessenger contracts for a simpler developer experience.\"},\"donateETH()\":{\"notice\":\"Accepts ETH value without triggering a deposit to L2.         This function mainly exists for the sake of the migration between the legacy         Optimism system and Bedrock.\"},\"finalizeWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes))\":{\"notice\":\"Finalizes a withdrawal transaction.\"},\"finalizedWithdrawals(bytes32)\":{\"notice\":\"A list of withdrawal hashes which have been successfully finalized.\"},\"guardian()\":{\"notice\":\"Address that has the ability to pause and unpause withdrawals.\"},\"initialize(address,address,address,address,bool)\":{\"notice\":\"Initializer.\"},\"isOutputFinalized(uint256)\":{\"notice\":\"Determine if a given output is finalized.         Reverts if the call to L2_ORACLE.getL2Output reverts.         Returns a boolean otherwise.\"},\"l2Oracle()\":{\"notice\":\"Address of the L2OutputOracle contract.\"},\"l2Sender()\":{\"notice\":\"Address of the L2 account which initiated a withdrawal in this transaction.         If the of this variable is the default L2 sender address, then we are NOT inside of         a call to finalizeWithdrawalTransaction.\"},\"minimumGasLimit(uint64)\":{\"notice\":\"Computes the minimum gas limit for a deposit.         The minimum gas limit linearly increases based on the size of the calldata.         This is to prevent users from creating L2 resource usage without paying for it.         This function can be used when interacting with the portal to ensure forwards         compatibility.\"},\"nativeTokenAddress()\":{\"notice\":\"Address of native (ERC-20 token)\"},\"onApprove(address,address,uint256,bytes)\":{\"notice\":\"ERC20 onApprove callback\"},\"params()\":{\"notice\":\"EIP-1559 style gas parameters.\"},\"pause()\":{\"notice\":\"Pauses withdrawals.\"},\"paused()\":{\"notice\":\"Determines if cross domain messaging is paused.         When set to true, withdrawals are paused.         This may be removed in the future.\"},\"proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])\":{\"notice\":\"Proves a withdrawal transaction.\"},\"provenWithdrawals(bytes32)\":{\"notice\":\"A mapping of withdrawal hashes to `ProvenWithdrawal` data.\"},\"systemConfig()\":{\"notice\":\"Address of the SystemConfig contract.\"},\"unpackOnApproveData(bytes)\":{\"notice\":\"unpack onApprove data\"},\"unpause()\":{\"notice\":\"Unpauses withdrawals.\"},\"version()\":{\"notice\":\"Semantic version.\"}},\"notice\":\"The OptimismPortal is a low-level contract responsible for passing messages between L1         and L2. Messages sent directly to the OptimismPortal have no form of replayability.         Users are encouraged to use the L1CrossDomainMessenger for a higher-level interface.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/L1/OptimismPortal.sol\":\"OptimismPortal\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@cwia/=lib/clones-with-immutable-args/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/solmate/\",\":clones-with-immutable-args/=lib/clones-with-immutable-args/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x2a21b14ff90012878752f230d3ffd5c3405e5938d06c97a7d89c0a64561d0d66\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3313a8f9bb1f9476857c9050067b31982bf2140b83d84f3bc0cec1f62bbe947f\",\"dweb:/ipfs/Qma17Pk8NRe7aB4UD3jjVxk7nSFaov3eQyv86hcyqkwJRV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6\",\"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929\",\"dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb3ebde1c8d27576db912d87c3560dab14adfb9cd001be95890ec4ba035e652e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a709421c4f5d4677db8216055d2d4dac96a613efdb08178a9f7041f0c5cef689\",\"dweb:/ipfs/QmYs2rStvVLDnSJs8HgaMD1ABwoKKWdiVbQyNfLfFWTjTy\"]},\"lib/solmate/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x622fcd8a49e132df5ec7651cc6ae3aaf0cf59bdcd67a9a804a1b9e2485113b7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af77088eb606427d4c55e578984a615779c86bc30646a20f7bb27299ba390f7c\",\"dweb:/ipfs/QmZGQdhdQDtHc7gZXWrKXgA3govc74X8U63BiWhPQK3mK8\"]},\"src/L1/L2OutputOracle.sol\":{\"keccak256\":\"0x60042eb3e619518cab9a8f2480b62871c2d813716e2e60d9a5e0c5f271c58705\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08538ef2aa99c508b56a8bb9b3c7b93476cba9dbf0b47783141e5e50a02156cc\",\"dweb:/ipfs/QmdvFZ1fUaTkNdmtB66rNAo73RxY7kccsgR6Uqz7psoXGN\"]},\"src/L1/OnApprove.sol\":{\"keccak256\":\"0xe25cdee8494fdad1df7f58d4d9bdc3c86717c4a9c1284c6b7f01c24fab9f62f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88bcdc10a43cb49a53ab2b13e3d4b517fafc7964e302e21ca2408cc67072ce5f\",\"dweb:/ipfs/QmdkZrScguyEFndS2r1TrXY7aPsyfJp1had8VMX3S3En6C\"]},\"src/L1/OptimismPortal.sol\":{\"keccak256\":\"0x40592466b0286174c250d1cb8d25ded2d65a606a1a81850c7b2f5a6fd423680d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3607e06fa66dbbe51c003949bbd29dc74b6ec1da9dd756f001a96596c3326c3c\",\"dweb:/ipfs/QmWxY1AGGecbM7cZLpoREJidJq371Q1HixXiyzXpwM1mQ5\"]},\"src/L1/ResourceMetering.sol\":{\"keccak256\":\"0xa4d524f2a5e91a0b63a62603e712001c51c77e8371b93cbb576bcb7d074b7588\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6d8141b6c6dc72d2e684c1ae388c005fd78c9ca7fc9c15dddebd227ca4fd730\",\"dweb:/ipfs/QmPfJrR4qssu769TDWJnxdTozqKtZUxiY8fs95bhfECTvG\"]},\"src/L1/SystemConfig.sol\":{\"keccak256\":\"0x4bbbc7868e948c44f29285a69383e93251a0c330a67929fb72def01cec060d4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e7ea2f8b3d49bee9c753f107ede6eda93b2cc0e34d0643fa14ebbb26c19e71b\",\"dweb:/ipfs/QmRP81F8FRVXVZs6u2f2poEPDnbFZhNwNYxHgCVEhGpEmB\"]},\"src/libraries/Arithmetic.sol\":{\"keccak256\":\"0x06a5a8b00527843f0cfc1bb3c0661316966a6cc432f88be31f23cde78cd07560\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5209e78e5415c0bf8b350362a825cc56152811abd6fcf2df3d4fa47766d3dee\",\"dweb:/ipfs/Qmf43xyc4Um32NmccayDfhm8kSnS2mhHXpPZnwABJS7cWm\"]},\"src/libraries/Burn.sol\":{\"keccak256\":\"0x90a795bcea3ef06d6d5011256c4bd63d1a4271f519246dbf1ee3e8f1c0e21010\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f60c3aa77cf0c484ddda4754157cff4dc0e2eace4bea67990daff4c0612ab5f\",\"dweb:/ipfs/QmSYGanMFve9uBC17X7hFneSFnwnJxz86Jgh6MX9BRMweb\"]},\"src/libraries/Bytes.sol\":{\"keccak256\":\"0x827f47d123b0fdf3b08816d5b33831811704dbf4e554e53f2269354f6bba8859\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3137ac7204d30a245a8b0d67aa6da5286f1bd8c90379daab561f84963b6db782\",\"dweb:/ipfs/QmWRhisw3axJK833gUScs23ETh2MLFbVzzqzYVMKSDN3S9\"]},\"src/libraries/Constants.sol\":{\"keccak256\":\"0xe12e392f05f80d3837c9392d016471181ae1ee6b84ea91b4e125e6523e5f18a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a3509231c228b7a4352573cd422cf0260dcbb94cfd915e5b664643db5475a5b7\",\"dweb:/ipfs/QmU2QERY4mHxqWFqSE5Exsy6Ftc5MTjTtYHC11fahLJWDC\"]},\"src/libraries/Encoding.sol\":{\"keccak256\":\"0xd5bbcb7da113e69562498d9543765e03912558ad66348682c2049c31e19f9d9b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afc6656ea10062c0c9d0817bb8683636caebf9222c9c102f29ea54fff74a2f93\",\"dweb:/ipfs/QmTNWtMgrTRHM6XtdUmA8bMZcuFpXoFCXgXR5vRihZWLuW\"]},\"src/libraries/Hashing.sol\":{\"keccak256\":\"0x44e2b2dcfffc39c0fc95ccd3c2118c7e7585fadf3dca327877d5756c7d4b21c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c89e0d9cfcb08a0d3c46c85367a32bbd9703468ba4c0c5bb6e124c1d173b26b\",\"dweb:/ipfs/QmaY3nQHBBhHK1wrurVXiEeNL8hfZ1pRmhpqW44tFDJnDf\"]},\"src/libraries/SafeCall.sol\":{\"keccak256\":\"0x0636a7abb242bb5d6f5606967c8929e6aa7e63468c1e2ce40ad4780d4c4bf94f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4daec2ac8f9907bbf84ef0a1c48f03bae8657619bc6f42b3a672f25c516f17a\",\"dweb:/ipfs/Qmf8gfRxBv8gEmCkP8YMPb2GGfj9QUnoNUyKE7UR2SWGnq\"]},\"src/libraries/Storage.sol\":{\"keccak256\":\"0x902a0a815272a5b76c647d9e82101aca765e9835a6624d0857088b9da0f58afd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c39a697aacb0a2eac0bf1fbd7790d835a685c61006f6d3464e19cbc96a24480\",\"dweb:/ipfs/QmV3T8ZTRWPB5CNuZjxwWQNoENd7W4SoBMnFG6Y6g6xYV4\"]},\"src/libraries/Types.sol\":{\"keccak256\":\"0x75900d651301940d24c00d14f0b3b6cbd6dcf379173ceaa31d9bf5be934a9aa4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c2632c5bf4fa3982391c32110eec9fa07917b483b2442cbaf18bdde5bdb24e\",\"dweb:/ipfs/QmSUs6Amkeootf5gKGbKi4mJpvhN2U8i1ED6ef2dskV5xc\"]},\"src/libraries/rlp/RLPReader.sol\":{\"keccak256\":\"0x9ba74a3b0a11693e622380807d213d5d1250d974e18b2cd768da9cbe719a6778\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0808d721ed9e05707526ee134faa051d707a95ee6b8bd6e0b1972275da8e5723\",\"dweb:/ipfs/QmcTTPu9xgckfWdbFUAcr2RAgk3J6vzyR4FpV798TjFMeN\"]},\"src/libraries/rlp/RLPWriter.sol\":{\"keccak256\":\"0x60ac401490f321c9c55e996a2c65151cd5e60de5f8f297e7c94d541c29820bb6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://070f5814db07e4a89173d44a36d90e4261ce530f7336034c01635347f2c2d88b\",\"dweb:/ipfs/QmXqr9yW5Kc8MYgr5wSehU5AiqS9pZ4FKxv7vwiwpZCcyV\"]},\"src/libraries/trie/MerkleTrie.sol\":{\"keccak256\":\"0xf8ba770ee6666e73ae43184c700e9c704b2c4ace71f9e3c2227ddc11a8148b4c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4702ccee1fe44aea3ee01d59e6152eb755da083f786f00947fec4437c064fe74\",\"dweb:/ipfs/QmQjFj5J7hrEM1dxJjFszzW2Cs7g7eMhYNBXonF2DXBstE\"]},\"src/libraries/trie/SecureMerkleTrie.sol\":{\"keccak256\":\"0xeaff8315cfd21197bc6bc859c2decf5d4f4838c9c357c502cdf2b1eac863d288\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79dcdcaa560aea51d138da4f5dc553a1808b6de090b2dc1629f18375edbff681\",\"dweb:/ipfs/QmbE4pUPhf5fLKW4W6cEjhQs55gEDvHmbmoBqkW1yz3bnw\"]},\"src/universal/ISemver.sol\":{\"keccak256\":\"0xba34562a8026f59886d2e07d1d58d90b9691d00e0788c6263cef6c22740cab44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0826f998632f83c103c3085bf2e872db79a69022b6d2e0444c83a64ca5283c2a\",\"dweb:/ipfs/QmcJ7PNqkAfKqbjFGRordtAg1v9DvcBSKvdTkVvciLyvQR\"]},\"src/vendor/AddressAliasHelper.sol\":{\"keccak256\":\"0x6ecb83b4ec80fbe49c22f4f95d90482de64660ef5d422a19f4d4b04df31c1237\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1d0885be6e473962f9a0622176a22300165ac0cc1a1d7f2e22b11c3d656ace88\",\"dweb:/ipfs/QmPRa3KmRpXW5P9ykveKRDgYN5zYo4cYLAYSnoqHX3KnXR\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "version",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "bytes",
              "name": "opaqueData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "TransactionDeposited",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "withdrawalHash",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bool",
              "name": "success",
              "type": "bool",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "WithdrawalFinalized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "withdrawalHash",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "WithdrawalProven",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "GUARDIAN",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "L2_ORACLE",
          "outputs": [
            {
              "internalType": "contract L2OutputOracle",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "SYSTEM_CONFIG",
          "outputs": [
            {
              "internalType": "contract SystemConfig",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_value",
              "type": "uint256"
            },
            {
              "internalType": "uint64",
              "name": "_gasLimit",
              "type": "uint64"
            },
            {
              "internalType": "bool",
              "name": "_isCreation",
              "type": "bool"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "depositTransaction"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "depositedAmount",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "function",
          "name": "donateETH"
        },
        {
          "inputs": [
            {
              "internalType": "struct Types.WithdrawalTransaction",
              "name": "_tx",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "gasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "finalizeWithdrawalTransaction"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "finalizedWithdrawals",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "guardian",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_nativeTokenAddress",
              "type": "address"
            },
            {
              "internalType": "contract L2OutputOracle",
              "name": "_l2Oracle",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_guardian",
              "type": "address"
            },
            {
              "internalType": "contract SystemConfig",
              "name": "_systemConfig",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "_paused",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_l2OutputIndex",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isOutputFinalized",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "l2Oracle",
          "outputs": [
            {
              "internalType": "contract L2OutputOracle",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "l2Sender",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "_byteCount",
              "type": "uint64"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "minimumGasLimit",
          "outputs": [
            {
              "internalType": "uint64",
              "name": "",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nativeTokenAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onApprove",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "params",
          "outputs": [
            {
              "internalType": "uint128",
              "name": "prevBaseFee",
              "type": "uint128"
            },
            {
              "internalType": "uint64",
              "name": "prevBoughtGas",
              "type": "uint64"
            },
            {
              "internalType": "uint64",
              "name": "prevBlockNum",
              "type": "uint64"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pause"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Types.WithdrawalTransaction",
              "name": "_tx",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "nonce",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "sender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "target",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "value",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256",
                  "name": "gasLimit",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes",
                  "name": "data",
                  "type": "bytes"
                }
              ]
            },
            {
              "internalType": "uint256",
              "name": "_l2OutputIndex",
              "type": "uint256"
            },
            {
              "internalType": "struct Types.OutputRootProof",
              "name": "_outputRootProof",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bytes32",
                  "name": "version",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "stateRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "messagePasserStorageRoot",
                  "type": "bytes32"
                },
                {
                  "internalType": "bytes32",
                  "name": "latestBlockhash",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "bytes[]",
              "name": "_withdrawalProof",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "proveWithdrawalTransaction"
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "provenWithdrawals",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "outputRoot",
              "type": "bytes32"
            },
            {
              "internalType": "uint128",
              "name": "timestamp",
              "type": "uint128"
            },
            {
              "internalType": "uint128",
              "name": "l2OutputIndex",
              "type": "uint128"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "systemConfig",
          "outputs": [
            {
              "internalType": "contract SystemConfig",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "unpackOnApproveData",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "_minGasLimit",
              "type": "uint32"
            },
            {
              "internalType": "bytes",
              "name": "_message",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpause"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "version",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "GUARDIAN()": {
            "custom:legacy": ""
          },
          "L2_ORACLE()": {
            "custom:legacy": ""
          },
          "SYSTEM_CONFIG()": {
            "custom:legacy": ""
          },
          "depositTransaction(address,uint256,uint64,bool,bytes)": {
            "params": {
              "_data": "Data to trigger the recipient with.",
              "_gasLimit": "Amount of L2 gas to purchase by burning gas on L1.",
              "_isCreation": "Whether or not the transaction is a contract creation.",
              "_to": "Target address on L2.",
              "_value": "Native token value to send to the recipient."
            }
          },
          "finalizeWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes))": {
            "params": {
              "_tx": "Withdrawal transaction to finalize."
            }
          },
          "initialize(address,address,address,address,bool)": {
            "params": {
              "_guardian": "Address that can pause withdrawals.",
              "_l2Oracle": "Address of the L2OutputOracle contract.",
              "_paused": "Sets the contract's pausability state.",
              "_systemConfig": "Address of the SystemConfig contract."
            }
          },
          "isOutputFinalized(uint256)": {
            "params": {
              "_l2OutputIndex": "Index of the L2 output to check."
            },
            "returns": {
              "_0": "Whether or not the output is finalized."
            }
          },
          "minimumGasLimit(uint64)": {
            "params": {
              "_byteCount": "Number of bytes in the calldata."
            },
            "returns": {
              "_0": "The minimum gas limit for a deposit."
            }
          },
          "onApprove(address,address,uint256,bytes)": {
            "params": {
              "_amount": "Approved amount",
              "_data": "Data used in OnApprove contract",
              "_owner": "Account that called approveAndCall"
            }
          },
          "proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])": {
            "params": {
              "_l2OutputIndex": "L2 output index to prove against.",
              "_outputRootProof": "Inclusion proof of the L2ToL1MessagePasser contract's storage root.",
              "_tx": "Withdrawal transaction to finalize.",
              "_withdrawalProof": "Inclusion proof of the withdrawal in L2ToL1MessagePasser contract."
            }
          },
          "unpackOnApproveData(bytes)": {
            "params": {
              "_data": "Data used in OnApprove contract"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "GUARDIAN()": {
            "notice": "Getter for the Guardian"
          },
          "L2_ORACLE()": {
            "notice": "Getter for the L2OutputOracle"
          },
          "SYSTEM_CONFIG()": {
            "notice": "Getter for the SystemConfig"
          },
          "constructor": {
            "notice": "Constructs the OptimismPortal contract."
          },
          "depositTransaction(address,uint256,uint64,bool,bytes)": {
            "notice": "deriving deposit transactions. Note that if a deposit is made by a contract, its         address will be aliased when retrieved using `tx.origin` or `msg.sender`. Consider         using the CrossDomainMessenger contracts for a simpler developer experience."
          },
          "donateETH()": {
            "notice": "Accepts ETH value without triggering a deposit to L2.         This function mainly exists for the sake of the migration between the legacy         Optimism system and Bedrock."
          },
          "finalizeWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes))": {
            "notice": "Finalizes a withdrawal transaction."
          },
          "finalizedWithdrawals(bytes32)": {
            "notice": "A list of withdrawal hashes which have been successfully finalized."
          },
          "guardian()": {
            "notice": "Address that has the ability to pause and unpause withdrawals."
          },
          "initialize(address,address,address,address,bool)": {
            "notice": "Initializer."
          },
          "isOutputFinalized(uint256)": {
            "notice": "Determine if a given output is finalized.         Reverts if the call to L2_ORACLE.getL2Output reverts.         Returns a boolean otherwise."
          },
          "l2Oracle()": {
            "notice": "Address of the L2OutputOracle contract."
          },
          "l2Sender()": {
            "notice": "Address of the L2 account which initiated a withdrawal in this transaction.         If the of this variable is the default L2 sender address, then we are NOT inside of         a call to finalizeWithdrawalTransaction."
          },
          "minimumGasLimit(uint64)": {
            "notice": "Computes the minimum gas limit for a deposit.         The minimum gas limit linearly increases based on the size of the calldata.         This is to prevent users from creating L2 resource usage without paying for it.         This function can be used when interacting with the portal to ensure forwards         compatibility."
          },
          "nativeTokenAddress()": {
            "notice": "Address of native (ERC-20 token)"
          },
          "onApprove(address,address,uint256,bytes)": {
            "notice": "ERC20 onApprove callback"
          },
          "params()": {
            "notice": "EIP-1559 style gas parameters."
          },
          "pause()": {
            "notice": "Pauses withdrawals."
          },
          "paused()": {
            "notice": "Determines if cross domain messaging is paused.         When set to true, withdrawals are paused.         This may be removed in the future."
          },
          "proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])": {
            "notice": "Proves a withdrawal transaction."
          },
          "provenWithdrawals(bytes32)": {
            "notice": "A mapping of withdrawal hashes to `ProvenWithdrawal` data."
          },
          "systemConfig()": {
            "notice": "Address of the SystemConfig contract."
          },
          "unpackOnApproveData(bytes)": {
            "notice": "unpack onApprove data"
          },
          "unpause()": {
            "notice": "Unpauses withdrawals."
          },
          "version()": {
            "notice": "Semantic version."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@cwia/=lib/clones-with-immutable-args/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@rari-capital/solmate/=lib/solmate/",
        "clones-with-immutable-args/=lib/clones-with-immutable-args/src/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "safe-contracts/=lib/safe-contracts/contracts/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 999999
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "src/L1/OptimismPortal.sol": "OptimismPortal"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888",
        "urls": [
          "bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a",
          "dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
        "urls": [
          "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
          "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x2a21b14ff90012878752f230d3ffd5c3405e5938d06c97a7d89c0a64561d0d66",
        "urls": [
          "bzz-raw://3313a8f9bb1f9476857c9050067b31982bf2140b83d84f3bc0cec1f62bbe947f",
          "dweb:/ipfs/Qma17Pk8NRe7aB4UD3jjVxk7nSFaov3eQyv86hcyqkwJRV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29",
        "urls": [
          "bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6",
          "dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10",
        "urls": [
          "bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487",
          "dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0",
        "urls": [
          "bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929",
          "dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xb3ebde1c8d27576db912d87c3560dab14adfb9cd001be95890ec4ba035e652e7",
        "urls": [
          "bzz-raw://a709421c4f5d4677db8216055d2d4dac96a613efdb08178a9f7041f0c5cef689",
          "dweb:/ipfs/QmYs2rStvVLDnSJs8HgaMD1ABwoKKWdiVbQyNfLfFWTjTy"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/utils/FixedPointMathLib.sol": {
        "keccak256": "0x622fcd8a49e132df5ec7651cc6ae3aaf0cf59bdcd67a9a804a1b9e2485113b7d",
        "urls": [
          "bzz-raw://af77088eb606427d4c55e578984a615779c86bc30646a20f7bb27299ba390f7c",
          "dweb:/ipfs/QmZGQdhdQDtHc7gZXWrKXgA3govc74X8U63BiWhPQK3mK8"
        ],
        "license": "MIT"
      },
      "src/L1/L2OutputOracle.sol": {
        "keccak256": "0x60042eb3e619518cab9a8f2480b62871c2d813716e2e60d9a5e0c5f271c58705",
        "urls": [
          "bzz-raw://08538ef2aa99c508b56a8bb9b3c7b93476cba9dbf0b47783141e5e50a02156cc",
          "dweb:/ipfs/QmdvFZ1fUaTkNdmtB66rNAo73RxY7kccsgR6Uqz7psoXGN"
        ],
        "license": "MIT"
      },
      "src/L1/OnApprove.sol": {
        "keccak256": "0xe25cdee8494fdad1df7f58d4d9bdc3c86717c4a9c1284c6b7f01c24fab9f62f6",
        "urls": [
          "bzz-raw://88bcdc10a43cb49a53ab2b13e3d4b517fafc7964e302e21ca2408cc67072ce5f",
          "dweb:/ipfs/QmdkZrScguyEFndS2r1TrXY7aPsyfJp1had8VMX3S3En6C"
        ],
        "license": "MIT"
      },
      "src/L1/OptimismPortal.sol": {
        "keccak256": "0x40592466b0286174c250d1cb8d25ded2d65a606a1a81850c7b2f5a6fd423680d",
        "urls": [
          "bzz-raw://3607e06fa66dbbe51c003949bbd29dc74b6ec1da9dd756f001a96596c3326c3c",
          "dweb:/ipfs/QmWxY1AGGecbM7cZLpoREJidJq371Q1HixXiyzXpwM1mQ5"
        ],
        "license": "MIT"
      },
      "src/L1/ResourceMetering.sol": {
        "keccak256": "0xa4d524f2a5e91a0b63a62603e712001c51c77e8371b93cbb576bcb7d074b7588",
        "urls": [
          "bzz-raw://d6d8141b6c6dc72d2e684c1ae388c005fd78c9ca7fc9c15dddebd227ca4fd730",
          "dweb:/ipfs/QmPfJrR4qssu769TDWJnxdTozqKtZUxiY8fs95bhfECTvG"
        ],
        "license": "MIT"
      },
      "src/L1/SystemConfig.sol": {
        "keccak256": "0x4bbbc7868e948c44f29285a69383e93251a0c330a67929fb72def01cec060d4e",
        "urls": [
          "bzz-raw://1e7ea2f8b3d49bee9c753f107ede6eda93b2cc0e34d0643fa14ebbb26c19e71b",
          "dweb:/ipfs/QmRP81F8FRVXVZs6u2f2poEPDnbFZhNwNYxHgCVEhGpEmB"
        ],
        "license": "MIT"
      },
      "src/libraries/Arithmetic.sol": {
        "keccak256": "0x06a5a8b00527843f0cfc1bb3c0661316966a6cc432f88be31f23cde78cd07560",
        "urls": [
          "bzz-raw://d5209e78e5415c0bf8b350362a825cc56152811abd6fcf2df3d4fa47766d3dee",
          "dweb:/ipfs/Qmf43xyc4Um32NmccayDfhm8kSnS2mhHXpPZnwABJS7cWm"
        ],
        "license": "MIT"
      },
      "src/libraries/Burn.sol": {
        "keccak256": "0x90a795bcea3ef06d6d5011256c4bd63d1a4271f519246dbf1ee3e8f1c0e21010",
        "urls": [
          "bzz-raw://9f60c3aa77cf0c484ddda4754157cff4dc0e2eace4bea67990daff4c0612ab5f",
          "dweb:/ipfs/QmSYGanMFve9uBC17X7hFneSFnwnJxz86Jgh6MX9BRMweb"
        ],
        "license": "MIT"
      },
      "src/libraries/Bytes.sol": {
        "keccak256": "0x827f47d123b0fdf3b08816d5b33831811704dbf4e554e53f2269354f6bba8859",
        "urls": [
          "bzz-raw://3137ac7204d30a245a8b0d67aa6da5286f1bd8c90379daab561f84963b6db782",
          "dweb:/ipfs/QmWRhisw3axJK833gUScs23ETh2MLFbVzzqzYVMKSDN3S9"
        ],
        "license": "MIT"
      },
      "src/libraries/Constants.sol": {
        "keccak256": "0xe12e392f05f80d3837c9392d016471181ae1ee6b84ea91b4e125e6523e5f18a2",
        "urls": [
          "bzz-raw://a3509231c228b7a4352573cd422cf0260dcbb94cfd915e5b664643db5475a5b7",
          "dweb:/ipfs/QmU2QERY4mHxqWFqSE5Exsy6Ftc5MTjTtYHC11fahLJWDC"
        ],
        "license": "MIT"
      },
      "src/libraries/Encoding.sol": {
        "keccak256": "0xd5bbcb7da113e69562498d9543765e03912558ad66348682c2049c31e19f9d9b",
        "urls": [
          "bzz-raw://afc6656ea10062c0c9d0817bb8683636caebf9222c9c102f29ea54fff74a2f93",
          "dweb:/ipfs/QmTNWtMgrTRHM6XtdUmA8bMZcuFpXoFCXgXR5vRihZWLuW"
        ],
        "license": "MIT"
      },
      "src/libraries/Hashing.sol": {
        "keccak256": "0x44e2b2dcfffc39c0fc95ccd3c2118c7e7585fadf3dca327877d5756c7d4b21c3",
        "urls": [
          "bzz-raw://6c89e0d9cfcb08a0d3c46c85367a32bbd9703468ba4c0c5bb6e124c1d173b26b",
          "dweb:/ipfs/QmaY3nQHBBhHK1wrurVXiEeNL8hfZ1pRmhpqW44tFDJnDf"
        ],
        "license": "MIT"
      },
      "src/libraries/SafeCall.sol": {
        "keccak256": "0x0636a7abb242bb5d6f5606967c8929e6aa7e63468c1e2ce40ad4780d4c4bf94f",
        "urls": [
          "bzz-raw://a4daec2ac8f9907bbf84ef0a1c48f03bae8657619bc6f42b3a672f25c516f17a",
          "dweb:/ipfs/Qmf8gfRxBv8gEmCkP8YMPb2GGfj9QUnoNUyKE7UR2SWGnq"
        ],
        "license": "MIT"
      },
      "src/libraries/Storage.sol": {
        "keccak256": "0x902a0a815272a5b76c647d9e82101aca765e9835a6624d0857088b9da0f58afd",
        "urls": [
          "bzz-raw://9c39a697aacb0a2eac0bf1fbd7790d835a685c61006f6d3464e19cbc96a24480",
          "dweb:/ipfs/QmV3T8ZTRWPB5CNuZjxwWQNoENd7W4SoBMnFG6Y6g6xYV4"
        ],
        "license": "MIT"
      },
      "src/libraries/Types.sol": {
        "keccak256": "0x75900d651301940d24c00d14f0b3b6cbd6dcf379173ceaa31d9bf5be934a9aa4",
        "urls": [
          "bzz-raw://99c2632c5bf4fa3982391c32110eec9fa07917b483b2442cbaf18bdde5bdb24e",
          "dweb:/ipfs/QmSUs6Amkeootf5gKGbKi4mJpvhN2U8i1ED6ef2dskV5xc"
        ],
        "license": "MIT"
      },
      "src/libraries/rlp/RLPReader.sol": {
        "keccak256": "0x9ba74a3b0a11693e622380807d213d5d1250d974e18b2cd768da9cbe719a6778",
        "urls": [
          "bzz-raw://0808d721ed9e05707526ee134faa051d707a95ee6b8bd6e0b1972275da8e5723",
          "dweb:/ipfs/QmcTTPu9xgckfWdbFUAcr2RAgk3J6vzyR4FpV798TjFMeN"
        ],
        "license": "MIT"
      },
      "src/libraries/rlp/RLPWriter.sol": {
        "keccak256": "0x60ac401490f321c9c55e996a2c65151cd5e60de5f8f297e7c94d541c29820bb6",
        "urls": [
          "bzz-raw://070f5814db07e4a89173d44a36d90e4261ce530f7336034c01635347f2c2d88b",
          "dweb:/ipfs/QmXqr9yW5Kc8MYgr5wSehU5AiqS9pZ4FKxv7vwiwpZCcyV"
        ],
        "license": "MIT"
      },
      "src/libraries/trie/MerkleTrie.sol": {
        "keccak256": "0xf8ba770ee6666e73ae43184c700e9c704b2c4ace71f9e3c2227ddc11a8148b4c",
        "urls": [
          "bzz-raw://4702ccee1fe44aea3ee01d59e6152eb755da083f786f00947fec4437c064fe74",
          "dweb:/ipfs/QmQjFj5J7hrEM1dxJjFszzW2Cs7g7eMhYNBXonF2DXBstE"
        ],
        "license": "MIT"
      },
      "src/libraries/trie/SecureMerkleTrie.sol": {
        "keccak256": "0xeaff8315cfd21197bc6bc859c2decf5d4f4838c9c357c502cdf2b1eac863d288",
        "urls": [
          "bzz-raw://79dcdcaa560aea51d138da4f5dc553a1808b6de090b2dc1629f18375edbff681",
          "dweb:/ipfs/QmbE4pUPhf5fLKW4W6cEjhQs55gEDvHmbmoBqkW1yz3bnw"
        ],
        "license": "MIT"
      },
      "src/universal/ISemver.sol": {
        "keccak256": "0xba34562a8026f59886d2e07d1d58d90b9691d00e0788c6263cef6c22740cab44",
        "urls": [
          "bzz-raw://0826f998632f83c103c3085bf2e872db79a69022b6d2e0444c83a64ca5283c2a",
          "dweb:/ipfs/QmcJ7PNqkAfKqbjFGRordtAg1v9DvcBSKvdTkVvciLyvQR"
        ],
        "license": "MIT"
      },
      "src/vendor/AddressAliasHelper.sol": {
        "keccak256": "0x6ecb83b4ec80fbe49c22f4f95d90482de64660ef5d422a19f4d4b04df31c1237",
        "urls": [
          "bzz-raw://1d0885be6e473962f9a0622176a22300165ac0cc1a1d7f2e22b11c3d656ace88",
          "dweb:/ipfs/QmPRa3KmRpXW5P9ykveKRDgYN5zYo4cYLAYSnoqHX3KnXR"
        ],
        "license": "Apache-2.0"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 30478,
        "contract": "src/L1/OptimismPortal.sol:OptimismPortal",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 30481,
        "contract": "src/L1/OptimismPortal.sol:OptimismPortal",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 51115,
        "contract": "src/L1/OptimismPortal.sol:OptimismPortal",
        "label": "params",
        "offset": 0,
        "slot": "1",
        "type": "t_struct(ResourceParams)51098_storage"
      },
      {
        "astId": 51120,
        "contract": "src/L1/OptimismPortal.sol:OptimismPortal",
        "label": "__gap",
        "offset": 0,
        "slot": "2",
        "type": "t_array(t_uint256)48_storage"
      },
      {
        "astId": 50017,
        "contract": "src/L1/OptimismPortal.sol:OptimismPortal",
        "label": "l2Sender",
        "offset": 0,
        "slot": "50",
        "type": "t_address"
      },
      {
        "astId": 50022,
        "contract": "src/L1/OptimismPortal.sol:OptimismPortal",
        "label": "finalizedWithdrawals",
        "offset": 0,
        "slot": "51",
        "type": "t_mapping(t_bytes32,t_bool)"
      },
      {
        "astId": 50028,
        "contract": "src/L1/OptimismPortal.sol:OptimismPortal",
        "label": "provenWithdrawals",
        "offset": 0,
        "slot": "52",
        "type": "t_mapping(t_bytes32,t_struct(ProvenWithdrawal)50006_storage)"
      },
      {
        "astId": 50031,
        "contract": "src/L1/OptimismPortal.sol:OptimismPortal",
        "label": "paused",
        "offset": 0,
        "slot": "53",
        "type": "t_bool"
      },
      {
        "astId": 50035,
        "contract": "src/L1/OptimismPortal.sol:OptimismPortal",
        "label": "l2Oracle",
        "offset": 1,
        "slot": "53",
        "type": "t_contract(L2OutputOracle)49889"
      },
      {
        "astId": 50039,
        "contract": "src/L1/OptimismPortal.sol:OptimismPortal",
        "label": "systemConfig",
        "offset": 0,
        "slot": "54",
        "type": "t_contract(SystemConfig)52221"
      },
      {
        "astId": 50042,
        "contract": "src/L1/OptimismPortal.sol:OptimismPortal",
        "label": "guardian",
        "offset": 0,
        "slot": "55",
        "type": "t_address"
      },
      {
        "astId": 50045,
        "contract": "src/L1/OptimismPortal.sol:OptimismPortal",
        "label": "nativeTokenAddress",
        "offset": 0,
        "slot": "56",
        "type": "t_address"
      },
      {
        "astId": 50047,
        "contract": "src/L1/OptimismPortal.sol:OptimismPortal",
        "label": "depositedAmount",
        "offset": 0,
        "slot": "57",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)48_storage": {
        "encoding": "inplace",
        "label": "uint256[48]",
        "numberOfBytes": "1536",
        "base": "t_uint256"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_contract(L2OutputOracle)49889": {
        "encoding": "inplace",
        "label": "contract L2OutputOracle",
        "numberOfBytes": "20"
      },
      "t_contract(SystemConfig)52221": {
        "encoding": "inplace",
        "label": "contract SystemConfig",
        "numberOfBytes": "20"
      },
      "t_mapping(t_bytes32,t_bool)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_bytes32,t_struct(ProvenWithdrawal)50006_storage)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => struct OptimismPortal.ProvenWithdrawal)",
        "numberOfBytes": "32",
        "value": "t_struct(ProvenWithdrawal)50006_storage"
      },
      "t_struct(ProvenWithdrawal)50006_storage": {
        "encoding": "inplace",
        "label": "struct OptimismPortal.ProvenWithdrawal",
        "numberOfBytes": "64",
        "members": [
          {
            "astId": 50001,
            "contract": "src/L1/OptimismPortal.sol:OptimismPortal",
            "label": "outputRoot",
            "offset": 0,
            "slot": "0",
            "type": "t_bytes32"
          },
          {
            "astId": 50003,
            "contract": "src/L1/OptimismPortal.sol:OptimismPortal",
            "label": "timestamp",
            "offset": 0,
            "slot": "1",
            "type": "t_uint128"
          },
          {
            "astId": 50005,
            "contract": "src/L1/OptimismPortal.sol:OptimismPortal",
            "label": "l2OutputIndex",
            "offset": 16,
            "slot": "1",
            "type": "t_uint128"
          }
        ]
      },
      "t_struct(ResourceParams)51098_storage": {
        "encoding": "inplace",
        "label": "struct ResourceMetering.ResourceParams",
        "numberOfBytes": "32",
        "members": [
          {
            "astId": 51093,
            "contract": "src/L1/OptimismPortal.sol:OptimismPortal",
            "label": "prevBaseFee",
            "offset": 0,
            "slot": "0",
            "type": "t_uint128"
          },
          {
            "astId": 51095,
            "contract": "src/L1/OptimismPortal.sol:OptimismPortal",
            "label": "prevBoughtGas",
            "offset": 16,
            "slot": "0",
            "type": "t_uint64"
          },
          {
            "astId": 51097,
            "contract": "src/L1/OptimismPortal.sol:OptimismPortal",
            "label": "prevBlockNum",
            "offset": 24,
            "slot": "0",
            "type": "t_uint64"
          }
        ]
      },
      "t_uint128": {
        "encoding": "inplace",
        "label": "uint128",
        "numberOfBytes": "16"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint64": {
        "encoding": "inplace",
        "label": "uint64",
        "numberOfBytes": "8"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  },
  "userdoc": {
    "version": 1,
    "kind": "user",
    "methods": {
      "GUARDIAN()": {
        "notice": "Getter for the Guardian"
      },
      "L2_ORACLE()": {
        "notice": "Getter for the L2OutputOracle"
      },
      "SYSTEM_CONFIG()": {
        "notice": "Getter for the SystemConfig"
      },
      "constructor": {
        "notice": "Constructs the OptimismPortal contract."
      },
      "depositTransaction(address,uint256,uint64,bool,bytes)": {
        "notice": "deriving deposit transactions. Note that if a deposit is made by a contract, its         address will be aliased when retrieved using `tx.origin` or `msg.sender`. Consider         using the CrossDomainMessenger contracts for a simpler developer experience."
      },
      "donateETH()": {
        "notice": "Accepts ETH value without triggering a deposit to L2.         This function mainly exists for the sake of the migration between the legacy         Optimism system and Bedrock."
      },
      "finalizeWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes))": {
        "notice": "Finalizes a withdrawal transaction."
      },
      "finalizedWithdrawals(bytes32)": {
        "notice": "A list of withdrawal hashes which have been successfully finalized."
      },
      "guardian()": {
        "notice": "Address that has the ability to pause and unpause withdrawals."
      },
      "initialize(address,address,address,address,bool)": {
        "notice": "Initializer."
      },
      "isOutputFinalized(uint256)": {
        "notice": "Determine if a given output is finalized.         Reverts if the call to L2_ORACLE.getL2Output reverts.         Returns a boolean otherwise."
      },
      "l2Oracle()": {
        "notice": "Address of the L2OutputOracle contract."
      },
      "l2Sender()": {
        "notice": "Address of the L2 account which initiated a withdrawal in this transaction.         If the of this variable is the default L2 sender address, then we are NOT inside of         a call to finalizeWithdrawalTransaction."
      },
      "minimumGasLimit(uint64)": {
        "notice": "Computes the minimum gas limit for a deposit.         The minimum gas limit linearly increases based on the size of the calldata.         This is to prevent users from creating L2 resource usage without paying for it.         This function can be used when interacting with the portal to ensure forwards         compatibility."
      },
      "nativeTokenAddress()": {
        "notice": "Address of native (ERC-20 token)"
      },
      "onApprove(address,address,uint256,bytes)": {
        "notice": "ERC20 onApprove callback"
      },
      "params()": {
        "notice": "EIP-1559 style gas parameters."
      },
      "pause()": {
        "notice": "Pauses withdrawals."
      },
      "paused()": {
        "notice": "Determines if cross domain messaging is paused.         When set to true, withdrawals are paused.         This may be removed in the future."
      },
      "proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])": {
        "notice": "Proves a withdrawal transaction."
      },
      "provenWithdrawals(bytes32)": {
        "notice": "A mapping of withdrawal hashes to `ProvenWithdrawal` data."
      },
      "systemConfig()": {
        "notice": "Address of the SystemConfig contract."
      },
      "unpackOnApproveData(bytes)": {
        "notice": "unpack onApprove data"
      },
      "unpause()": {
        "notice": "Unpauses withdrawals."
      },
      "version()": {
        "notice": "Semantic version."
      }
    },
    "events": {
      "Paused(address)": {
        "notice": "Emitted when the pause is triggered."
      },
      "TransactionDeposited(address,address,uint256,bytes)": {
        "notice": "Emitted when a transaction is deposited from L1 to L2.         The parameters of this event are read by the rollup node and used to derive deposit         transactions on L2."
      },
      "Unpaused(address)": {
        "notice": "Emitted when the pause is lifted."
      },
      "WithdrawalFinalized(bytes32,bool)": {
        "notice": "Emitted when a withdrawal transaction is finalized."
      },
      "WithdrawalProven(bytes32,address,address)": {
        "notice": "Emitted when a withdrawal transaction is proven."
      }
    },
    "notice": "The OptimismPortal is a low-level contract responsible for passing messages between L1         and L2. Messages sent directly to the OptimismPortal have no form of replayability.         Users are encouraged to use the L1CrossDomainMessenger for a higher-level interface."
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "methods": {
      "GUARDIAN()": {},
      "L2_ORACLE()": {},
      "SYSTEM_CONFIG()": {},
      "depositTransaction(address,uint256,uint64,bool,bytes)": {
        "params": {
          "_data": "Data to trigger the recipient with.",
          "_gasLimit": "Amount of L2 gas to purchase by burning gas on L1.",
          "_isCreation": "Whether or not the transaction is a contract creation.",
          "_to": "Target address on L2.",
          "_value": "Native token value to send to the recipient."
        }
      },
      "finalizeWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes))": {
        "params": {
          "_tx": "Withdrawal transaction to finalize."
        }
      },
      "initialize(address,address,address,address,bool)": {
        "params": {
          "_guardian": "Address that can pause withdrawals.",
          "_l2Oracle": "Address of the L2OutputOracle contract.",
          "_paused": "Sets the contract's pausability state.",
          "_systemConfig": "Address of the SystemConfig contract."
        }
      },
      "isOutputFinalized(uint256)": {
        "params": {
          "_l2OutputIndex": "Index of the L2 output to check."
        },
        "returns": {
          "_0": "Whether or not the output is finalized."
        }
      },
      "minimumGasLimit(uint64)": {
        "params": {
          "_byteCount": "Number of bytes in the calldata."
        },
        "returns": {
          "_0": "The minimum gas limit for a deposit."
        }
      },
      "onApprove(address,address,uint256,bytes)": {
        "params": {
          "_amount": "Approved amount",
          "_data": "Data used in OnApprove contract",
          "_owner": "Account that called approveAndCall"
        }
      },
      "proveWithdrawalTransaction((uint256,address,address,uint256,uint256,bytes),uint256,(bytes32,bytes32,bytes32,bytes32),bytes[])": {
        "params": {
          "_l2OutputIndex": "L2 output index to prove against.",
          "_outputRootProof": "Inclusion proof of the L2ToL1MessagePasser contract's storage root.",
          "_tx": "Withdrawal transaction to finalize.",
          "_withdrawalProof": "Inclusion proof of the withdrawal in L2ToL1MessagePasser contract."
        }
      },
      "unpackOnApproveData(bytes)": {
        "params": {
          "_data": "Data used in OnApprove contract"
        }
      }
    },
    "events": {
      "Paused(address)": {
        "params": {
          "account": "Address of the account triggering the pause."
        }
      },
      "TransactionDeposited(address,address,uint256,bytes)": {
        "params": {
          "from": "Address that triggered the deposit transaction.",
          "opaqueData": "ABI encoded deposit data to be parsed off-chain.",
          "to": "Address that the deposit transaction is directed to.",
          "version": "Version of this deposit transaction event."
        }
      },
      "Unpaused(address)": {
        "params": {
          "account": "Address of the account triggering the unpause."
        }
      },
      "WithdrawalFinalized(bytes32,bool)": {
        "params": {
          "success": "Whether the withdrawal transaction was successful.",
          "withdrawalHash": "Hash of the withdrawal transaction."
        }
      },
      "WithdrawalProven(bytes32,address,address)": {
        "params": {
          "from": "Address that triggered the withdrawal transaction.",
          "to": "Address that the withdrawal transaction is directed to.",
          "withdrawalHash": "Hash of the withdrawal transaction."
        }
      }
    }
  },
  "ast": {
    "absolutePath": "src/L1/OptimismPortal.sol",
    "id": 50826,
    "exportedSymbols": {
      "AddressAliasHelper": [
        66468
      ],
      "Constants": [
        60086
      ],
      "Hashing": [
        60794
      ],
      "IERC20": [
        31286
      ],
      "ISemver": [
        64010
      ],
      "Initializable": [
        30622
      ],
      "L2OutputOracle": [
        49889
      ],
      "OnApprove": [
        49954
      ],
      "OptimismPortal": [
        50825
      ],
      "ResourceMetering": [
        51427
      ],
      "SafeCall": [
        60970
      ],
      "SafeERC20": [
        31628
      ],
      "SecureMerkleTrie": [
        62951
      ],
      "SystemConfig": [
        52221
      ],
      "Types": [
        61267
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:24329:79",
    "nodes": [
      {
        "id": 49956,
        "nodeType": "PragmaDirective",
        "src": "32:23:79",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 49958,
        "nodeType": "ImportDirective",
        "src": "57:72:79",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50826,
        "sourceUnit": 31287,
        "symbolAliases": [
          {
            "foreign": {
              "id": 49957,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 31286,
              "src": "66:6:79",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 49960,
        "nodeType": "ImportDirective",
        "src": "130:84:79",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50826,
        "sourceUnit": 31629,
        "symbolAliases": [
          {
            "foreign": {
              "id": 49959,
              "name": "SafeERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 31628,
              "src": "139:9:79",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 49962,
        "nodeType": "ImportDirective",
        "src": "215:86:79",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol",
        "file": "@openzeppelin/contracts/proxy/utils/Initializable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50826,
        "sourceUnit": 30623,
        "symbolAliases": [
          {
            "foreign": {
              "id": 49961,
              "name": "Initializable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 30622,
              "src": "224:13:79",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 49964,
        "nodeType": "ImportDirective",
        "src": "302:54:79",
        "nodes": [],
        "absolutePath": "src/libraries/SafeCall.sol",
        "file": "src/libraries/SafeCall.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50826,
        "sourceUnit": 60971,
        "symbolAliases": [
          {
            "foreign": {
              "id": 49963,
              "name": "SafeCall",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 60970,
              "src": "311:8:79",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 49966,
        "nodeType": "ImportDirective",
        "src": "357:59:79",
        "nodes": [],
        "absolutePath": "src/L1/L2OutputOracle.sol",
        "file": "src/L1/L2OutputOracle.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50826,
        "sourceUnit": 49890,
        "symbolAliases": [
          {
            "foreign": {
              "id": 49965,
              "name": "L2OutputOracle",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 49889,
              "src": "366:14:79",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 49968,
        "nodeType": "ImportDirective",
        "src": "417:55:79",
        "nodes": [],
        "absolutePath": "src/L1/SystemConfig.sol",
        "file": "src/L1/SystemConfig.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50826,
        "sourceUnit": 52222,
        "symbolAliases": [
          {
            "foreign": {
              "id": 49967,
              "name": "SystemConfig",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 52221,
              "src": "426:12:79",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 49970,
        "nodeType": "ImportDirective",
        "src": "473:56:79",
        "nodes": [],
        "absolutePath": "src/libraries/Constants.sol",
        "file": "src/libraries/Constants.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50826,
        "sourceUnit": 60087,
        "symbolAliases": [
          {
            "foreign": {
              "id": 49969,
              "name": "Constants",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 60086,
              "src": "482:9:79",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 49972,
        "nodeType": "ImportDirective",
        "src": "530:48:79",
        "nodes": [],
        "absolutePath": "src/libraries/Types.sol",
        "file": "src/libraries/Types.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50826,
        "sourceUnit": 61268,
        "symbolAliases": [
          {
            "foreign": {
              "id": 49971,
              "name": "Types",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 61267,
              "src": "539:5:79",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 49974,
        "nodeType": "ImportDirective",
        "src": "579:52:79",
        "nodes": [],
        "absolutePath": "src/libraries/Hashing.sol",
        "file": "src/libraries/Hashing.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50826,
        "sourceUnit": 60795,
        "symbolAliases": [
          {
            "foreign": {
              "id": 49973,
              "name": "Hashing",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 60794,
              "src": "588:7:79",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 49976,
        "nodeType": "ImportDirective",
        "src": "632:75:79",
        "nodes": [],
        "absolutePath": "src/libraries/trie/SecureMerkleTrie.sol",
        "file": "src/libraries/trie/SecureMerkleTrie.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50826,
        "sourceUnit": 62952,
        "symbolAliases": [
          {
            "foreign": {
              "id": 49975,
              "name": "SecureMerkleTrie",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 62951,
              "src": "641:16:79",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 49978,
        "nodeType": "ImportDirective",
        "src": "708:71:79",
        "nodes": [],
        "absolutePath": "src/vendor/AddressAliasHelper.sol",
        "file": "src/vendor/AddressAliasHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50826,
        "sourceUnit": 66469,
        "symbolAliases": [
          {
            "foreign": {
              "id": 49977,
              "name": "AddressAliasHelper",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 66468,
              "src": "717:18:79",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 49980,
        "nodeType": "ImportDirective",
        "src": "780:63:79",
        "nodes": [],
        "absolutePath": "src/L1/ResourceMetering.sol",
        "file": "src/L1/ResourceMetering.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50826,
        "sourceUnit": 51428,
        "symbolAliases": [
          {
            "foreign": {
              "id": 49979,
              "name": "ResourceMetering",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 51427,
              "src": "789:16:79",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 49982,
        "nodeType": "ImportDirective",
        "src": "844:52:79",
        "nodes": [],
        "absolutePath": "src/universal/ISemver.sol",
        "file": "src/universal/ISemver.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50826,
        "sourceUnit": 64011,
        "symbolAliases": [
          {
            "foreign": {
              "id": 49981,
              "name": "ISemver",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 64010,
              "src": "853:7:79",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 49984,
        "nodeType": "ImportDirective",
        "src": "897:56:79",
        "nodes": [],
        "absolutePath": "src/libraries/Constants.sol",
        "file": "src/libraries/Constants.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50826,
        "sourceUnit": 60087,
        "symbolAliases": [
          {
            "foreign": {
              "id": 49983,
              "name": "Constants",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 60086,
              "src": "906:9:79",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 49986,
        "nodeType": "ImportDirective",
        "src": "954:44:79",
        "nodes": [],
        "absolutePath": "src/L1/OnApprove.sol",
        "file": "./OnApprove.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 50826,
        "sourceUnit": 49955,
        "symbolAliases": [
          {
            "foreign": {
              "id": 49985,
              "name": "OnApprove",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 49954,
              "src": "963:9:79",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 50825,
        "nodeType": "ContractDefinition",
        "src": "1338:23022:79",
        "nodes": [
          {
            "id": 49999,
            "nodeType": "UsingForDirective",
            "src": "1423:27:79",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 49996,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 31628,
              "src": "1429:9:79"
            },
            "typeName": {
              "id": 49998,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 49997,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 31286,
                "src": "1443:6:79"
              },
              "referencedDeclaration": 31286,
              "src": "1443:6:79",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$31286",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 50006,
            "nodeType": "StructDefinition",
            "src": "1750:117:79",
            "nodes": [],
            "canonicalName": "OptimismPortal.ProvenWithdrawal",
            "members": [
              {
                "constant": false,
                "id": 50001,
                "mutability": "mutable",
                "name": "outputRoot",
                "nameLocation": "1792:10:79",
                "nodeType": "VariableDeclaration",
                "scope": 50006,
                "src": "1784:18:79",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 50000,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1784:7:79",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 50003,
                "mutability": "mutable",
                "name": "timestamp",
                "nameLocation": "1820:9:79",
                "nodeType": "VariableDeclaration",
                "scope": 50006,
                "src": "1812:17:79",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 50002,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "1812:7:79",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 50005,
                "mutability": "mutable",
                "name": "l2OutputIndex",
                "nameLocation": "1847:13:79",
                "nodeType": "VariableDeclaration",
                "scope": 50006,
                "src": "1839:21:79",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint128",
                  "typeString": "uint128"
                },
                "typeName": {
                  "id": 50004,
                  "name": "uint128",
                  "nodeType": "ElementaryTypeName",
                  "src": "1839:7:79",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint128",
                    "typeString": "uint128"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "ProvenWithdrawal",
            "nameLocation": "1757:16:79",
            "scope": 50825,
            "visibility": "public"
          },
          {
            "id": 50010,
            "nodeType": "VariableDeclaration",
            "src": "1919:45:79",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 50007,
              "nodeType": "StructuredDocumentation",
              "src": "1873:41:79",
              "text": "@notice Version of the deposit event."
            },
            "mutability": "constant",
            "name": "DEPOSIT_VERSION",
            "nameLocation": "1945:15:79",
            "scope": 50825,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 50008,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1919:7:79",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 50009,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1963:1:79",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "id": 50014,
            "nodeType": "VariableDeclaration",
            "src": "2060:60:79",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 50011,
              "nodeType": "StructuredDocumentation",
              "src": "1971:84:79",
              "text": "@notice The L2 gas limit set when eth is deposited using the receive() function."
            },
            "mutability": "constant",
            "name": "RECEIVE_DEFAULT_GAS_LIMIT",
            "nameLocation": "2085:25:79",
            "scope": 50825,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint64",
              "typeString": "uint64"
            },
            "typeName": {
              "id": 50012,
              "name": "uint64",
              "nodeType": "ElementaryTypeName",
              "src": "2060:6:79",
              "typeDescriptions": {
                "typeIdentifier": "t_uint64",
                "typeString": "uint64"
              }
            },
            "value": {
              "hexValue": "3130305f303030",
              "id": 50013,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2113:7:79",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_100000_by_1",
                "typeString": "int_const 100000"
              },
              "value": "100_000"
            },
            "visibility": "internal"
          },
          {
            "id": 50017,
            "nodeType": "VariableDeclaration",
            "src": "2376:23:79",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 50015,
              "nodeType": "StructuredDocumentation",
              "src": "2127:244:79",
              "text": "@notice Address of the L2 account which initiated a withdrawal in this transaction.\n         If the of this variable is the default L2 sender address, then we are NOT inside of\n         a call to finalizeWithdrawalTransaction."
            },
            "functionSelector": "9bf62d82",
            "mutability": "mutable",
            "name": "l2Sender",
            "nameLocation": "2391:8:79",
            "scope": 50825,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 50016,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "2376:7:79",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 50022,
            "nodeType": "VariableDeclaration",
            "src": "2490:52:79",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 50018,
              "nodeType": "StructuredDocumentation",
              "src": "2406:79:79",
              "text": "@notice A list of withdrawal hashes which have been successfully finalized."
            },
            "functionSelector": "a14238e7",
            "mutability": "mutable",
            "name": "finalizedWithdrawals",
            "nameLocation": "2522:20:79",
            "scope": 50825,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
              "typeString": "mapping(bytes32 => bool)"
            },
            "typeName": {
              "id": 50021,
              "keyType": {
                "id": 50019,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "2498:7:79",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "2490:24:79",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                "typeString": "mapping(bytes32 => bool)"
              },
              "valueType": {
                "id": 50020,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "2509:4:79",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 50028,
            "nodeType": "VariableDeclaration",
            "src": "2624:61:79",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 50023,
              "nodeType": "StructuredDocumentation",
              "src": "2549:70:79",
              "text": "@notice A mapping of withdrawal hashes to `ProvenWithdrawal` data."
            },
            "functionSelector": "e965084c",
            "mutability": "mutable",
            "name": "provenWithdrawals",
            "nameLocation": "2668:17:79",
            "scope": 50825,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ProvenWithdrawal_$50006_storage_$",
              "typeString": "mapping(bytes32 => struct OptimismPortal.ProvenWithdrawal)"
            },
            "typeName": {
              "id": 50027,
              "keyType": {
                "id": 50024,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "2632:7:79",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "2624:36:79",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ProvenWithdrawal_$50006_storage_$",
                "typeString": "mapping(bytes32 => struct OptimismPortal.ProvenWithdrawal)"
              },
              "valueType": {
                "id": 50026,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 50025,
                  "name": "ProvenWithdrawal",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 50006,
                  "src": "2643:16:79"
                },
                "referencedDeclaration": 50006,
                "src": "2643:16:79",
                "typeDescriptions": {
                  "typeIdentifier": "t_struct$_ProvenWithdrawal_$50006_storage_ptr",
                  "typeString": "struct OptimismPortal.ProvenWithdrawal"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 50031,
            "nodeType": "VariableDeclaration",
            "src": "2865:18:79",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 50029,
              "nodeType": "StructuredDocumentation",
              "src": "2692:168:79",
              "text": "@notice Determines if cross domain messaging is paused.\n         When set to true, withdrawals are paused.\n         This may be removed in the future."
            },
            "functionSelector": "5c975abb",
            "mutability": "mutable",
            "name": "paused",
            "nameLocation": "2877:6:79",
            "scope": 50825,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 50030,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "2865:4:79",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 50035,
            "nodeType": "VariableDeclaration",
            "src": "2979:30:79",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 50032,
              "nodeType": "StructuredDocumentation",
              "src": "2890:84:79",
              "text": "@notice Address of the L2OutputOracle contract.\n @custom:network-specific"
            },
            "functionSelector": "9b5f694a",
            "mutability": "mutable",
            "name": "l2Oracle",
            "nameLocation": "3001:8:79",
            "scope": 50825,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_L2OutputOracle_$49889",
              "typeString": "contract L2OutputOracle"
            },
            "typeName": {
              "id": 50034,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 50033,
                "name": "L2OutputOracle",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 49889,
                "src": "2979:14:79"
              },
              "referencedDeclaration": 49889,
              "src": "2979:14:79",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_L2OutputOracle_$49889",
                "typeString": "contract L2OutputOracle"
              }
            },
            "visibility": "public"
          },
          {
            "id": 50039,
            "nodeType": "VariableDeclaration",
            "src": "3103:32:79",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 50036,
              "nodeType": "StructuredDocumentation",
              "src": "3016:82:79",
              "text": "@notice Address of the SystemConfig contract.\n @custom:network-specific"
            },
            "functionSelector": "33d7e2bd",
            "mutability": "mutable",
            "name": "systemConfig",
            "nameLocation": "3123:12:79",
            "scope": 50825,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_SystemConfig_$52221",
              "typeString": "contract SystemConfig"
            },
            "typeName": {
              "id": 50038,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 50037,
                "name": "SystemConfig",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 52221,
                "src": "3103:12:79"
              },
              "referencedDeclaration": 52221,
              "src": "3103:12:79",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SystemConfig_$52221",
                "typeString": "contract SystemConfig"
              }
            },
            "visibility": "public"
          },
          {
            "id": 50042,
            "nodeType": "VariableDeclaration",
            "src": "3254:23:79",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 50040,
              "nodeType": "StructuredDocumentation",
              "src": "3142:107:79",
              "text": "@notice Address that has the ability to pause and unpause withdrawals.\n @custom:network-specific"
            },
            "functionSelector": "452a9320",
            "mutability": "mutable",
            "name": "guardian",
            "nameLocation": "3269:8:79",
            "scope": 50825,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 50041,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "3254:7:79",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 50045,
            "nodeType": "VariableDeclaration",
            "src": "3333:33:79",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 50043,
              "nodeType": "StructuredDocumentation",
              "src": "3284:44:79",
              "text": "@notice Address of native (ERC-20 token)"
            },
            "functionSelector": "4d0047ee",
            "mutability": "mutable",
            "name": "nativeTokenAddress",
            "nameLocation": "3348:18:79",
            "scope": 50825,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 50044,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "3333:7:79",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 50047,
            "nodeType": "VariableDeclaration",
            "src": "3373:30:79",
            "nodes": [],
            "constant": false,
            "functionSelector": "1d01364c",
            "mutability": "mutable",
            "name": "depositedAmount",
            "nameLocation": "3388:15:79",
            "scope": 50825,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 50046,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "3373:7:79",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 50058,
            "nodeType": "EventDefinition",
            "src": "3914:112:79",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 50048,
              "nodeType": "StructuredDocumentation",
              "src": "3410:499:79",
              "text": "@notice Emitted when a transaction is deposited from L1 to L2.\n         The parameters of this event are read by the rollup node and used to derive deposit\n         transactions on L2.\n @param from       Address that triggered the deposit transaction.\n @param to         Address that the deposit transaction is directed to.\n @param version    Version of this deposit transaction event.\n @param opaqueData ABI encoded deposit data to be parsed off-chain."
            },
            "eventSelector": "b3813568d9991fc951961fcb4c784893574240a28925604d09fc577c55bb7c32",
            "name": "TransactionDeposited",
            "nameLocation": "3920:20:79",
            "parameters": {
              "id": 50057,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50050,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "3957:4:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 50058,
                  "src": "3941:20:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50049,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3941:7:79",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50052,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3979:2:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 50058,
                  "src": "3963:18:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50051,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3963:7:79",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50054,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "version",
                  "nameLocation": "3999:7:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 50058,
                  "src": "3983:23:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50053,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3983:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50056,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "opaqueData",
                  "nameLocation": "4014:10:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 50058,
                  "src": "4008:16:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 50055,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4008:5:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3940:85:79"
            }
          },
          {
            "id": 50067,
            "nodeType": "EventDefinition",
            "src": "4330:97:79",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 50059,
              "nodeType": "StructuredDocumentation",
              "src": "4032:293:79",
              "text": "@notice Emitted when a withdrawal transaction is proven.\n @param withdrawalHash Hash of the withdrawal transaction.\n @param from           Address that triggered the withdrawal transaction.\n @param to             Address that the withdrawal transaction is directed to."
            },
            "eventSelector": "67a6208cfcc0801d50f6cbe764733f4fddf66ac0b04442061a8a8c0cb6b63f62",
            "name": "WithdrawalProven",
            "nameLocation": "4336:16:79",
            "parameters": {
              "id": 50066,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50061,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "withdrawalHash",
                  "nameLocation": "4369:14:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 50067,
                  "src": "4353:30:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 50060,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4353:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50063,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "4401:4:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 50067,
                  "src": "4385:20:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50062,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4385:7:79",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50065,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "4423:2:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 50067,
                  "src": "4407:18:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50064,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4407:7:79",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4352:74:79"
            }
          },
          {
            "id": 50074,
            "nodeType": "EventDefinition",
            "src": "4648:72:79",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 50068,
              "nodeType": "StructuredDocumentation",
              "src": "4433:210:79",
              "text": "@notice Emitted when a withdrawal transaction is finalized.\n @param withdrawalHash Hash of the withdrawal transaction.\n @param success        Whether the withdrawal transaction was successful."
            },
            "eventSelector": "db5c7652857aa163daadd670e116628fb42e869d8ac4251ef8971d9e5727df1b",
            "name": "WithdrawalFinalized",
            "nameLocation": "4654:19:79",
            "parameters": {
              "id": 50073,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50070,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "withdrawalHash",
                  "nameLocation": "4690:14:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 50074,
                  "src": "4674:30:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 50069,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4674:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50072,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "success",
                  "nameLocation": "4711:7:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 50074,
                  "src": "4706:12:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 50071,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "4706:4:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4673:46:79"
            }
          },
          {
            "id": 50079,
            "nodeType": "EventDefinition",
            "src": "4847:30:79",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 50075,
              "nodeType": "StructuredDocumentation",
              "src": "4726:116:79",
              "text": "@notice Emitted when the pause is triggered.\n @param account Address of the account triggering the pause."
            },
            "eventSelector": "62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258",
            "name": "Paused",
            "nameLocation": "4853:6:79",
            "parameters": {
              "id": 50078,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50077,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "4868:7:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 50079,
                  "src": "4860:15:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50076,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4860:7:79",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4859:17:79"
            }
          },
          {
            "id": 50084,
            "nodeType": "EventDefinition",
            "src": "5003:32:79",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 50080,
              "nodeType": "StructuredDocumentation",
              "src": "4883:115:79",
              "text": "@notice Emitted when the pause is lifted.\n @param account Address of the account triggering the unpause."
            },
            "eventSelector": "5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa",
            "name": "Unpaused",
            "nameLocation": "5009:8:79",
            "parameters": {
              "id": 50083,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50082,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "5026:7:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 50084,
                  "src": "5018:15:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50081,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5018:7:79",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5017:17:79"
            }
          },
          {
            "id": 50096,
            "nodeType": "ModifierDefinition",
            "src": "5078:103:79",
            "nodes": [],
            "body": {
              "id": 50095,
              "nodeType": "Block",
              "src": "5103:78:79",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 50090,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 50088,
                          "name": "paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50031,
                          "src": "5121:6:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 50089,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "5131:5:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "5121:15:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f7074696d69736d506f7274616c3a20706175736564",
                        "id": 50091,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5138:24:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b66caa771ead292be27065b6fdbf17fc2b4f01cda6f3a71dafb599bc9ced165d",
                          "typeString": "literal_string \"OptimismPortal: paused\""
                        },
                        "value": "OptimismPortal: paused"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b66caa771ead292be27065b6fdbf17fc2b4f01cda6f3a71dafb599bc9ced165d",
                          "typeString": "literal_string \"OptimismPortal: paused\""
                        }
                      ],
                      "id": 50087,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5113:7:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 50092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5113:50:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50093,
                  "nodeType": "ExpressionStatement",
                  "src": "5113:50:79"
                },
                {
                  "id": 50094,
                  "nodeType": "PlaceholderStatement",
                  "src": "5173:1:79"
                }
              ]
            },
            "documentation": {
              "id": 50085,
              "nodeType": "StructuredDocumentation",
              "src": "5041:32:79",
              "text": "@notice Reverts when paused."
            },
            "name": "whenNotPaused",
            "nameLocation": "5087:13:79",
            "parameters": {
              "id": 50086,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5100:2:79"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 50100,
            "nodeType": "VariableDeclaration",
            "src": "5251:41:79",
            "nodes": [],
            "baseFunctions": [
              64009
            ],
            "constant": true,
            "documentation": {
              "id": 50097,
              "nodeType": "StructuredDocumentation",
              "src": "5187:59:79",
              "text": "@notice Semantic version.\n @custom:semver 1.10.0"
            },
            "functionSelector": "54fd4d50",
            "mutability": "constant",
            "name": "version",
            "nameLocation": "5274:7:79",
            "scope": 50825,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 50098,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "5251:6:79",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "312e31302e30",
              "id": 50099,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "5284:8:79",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_0da5b5e4c121ebd588f58cd2a27b23bac1ec4a69fdf68241600b139ec2a21f64",
                "typeString": "literal_string \"1.10.0\""
              },
              "value": "1.10.0"
            },
            "visibility": "public"
          },
          {
            "id": 50129,
            "nodeType": "FunctionDefinition",
            "src": "5355:264:79",
            "nodes": [],
            "body": {
              "id": 50128,
              "nodeType": "Block",
              "src": "5369:250:79",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 50107,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5433:1:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 50106,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5425:7:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 50105,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5425:7:79",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 50108,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5425:10:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 50112,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5483:1:79",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 50111,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5475:7:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 50110,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5475:7:79",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 50113,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5475:10:79",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 50109,
                          "name": "L2OutputOracle",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 49889,
                          "src": "5460:14:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_L2OutputOracle_$49889_$",
                            "typeString": "type(contract L2OutputOracle)"
                          }
                        },
                        "id": 50114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5460:26:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_L2OutputOracle_$49889",
                          "typeString": "contract L2OutputOracle"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 50117,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "5519:1:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 50116,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5511:7:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 50115,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5511:7:79",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 50118,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5511:10:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 50122,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "5571:1:79",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 50121,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "5563:7:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 50120,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "5563:7:79",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 50123,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5563:10:79",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 50119,
                          "name": "SystemConfig",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 52221,
                          "src": "5550:12:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SystemConfig_$52221_$",
                            "typeString": "type(contract SystemConfig)"
                          }
                        },
                        "id": 50124,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5550:24:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SystemConfig_$52221",
                          "typeString": "contract SystemConfig"
                        }
                      },
                      {
                        "hexValue": "74727565",
                        "id": 50125,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5597:4:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_L2OutputOracle_$49889",
                          "typeString": "contract L2OutputOracle"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_SystemConfig_$52221",
                          "typeString": "contract SystemConfig"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 50104,
                      "name": "initialize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50178,
                      "src": "5379:10:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_contract$_L2OutputOracle_$49889_$_t_address_$_t_contract$_SystemConfig_$52221_$_t_bool_$returns$__$",
                        "typeString": "function (address,contract L2OutputOracle,address,contract SystemConfig,bool)"
                      }
                    },
                    "id": 50126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [
                      "_nativeTokenAddress",
                      "_l2Oracle",
                      "_guardian",
                      "_systemConfig",
                      "_paused"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "5379:233:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50127,
                  "nodeType": "ExpressionStatement",
                  "src": "5379:233:79"
                }
              ]
            },
            "documentation": {
              "id": 50101,
              "nodeType": "StructuredDocumentation",
              "src": "5299:51:79",
              "text": "@notice Constructs the OptimismPortal contract."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 50102,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5366:2:79"
            },
            "returnParameters": {
              "id": 50103,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5369:0:79"
            },
            "scope": 50825,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50178,
            "nodeType": "FunctionDefinition",
            "src": "5909:510:79",
            "nodes": [],
            "body": {
              "id": 50177,
              "nodeType": "Block",
              "src": "6155:264:79",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 50151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 50149,
                      "name": "nativeTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50045,
                      "src": "6165:18:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 50150,
                      "name": "_nativeTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50132,
                      "src": "6186:19:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6165:40:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 50152,
                  "nodeType": "ExpressionStatement",
                  "src": "6165:40:79"
                },
                {
                  "expression": {
                    "id": 50156,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 50153,
                      "name": "l2Sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50017,
                      "src": "6215:8:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 50154,
                        "name": "Constants",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60086,
                        "src": "6226:9:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Constants_$60086_$",
                          "typeString": "type(library Constants)"
                        }
                      },
                      "id": 50155,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "DEFAULT_L2_SENDER",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60044,
                      "src": "6226:27:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6215:38:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 50157,
                  "nodeType": "ExpressionStatement",
                  "src": "6215:38:79"
                },
                {
                  "expression": {
                    "id": 50160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 50158,
                      "name": "l2Oracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50035,
                      "src": "6263:8:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_L2OutputOracle_$49889",
                        "typeString": "contract L2OutputOracle"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 50159,
                      "name": "_l2Oracle",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50135,
                      "src": "6274:9:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_L2OutputOracle_$49889",
                        "typeString": "contract L2OutputOracle"
                      }
                    },
                    "src": "6263:20:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_L2OutputOracle_$49889",
                      "typeString": "contract L2OutputOracle"
                    }
                  },
                  "id": 50161,
                  "nodeType": "ExpressionStatement",
                  "src": "6263:20:79"
                },
                {
                  "expression": {
                    "id": 50164,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 50162,
                      "name": "systemConfig",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50039,
                      "src": "6293:12:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SystemConfig_$52221",
                        "typeString": "contract SystemConfig"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 50163,
                      "name": "_systemConfig",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50140,
                      "src": "6308:13:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_SystemConfig_$52221",
                        "typeString": "contract SystemConfig"
                      }
                    },
                    "src": "6293:28:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SystemConfig_$52221",
                      "typeString": "contract SystemConfig"
                    }
                  },
                  "id": 50165,
                  "nodeType": "ExpressionStatement",
                  "src": "6293:28:79"
                },
                {
                  "expression": {
                    "id": 50168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 50166,
                      "name": "guardian",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50042,
                      "src": "6331:8:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 50167,
                      "name": "_guardian",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50137,
                      "src": "6342:9:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "6331:20:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 50169,
                  "nodeType": "ExpressionStatement",
                  "src": "6331:20:79"
                },
                {
                  "expression": {
                    "id": 50172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 50170,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50031,
                      "src": "6361:6:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 50171,
                      "name": "_paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50142,
                      "src": "6370:7:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "6361:16:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 50173,
                  "nodeType": "ExpressionStatement",
                  "src": "6361:16:79"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 50174,
                      "name": "__ResourceMetering_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 51426,
                      "src": "6387:23:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 50175,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6387:25:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50176,
                  "nodeType": "ExpressionStatement",
                  "src": "6387:25:79"
                }
              ]
            },
            "documentation": {
              "id": 50130,
              "nodeType": "StructuredDocumentation",
              "src": "5625:279:79",
              "text": "@notice Initializer.\n @param _l2Oracle Address of the L2OutputOracle contract.\n @param _guardian Address that can pause withdrawals.\n @param _paused Sets the contract's pausability state.\n @param _systemConfig Address of the SystemConfig contract."
            },
            "functionSelector": "fc5b5fda",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 50145,
                      "name": "Constants",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60086,
                      "src": "6128:9:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Constants_$60086_$",
                        "typeString": "type(library Constants)"
                      }
                    },
                    "id": 50146,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "INITIALIZER",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 60085,
                    "src": "6128:21:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 50147,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 50144,
                  "name": "reinitializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 30575,
                  "src": "6114:13:79"
                },
                "nodeType": "ModifierInvocation",
                "src": "6114:36:79"
              }
            ],
            "name": "initialize",
            "nameLocation": "5918:10:79",
            "parameters": {
              "id": 50143,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50132,
                  "mutability": "mutable",
                  "name": "_nativeTokenAddress",
                  "nameLocation": "5946:19:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 50178,
                  "src": "5938:27:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50131,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5938:7:79",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50135,
                  "mutability": "mutable",
                  "name": "_l2Oracle",
                  "nameLocation": "5990:9:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 50178,
                  "src": "5975:24:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_L2OutputOracle_$49889",
                    "typeString": "contract L2OutputOracle"
                  },
                  "typeName": {
                    "id": 50134,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 50133,
                      "name": "L2OutputOracle",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 49889,
                      "src": "5975:14:79"
                    },
                    "referencedDeclaration": 49889,
                    "src": "5975:14:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_L2OutputOracle_$49889",
                      "typeString": "contract L2OutputOracle"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50137,
                  "mutability": "mutable",
                  "name": "_guardian",
                  "nameLocation": "6017:9:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 50178,
                  "src": "6009:17:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50136,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6009:7:79",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50140,
                  "mutability": "mutable",
                  "name": "_systemConfig",
                  "nameLocation": "6049:13:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 50178,
                  "src": "6036:26:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_SystemConfig_$52221",
                    "typeString": "contract SystemConfig"
                  },
                  "typeName": {
                    "id": 50139,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 50138,
                      "name": "SystemConfig",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 52221,
                      "src": "6036:12:79"
                    },
                    "referencedDeclaration": 52221,
                    "src": "6036:12:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SystemConfig_$52221",
                      "typeString": "contract SystemConfig"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50142,
                  "mutability": "mutable",
                  "name": "_paused",
                  "nameLocation": "6077:7:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 50178,
                  "src": "6072:12:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 50141,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "6072:4:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5928:162:79"
            },
            "returnParameters": {
              "id": 50148,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6155:0:79"
            },
            "scope": 50825,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50188,
            "nodeType": "FunctionDefinition",
            "src": "6494:92:79",
            "nodes": [],
            "body": {
              "id": 50187,
              "nodeType": "Block",
              "src": "6554:32:79",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 50185,
                    "name": "l2Oracle",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 50035,
                    "src": "6571:8:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_L2OutputOracle_$49889",
                      "typeString": "contract L2OutputOracle"
                    }
                  },
                  "functionReturnParameters": 50184,
                  "id": 50186,
                  "nodeType": "Return",
                  "src": "6564:15:79"
                }
              ]
            },
            "documentation": {
              "id": 50179,
              "nodeType": "StructuredDocumentation",
              "src": "6425:64:79",
              "text": "@notice Getter for the L2OutputOracle\n @custom:legacy"
            },
            "functionSelector": "001c2ff6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "L2_ORACLE",
            "nameLocation": "6503:9:79",
            "parameters": {
              "id": 50180,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6512:2:79"
            },
            "returnParameters": {
              "id": 50184,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50183,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 50188,
                  "src": "6538:14:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_L2OutputOracle_$49889",
                    "typeString": "contract L2OutputOracle"
                  },
                  "typeName": {
                    "id": 50182,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 50181,
                      "name": "L2OutputOracle",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 49889,
                      "src": "6538:14:79"
                    },
                    "referencedDeclaration": 49889,
                    "src": "6538:14:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_L2OutputOracle_$49889",
                      "typeString": "contract L2OutputOracle"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6537:16:79"
            },
            "scope": 50825,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 50198,
            "nodeType": "FunctionDefinition",
            "src": "6659:98:79",
            "nodes": [],
            "body": {
              "id": 50197,
              "nodeType": "Block",
              "src": "6721:36:79",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 50195,
                    "name": "systemConfig",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 50039,
                    "src": "6738:12:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SystemConfig_$52221",
                      "typeString": "contract SystemConfig"
                    }
                  },
                  "functionReturnParameters": 50194,
                  "id": 50196,
                  "nodeType": "Return",
                  "src": "6731:19:79"
                }
              ]
            },
            "documentation": {
              "id": 50189,
              "nodeType": "StructuredDocumentation",
              "src": "6592:62:79",
              "text": "@notice Getter for the SystemConfig\n @custom:legacy"
            },
            "functionSelector": "f0498750",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "SYSTEM_CONFIG",
            "nameLocation": "6668:13:79",
            "parameters": {
              "id": 50190,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6681:2:79"
            },
            "returnParameters": {
              "id": 50194,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50193,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 50198,
                  "src": "6707:12:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_SystemConfig_$52221",
                    "typeString": "contract SystemConfig"
                  },
                  "typeName": {
                    "id": 50192,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 50191,
                      "name": "SystemConfig",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 52221,
                      "src": "6707:12:79"
                    },
                    "referencedDeclaration": 52221,
                    "src": "6707:12:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_SystemConfig_$52221",
                      "typeString": "contract SystemConfig"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6706:14:79"
            },
            "scope": 50825,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 50207,
            "nodeType": "FunctionDefinition",
            "src": "6826:84:79",
            "nodes": [],
            "body": {
              "id": 50206,
              "nodeType": "Block",
              "src": "6878:32:79",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 50204,
                    "name": "guardian",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 50042,
                    "src": "6895:8:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 50203,
                  "id": 50205,
                  "nodeType": "Return",
                  "src": "6888:15:79"
                }
              ]
            },
            "documentation": {
              "id": 50199,
              "nodeType": "StructuredDocumentation",
              "src": "6763:58:79",
              "text": "@notice Getter for the Guardian\n @custom:legacy"
            },
            "functionSelector": "724c184c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "GUARDIAN",
            "nameLocation": "6835:8:79",
            "parameters": {
              "id": 50200,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6843:2:79"
            },
            "returnParameters": {
              "id": 50203,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50202,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 50207,
                  "src": "6869:7:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50201,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6869:7:79",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6868:9:79"
            },
            "scope": 50825,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 50229,
            "nodeType": "FunctionDefinition",
            "src": "6952:173:79",
            "nodes": [],
            "body": {
              "id": 50228,
              "nodeType": "Block",
              "src": "6978:147:79",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 50215,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 50212,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "6996:3:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 50213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "6996:10:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 50214,
                          "name": "guardian",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50042,
                          "src": "7010:8:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "6996:22:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f7074696d69736d506f7274616c3a206f6e6c7920677561726469616e2063616e207061757365",
                        "id": 50216,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7020:41:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a662ad7462f0018e8b171ba19146984ad716c45a2c8d7c903bdd6e1628b95f08",
                          "typeString": "literal_string \"OptimismPortal: only guardian can pause\""
                        },
                        "value": "OptimismPortal: only guardian can pause"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a662ad7462f0018e8b171ba19146984ad716c45a2c8d7c903bdd6e1628b95f08",
                          "typeString": "literal_string \"OptimismPortal: only guardian can pause\""
                        }
                      ],
                      "id": 50211,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "6988:7:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 50217,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6988:74:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50218,
                  "nodeType": "ExpressionStatement",
                  "src": "6988:74:79"
                },
                {
                  "expression": {
                    "id": 50221,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 50219,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50031,
                      "src": "7072:6:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 50220,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7081:4:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "7072:13:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 50222,
                  "nodeType": "ExpressionStatement",
                  "src": "7072:13:79"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 50224,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7107:3:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 50225,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7107:10:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 50223,
                      "name": "Paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50079,
                      "src": "7100:6:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 50226,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7100:18:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50227,
                  "nodeType": "EmitStatement",
                  "src": "7095:23:79"
                }
              ]
            },
            "documentation": {
              "id": 50208,
              "nodeType": "StructuredDocumentation",
              "src": "6916:31:79",
              "text": "@notice Pauses withdrawals."
            },
            "functionSelector": "8456cb59",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "pause",
            "nameLocation": "6961:5:79",
            "parameters": {
              "id": 50209,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6966:2:79"
            },
            "returnParameters": {
              "id": 50210,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6978:0:79"
            },
            "scope": 50825,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 50251,
            "nodeType": "FunctionDefinition",
            "src": "7169:180:79",
            "nodes": [],
            "body": {
              "id": 50250,
              "nodeType": "Block",
              "src": "7197:152:79",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 50237,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 50234,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "7215:3:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 50235,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "7215:10:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 50236,
                          "name": "guardian",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50042,
                          "src": "7229:8:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "7215:22:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f7074696d69736d506f7274616c3a206f6e6c7920677561726469616e2063616e20756e7061757365",
                        "id": 50238,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7239:43:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9b69e94c34df6db33f20b596e1e1d19a7e5843e1b38ae4395fe1bbf64e89e262",
                          "typeString": "literal_string \"OptimismPortal: only guardian can unpause\""
                        },
                        "value": "OptimismPortal: only guardian can unpause"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9b69e94c34df6db33f20b596e1e1d19a7e5843e1b38ae4395fe1bbf64e89e262",
                          "typeString": "literal_string \"OptimismPortal: only guardian can unpause\""
                        }
                      ],
                      "id": 50233,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "7207:7:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 50239,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7207:76:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50240,
                  "nodeType": "ExpressionStatement",
                  "src": "7207:76:79"
                },
                {
                  "expression": {
                    "id": 50243,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 50241,
                      "name": "paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50031,
                      "src": "7293:6:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 50242,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7302:5:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "7293:14:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 50244,
                  "nodeType": "ExpressionStatement",
                  "src": "7293:14:79"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 50246,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7331:3:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 50247,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7331:10:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 50245,
                      "name": "Unpaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50084,
                      "src": "7322:8:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 50248,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7322:20:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50249,
                  "nodeType": "EmitStatement",
                  "src": "7317:25:79"
                }
              ]
            },
            "documentation": {
              "id": 50230,
              "nodeType": "StructuredDocumentation",
              "src": "7131:33:79",
              "text": "@notice Unpauses withdrawals."
            },
            "functionSelector": "3f4ba83a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "unpause",
            "nameLocation": "7178:7:79",
            "parameters": {
              "id": 50231,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7185:2:79"
            },
            "returnParameters": {
              "id": 50232,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7197:0:79"
            },
            "scope": 50825,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 50266,
            "nodeType": "FunctionDefinition",
            "src": "7842:120:79",
            "nodes": [],
            "body": {
              "id": 50265,
              "nodeType": "Block",
              "src": "7915:47:79",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    },
                    "id": 50263,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      },
                      "id": 50261,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 50259,
                        "name": "_byteCount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50254,
                        "src": "7932:10:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "*",
                      "rightExpression": {
                        "hexValue": "3136",
                        "id": 50260,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "7945:2:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_16_by_1",
                          "typeString": "int_const 16"
                        },
                        "value": "16"
                      },
                      "src": "7932:15:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint64",
                        "typeString": "uint64"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "+",
                    "rightExpression": {
                      "hexValue": "3231303030",
                      "id": 50262,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "7950:5:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_21000_by_1",
                        "typeString": "int_const 21000"
                      },
                      "value": "21000"
                    },
                    "src": "7932:23:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "functionReturnParameters": 50258,
                  "id": 50264,
                  "nodeType": "Return",
                  "src": "7925:30:79"
                }
              ]
            },
            "documentation": {
              "id": 50252,
              "nodeType": "StructuredDocumentation",
              "src": "7355:482:79",
              "text": "@notice Computes the minimum gas limit for a deposit.\n         The minimum gas limit linearly increases based on the size of the calldata.\n         This is to prevent users from creating L2 resource usage without paying for it.\n         This function can be used when interacting with the portal to ensure forwards\n         compatibility.\n @param _byteCount Number of bytes in the calldata.\n @return The minimum gas limit for a deposit."
            },
            "functionSelector": "a35d99df",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "minimumGasLimit",
            "nameLocation": "7851:15:79",
            "parameters": {
              "id": 50255,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50254,
                  "mutability": "mutable",
                  "name": "_byteCount",
                  "nameLocation": "7874:10:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 50266,
                  "src": "7867:17:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 50253,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "7867:6:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7866:19:79"
            },
            "returnParameters": {
              "id": 50258,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50257,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 50266,
                  "src": "7907:6:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 50256,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "7907:6:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7906:8:79"
            },
            "scope": 50825,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 50275,
            "nodeType": "FunctionDefinition",
            "src": "8383:185:79",
            "nodes": [],
            "body": {
              "id": 50274,
              "nodeType": "Block",
              "src": "8410:158:79",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4e6f7420616c6c6f77206465706f73697420746f204552432d32303a20455448",
                        "id": 50271,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8427:34:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0871f0d385df7b9a218de1d4424760c0607d2198c7687f69eec3653099ec4d63",
                          "typeString": "literal_string \"Not allow deposit to ERC-20: ETH\""
                        },
                        "value": "Not allow deposit to ERC-20: ETH"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_0871f0d385df7b9a218de1d4424760c0607d2198c7687f69eec3653099ec4d63",
                          "typeString": "literal_string \"Not allow deposit to ERC-20: ETH\""
                        }
                      ],
                      "id": 50270,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -19,
                        -19
                      ],
                      "referencedDeclaration": -19,
                      "src": "8420:6:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 50272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8420:42:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50273,
                  "nodeType": "ExpressionStatement",
                  "src": "8420:42:79"
                }
              ]
            },
            "documentation": {
              "id": 50267,
              "nodeType": "StructuredDocumentation",
              "src": "7968:368:79",
              "text": "@notice Accepts value so that users can send ETH directly to this contract and have the\n         funds be deposited to their address on L2. This is intended as a convenience\n         function for EOAs. Contracts should call the depositTransaction() function directly\n         otherwise any deposited funds will be lost due to address aliasing."
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 50268,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8390:2:79"
            },
            "returnParameters": {
              "id": 50269,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8410:0:79"
            },
            "scope": 50825,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 50280,
            "nodeType": "FunctionDefinition",
            "src": "8782:77:79",
            "nodes": [],
            "body": {
              "id": 50279,
              "nodeType": "Block",
              "src": "8820:39:79",
              "nodes": [],
              "statements": []
            },
            "documentation": {
              "id": 50276,
              "nodeType": "StructuredDocumentation",
              "src": "8574:203:79",
              "text": "@notice Accepts ETH value without triggering a deposit to L2.\n         This function mainly exists for the sake of the migration between the legacy\n         Optimism system and Bedrock."
            },
            "functionSelector": "8b4c40b0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "donateETH",
            "nameLocation": "8791:9:79",
            "parameters": {
              "id": 50277,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8800:2:79"
            },
            "returnParameters": {
              "id": 50278,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8820:0:79"
            },
            "scope": 50825,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 50293,
            "nodeType": "FunctionDefinition",
            "src": "9108:152:79",
            "nodes": [],
            "body": {
              "id": 50292,
              "nodeType": "Block",
              "src": "9207:53:79",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 50288,
                        "name": "systemConfig",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50039,
                        "src": "9224:12:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_SystemConfig_$52221",
                          "typeString": "contract SystemConfig"
                        }
                      },
                      "id": 50289,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "resourceConfig",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 52141,
                      "src": "9224:27:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_struct$_ResourceConfig_$51111_memory_ptr_$",
                        "typeString": "function () view external returns (struct ResourceMetering.ResourceConfig memory)"
                      }
                    },
                    "id": 50290,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9224:29:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResourceConfig_$51111_memory_ptr",
                      "typeString": "struct ResourceMetering.ResourceConfig memory"
                    }
                  },
                  "functionReturnParameters": 50287,
                  "id": 50291,
                  "nodeType": "Return",
                  "src": "9217:36:79"
                }
              ]
            },
            "baseFunctions": [
              51407
            ],
            "documentation": {
              "id": 50281,
              "nodeType": "StructuredDocumentation",
              "src": "8865:238:79",
              "text": "@notice Getter for the resource config.\n         Used internally by the ResourceMetering contract.\n         The SystemConfig is the source of truth for the resource config.\n @return ResourceMetering ResourceConfig"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_resourceConfig",
            "nameLocation": "9117:15:79",
            "overrides": {
              "id": 50283,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9149:8:79"
            },
            "parameters": {
              "id": 50282,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9132:2:79"
            },
            "returnParameters": {
              "id": 50287,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50286,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 50293,
                  "src": "9167:38:79",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ResourceConfig_$51111_memory_ptr",
                    "typeString": "struct ResourceMetering.ResourceConfig"
                  },
                  "typeName": {
                    "id": 50285,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 50284,
                      "name": "ResourceMetering.ResourceConfig",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 51111,
                      "src": "9167:31:79"
                    },
                    "referencedDeclaration": 51111,
                    "src": "9167:31:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ResourceConfig_$51111_storage_ptr",
                      "typeString": "struct ResourceMetering.ResourceConfig"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9166:40:79"
            },
            "scope": 50825,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 50425,
            "nodeType": "FunctionDefinition",
            "src": "9648:3746:79",
            "nodes": [],
            "body": {
              "id": 50424,
              "nodeType": "Block",
              "src": "9913:3481:79",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 50317,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 50311,
                            "name": "_tx",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50297,
                            "src": "10158:3:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_WithdrawalTransaction_$61266_memory_ptr",
                              "typeString": "struct Types.WithdrawalTransaction memory"
                            }
                          },
                          "id": 50312,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "target",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 61259,
                          "src": "10158:10:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 50315,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "10180:4:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OptimismPortal_$50825",
                                "typeString": "contract OptimismPortal"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_OptimismPortal_$50825",
                                "typeString": "contract OptimismPortal"
                              }
                            ],
                            "id": 50314,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "10172:7:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 50313,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "10172:7:79",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 50316,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10172:13:79",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "10158:27:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f7074696d69736d506f7274616c3a20796f752063616e6e6f742073656e64206d6573736167657320746f2074686520706f7274616c20636f6e7472616374",
                        "id": 50318,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10187:65:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_57e41062e2e7b97ddf730827f5249d28f602a3846dfe107ce36292fb1c029eb8",
                          "typeString": "literal_string \"OptimismPortal: you cannot send messages to the portal contract\""
                        },
                        "value": "OptimismPortal: you cannot send messages to the portal contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_57e41062e2e7b97ddf730827f5249d28f602a3846dfe107ce36292fb1c029eb8",
                          "typeString": "literal_string \"OptimismPortal: you cannot send messages to the portal contract\""
                        }
                      ],
                      "id": 50310,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10150:7:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 50319,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10150:103:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50320,
                  "nodeType": "ExpressionStatement",
                  "src": "10150:103:79"
                },
                {
                  "assignments": [
                    50322
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50322,
                      "mutability": "mutable",
                      "name": "outputRoot",
                      "nameLocation": "10438:10:79",
                      "nodeType": "VariableDeclaration",
                      "scope": 50424,
                      "src": "10430:18:79",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 50321,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "10430:7:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50328,
                  "initialValue": {
                    "expression": {
                      "arguments": [
                        {
                          "id": 50325,
                          "name": "_l2OutputIndex",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50299,
                          "src": "10472:14:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 50323,
                          "name": "l2Oracle",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50035,
                          "src": "10451:8:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_L2OutputOracle_$49889",
                            "typeString": "contract L2OutputOracle"
                          }
                        },
                        "id": 50324,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "getL2Output",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 49729,
                        "src": "10451:20:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_OutputProposal_$61225_memory_ptr_$",
                          "typeString": "function (uint256) view external returns (struct Types.OutputProposal memory)"
                        }
                      },
                      "id": 50326,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10451:36:79",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OutputProposal_$61225_memory_ptr",
                        "typeString": "struct Types.OutputProposal memory"
                      }
                    },
                    "id": 50327,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "outputRoot",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 61220,
                    "src": "10451:47:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10430:68:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 50335,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 50330,
                          "name": "outputRoot",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50322,
                          "src": "10618:10:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 50333,
                              "name": "_outputRootProof",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50302,
                              "src": "10660:16:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OutputRootProof_$61234_calldata_ptr",
                                "typeString": "struct Types.OutputRootProof calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_OutputRootProof_$61234_calldata_ptr",
                                "typeString": "struct Types.OutputRootProof calldata"
                              }
                            ],
                            "expression": {
                              "id": 50331,
                              "name": "Hashing",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60794,
                              "src": "10632:7:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Hashing_$60794_$",
                                "typeString": "type(library Hashing)"
                              }
                            },
                            "id": 50332,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "hashOutputRootProof",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 60793,
                            "src": "10632:27:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_struct$_OutputRootProof_$61234_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (struct Types.OutputRootProof memory) pure returns (bytes32)"
                            }
                          },
                          "id": 50334,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "10632:45:79",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "10618:59:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f7074696d69736d506f7274616c3a20696e76616c6964206f757470757420726f6f742070726f6f66",
                        "id": 50336,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "10679:43:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_490ec653897228799e7e4c4af8b1fd3b4a0688df98d026b46afa352ce9876996",
                          "typeString": "literal_string \"OptimismPortal: invalid output root proof\""
                        },
                        "value": "OptimismPortal: invalid output root proof"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_490ec653897228799e7e4c4af8b1fd3b4a0688df98d026b46afa352ce9876996",
                          "typeString": "literal_string \"OptimismPortal: invalid output root proof\""
                        }
                      ],
                      "id": 50329,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "10597:7:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 50337,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10597:135:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50338,
                  "nodeType": "ExpressionStatement",
                  "src": "10597:135:79"
                },
                {
                  "assignments": [
                    50340
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50340,
                      "mutability": "mutable",
                      "name": "withdrawalHash",
                      "nameLocation": "10851:14:79",
                      "nodeType": "VariableDeclaration",
                      "scope": 50424,
                      "src": "10843:22:79",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 50339,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "10843:7:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50345,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 50343,
                        "name": "_tx",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50297,
                        "src": "10891:3:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WithdrawalTransaction_$61266_memory_ptr",
                          "typeString": "struct Types.WithdrawalTransaction memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_WithdrawalTransaction_$61266_memory_ptr",
                          "typeString": "struct Types.WithdrawalTransaction memory"
                        }
                      ],
                      "expression": {
                        "id": 50341,
                        "name": "Hashing",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60794,
                        "src": "10868:7:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Hashing_$60794_$",
                          "typeString": "type(library Hashing)"
                        }
                      },
                      "id": 50342,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "hashWithdrawal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60769,
                      "src": "10868:22:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_WithdrawalTransaction_$61266_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (struct Types.WithdrawalTransaction memory) pure returns (bytes32)"
                      }
                    },
                    "id": 50344,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10868:27:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10843:52:79"
                },
                {
                  "assignments": [
                    50348
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50348,
                      "mutability": "mutable",
                      "name": "provenWithdrawal",
                      "nameLocation": "10929:16:79",
                      "nodeType": "VariableDeclaration",
                      "scope": 50424,
                      "src": "10905:40:79",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ProvenWithdrawal_$50006_memory_ptr",
                        "typeString": "struct OptimismPortal.ProvenWithdrawal"
                      },
                      "typeName": {
                        "id": 50347,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 50346,
                          "name": "ProvenWithdrawal",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 50006,
                          "src": "10905:16:79"
                        },
                        "referencedDeclaration": 50006,
                        "src": "10905:16:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProvenWithdrawal_$50006_storage_ptr",
                          "typeString": "struct OptimismPortal.ProvenWithdrawal"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50352,
                  "initialValue": {
                    "baseExpression": {
                      "id": 50349,
                      "name": "provenWithdrawals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50028,
                      "src": "10948:17:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ProvenWithdrawal_$50006_storage_$",
                        "typeString": "mapping(bytes32 => struct OptimismPortal.ProvenWithdrawal storage ref)"
                      }
                    },
                    "id": 50351,
                    "indexExpression": {
                      "id": 50350,
                      "name": "withdrawalHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50340,
                      "src": "10966:14:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "10948:33:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ProvenWithdrawal_$50006_storage",
                      "typeString": "struct OptimismPortal.ProvenWithdrawal storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "10905:76:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 50367,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          "id": 50357,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "id": 50354,
                              "name": "provenWithdrawal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50348,
                              "src": "11535:16:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ProvenWithdrawal_$50006_memory_ptr",
                                "typeString": "struct OptimismPortal.ProvenWithdrawal memory"
                              }
                            },
                            "id": 50355,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 50003,
                            "src": "11535:26:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "hexValue": "30",
                            "id": 50356,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "11565:1:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "src": "11535:31:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          "id": 50366,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "expression": {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 50360,
                                    "name": "provenWithdrawal",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 50348,
                                    "src": "11607:16:79",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_ProvenWithdrawal_$50006_memory_ptr",
                                      "typeString": "struct OptimismPortal.ProvenWithdrawal memory"
                                    }
                                  },
                                  "id": 50361,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "l2OutputIndex",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 50005,
                                  "src": "11607:30:79",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint128",
                                    "typeString": "uint128"
                                  }
                                ],
                                "expression": {
                                  "id": 50358,
                                  "name": "l2Oracle",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 50035,
                                  "src": "11586:8:79",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_L2OutputOracle_$49889",
                                    "typeString": "contract L2OutputOracle"
                                  }
                                },
                                "id": 50359,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "getL2Output",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 49729,
                                "src": "11586:20:79",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_OutputProposal_$61225_memory_ptr_$",
                                  "typeString": "function (uint256) view external returns (struct Types.OutputProposal memory)"
                                }
                              },
                              "id": 50362,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "11586:52:79",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OutputProposal_$61225_memory_ptr",
                                "typeString": "struct Types.OutputProposal memory"
                              }
                            },
                            "id": 50363,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "outputRoot",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 61220,
                            "src": "11586:63:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "!=",
                          "rightExpression": {
                            "expression": {
                              "id": 50364,
                              "name": "provenWithdrawal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50348,
                              "src": "11653:16:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ProvenWithdrawal_$50006_memory_ptr",
                                "typeString": "struct OptimismPortal.ProvenWithdrawal memory"
                              }
                            },
                            "id": 50365,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "outputRoot",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 50001,
                            "src": "11653:27:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "11586:94:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "11535:145:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f7074696d69736d506f7274616c3a207769746864726177616c20686173682068617320616c7265616479206265656e2070726f76656e",
                        "id": 50368,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11694:57:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5238e365e021f6fd781c2264a5a09100f0670031b56dacfc224b453789ac1dd0",
                          "typeString": "literal_string \"OptimismPortal: withdrawal hash has already been proven\""
                        },
                        "value": "OptimismPortal: withdrawal hash has already been proven"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5238e365e021f6fd781c2264a5a09100f0670031b56dacfc224b453789ac1dd0",
                          "typeString": "literal_string \"OptimismPortal: withdrawal hash has already been proven\""
                        }
                      ],
                      "id": 50353,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11514:7:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 50369,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11514:247:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50370,
                  "nodeType": "ExpressionStatement",
                  "src": "11514:247:79"
                },
                {
                  "assignments": [
                    50372
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50372,
                      "mutability": "mutable",
                      "name": "storageKey",
                      "nameLocation": "12005:10:79",
                      "nodeType": "VariableDeclaration",
                      "scope": 50424,
                      "src": "11997:18:79",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 50371,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "11997:7:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50383,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 50376,
                            "name": "withdrawalHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50340,
                            "src": "12069:14:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 50379,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "12109:1:79",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 50378,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "12101:7:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_uint256_$",
                                "typeString": "type(uint256)"
                              },
                              "typeName": {
                                "id": 50377,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "12101:7:79",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 50380,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12101:10:79",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 50374,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "12041:3:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 50375,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "12041:10:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 50381,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12041:147:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 50373,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "12018:9:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 50382,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12018:180:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "11997:201:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 50389,
                                "name": "storageKey",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 50372,
                                "src": "12617:10:79",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              ],
                              "expression": {
                                "id": 50387,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "12606:3:79",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 50388,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encode",
                              "nodeType": "MemberAccess",
                              "src": "12606:10:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 50390,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "12606:22:79",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          {
                            "hexValue": "01",
                            "id": 50391,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "hexString",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "12630:7:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_5fe7f977e71dba2ea1a68e21057beebb9be2ac30c6410aa38d4f3fbe41dcffd2",
                              "typeString": "literal_string hex\"01\""
                            },
                            "value": "\u0001"
                          },
                          {
                            "id": 50392,
                            "name": "_withdrawalProof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50305,
                            "src": "12639:16:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                              "typeString": "bytes calldata[] calldata"
                            }
                          },
                          {
                            "expression": {
                              "id": 50393,
                              "name": "_outputRootProof",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50302,
                              "src": "12657:16:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OutputRootProof_$61234_calldata_ptr",
                                "typeString": "struct Types.OutputRootProof calldata"
                              }
                            },
                            "id": 50394,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "messagePasserStorageRoot",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 61231,
                            "src": "12657:41:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            },
                            {
                              "typeIdentifier": "t_stringliteral_5fe7f977e71dba2ea1a68e21057beebb9be2ac30c6410aa38d4f3fbe41dcffd2",
                              "typeString": "literal_string hex\"01\""
                            },
                            {
                              "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                              "typeString": "bytes calldata[] calldata"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 50385,
                            "name": "SecureMerkleTrie",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 62951,
                            "src": "12551:16:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_SecureMerkleTrie_$62951_$",
                              "typeString": "type(library SecureMerkleTrie)"
                            }
                          },
                          "id": 50386,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "verifyInclusionProof",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 62903,
                          "src": "12551:37:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_array$_t_bytes_memory_ptr_$dyn_memory_ptr_$_t_bytes32_$returns$_t_bool_$",
                            "typeString": "function (bytes memory,bytes memory,bytes memory[] memory,bytes32) pure returns (bool)"
                          }
                        },
                        "id": 50395,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12551:161:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f7074696d69736d506f7274616c3a20696e76616c6964207769746864726177616c20696e636c7573696f6e2070726f6f66",
                        "id": 50396,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12726:52:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_11b666636981dad70da1c1a9e87589eb7d9c042eacd4d25e887aac557f6cd6b9",
                          "typeString": "literal_string \"OptimismPortal: invalid withdrawal inclusion proof\""
                        },
                        "value": "OptimismPortal: invalid withdrawal inclusion proof"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_11b666636981dad70da1c1a9e87589eb7d9c042eacd4d25e887aac557f6cd6b9",
                          "typeString": "literal_string \"OptimismPortal: invalid withdrawal inclusion proof\""
                        }
                      ],
                      "id": 50384,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12530:7:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 50397,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12530:258:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50398,
                  "nodeType": "ExpressionStatement",
                  "src": "12530:258:79"
                },
                {
                  "expression": {
                    "id": 50414,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 50399,
                        "name": "provenWithdrawals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50028,
                        "src": "13070:17:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ProvenWithdrawal_$50006_storage_$",
                          "typeString": "mapping(bytes32 => struct OptimismPortal.ProvenWithdrawal storage ref)"
                        }
                      },
                      "id": 50401,
                      "indexExpression": {
                        "id": 50400,
                        "name": "withdrawalHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50340,
                        "src": "13088:14:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "13070:33:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ProvenWithdrawal_$50006_storage",
                        "typeString": "struct OptimismPortal.ProvenWithdrawal storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 50403,
                          "name": "outputRoot",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50322,
                          "src": "13149:10:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "expression": {
                                "id": 50406,
                                "name": "block",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -4,
                                "src": "13192:5:79",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_block",
                                  "typeString": "block"
                                }
                              },
                              "id": 50407,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "timestamp",
                              "nodeType": "MemberAccess",
                              "src": "13192:15:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 50405,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13184:7:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint128_$",
                              "typeString": "type(uint128)"
                            },
                            "typeName": {
                              "id": 50404,
                              "name": "uint128",
                              "nodeType": "ElementaryTypeName",
                              "src": "13184:7:79",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 50408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13184:24:79",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 50411,
                              "name": "_l2OutputIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50299,
                              "src": "13245:14:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 50410,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "13237:7:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_uint128_$",
                              "typeString": "type(uint128)"
                            },
                            "typeName": {
                              "id": 50409,
                              "name": "uint128",
                              "nodeType": "ElementaryTypeName",
                              "src": "13237:7:79",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 50412,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13237:23:79",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          },
                          {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        ],
                        "id": 50402,
                        "name": "ProvenWithdrawal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50006,
                        "src": "13106:16:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_ProvenWithdrawal_$50006_storage_ptr_$",
                          "typeString": "type(struct OptimismPortal.ProvenWithdrawal storage pointer)"
                        }
                      },
                      "id": 50413,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "outputRoot",
                        "timestamp",
                        "l2OutputIndex"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "13106:165:79",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ProvenWithdrawal_$50006_memory_ptr",
                        "typeString": "struct OptimismPortal.ProvenWithdrawal memory"
                      }
                    },
                    "src": "13070:201:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ProvenWithdrawal_$50006_storage",
                      "typeString": "struct OptimismPortal.ProvenWithdrawal storage ref"
                    }
                  },
                  "id": 50415,
                  "nodeType": "ExpressionStatement",
                  "src": "13070:201:79"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 50417,
                        "name": "withdrawalHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50340,
                        "src": "13348:14:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "expression": {
                          "id": 50418,
                          "name": "_tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50297,
                          "src": "13364:3:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_WithdrawalTransaction_$61266_memory_ptr",
                            "typeString": "struct Types.WithdrawalTransaction memory"
                          }
                        },
                        "id": 50419,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 61257,
                        "src": "13364:10:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 50420,
                          "name": "_tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50297,
                          "src": "13376:3:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_WithdrawalTransaction_$61266_memory_ptr",
                            "typeString": "struct Types.WithdrawalTransaction memory"
                          }
                        },
                        "id": 50421,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "target",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 61259,
                        "src": "13376:10:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 50416,
                      "name": "WithdrawalProven",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50067,
                      "src": "13331:16:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address,address)"
                      }
                    },
                    "id": 50422,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13331:56:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50423,
                  "nodeType": "EmitStatement",
                  "src": "13326:61:79"
                }
              ]
            },
            "documentation": {
              "id": 50294,
              "nodeType": "StructuredDocumentation",
              "src": "9266:377:79",
              "text": "@notice Proves a withdrawal transaction.\n @param _tx              Withdrawal transaction to finalize.\n @param _l2OutputIndex   L2 output index to prove against.\n @param _outputRootProof Inclusion proof of the L2ToL1MessagePasser contract's storage root.\n @param _withdrawalProof Inclusion proof of the withdrawal in L2ToL1MessagePasser contract."
            },
            "functionSelector": "4870496f",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 50308,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 50307,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 50096,
                  "src": "9895:13:79"
                },
                "nodeType": "ModifierInvocation",
                "src": "9895:13:79"
              }
            ],
            "name": "proveWithdrawalTransaction",
            "nameLocation": "9657:26:79",
            "parameters": {
              "id": 50306,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50297,
                  "mutability": "mutable",
                  "name": "_tx",
                  "nameLocation": "9728:3:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 50425,
                  "src": "9693:38:79",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_WithdrawalTransaction_$61266_memory_ptr",
                    "typeString": "struct Types.WithdrawalTransaction"
                  },
                  "typeName": {
                    "id": 50296,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 50295,
                      "name": "Types.WithdrawalTransaction",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 61266,
                      "src": "9693:27:79"
                    },
                    "referencedDeclaration": 61266,
                    "src": "9693:27:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_WithdrawalTransaction_$61266_storage_ptr",
                      "typeString": "struct Types.WithdrawalTransaction"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50299,
                  "mutability": "mutable",
                  "name": "_l2OutputIndex",
                  "nameLocation": "9749:14:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 50425,
                  "src": "9741:22:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50298,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9741:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50302,
                  "mutability": "mutable",
                  "name": "_outputRootProof",
                  "nameLocation": "9804:16:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 50425,
                  "src": "9773:47:79",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_OutputRootProof_$61234_calldata_ptr",
                    "typeString": "struct Types.OutputRootProof"
                  },
                  "typeName": {
                    "id": 50301,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 50300,
                      "name": "Types.OutputRootProof",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 61234,
                      "src": "9773:21:79"
                    },
                    "referencedDeclaration": 61234,
                    "src": "9773:21:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OutputRootProof_$61234_storage_ptr",
                      "typeString": "struct Types.OutputRootProof"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50305,
                  "mutability": "mutable",
                  "name": "_withdrawalProof",
                  "nameLocation": "9847:16:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 50425,
                  "src": "9830:33:79",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "bytes[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 50303,
                      "name": "bytes",
                      "nodeType": "ElementaryTypeName",
                      "src": "9830:5:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage_ptr",
                        "typeString": "bytes"
                      }
                    },
                    "id": 50304,
                    "nodeType": "ArrayTypeName",
                    "src": "9830:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes_storage_$dyn_storage_ptr",
                      "typeString": "bytes[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9683:186:79"
            },
            "returnParameters": {
              "id": 50309,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9913:0:79"
            },
            "scope": 50825,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 50605,
            "nodeType": "FunctionDefinition",
            "src": "13507:5176:79",
            "nodes": [],
            "body": {
              "id": 50604,
              "nodeType": "Block",
              "src": "13609:5074:79",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 50438,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 50435,
                          "name": "l2Sender",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50017,
                          "src": "13875:8:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 50436,
                            "name": "Constants",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60086,
                            "src": "13887:9:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Constants_$60086_$",
                              "typeString": "type(library Constants)"
                            }
                          },
                          "id": 50437,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "DEFAULT_L2_SENDER",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 60044,
                          "src": "13887:27:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "13875:39:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f7074696d69736d506f7274616c3a2063616e206f6e6c792074726967676572206f6e65207769746864726177616c20706572207472616e73616374696f6e",
                        "id": 50439,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "13916:65:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_452e6500a4013b85635a7a9b231d68a5197c7f7579d0b96d0b2f2e5fe6b5995b",
                          "typeString": "literal_string \"OptimismPortal: can only trigger one withdrawal per transaction\""
                        },
                        "value": "OptimismPortal: can only trigger one withdrawal per transaction"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_452e6500a4013b85635a7a9b231d68a5197c7f7579d0b96d0b2f2e5fe6b5995b",
                          "typeString": "literal_string \"OptimismPortal: can only trigger one withdrawal per transaction\""
                        }
                      ],
                      "id": 50434,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "13854:7:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 50440,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13854:137:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50441,
                  "nodeType": "ExpressionStatement",
                  "src": "13854:137:79"
                },
                {
                  "assignments": [
                    50443
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50443,
                      "mutability": "mutable",
                      "name": "withdrawalHash",
                      "nameLocation": "14082:14:79",
                      "nodeType": "VariableDeclaration",
                      "scope": 50604,
                      "src": "14074:22:79",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 50442,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "14074:7:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50448,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 50446,
                        "name": "_tx",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50429,
                        "src": "14122:3:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WithdrawalTransaction_$61266_memory_ptr",
                          "typeString": "struct Types.WithdrawalTransaction memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_WithdrawalTransaction_$61266_memory_ptr",
                          "typeString": "struct Types.WithdrawalTransaction memory"
                        }
                      ],
                      "expression": {
                        "id": 50444,
                        "name": "Hashing",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60794,
                        "src": "14099:7:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Hashing_$60794_$",
                          "typeString": "type(library Hashing)"
                        }
                      },
                      "id": 50445,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "hashWithdrawal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60769,
                      "src": "14099:22:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_WithdrawalTransaction_$61266_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (struct Types.WithdrawalTransaction memory) pure returns (bytes32)"
                      }
                    },
                    "id": 50447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14099:27:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14074:52:79"
                },
                {
                  "assignments": [
                    50451
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50451,
                      "mutability": "mutable",
                      "name": "provenWithdrawal",
                      "nameLocation": "14160:16:79",
                      "nodeType": "VariableDeclaration",
                      "scope": 50604,
                      "src": "14136:40:79",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ProvenWithdrawal_$50006_memory_ptr",
                        "typeString": "struct OptimismPortal.ProvenWithdrawal"
                      },
                      "typeName": {
                        "id": 50450,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 50449,
                          "name": "ProvenWithdrawal",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 50006,
                          "src": "14136:16:79"
                        },
                        "referencedDeclaration": 50006,
                        "src": "14136:16:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ProvenWithdrawal_$50006_storage_ptr",
                          "typeString": "struct OptimismPortal.ProvenWithdrawal"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50455,
                  "initialValue": {
                    "baseExpression": {
                      "id": 50452,
                      "name": "provenWithdrawals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50028,
                      "src": "14179:17:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_struct$_ProvenWithdrawal_$50006_storage_$",
                        "typeString": "mapping(bytes32 => struct OptimismPortal.ProvenWithdrawal storage ref)"
                      }
                    },
                    "id": 50454,
                    "indexExpression": {
                      "id": 50453,
                      "name": "withdrawalHash",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50443,
                      "src": "14197:14:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "14179:33:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ProvenWithdrawal_$50006_storage",
                      "typeString": "struct OptimismPortal.ProvenWithdrawal storage ref"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "14136:76:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        },
                        "id": 50460,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 50457,
                            "name": "provenWithdrawal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50451,
                            "src": "14462:16:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ProvenWithdrawal_$50006_memory_ptr",
                              "typeString": "struct OptimismPortal.ProvenWithdrawal memory"
                            }
                          },
                          "id": 50458,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 50003,
                          "src": "14462:26:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 50459,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "14492:1:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "14462:31:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f7074696d69736d506f7274616c3a207769746864726177616c20686173206e6f74206265656e2070726f76656e20796574",
                        "id": 50461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14495:52:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bc94f9f4f2ecd47ddd807efca122bcc34325481f7fe9d60687e25c709aff1610",
                          "typeString": "literal_string \"OptimismPortal: withdrawal has not been proven yet\""
                        },
                        "value": "OptimismPortal: withdrawal has not been proven yet"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bc94f9f4f2ecd47ddd807efca122bcc34325481f7fe9d60687e25c709aff1610",
                          "typeString": "literal_string \"OptimismPortal: withdrawal has not been proven yet\""
                        }
                      ],
                      "id": 50456,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14454:7:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 50462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14454:94:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50463,
                  "nodeType": "ExpressionStatement",
                  "src": "14454:94:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 50470,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 50465,
                            "name": "provenWithdrawal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50451,
                            "src": "14835:16:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ProvenWithdrawal_$50006_memory_ptr",
                              "typeString": "struct OptimismPortal.ProvenWithdrawal memory"
                            }
                          },
                          "id": 50466,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 50003,
                          "src": "14835:26:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint128",
                            "typeString": "uint128"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 50467,
                              "name": "l2Oracle",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50035,
                              "src": "14865:8:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_L2OutputOracle_$49889",
                                "typeString": "contract L2OutputOracle"
                              }
                            },
                            "id": 50468,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "startingTimestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 49406,
                            "src": "14865:26:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 50469,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14865:28:79",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "14835:58:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f7074696d69736d506f7274616c3a207769746864726177616c2074696d657374616d70206c657373207468616e204c32204f7261636c65207374617274696e672074696d657374616d70",
                        "id": 50471,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "14907:77:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5c7c78dd7f8d5d79f2ff5ac1a4442209661a78fffa24392f88331b760a60bedd",
                          "typeString": "literal_string \"OptimismPortal: withdrawal timestamp less than L2 Oracle starting timestamp\""
                        },
                        "value": "OptimismPortal: withdrawal timestamp less than L2 Oracle starting timestamp"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5c7c78dd7f8d5d79f2ff5ac1a4442209661a78fffa24392f88331b760a60bedd",
                          "typeString": "literal_string \"OptimismPortal: withdrawal timestamp less than L2 Oracle starting timestamp\""
                        }
                      ],
                      "id": 50464,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "14814:7:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 50472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14814:180:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50473,
                  "nodeType": "ExpressionStatement",
                  "src": "14814:180:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 50476,
                              "name": "provenWithdrawal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50451,
                              "src": "15413:16:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ProvenWithdrawal_$50006_memory_ptr",
                                "typeString": "struct OptimismPortal.ProvenWithdrawal memory"
                              }
                            },
                            "id": 50477,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 50003,
                            "src": "15413:26:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          ],
                          "id": 50475,
                          "name": "_isFinalizationPeriodElapsed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50824,
                          "src": "15384:28:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 50478,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "15384:56:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f7074696d69736d506f7274616c3a2070726f76656e207769746864726177616c2066696e616c697a6174696f6e20706572696f6420686173206e6f7420656c6170736564",
                        "id": 50479,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "15454:71:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_98a66ca0d4a8e5a839585f0aa5b4b8fc94a946382443fc5580ee1ed6e6237f70",
                          "typeString": "literal_string \"OptimismPortal: proven withdrawal finalization period has not elapsed\""
                        },
                        "value": "OptimismPortal: proven withdrawal finalization period has not elapsed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_98a66ca0d4a8e5a839585f0aa5b4b8fc94a946382443fc5580ee1ed6e6237f70",
                          "typeString": "literal_string \"OptimismPortal: proven withdrawal finalization period has not elapsed\""
                        }
                      ],
                      "id": 50474,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "15363:7:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 50480,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15363:172:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50481,
                  "nodeType": "ExpressionStatement",
                  "src": "15363:172:79"
                },
                {
                  "assignments": [
                    50486
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50486,
                      "mutability": "mutable",
                      "name": "proposal",
                      "nameLocation": "15734:8:79",
                      "nodeType": "VariableDeclaration",
                      "scope": 50604,
                      "src": "15706:36:79",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_OutputProposal_$61225_memory_ptr",
                        "typeString": "struct Types.OutputProposal"
                      },
                      "typeName": {
                        "id": 50485,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 50484,
                          "name": "Types.OutputProposal",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 61225,
                          "src": "15706:20:79"
                        },
                        "referencedDeclaration": 61225,
                        "src": "15706:20:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_OutputProposal_$61225_storage_ptr",
                          "typeString": "struct Types.OutputProposal"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50492,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 50489,
                          "name": "provenWithdrawal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50451,
                          "src": "15766:16:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_ProvenWithdrawal_$50006_memory_ptr",
                            "typeString": "struct OptimismPortal.ProvenWithdrawal memory"
                          }
                        },
                        "id": 50490,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "l2OutputIndex",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 50005,
                        "src": "15766:30:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "expression": {
                        "id": 50487,
                        "name": "l2Oracle",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50035,
                        "src": "15745:8:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_L2OutputOracle_$49889",
                          "typeString": "contract L2OutputOracle"
                        }
                      },
                      "id": 50488,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getL2Output",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 49729,
                      "src": "15745:20:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_OutputProposal_$61225_memory_ptr_$",
                        "typeString": "function (uint256) view external returns (struct Types.OutputProposal memory)"
                      }
                    },
                    "id": 50491,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15745:52:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_OutputProposal_$61225_memory_ptr",
                      "typeString": "struct Types.OutputProposal memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "15706:91:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        "id": 50498,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 50494,
                            "name": "proposal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50486,
                            "src": "16085:8:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_OutputProposal_$61225_memory_ptr",
                              "typeString": "struct Types.OutputProposal memory"
                            }
                          },
                          "id": 50495,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "outputRoot",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 61220,
                          "src": "16085:19:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 50496,
                            "name": "provenWithdrawal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50451,
                            "src": "16108:16:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ProvenWithdrawal_$50006_memory_ptr",
                              "typeString": "struct OptimismPortal.ProvenWithdrawal memory"
                            }
                          },
                          "id": 50497,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "outputRoot",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 50001,
                          "src": "16108:27:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "src": "16085:50:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f7074696d69736d506f7274616c3a206f757470757420726f6f742070726f76656e206973206e6f74207468652073616d652061732063757272656e74206f757470757420726f6f74",
                        "id": 50499,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16149:75:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2bee9e90a055fc3fdea28727a1d039ffb281ae00c8962ca3262d0dabb187a280",
                          "typeString": "literal_string \"OptimismPortal: output root proven is not the same as current output root\""
                        },
                        "value": "OptimismPortal: output root proven is not the same as current output root"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2bee9e90a055fc3fdea28727a1d039ffb281ae00c8962ca3262d0dabb187a280",
                          "typeString": "literal_string \"OptimismPortal: output root proven is not the same as current output root\""
                        }
                      ],
                      "id": 50493,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "16064:7:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 50500,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16064:170:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50501,
                  "nodeType": "ExpressionStatement",
                  "src": "16064:170:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 50504,
                              "name": "proposal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50486,
                              "src": "16362:8:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_OutputProposal_$61225_memory_ptr",
                                "typeString": "struct Types.OutputProposal memory"
                              }
                            },
                            "id": 50505,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "timestamp",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 61222,
                            "src": "16362:18:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_uint128",
                              "typeString": "uint128"
                            }
                          ],
                          "id": 50503,
                          "name": "_isFinalizationPeriodElapsed",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50824,
                          "src": "16333:28:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (uint256) view returns (bool)"
                          }
                        },
                        "id": 50506,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "16333:48:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f7074696d69736d506f7274616c3a206f75747075742070726f706f73616c2066696e616c697a6174696f6e20706572696f6420686173206e6f7420656c6170736564",
                        "id": 50507,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16395:69:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_e2e53e5f2e5c146290963511529e48aa3e1570a42475ccc1fb3eba5190175c74",
                          "typeString": "literal_string \"OptimismPortal: output proposal finalization period has not elapsed\""
                        },
                        "value": "OptimismPortal: output proposal finalization period has not elapsed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_e2e53e5f2e5c146290963511529e48aa3e1570a42475ccc1fb3eba5190175c74",
                          "typeString": "literal_string \"OptimismPortal: output proposal finalization period has not elapsed\""
                        }
                      ],
                      "id": 50502,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "16312:7:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 50508,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16312:162:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50509,
                  "nodeType": "ExpressionStatement",
                  "src": "16312:162:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 50515,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "baseExpression": {
                            "id": 50511,
                            "name": "finalizedWithdrawals",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50022,
                            "src": "16590:20:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                              "typeString": "mapping(bytes32 => bool)"
                            }
                          },
                          "id": 50513,
                          "indexExpression": {
                            "id": 50512,
                            "name": "withdrawalHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50443,
                            "src": "16611:14:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "16590:36:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "66616c7365",
                          "id": 50514,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "16630:5:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "false"
                        },
                        "src": "16590:45:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f7074696d69736d506f7274616c3a207769746864726177616c2068617320616c7265616479206265656e2066696e616c697a6564",
                        "id": 50516,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "16637:55:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2a1157cbf4171a399f26106a5211324151853c78d2faca1fb1d3acbf755aa485",
                          "typeString": "literal_string \"OptimismPortal: withdrawal has already been finalized\""
                        },
                        "value": "OptimismPortal: withdrawal has already been finalized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2a1157cbf4171a399f26106a5211324151853c78d2faca1fb1d3acbf755aa485",
                          "typeString": "literal_string \"OptimismPortal: withdrawal has already been finalized\""
                        }
                      ],
                      "id": 50510,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "16582:7:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 50517,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16582:111:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50518,
                  "nodeType": "ExpressionStatement",
                  "src": "16582:111:79"
                },
                {
                  "expression": {
                    "id": 50523,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 50519,
                        "name": "finalizedWithdrawals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50022,
                        "src": "16773:20:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 50521,
                      "indexExpression": {
                        "id": 50520,
                        "name": "withdrawalHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50443,
                        "src": "16794:14:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "16773:36:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 50522,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "16812:4:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "16773:43:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 50524,
                  "nodeType": "ExpressionStatement",
                  "src": "16773:43:79"
                },
                {
                  "expression": {
                    "id": 50528,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 50525,
                      "name": "l2Sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50017,
                      "src": "16910:8:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 50526,
                        "name": "_tx",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50429,
                        "src": "16921:3:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WithdrawalTransaction_$61266_memory_ptr",
                          "typeString": "struct Types.WithdrawalTransaction memory"
                        }
                      },
                      "id": 50527,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61257,
                      "src": "16921:10:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "16910:21:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 50529,
                  "nodeType": "ExpressionStatement",
                  "src": "16910:21:79"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 50533,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 50530,
                        "name": "_tx",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50429,
                        "src": "16945:3:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WithdrawalTransaction_$61266_memory_ptr",
                          "typeString": "struct Types.WithdrawalTransaction memory"
                        }
                      },
                      "id": 50531,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 61261,
                      "src": "16945:9:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 50532,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "16957:1:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "16945:13:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 50565,
                  "nodeType": "IfStatement",
                  "src": "16941:336:79",
                  "trueBody": {
                    "id": 50564,
                    "nodeType": "Block",
                    "src": "16960:317:79",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 50539,
                                    "name": "_tx",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 50429,
                                    "src": "17055:3:79",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_WithdrawalTransaction_$61266_memory_ptr",
                                      "typeString": "struct Types.WithdrawalTransaction memory"
                                    }
                                  },
                                  "id": 50540,
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "target",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 61259,
                                  "src": "17055:10:79",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "commonType": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  "id": 50554,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftExpression": {
                                    "expression": {
                                      "id": 50541,
                                      "name": "_tx",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 50429,
                                      "src": "17067:3:79",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_WithdrawalTransaction_$61266_memory_ptr",
                                        "typeString": "struct Types.WithdrawalTransaction memory"
                                      }
                                    },
                                    "id": 50542,
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "value",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 61261,
                                    "src": "17067:9:79",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "nodeType": "BinaryOperation",
                                  "operator": "+",
                                  "rightExpression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "id": 50549,
                                            "name": "this",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -28,
                                            "src": "17124:4:79",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_contract$_OptimismPortal_$50825",
                                              "typeString": "contract OptimismPortal"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_contract$_OptimismPortal_$50825",
                                              "typeString": "contract OptimismPortal"
                                            }
                                          ],
                                          "id": 50548,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "17116:7:79",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_address_$",
                                            "typeString": "type(address)"
                                          },
                                          "typeName": {
                                            "id": 50547,
                                            "name": "address",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "17116:7:79",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 50550,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "17116:13:79",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "expression": {
                                          "id": 50551,
                                          "name": "_tx",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 50429,
                                          "src": "17131:3:79",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_WithdrawalTransaction_$61266_memory_ptr",
                                            "typeString": "struct Types.WithdrawalTransaction memory"
                                          }
                                        },
                                        "id": 50552,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "target",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 61259,
                                        "src": "17131:10:79",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "expression": {
                                        "arguments": [
                                          {
                                            "id": 50544,
                                            "name": "nativeTokenAddress",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 50045,
                                            "src": "17086:18:79",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          ],
                                          "id": 50543,
                                          "name": "IERC20",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 31286,
                                          "src": "17079:6:79",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_IERC20_$31286_$",
                                            "typeString": "type(contract IERC20)"
                                          }
                                        },
                                        "id": 50545,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "17079:26:79",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IERC20_$31286",
                                          "typeString": "contract IERC20"
                                        }
                                      },
                                      "id": 50546,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "allowance",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 31263,
                                      "src": "17079:36:79",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_view$_t_address_$_t_address_$returns$_t_uint256_$",
                                        "typeString": "function (address,address) view external returns (uint256)"
                                      }
                                    },
                                    "id": 50553,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "17079:63:79",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "src": "17067:75:79",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "expression": {
                                  "arguments": [
                                    {
                                      "id": 50536,
                                      "name": "nativeTokenAddress",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 50045,
                                      "src": "17006:18:79",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "id": 50535,
                                    "name": "IERC20",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 31286,
                                    "src": "16999:6:79",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_IERC20_$31286_$",
                                      "typeString": "type(contract IERC20)"
                                    }
                                  },
                                  "id": 50537,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "16999:26:79",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IERC20_$31286",
                                    "typeString": "contract IERC20"
                                  }
                                },
                                "id": 50538,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "approve",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 31273,
                                "src": "16999:34:79",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                                  "typeString": "function (address,uint256) external returns (bool)"
                                }
                              },
                              "id": 50555,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "16999:161:79",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f7074696d69736d20617070726f76656420746f6b656e206661696c6564",
                              "id": 50556,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "17178:32:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_f3dce6a58a20ca24d58ed388e7891aa004499cfb8c1999f6fb2d96b705c970ae",
                                "typeString": "literal_string \"Optimism approved token failed\""
                              },
                              "value": "Optimism approved token failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_f3dce6a58a20ca24d58ed388e7891aa004499cfb8c1999f6fb2d96b705c970ae",
                                "typeString": "literal_string \"Optimism approved token failed\""
                              }
                            ],
                            "id": 50534,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "16974:7:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 50557,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "16974:250:79",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 50558,
                        "nodeType": "ExpressionStatement",
                        "src": "16974:250:79"
                      },
                      {
                        "expression": {
                          "id": 50562,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 50559,
                            "name": "depositedAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50047,
                            "src": "17238:15:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "expression": {
                              "id": 50560,
                              "name": "_tx",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50429,
                              "src": "17257:3:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_WithdrawalTransaction_$61266_memory_ptr",
                                "typeString": "struct Types.WithdrawalTransaction memory"
                              }
                            },
                            "id": 50561,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "value",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 61261,
                            "src": "17257:9:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "17238:28:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 50563,
                        "nodeType": "ExpressionStatement",
                        "src": "17238:28:79"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    50567
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50567,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "17901:7:79",
                      "nodeType": "VariableDeclaration",
                      "scope": 50604,
                      "src": "17896:12:79",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 50566,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "17896:4:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50578,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 50570,
                          "name": "_tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50429,
                          "src": "17935:3:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_WithdrawalTransaction_$61266_memory_ptr",
                            "typeString": "struct Types.WithdrawalTransaction memory"
                          }
                        },
                        "id": 50571,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "target",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 61259,
                        "src": "17935:10:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 50572,
                          "name": "_tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50429,
                          "src": "17947:3:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_WithdrawalTransaction_$61266_memory_ptr",
                            "typeString": "struct Types.WithdrawalTransaction memory"
                          }
                        },
                        "id": 50573,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "gasLimit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 61263,
                        "src": "17947:12:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 50574,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17961:1:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      {
                        "expression": {
                          "id": 50575,
                          "name": "_tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50429,
                          "src": "17964:3:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_WithdrawalTransaction_$61266_memory_ptr",
                            "typeString": "struct Types.WithdrawalTransaction memory"
                          }
                        },
                        "id": 50576,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "data",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 61265,
                        "src": "17964:8:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 50568,
                        "name": "SafeCall",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60970,
                        "src": "17911:8:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeCall_$60970_$",
                          "typeString": "type(library SafeCall)"
                        }
                      },
                      "id": 50569,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "callWithMinGas",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60969,
                      "src": "17911:23:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                        "typeString": "function (address,uint256,uint256,bytes memory) returns (bool)"
                      }
                    },
                    "id": 50577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17911:62:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17896:77:79"
                },
                {
                  "expression": {
                    "id": 50582,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 50579,
                      "name": "l2Sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50017,
                      "src": "18041:8:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 50580,
                        "name": "Constants",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60086,
                        "src": "18052:9:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Constants_$60086_$",
                          "typeString": "type(library Constants)"
                        }
                      },
                      "id": 50581,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "DEFAULT_L2_SENDER",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 60044,
                      "src": "18052:27:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "18041:38:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 50583,
                  "nodeType": "ExpressionStatement",
                  "src": "18041:38:79"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 50585,
                        "name": "withdrawalHash",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50443,
                        "src": "18258:14:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 50586,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50567,
                        "src": "18274:7:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 50584,
                      "name": "WithdrawalFinalized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50074,
                      "src": "18238:19:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$_t_bool_$returns$__$",
                        "typeString": "function (bytes32,bool)"
                      }
                    },
                    "id": 50587,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "18238:44:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50588,
                  "nodeType": "EmitStatement",
                  "src": "18233:49:79"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 50597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "id": 50591,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 50589,
                        "name": "success",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50567,
                        "src": "18546:7:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "66616c7365",
                        "id": 50590,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "18557:5:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      "src": "18546:16:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 50596,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "id": 50592,
                          "name": "tx",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -26,
                          "src": "18566:2:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_transaction",
                            "typeString": "tx"
                          }
                        },
                        "id": 50593,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "origin",
                        "nodeType": "MemberAccess",
                        "src": "18566:9:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 50594,
                          "name": "Constants",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60086,
                          "src": "18579:9:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Constants_$60086_$",
                            "typeString": "type(library Constants)"
                          }
                        },
                        "id": 50595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ESTIMATION_ADDRESS",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 60040,
                        "src": "18579:28:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "18566:41:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "18546:61:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 50603,
                  "nodeType": "IfStatement",
                  "src": "18542:135:79",
                  "trueBody": {
                    "id": 50602,
                    "nodeType": "Block",
                    "src": "18609:68:79",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "hexValue": "4f7074696d69736d506f7274616c3a207769746864726177616c206661696c6564",
                              "id": 50599,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "18630:35:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_a0543a16ebb14b11743ebd89913eeb3a89aab6ee2824b60e6e93ee3d5b6c55bb",
                                "typeString": "literal_string \"OptimismPortal: withdrawal failed\""
                              },
                              "value": "OptimismPortal: withdrawal failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_a0543a16ebb14b11743ebd89913eeb3a89aab6ee2824b60e6e93ee3d5b6c55bb",
                                "typeString": "literal_string \"OptimismPortal: withdrawal failed\""
                              }
                            ],
                            "id": 50598,
                            "name": "revert",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -19,
                              -19
                            ],
                            "referencedDeclaration": -19,
                            "src": "18623:6:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (string memory) pure"
                            }
                          },
                          "id": 50600,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18623:43:79",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 50601,
                        "nodeType": "ExpressionStatement",
                        "src": "18623:43:79"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 50426,
              "nodeType": "StructuredDocumentation",
              "src": "13400:102:79",
              "text": "@notice Finalizes a withdrawal transaction.\n @param _tx Withdrawal transaction to finalize."
            },
            "functionSelector": "8c3152e9",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 50432,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 50431,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 50096,
                  "src": "13595:13:79"
                },
                "nodeType": "ModifierInvocation",
                "src": "13595:13:79"
              }
            ],
            "name": "finalizeWithdrawalTransaction",
            "nameLocation": "13516:29:79",
            "parameters": {
              "id": 50430,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50429,
                  "mutability": "mutable",
                  "name": "_tx",
                  "nameLocation": "13581:3:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 50605,
                  "src": "13546:38:79",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_WithdrawalTransaction_$61266_memory_ptr",
                    "typeString": "struct Types.WithdrawalTransaction"
                  },
                  "typeName": {
                    "id": 50428,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 50427,
                      "name": "Types.WithdrawalTransaction",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 61266,
                      "src": "13546:27:79"
                    },
                    "referencedDeclaration": 61266,
                    "src": "13546:27:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_WithdrawalTransaction_$61266_storage_ptr",
                      "typeString": "struct Types.WithdrawalTransaction"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13545:40:79"
            },
            "returnParameters": {
              "id": 50433,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13609:0:79"
            },
            "scope": 50825,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 50651,
            "nodeType": "FunctionDefinition",
            "src": "18888:483:79",
            "nodes": [],
            "body": {
              "id": 50650,
              "nodeType": "Block",
              "src": "19070:301:79",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 50627,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 50621,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "19088:3:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 50622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "19088:10:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 50625,
                              "name": "nativeTokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50045,
                              "src": "19110:18:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 50624,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "19102:7:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 50623,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "19102:7:79",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 50626,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19102:27:79",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "19088:41:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c7920616363657074206e617469766520746f6b656e20617070726f76652063616c6c6261636b",
                        "id": 50628,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19131:43:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f4b297da633e18be624edab084175711757920feabe27679f12a2f3de3c46fb8",
                          "typeString": "literal_string \"only accept native token approve callback\""
                        },
                        "value": "only accept native token approve callback"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f4b297da633e18be624edab084175711757920feabe27679f12a2f3de3c46fb8",
                          "typeString": "literal_string \"only accept native token approve callback\""
                        }
                      ],
                      "id": 50620,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "19080:7:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 50629,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19080:95:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50630,
                  "nodeType": "ExpressionStatement",
                  "src": "19080:95:79"
                },
                {
                  "assignments": [
                    50632,
                    50634
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50632,
                      "mutability": "mutable",
                      "name": "_minGasLimit",
                      "nameLocation": "19193:12:79",
                      "nodeType": "VariableDeclaration",
                      "scope": 50650,
                      "src": "19186:19:79",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 50631,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "19186:6:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 50634,
                      "mutability": "mutable",
                      "name": "_message",
                      "nameLocation": "19220:8:79",
                      "nodeType": "VariableDeclaration",
                      "scope": 50650,
                      "src": "19207:21:79",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 50633,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "19207:5:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50638,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 50636,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50614,
                        "src": "19252:5:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 50635,
                      "name": "unpackOnApproveData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49940,
                      "src": "19232:19:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint32_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) pure returns (uint32,bytes memory)"
                      }
                    },
                    "id": 50637,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19232:26:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint32_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(uint32,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19185:73:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 50640,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50608,
                        "src": "19288:6:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 50641,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50608,
                        "src": "19296:6:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 50642,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50612,
                        "src": "19304:7:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 50643,
                        "name": "_minGasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50632,
                        "src": "19313:12:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 50644,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "19327:5:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      },
                      {
                        "id": 50645,
                        "name": "_message",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50634,
                        "src": "19334:8:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 50639,
                      "name": "_depositTransaction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50789,
                      "src": "19268:19:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint64_$_t_bool_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,uint64,bool,bytes memory)"
                      }
                    },
                    "id": 50646,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19268:75:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50647,
                  "nodeType": "ExpressionStatement",
                  "src": "19268:75:79"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 50648,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "19360:4:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 50619,
                  "id": 50649,
                  "nodeType": "Return",
                  "src": "19353:11:79"
                }
              ]
            },
            "baseFunctions": [
              49953
            ],
            "documentation": {
              "id": 50606,
              "nodeType": "StructuredDocumentation",
              "src": "18689:194:79",
              "text": "@notice ERC20 onApprove callback\n @param _owner    Account that called approveAndCall\n @param _amount   Approved amount\n @param _data     Data used in OnApprove contract"
            },
            "functionSelector": "4273ca16",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onApprove",
            "nameLocation": "18897:9:79",
            "overrides": {
              "id": 50616,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "19034:8:79"
            },
            "parameters": {
              "id": 50615,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50608,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "18924:6:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 50651,
                  "src": "18916:14:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50607,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18916:7:79",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50610,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 50651,
                  "src": "18940:7:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50609,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18940:7:79",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50612,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "18965:7:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 50651,
                  "src": "18957:15:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50611,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18957:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50614,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "18997:5:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 50651,
                  "src": "18982:20:79",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 50613,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "18982:5:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18906:102:79"
            },
            "returnParameters": {
              "id": 50619,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50618,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 50651,
                  "src": "19060:4:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 50617,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "19060:4:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "19059:6:79"
            },
            "scope": 50825,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 50676,
            "nodeType": "FunctionDefinition",
            "src": "20174:272:79",
            "nodes": [],
            "body": {
              "id": 50675,
              "nodeType": "Block",
              "src": "20354:92:79",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 50666,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "20384:3:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 50667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "20384:10:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 50668,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50654,
                        "src": "20396:3:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 50669,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50656,
                        "src": "20401:6:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 50670,
                        "name": "_gasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50658,
                        "src": "20409:9:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 50671,
                        "name": "_isCreation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50660,
                        "src": "20420:11:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 50672,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50662,
                        "src": "20433:5:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 50665,
                      "name": "_depositTransaction",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50789,
                      "src": "20364:19:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint64_$_t_bool_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,uint64,bool,bytes memory)"
                      }
                    },
                    "id": 50673,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20364:75:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50674,
                  "nodeType": "ExpressionStatement",
                  "src": "20364:75:79"
                }
              ]
            },
            "documentation": {
              "id": 50652,
              "nodeType": "StructuredDocumentation",
              "src": "19541:628:79",
              "text": "deriving deposit transactions. Note that if a deposit is made by a contract, its\n         address will be aliased when retrieved using `tx.origin` or `msg.sender`. Consider\n         using the CrossDomainMessenger contracts for a simpler developer experience.\n @param _to         Target address on L2.\n @param _value      Native token value to send to the recipient.\n @param _gasLimit   Amount of L2 gas to purchase by burning gas on L1.\n @param _isCreation Whether or not the transaction is a contract creation.\n @param _data       Data to trigger the recipient with."
            },
            "functionSelector": "e9e05c42",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositTransaction",
            "nameLocation": "20183:18:79",
            "parameters": {
              "id": 50663,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50654,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "20219:3:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 50676,
                  "src": "20211:11:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50653,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20211:7:79",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50656,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "20240:6:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 50676,
                  "src": "20232:14:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50655,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20232:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50658,
                  "mutability": "mutable",
                  "name": "_gasLimit",
                  "nameLocation": "20263:9:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 50676,
                  "src": "20256:16:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 50657,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "20256:6:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50660,
                  "mutability": "mutable",
                  "name": "_isCreation",
                  "nameLocation": "20287:11:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 50676,
                  "src": "20282:16:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 50659,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "20282:4:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50662,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "20321:5:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 50676,
                  "src": "20308:18:79",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 50661,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "20308:5:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20201:131:79"
            },
            "returnParameters": {
              "id": 50664,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20354:0:79"
            },
            "scope": 50825,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 50789,
            "nodeType": "FunctionDefinition",
            "src": "21263:2184:79",
            "nodes": [],
            "body": {
              "id": 50788,
              "nodeType": "Block",
              "src": "21496:1951:79",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 50697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 50695,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50683,
                      "src": "21549:6:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 50696,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "21558:1:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "21549:10:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 50715,
                  "nodeType": "IfStatement",
                  "src": "21545:155:79",
                  "trueBody": {
                    "id": 50714,
                    "nodeType": "Block",
                    "src": "21561:139:79",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 50702,
                              "name": "_sender",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50679,
                              "src": "21619:7:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 50705,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "21636:4:79",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_OptimismPortal_$50825",
                                    "typeString": "contract OptimismPortal"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_OptimismPortal_$50825",
                                    "typeString": "contract OptimismPortal"
                                  }
                                ],
                                "id": 50704,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "21628:7:79",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 50703,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "21628:7:79",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 50706,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "21628:13:79",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 50707,
                              "name": "_value",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50683,
                              "src": "21643:6:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 50699,
                                  "name": "nativeTokenAddress",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 50045,
                                  "src": "21582:18:79",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 50698,
                                "name": "IERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 31286,
                                "src": "21575:6:79",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_IERC20_$31286_$",
                                  "typeString": "type(contract IERC20)"
                                }
                              },
                              "id": 50700,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "21575:26:79",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IERC20_$31286",
                                "typeString": "contract IERC20"
                              }
                            },
                            "id": 50701,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 31405,
                            "src": "21575:43:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$31286_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$31286_$",
                              "typeString": "function (contract IERC20,address,address,uint256)"
                            }
                          },
                          "id": 50708,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21575:75:79",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 50709,
                        "nodeType": "ExpressionStatement",
                        "src": "21575:75:79"
                      },
                      {
                        "expression": {
                          "id": 50712,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 50710,
                            "name": "depositedAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50047,
                            "src": "21664:15:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 50711,
                            "name": "_value",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50683,
                            "src": "21683:6:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "21664:25:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 50713,
                        "nodeType": "ExpressionStatement",
                        "src": "21664:25:79"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "id": 50716,
                    "name": "_isCreation",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 50687,
                    "src": "21839:11:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 50728,
                  "nodeType": "IfStatement",
                  "src": "21835:136:79",
                  "trueBody": {
                    "id": 50727,
                    "nodeType": "Block",
                    "src": "21852:119:79",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 50723,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 50718,
                                "name": "_to",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 50681,
                                "src": "21874:3:79",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "arguments": [
                                  {
                                    "hexValue": "30",
                                    "id": 50721,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "21889:1:79",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    },
                                    "value": "0"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_0_by_1",
                                      "typeString": "int_const 0"
                                    }
                                  ],
                                  "id": 50720,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "nodeType": "ElementaryTypeNameExpression",
                                  "src": "21881:7:79",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_address_$",
                                    "typeString": "type(address)"
                                  },
                                  "typeName": {
                                    "id": 50719,
                                    "name": "address",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "21881:7:79",
                                    "typeDescriptions": {}
                                  }
                                },
                                "id": 50722,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "typeConversion",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "21881:10:79",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "21874:17:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "4f7074696d69736d506f7274616c3a206d7573742073656e6420746f2061646472657373283029207768656e206372656174696e67206120636f6e7472616374",
                              "id": 50724,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "21893:66:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_35a8c36d4f7649c8575025c089af07faab9c54040307e9d6ec8463fe4050a639",
                                "typeString": "literal_string \"OptimismPortal: must send to address(0) when creating a contract\""
                              },
                              "value": "OptimismPortal: must send to address(0) when creating a contract"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_35a8c36d4f7649c8575025c089af07faab9c54040307e9d6ec8463fe4050a639",
                                "typeString": "literal_string \"OptimismPortal: must send to address(0) when creating a contract\""
                              }
                            ],
                            "id": 50717,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "21866:7:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 50725,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21866:94:79",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 50726,
                        "nodeType": "ExpressionStatement",
                        "src": "21866:94:79"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        "id": 50738,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 50730,
                          "name": "_gasLimit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 50685,
                          "src": "22126:9:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 50734,
                                    "name": "_data",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 50689,
                                    "src": "22162:5:79",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  "id": 50735,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "length",
                                  "nodeType": "MemberAccess",
                                  "src": "22162:12:79",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 50733,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "22155:6:79",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint64_$",
                                  "typeString": "type(uint64)"
                                },
                                "typeName": {
                                  "id": 50732,
                                  "name": "uint64",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "22155:6:79",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 50736,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "22155:20:79",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint64",
                                "typeString": "uint64"
                              }
                            ],
                            "id": 50731,
                            "name": "minimumGasLimit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50266,
                            "src": "22139:15:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_pure$_t_uint64_$returns$_t_uint64_$",
                              "typeString": "function (uint64) pure returns (uint64)"
                            }
                          },
                          "id": 50737,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "22139:37:79",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint64",
                            "typeString": "uint64"
                          }
                        },
                        "src": "22126:50:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f7074696d69736d506f7274616c3a20676173206c696d697420746f6f20736d616c6c",
                        "id": 50739,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22178:37:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0a0c886a0c5bbb9f3e1be0cff5d8eb64eb65c2a072ac278a98f80049a2d6c3f8",
                          "typeString": "literal_string \"OptimismPortal: gas limit too small\""
                        },
                        "value": "OptimismPortal: gas limit too small"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0a0c886a0c5bbb9f3e1be0cff5d8eb64eb65c2a072ac278a98f80049a2d6c3f8",
                          "typeString": "literal_string \"OptimismPortal: gas limit too small\""
                        }
                      ],
                      "id": 50729,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "22118:7:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 50740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22118:98:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50741,
                  "nodeType": "ExpressionStatement",
                  "src": "22118:98:79"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 50746,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 50743,
                            "name": "_data",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50689,
                            "src": "22595:5:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "id": 50744,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "22595:12:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "hexValue": "3132305f303030",
                          "id": 50745,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "22611:7:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_120000_by_1",
                            "typeString": "int_const 120000"
                          },
                          "value": "120_000"
                        },
                        "src": "22595:23:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "4f7074696d69736d506f7274616c3a206461746120746f6f206c61726765",
                        "id": 50747,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "22620:32:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ed1d4c6d62337124a330de9c9e42dcf809033e5ae909544279fbaee2e389020b",
                          "typeString": "literal_string \"OptimismPortal: data too large\""
                        },
                        "value": "OptimismPortal: data too large"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ed1d4c6d62337124a330de9c9e42dcf809033e5ae909544279fbaee2e389020b",
                          "typeString": "literal_string \"OptimismPortal: data too large\""
                        }
                      ],
                      "id": 50742,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "22587:7:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 50748,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22587:66:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50749,
                  "nodeType": "ExpressionStatement",
                  "src": "22587:66:79"
                },
                {
                  "assignments": [
                    50751
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50751,
                      "mutability": "mutable",
                      "name": "from",
                      "nameLocation": "22752:4:79",
                      "nodeType": "VariableDeclaration",
                      "scope": 50788,
                      "src": "22744:12:79",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 50750,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "22744:7:79",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50754,
                  "initialValue": {
                    "expression": {
                      "id": 50752,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "22759:3:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 50753,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "22759:10:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "22744:25:79"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 50759,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 50755,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "22783:3:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 50756,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "22783:10:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "expression": {
                        "id": 50757,
                        "name": "tx",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -26,
                        "src": "22797:2:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_transaction",
                          "typeString": "tx"
                        }
                      },
                      "id": 50758,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "origin",
                      "nodeType": "MemberAccess",
                      "src": "22797:9:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "22783:23:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 50769,
                  "nodeType": "IfStatement",
                  "src": "22779:108:79",
                  "trueBody": {
                    "id": 50768,
                    "nodeType": "Block",
                    "src": "22808:79:79",
                    "statements": [
                      {
                        "expression": {
                          "id": 50766,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 50760,
                            "name": "from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50751,
                            "src": "22822:4:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 50763,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "22865:3:79",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 50764,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "22865:10:79",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 50761,
                                "name": "AddressAliasHelper",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 66468,
                                "src": "22829:18:79",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_AddressAliasHelper_$66468_$",
                                  "typeString": "type(library AddressAliasHelper)"
                                }
                              },
                              "id": 50762,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "applyL1ToL2Alias",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 66445,
                              "src": "22829:35:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_address_$",
                                "typeString": "function (address) pure returns (address)"
                              }
                            },
                            "id": 50765,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "22829:47:79",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "src": "22822:54:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 50767,
                        "nodeType": "ExpressionStatement",
                        "src": "22822:54:79"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    50771
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 50771,
                      "mutability": "mutable",
                      "name": "opaqueData",
                      "nameLocation": "23157:10:79",
                      "nodeType": "VariableDeclaration",
                      "scope": 50788,
                      "src": "23144:23:79",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 50770,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "23144:5:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 50780,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 50774,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50683,
                        "src": "23187:6:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 50775,
                        "name": "_value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50683,
                        "src": "23195:6:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 50776,
                        "name": "_gasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50685,
                        "src": "23203:9:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        }
                      },
                      {
                        "id": 50777,
                        "name": "_isCreation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50687,
                        "src": "23214:11:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "id": 50778,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50689,
                        "src": "23227:5:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint64",
                          "typeString": "uint64"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 50772,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "23170:3:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 50773,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "src": "23170:16:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 50779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23170:63:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "23144:89:79"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 50782,
                        "name": "from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50751,
                        "src": "23401:4:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 50783,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50681,
                        "src": "23407:3:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 50784,
                        "name": "DEPOSIT_VERSION",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50010,
                        "src": "23412:15:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 50785,
                        "name": "opaqueData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50771,
                        "src": "23429:10:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 50781,
                      "name": "TransactionDeposited",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50058,
                      "src": "23380:20:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 50786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23380:60:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 50787,
                  "nodeType": "EmitStatement",
                  "src": "23375:65:79"
                }
              ]
            },
            "documentation": {
              "id": 50677,
              "nodeType": "StructuredDocumentation",
              "src": "20586:672:79",
              "text": "deriving deposit transactions. Note that if a deposit is made by a contract, its\n         address will be aliased when retrieved using `tx.origin` or `msg.sender`. Consider\n         using the CrossDomainMessenger contracts for a simpler developer experience.\n @param _sender       Sender address\n @param _to         Target address on L2.\n @param _value      Native token value to send to the recipient.\n @param _gasLimit   Amount of L2 gas to purchase by burning gas on L1.\n @param _isCreation Whether or not the transaction is a contract creation.\n @param _data       Data to trigger the recipient with."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 50692,
                    "name": "_gasLimit",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 50685,
                    "src": "21481:9:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  }
                ],
                "id": 50693,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 50691,
                  "name": "metered",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 51137,
                  "src": "21473:7:79"
                },
                "nodeType": "ModifierInvocation",
                "src": "21473:18:79"
              }
            ],
            "name": "_depositTransaction",
            "nameLocation": "21272:19:79",
            "parameters": {
              "id": 50690,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50679,
                  "mutability": "mutable",
                  "name": "_sender",
                  "nameLocation": "21309:7:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 50789,
                  "src": "21301:15:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50678,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21301:7:79",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50681,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "21334:3:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 50789,
                  "src": "21326:11:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 50680,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21326:7:79",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50683,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "21355:6:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 50789,
                  "src": "21347:14:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50682,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21347:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50685,
                  "mutability": "mutable",
                  "name": "_gasLimit",
                  "nameLocation": "21378:9:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 50789,
                  "src": "21371:16:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint64",
                    "typeString": "uint64"
                  },
                  "typeName": {
                    "id": 50684,
                    "name": "uint64",
                    "nodeType": "ElementaryTypeName",
                    "src": "21371:6:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint64",
                      "typeString": "uint64"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50687,
                  "mutability": "mutable",
                  "name": "_isCreation",
                  "nameLocation": "21402:11:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 50789,
                  "src": "21397:16:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 50686,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "21397:4:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 50689,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "21436:5:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 50789,
                  "src": "21423:18:79",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 50688,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "21423:5:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21291:156:79"
            },
            "returnParameters": {
              "id": 50694,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21496:0:79"
            },
            "scope": 50825,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 50806,
            "nodeType": "FunctionDefinition",
            "src": "23745:180:79",
            "nodes": [],
            "body": {
              "id": 50805,
              "nodeType": "Block",
              "src": "23825:100:79",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 50800,
                              "name": "_l2OutputIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50792,
                              "src": "23892:14:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 50798,
                              "name": "l2Oracle",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 50035,
                              "src": "23871:8:79",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_L2OutputOracle_$49889",
                                "typeString": "contract L2OutputOracle"
                              }
                            },
                            "id": 50799,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "getL2Output",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 49729,
                            "src": "23871:20:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_uint256_$returns$_t_struct$_OutputProposal_$61225_memory_ptr_$",
                              "typeString": "function (uint256) view external returns (struct Types.OutputProposal memory)"
                            }
                          },
                          "id": 50801,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23871:36:79",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_OutputProposal_$61225_memory_ptr",
                            "typeString": "struct Types.OutputProposal memory"
                          }
                        },
                        "id": 50802,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "timestamp",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 61222,
                        "src": "23871:46:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint128",
                          "typeString": "uint128"
                        }
                      ],
                      "id": 50797,
                      "name": "_isFinalizationPeriodElapsed",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 50824,
                      "src": "23842:28:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (uint256) view returns (bool)"
                      }
                    },
                    "id": 50803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23842:76:79",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 50796,
                  "id": 50804,
                  "nodeType": "Return",
                  "src": "23835:83:79"
                }
              ]
            },
            "documentation": {
              "id": 50790,
              "nodeType": "StructuredDocumentation",
              "src": "23453:287:79",
              "text": "@notice Determine if a given output is finalized.\n         Reverts if the call to L2_ORACLE.getL2Output reverts.\n         Returns a boolean otherwise.\n @param _l2OutputIndex Index of the L2 output to check.\n @return Whether or not the output is finalized."
            },
            "functionSelector": "6dbffb78",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isOutputFinalized",
            "nameLocation": "23754:17:79",
            "parameters": {
              "id": 50793,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50792,
                  "mutability": "mutable",
                  "name": "_l2OutputIndex",
                  "nameLocation": "23780:14:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 50806,
                  "src": "23772:22:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50791,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23772:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23771:24:79"
            },
            "returnParameters": {
              "id": 50796,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50795,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 50806,
                  "src": "23819:4:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 50794,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "23819:4:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23818:6:79"
            },
            "scope": 50825,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 50824,
            "nodeType": "FunctionDefinition",
            "src": "24178:180:79",
            "nodes": [],
            "body": {
              "id": 50823,
              "nodeType": "Block",
              "src": "24265:93:79",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 50821,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 50814,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "24282:5:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 50815,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "timestamp",
                      "nodeType": "MemberAccess",
                      "src": "24282:15:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 50820,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 50816,
                        "name": "_timestamp",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 50809,
                        "src": "24300:10:79",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 50817,
                            "name": "l2Oracle",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 50035,
                            "src": "24313:8:79",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_L2OutputOracle_$49889",
                              "typeString": "contract L2OutputOracle"
                            }
                          },
                          "id": 50818,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "FINALIZATION_PERIOD_SECONDS",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 49400,
                          "src": "24313:36:79",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                            "typeString": "function () view external returns (uint256)"
                          }
                        },
                        "id": 50819,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "24313:38:79",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "24300:51:79",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "24282:69:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 50813,
                  "id": 50822,
                  "nodeType": "Return",
                  "src": "24275:76:79"
                }
              ]
            },
            "documentation": {
              "id": 50807,
              "nodeType": "StructuredDocumentation",
              "src": "23931:242:79",
              "text": "@notice Determines whether the finalization period has elapsed with respect to\n         the provided block timestamp.\n @param _timestamp Timestamp to check.\n @return Whether or not the finalization period has elapsed."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_isFinalizationPeriodElapsed",
            "nameLocation": "24187:28:79",
            "parameters": {
              "id": 50810,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50809,
                  "mutability": "mutable",
                  "name": "_timestamp",
                  "nameLocation": "24224:10:79",
                  "nodeType": "VariableDeclaration",
                  "scope": 50824,
                  "src": "24216:18:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 50808,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "24216:7:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24215:20:79"
            },
            "returnParameters": {
              "id": 50813,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 50812,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 50824,
                  "src": "24259:4:79",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 50811,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "24259:4:79",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "24258:6:79"
            },
            "scope": 50825,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 49988,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 30622,
              "src": "1365:13:79"
            },
            "id": 49989,
            "nodeType": "InheritanceSpecifier",
            "src": "1365:13:79"
          },
          {
            "baseName": {
              "id": 49990,
              "name": "ResourceMetering",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 51427,
              "src": "1380:16:79"
            },
            "id": 49991,
            "nodeType": "InheritanceSpecifier",
            "src": "1380:16:79"
          },
          {
            "baseName": {
              "id": 49992,
              "name": "OnApprove",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 49954,
              "src": "1398:9:79"
            },
            "id": 49993,
            "nodeType": "InheritanceSpecifier",
            "src": "1398:9:79"
          },
          {
            "baseName": {
              "id": 49994,
              "name": "ISemver",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 64010,
              "src": "1409:7:79"
            },
            "id": 49995,
            "nodeType": "InheritanceSpecifier",
            "src": "1409:7:79"
          }
        ],
        "canonicalName": "OptimismPortal",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 49987,
          "nodeType": "StructuredDocumentation",
          "src": "1000:338:79",
          "text": "@custom:proxied\n @title OptimismPortal\n @notice The OptimismPortal is a low-level contract responsible for passing messages between L1\n         and L2. Messages sent directly to the OptimismPortal have no form of replayability.\n         Users are encouraged to use the L1CrossDomainMessenger for a higher-level interface."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          50825,
          64010,
          49954,
          51427,
          30622
        ],
        "name": "OptimismPortal",
        "nameLocation": "1347:14:79",
        "scope": 50826,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 79
}