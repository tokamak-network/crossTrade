{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract AddressManager",
          "name": "_addressManager",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_implementationName",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b506040516105f03803806105f083398101604081905261002f91610088565b30600090815260016020908152604080832080546001600160a01b0319166001600160a01b03871617905590829052902061006a8282610203565b5050506102c2565b634e487b7160e01b600052604160045260246000fd5b6000806040838503121561009b57600080fd5b82516001600160a01b03811681146100b257600080fd5b602084810151919350906001600160401b03808211156100d157600080fd5b818601915086601f8301126100e557600080fd5b8151818111156100f7576100f7610072565b604051601f8201601f19908116603f0116810190838211818310171561011f5761011f610072565b81604052828152898684870101111561013757600080fd5b600093505b82841015610159578484018601518185018701529285019261013c565b8284111561016a5760008684830101525b8096505050505050509250929050565b600181811c9082168061018e57607f821691505b6020821081036101ae57634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156101fe57600081815260208120601f850160051c810160208610156101db5750805b601f850160051c820191505b818110156101fa578281556001016101e7565b5050505b505050565b81516001600160401b0381111561021c5761021c610072565b6102308161022a845461017a565b846101b4565b602080601f831160018114610265576000841561024d5750858301515b600019600386901b1c1916600185901b1785556101fa565b600085815260208120601f198616915b8281101561029457888601518255948401946001909101908401610275565b50858210156102b25787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b61031f806102d16000396000f3fe608060408181523060009081526001602090815282822054908290529181207fbf40fac1000000000000000000000000000000000000000000000000000000009093529173ffffffffffffffffffffffffffffffffffffffff9091169063bf40fac19061006d9060846101e2565b602060405180830381865afa15801561008a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100ae91906102c5565b905073ffffffffffffffffffffffffffffffffffffffff8116610157576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603960248201527f5265736f6c76656444656c656761746550726f78793a2074617267657420616460448201527f6472657373206d75737420626520696e697469616c697a656400000000000000606482015260840160405180910390fd5b6000808273ffffffffffffffffffffffffffffffffffffffff16600036604051610182929190610302565b600060405180830381855af49150503d80600081146101bd576040519150601f19603f3d011682016040523d82523d6000602084013e6101c2565b606091505b5090925090508115156001036101da57805160208201f35b805160208201fd5b600060208083526000845481600182811c91508083168061020457607f831692505b858310810361023a577f4e487b710000000000000000000000000000000000000000000000000000000085526022600452602485fd5b878601838152602001818015610257576001811461028b576102b6565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008616825284151560051b820196506102b6565b60008b81526020902060005b868110156102b057815484820152908501908901610297565b83019750505b50949998505050505050505050565b6000602082840312156102d757600080fd5b815173ffffffffffffffffffffffffffffffffffffffff811681146102fb57600080fd5b9392505050565b818382376000910190815291905056fea164736f6c634300080f000a",
    "sourceMap": "448:2130:137:-:0;;;1573:208;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1685:4;1662:29;;;;:14;:29;;;;;;;;:47;;-1:-1:-1;;;;;;1662:47:137;-1:-1:-1;;;;;1662:47:137;;;;;1719:33;;;;;;:55;1755:19;1719:33;:55;:::i;:::-;;1573:208;;448:2130;;14:127:219;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:1278;259:6;267;320:2;308:9;299:7;295:23;291:32;288:52;;;336:1;333;326:12;288:52;362:16;;-1:-1:-1;;;;;407:31:219;;397:42;;387:70;;453:1;450;443:12;387:70;500:2;531:18;;;525:25;476:5;;-1:-1:-1;500:2:219;-1:-1:-1;;;;;599:14:219;;;596:34;;;626:1;623;616:12;596:34;664:6;653:9;649:22;639:32;;709:7;702:4;698:2;694:13;690:27;680:55;;731:1;728;721:12;680:55;760:2;754:9;782:2;778;775:10;772:36;;;788:18;;:::i;:::-;863:2;857:9;831:2;917:13;;-1:-1:-1;;913:22:219;;;937:2;909:31;905:40;893:53;;;961:18;;;981:22;;;958:46;955:72;;;1007:18;;:::i;:::-;1047:10;1043:2;1036:22;1082:2;1074:6;1067:18;1122:7;1117:2;1112;1108;1104:11;1100:20;1097:33;1094:53;;;1143:1;1140;1133:12;1094:53;1165:1;1156:10;;1175:129;1189:2;1186:1;1183:9;1175:129;;;1277:10;;;1273:19;;1267:26;1246:14;;;1242:23;;1235:59;1200:10;;;;1175:129;;;1322:2;1319:1;1316:9;1313:80;;;1381:1;1376:2;1371;1363:6;1359:15;1355:24;1348:35;1313:80;1412:6;1402:16;;;;;;;;146:1278;;;;;:::o;1429:380::-;1508:1;1504:12;;;;1551;;;1572:61;;1626:4;1618:6;1614:17;1604:27;;1572:61;1679:2;1671:6;1668:14;1648:18;1645:38;1642:161;;1725:10;1720:3;1716:20;1713:1;1706:31;1760:4;1757:1;1750:15;1788:4;1785:1;1778:15;1642:161;;1429:380;;;:::o;1940:545::-;2042:2;2037:3;2034:11;2031:448;;;2078:1;2103:5;2099:2;2092:17;2148:4;2144:2;2134:19;2218:2;2206:10;2202:19;2199:1;2195:27;2189:4;2185:38;2254:4;2242:10;2239:20;2236:47;;;-1:-1:-1;2277:4:219;2236:47;2332:2;2327:3;2323:12;2320:1;2316:20;2310:4;2306:31;2296:41;;2387:82;2405:2;2398:5;2395:13;2387:82;;;2450:17;;;2431:1;2420:13;2387:82;;;2391:3;;;2031:448;1940:545;;;:::o;2661:1352::-;2781:10;;-1:-1:-1;;;;;2803:30:219;;2800:56;;;2836:18;;:::i;:::-;2865:97;2955:6;2915:38;2947:4;2941:11;2915:38;:::i;:::-;2909:4;2865:97;:::i;:::-;3017:4;;3081:2;3070:14;;3098:1;3093:663;;;;3800:1;3817:6;3814:89;;;-1:-1:-1;3869:19:219;;;3863:26;3814:89;-1:-1:-1;;2618:1:219;2614:11;;;2610:24;2606:29;2596:40;2642:1;2638:11;;;2593:57;3916:81;;3063:944;;3093:663;1887:1;1880:14;;;1924:4;1911:18;;-1:-1:-1;;3129:20:219;;;3247:236;3261:7;3258:1;3255:14;3247:236;;;3350:19;;;3344:26;3329:42;;3442:27;;;;3410:1;3398:14;;;;3277:19;;3247:236;;;3251:3;3511:6;3502:7;3499:19;3496:201;;;3572:19;;;3566:26;-1:-1:-1;;3655:1:219;3651:14;;;3667:3;3647:24;3643:37;3639:42;3624:58;3609:74;;3496:201;-1:-1:-1;;;;;3743:1:219;3727:14;;;3723:22;3710:36;;-1:-1:-1;2661:1352:219:o;:::-;448:2130:137;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060408181523060009081526001602090815282822054908290529181207fbf40fac1000000000000000000000000000000000000000000000000000000009093529173ffffffffffffffffffffffffffffffffffffffff9091169063bf40fac19061006d9060846101e2565b602060405180830381865afa15801561008a573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906100ae91906102c5565b905073ffffffffffffffffffffffffffffffffffffffff8116610157576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603960248201527f5265736f6c76656444656c656761746550726f78793a2074617267657420616460448201527f6472657373206d75737420626520696e697469616c697a656400000000000000606482015260840160405180910390fd5b6000808273ffffffffffffffffffffffffffffffffffffffff16600036604051610182929190610302565b600060405180830381855af49150503d80600081146101bd576040519150601f19603f3d011682016040523d82523d6000602084013e6101c2565b606091505b5090925090508115156001036101da57805160208201f35b805160208201fd5b600060208083526000845481600182811c91508083168061020457607f831692505b858310810361023a577f4e487b710000000000000000000000000000000000000000000000000000000085526022600452602485fd5b878601838152602001818015610257576001811461028b576102b6565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff008616825284151560051b820196506102b6565b60008b81526020902060005b868110156102b057815484820152908501908901610297565b83019750505b50949998505050505050505050565b6000602082840312156102d757600080fd5b815173ffffffffffffffffffffffffffffffffffffffff811681146102fb57600080fd5b9392505050565b818382376000910190815291905056fea164736f6c634300080f000a",
    "sourceMap": "448:2130:137:-:0;;;;;2008:4;1968:14;1985:29;;;:14;:29;;;;;;;;2027:33;;;;;;;1985:77;;;;1968:14;1985:29;;;;;:40;;:77;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1968:94;-1:-1:-1;2081:20:137;;;2073:90;;;;;;;2149:2:219;2073:90:137;;;2131:21:219;2188:2;2168:18;;;2161:30;2227:34;2207:18;;;2200:62;2298:27;2278:18;;;2271:55;2343:19;;2073:90:137;;;;;;;;2236:12;2250:23;2277:6;:19;;2297:8;;2277:29;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2235:71:137;;-1:-1:-1;2235:71:137;-1:-1:-1;2321:15:137;;;2332:4;2321:15;2317:253;;2415:10;2409:17;2402:4;2390:10;2386:21;2379:48;2317:253;2534:10;2528:17;2521:4;2509:10;2505:21;2498:48;295:1329:219;404:4;433:2;462;451:9;444:21;485:1;518:6;512:13;548:3;570:1;598:9;594:2;590:18;580:28;;658:2;647:9;643:18;680;670:61;;724:4;716:6;712:17;702:27;;670:61;777:2;769:6;766:14;746:18;743:38;740:222;;816:77;811:3;804:90;917:4;914:1;907:15;947:4;942:3;935:17;740:222;1018:18;;;101:19;;;153:4;144:14;1061:18;1088:186;;;;1288:1;1283:315;;;;1054:544;;1088:186;1136:66;1125:9;1121:82;1116:3;1109:95;1254:6;1247:14;1240:22;1237:1;1233:30;1228:3;1224:40;1217:47;;1088:186;;1283:315;242:1;235:14;;;279:4;266:18;;1378:1;1392:165;1406:6;1403:1;1400:13;1392:165;;;1484:14;;1471:11;;;1464:35;1527:16;;;;1421:10;;1392:165;;;1577:11;;;-1:-1:-1;;1054:544:219;-1:-1:-1;1615:3:219;;295:1329;-1:-1:-1;;;;;;;;;295:1329:219:o;1629:313::-;1699:6;1752:2;1740:9;1731:7;1727:23;1723:32;1720:52;;;1768:1;1765;1758:12;1720:52;1800:9;1794:16;1850:42;1843:5;1839:54;1832:5;1829:65;1819:93;;1908:1;1905;1898:12;1819:93;1931:5;1629:313;-1:-1:-1;;;1629:313:219:o;2373:271::-;2556:6;2548;2543:3;2530:33;2512:3;2582:16;;2607:13;;;2582:16;2373:271;-1:-1:-1;2373:271:219:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {},
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract AddressManager\",\"name\":\"_addressManager\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_implementationName\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"custom:legacy\":\"@title ResolvedDelegateProxy\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_addressManager\":\"Address of the AddressManager.\",\"_implementationName\":\"implementationName of the contract to proxy to.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"ResolvedDelegateProxy is a legacy proxy contract that makes use of the AddressManager to         resolve the implementation address. We're maintaining this contract for backwards         compatibility so we can manage all legacy proxies where necessary.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/legacy/ResolvedDelegateProxy.sol\":\"ResolvedDelegateProxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@cwia/=lib/clones-with-immutable-args/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/solmate/\",\":clones-with-immutable-args/=lib/clones-with-immutable-args/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"src/legacy/AddressManager.sol\":{\"keccak256\":\"0x1fcb990df6473f7fa360d5924d62d39ce2ca97d45668e3901e5405cfbe598b19\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9d08358b60dea54dbc32e988a1bb7ea909488063eaae3c5ae28a322f125c9b34\",\"dweb:/ipfs/QmZPQwdjLh9gaamNAoTUmWwwbRKj3yHovBYfnTPnfuKvUt\"]},\"src/legacy/ResolvedDelegateProxy.sol\":{\"keccak256\":\"0x33425509c2982627f1e88977d76637096322954c474217bd4d03a3244814f332\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2cb3702c3c280ebf65e636b2d2fd8533aebae69014304014353afee129415c53\",\"dweb:/ipfs/QmYpcVwF8hzwCcPqv535oENbars988N21MVvvDw9eQNaSf\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract AddressManager",
              "name": "_addressManager",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_implementationName",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "fallback"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "constructor": {
            "params": {
              "_addressManager": "Address of the AddressManager.",
              "_implementationName": "implementationName of the contract to proxy to."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@cwia/=lib/clones-with-immutable-args/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@rari-capital/solmate/=lib/solmate/",
        "clones-with-immutable-args/=lib/clones-with-immutable-args/src/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "safe-contracts/=lib/safe-contracts/contracts/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 999999
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "src/legacy/ResolvedDelegateProxy.sol": "ResolvedDelegateProxy"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "src/legacy/AddressManager.sol": {
        "keccak256": "0x1fcb990df6473f7fa360d5924d62d39ce2ca97d45668e3901e5405cfbe598b19",
        "urls": [
          "bzz-raw://9d08358b60dea54dbc32e988a1bb7ea909488063eaae3c5ae28a322f125c9b34",
          "dweb:/ipfs/QmZPQwdjLh9gaamNAoTUmWwwbRKj3yHovBYfnTPnfuKvUt"
        ],
        "license": "MIT"
      },
      "src/legacy/ResolvedDelegateProxy.sol": {
        "keccak256": "0x33425509c2982627f1e88977d76637096322954c474217bd4d03a3244814f332",
        "urls": [
          "bzz-raw://2cb3702c3c280ebf65e636b2d2fd8533aebae69014304014353afee129415c53",
          "dweb:/ipfs/QmYpcVwF8hzwCcPqv535oENbars988N21MVvvDw9eQNaSf"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 67543,
        "contract": "src/legacy/ResolvedDelegateProxy.sol:ResolvedDelegateProxy",
        "label": "implementationName",
        "offset": 0,
        "slot": "0",
        "type": "t_mapping(t_address,t_string_storage)"
      },
      {
        "astId": 67549,
        "contract": "src/legacy/ResolvedDelegateProxy.sol:ResolvedDelegateProxy",
        "label": "addressManager",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_address,t_contract(AddressManager)66684)"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_contract(AddressManager)66684": {
        "encoding": "inplace",
        "label": "contract AddressManager",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_contract(AddressManager)66684)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => contract AddressManager)",
        "numberOfBytes": "32",
        "value": "t_contract(AddressManager)66684"
      },
      "t_mapping(t_address,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      }
    }
  },
  "userdoc": {
    "version": 1,
    "kind": "user",
    "notice": "ResolvedDelegateProxy is a legacy proxy contract that makes use of the AddressManager to         resolve the implementation address. We're maintaining this contract for backwards         compatibility so we can manage all legacy proxies where necessary."
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "methods": {
      "constructor": {
        "params": {
          "_addressManager": "Address of the AddressManager.",
          "_implementationName": "implementationName of the contract to proxy to."
        }
      }
    }
  },
  "ast": {
    "absolutePath": "src/legacy/ResolvedDelegateProxy.sol",
    "id": 67630,
    "exportedSymbols": {
      "AddressManager": [
        66684
      ],
      "ResolvedDelegateProxy": [
        67629
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:2547:137",
    "nodes": [
      {
        "id": 67535,
        "nodeType": "PragmaDirective",
        "src": "32:23:137",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 67537,
        "nodeType": "ImportDirective",
        "src": "57:63:137",
        "nodes": [],
        "absolutePath": "src/legacy/AddressManager.sol",
        "file": "src/legacy/AddressManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 67630,
        "sourceUnit": 66685,
        "symbolAliases": [
          {
            "foreign": {
              "id": 67536,
              "name": "AddressManager",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 66684,
              "src": "66:14:137",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 67629,
        "nodeType": "ContractDefinition",
        "src": "448:2130:137",
        "nodes": [
          {
            "id": 67543,
            "nodeType": "VariableDeclaration",
            "src": "969:53:137",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 67539,
              "nodeType": "StructuredDocumentation",
              "src": "485:479:137",
              "text": "@notice Mapping used to store the implementation name that corresponds to this contract. A\n         mapping was originally used as a way to bypass the same issue normally solved by\n         storing the implementation address in a specific storage slot that does not conflict\n         with any other storage slot. Generally NOT a safe solution but works as long as the\n         implementation does not also keep a mapping in the first storage slot."
            },
            "mutability": "mutable",
            "name": "implementationName",
            "nameLocation": "1004:18:137",
            "scope": 67629,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
              "typeString": "mapping(address => string)"
            },
            "typeName": {
              "id": 67542,
              "keyType": {
                "id": 67540,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "977:7:137",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "969:26:137",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                "typeString": "mapping(address => string)"
              },
              "valueType": {
                "id": 67541,
                "name": "string",
                "nodeType": "ElementaryTypeName",
                "src": "988:6:137",
                "typeDescriptions": {
                  "typeIdentifier": "t_string_storage_ptr",
                  "typeString": "string"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 67549,
            "nodeType": "VariableDeclaration",
            "src": "1363:57:137",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 67544,
              "nodeType": "StructuredDocumentation",
              "src": "1029:329:137",
              "text": "@notice Mapping used to store the address of the AddressManager contract where the\n         implementation address will be resolved from. Same concept here as with the above\n         mapping. Also generally unsafe but fine if the implementation doesn't keep a mapping\n         in the second storage slot."
            },
            "mutability": "mutable",
            "name": "addressManager",
            "nameLocation": "1406:14:137",
            "scope": 67629,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_contract$_AddressManager_$66684_$",
              "typeString": "mapping(address => contract AddressManager)"
            },
            "typeName": {
              "id": 67548,
              "keyType": {
                "id": 67545,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "1371:7:137",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "1363:34:137",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_contract$_AddressManager_$66684_$",
                "typeString": "mapping(address => contract AddressManager)"
              },
              "valueType": {
                "id": 67547,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 67546,
                  "name": "AddressManager",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 66684,
                  "src": "1382:14:137"
                },
                "referencedDeclaration": 66684,
                "src": "1382:14:137",
                "typeDescriptions": {
                  "typeIdentifier": "t_contract$_AddressManager_$66684",
                  "typeString": "contract AddressManager"
                }
              }
            },
            "visibility": "private"
          },
          {
            "id": 67577,
            "nodeType": "FunctionDefinition",
            "src": "1573:208:137",
            "nodes": [],
            "body": {
              "id": 67576,
              "nodeType": "Block",
              "src": "1652:129:137",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 67565,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 67558,
                        "name": "addressManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67549,
                        "src": "1662:14:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_contract$_AddressManager_$66684_$",
                          "typeString": "mapping(address => contract AddressManager)"
                        }
                      },
                      "id": 67563,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 67561,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1685:4:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ResolvedDelegateProxy_$67629",
                              "typeString": "contract ResolvedDelegateProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ResolvedDelegateProxy_$67629",
                              "typeString": "contract ResolvedDelegateProxy"
                            }
                          ],
                          "id": 67560,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1677:7:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 67559,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1677:7:137",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 67562,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1677:13:137",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1662:29:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AddressManager_$66684",
                        "typeString": "contract AddressManager"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 67564,
                      "name": "_addressManager",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67553,
                      "src": "1694:15:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AddressManager_$66684",
                        "typeString": "contract AddressManager"
                      }
                    },
                    "src": "1662:47:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AddressManager_$66684",
                      "typeString": "contract AddressManager"
                    }
                  },
                  "id": 67566,
                  "nodeType": "ExpressionStatement",
                  "src": "1662:47:137"
                },
                {
                  "expression": {
                    "id": 67574,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 67567,
                        "name": "implementationName",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67543,
                        "src": "1719:18:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                          "typeString": "mapping(address => string storage ref)"
                        }
                      },
                      "id": 67572,
                      "indexExpression": {
                        "arguments": [
                          {
                            "id": 67570,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "1746:4:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ResolvedDelegateProxy_$67629",
                              "typeString": "contract ResolvedDelegateProxy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_ResolvedDelegateProxy_$67629",
                              "typeString": "contract ResolvedDelegateProxy"
                            }
                          ],
                          "id": 67569,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1738:7:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 67568,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1738:7:137",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 67571,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1738:13:137",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1719:33:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 67573,
                      "name": "_implementationName",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67555,
                      "src": "1755:19:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "1719:55:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 67575,
                  "nodeType": "ExpressionStatement",
                  "src": "1719:55:137"
                }
              ]
            },
            "documentation": {
              "id": 67550,
              "nodeType": "StructuredDocumentation",
              "src": "1427:141:137",
              "text": "@param _addressManager  Address of the AddressManager.\n @param _implementationName implementationName of the contract to proxy to."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 67556,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 67553,
                  "mutability": "mutable",
                  "name": "_addressManager",
                  "nameLocation": "1600:15:137",
                  "nodeType": "VariableDeclaration",
                  "scope": 67577,
                  "src": "1585:30:137",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_AddressManager_$66684",
                    "typeString": "contract AddressManager"
                  },
                  "typeName": {
                    "id": 67552,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 67551,
                      "name": "AddressManager",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 66684,
                      "src": "1585:14:137"
                    },
                    "referencedDeclaration": 66684,
                    "src": "1585:14:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AddressManager_$66684",
                      "typeString": "contract AddressManager"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 67555,
                  "mutability": "mutable",
                  "name": "_implementationName",
                  "nameLocation": "1631:19:137",
                  "nodeType": "VariableDeclaration",
                  "scope": 67577,
                  "src": "1617:33:137",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 67554,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1617:6:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1584:67:137"
            },
            "returnParameters": {
              "id": 67557,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1652:0:137"
            },
            "scope": 67629,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 67628,
            "nodeType": "FunctionDefinition",
            "src": "1930:646:137",
            "nodes": [],
            "body": {
              "id": 67627,
              "nodeType": "Block",
              "src": "1958:618:137",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    67582
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 67582,
                      "mutability": "mutable",
                      "name": "target",
                      "nameLocation": "1976:6:137",
                      "nodeType": "VariableDeclaration",
                      "scope": 67627,
                      "src": "1968:14:137",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 67581,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "1968:7:137",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 67598,
                  "initialValue": {
                    "arguments": [
                      {
                        "components": [
                          {
                            "baseExpression": {
                              "id": 67590,
                              "name": "implementationName",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 67543,
                              "src": "2027:18:137",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_string_storage_$",
                                "typeString": "mapping(address => string storage ref)"
                              }
                            },
                            "id": 67595,
                            "indexExpression": {
                              "arguments": [
                                {
                                  "id": 67593,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "2054:4:137",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_ResolvedDelegateProxy_$67629",
                                    "typeString": "contract ResolvedDelegateProxy"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_ResolvedDelegateProxy_$67629",
                                    "typeString": "contract ResolvedDelegateProxy"
                                  }
                                ],
                                "id": 67592,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "2046:7:137",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 67591,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "2046:7:137",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 67594,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2046:13:137",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "2027:33:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          }
                        ],
                        "id": 67596,
                        "isConstant": false,
                        "isInlineArray": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "TupleExpression",
                        "src": "2026:35:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_string_storage",
                          "typeString": "string storage ref"
                        }
                      ],
                      "expression": {
                        "baseExpression": {
                          "id": 67583,
                          "name": "addressManager",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67549,
                          "src": "1985:14:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_contract$_AddressManager_$66684_$",
                            "typeString": "mapping(address => contract AddressManager)"
                          }
                        },
                        "id": 67588,
                        "indexExpression": {
                          "arguments": [
                            {
                              "id": 67586,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "2008:4:137",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ResolvedDelegateProxy_$67629",
                                "typeString": "contract ResolvedDelegateProxy"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_ResolvedDelegateProxy_$67629",
                                "typeString": "contract ResolvedDelegateProxy"
                              }
                            ],
                            "id": 67585,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2000:7:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 67584,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2000:7:137",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 67587,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2000:13:137",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "1985:29:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AddressManager_$66684",
                          "typeString": "contract AddressManager"
                        }
                      },
                      "id": 67589,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getAddress",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 66667,
                      "src": "1985:40:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_string_memory_ptr_$returns$_t_address_$",
                        "typeString": "function (string memory) view external returns (address)"
                      }
                    },
                    "id": 67597,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1985:77:137",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1968:94:137"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 67605,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 67600,
                          "name": "target",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 67582,
                          "src": "2081:6:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 67603,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2099:1:137",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 67602,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2091:7:137",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 67601,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "2091:7:137",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 67604,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2091:10:137",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "2081:20:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5265736f6c76656444656c656761746550726f78793a207461726765742061646472657373206d75737420626520696e697469616c697a6564",
                        "id": 67606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2103:59:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_4d854a8e116e0f3da73003360f03ac382ae8205c4798da9ecd48d43a1cc0a5e7",
                          "typeString": "literal_string \"ResolvedDelegateProxy: target address must be initialized\""
                        },
                        "value": "ResolvedDelegateProxy: target address must be initialized"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_4d854a8e116e0f3da73003360f03ac382ae8205c4798da9ecd48d43a1cc0a5e7",
                          "typeString": "literal_string \"ResolvedDelegateProxy: target address must be initialized\""
                        }
                      ],
                      "id": 67599,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "2073:7:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 67607,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2073:90:137",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 67608,
                  "nodeType": "ExpressionStatement",
                  "src": "2073:90:137"
                },
                {
                  "assignments": [
                    67610,
                    67612
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 67610,
                      "mutability": "mutable",
                      "name": "success",
                      "nameLocation": "2241:7:137",
                      "nodeType": "VariableDeclaration",
                      "scope": 67627,
                      "src": "2236:12:137",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "typeName": {
                        "id": 67609,
                        "name": "bool",
                        "nodeType": "ElementaryTypeName",
                        "src": "2236:4:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 67612,
                      "mutability": "mutable",
                      "name": "returndata",
                      "nameLocation": "2263:10:137",
                      "nodeType": "VariableDeclaration",
                      "scope": 67627,
                      "src": "2250:23:137",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 67611,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2250:5:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 67618,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 67615,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "2297:3:137",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 67616,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "data",
                        "nodeType": "MemberAccess",
                        "src": "2297:8:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "expression": {
                        "id": 67613,
                        "name": "target",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 67582,
                        "src": "2277:6:137",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "id": 67614,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatecall",
                      "nodeType": "MemberAccess",
                      "src": "2277:19:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_baredelegatecall_nonpayable$_t_bytes_memory_ptr_$returns$_t_bool_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) returns (bool,bytes memory)"
                      }
                    },
                    "id": 67617,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2277:29:137",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_bool_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(bool,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2235:71:137"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 67621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 67619,
                      "name": "success",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 67610,
                      "src": "2321:7:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "74727565",
                      "id": 67620,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2332:4:137",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2321:15:137",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 67625,
                    "nodeType": "Block",
                    "src": "2457:113:137",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "2480:80:137",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "returndata",
                                        "nodeType": "YulIdentifier",
                                        "src": "2509:10:137"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2521:4:137",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2505:3:137"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2505:21:137"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "returndata",
                                        "nodeType": "YulIdentifier",
                                        "src": "2534:10:137"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "2528:5:137"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2528:17:137"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "2498:6:137"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2498:48:137"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2498:48:137"
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 67612,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2509:10:137",
                            "valueSize": 1
                          },
                          {
                            "declaration": 67612,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2534:10:137",
                            "valueSize": 1
                          }
                        ],
                        "id": 67624,
                        "nodeType": "InlineAssembly",
                        "src": "2471:89:137"
                      }
                    ]
                  },
                  "id": 67626,
                  "nodeType": "IfStatement",
                  "src": "2317:253:137",
                  "trueBody": {
                    "id": 67623,
                    "nodeType": "Block",
                    "src": "2338:113:137",
                    "statements": [
                      {
                        "AST": {
                          "nodeType": "YulBlock",
                          "src": "2361:80:137",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "returndata",
                                        "nodeType": "YulIdentifier",
                                        "src": "2390:10:137"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "2402:4:137",
                                        "type": "",
                                        "value": "0x20"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "2386:3:137"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2386:21:137"
                                  },
                                  {
                                    "arguments": [
                                      {
                                        "name": "returndata",
                                        "nodeType": "YulIdentifier",
                                        "src": "2415:10:137"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "mload",
                                      "nodeType": "YulIdentifier",
                                      "src": "2409:5:137"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "2409:17:137"
                                  }
                                ],
                                "functionName": {
                                  "name": "return",
                                  "nodeType": "YulIdentifier",
                                  "src": "2379:6:137"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2379:48:137"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "2379:48:137"
                            }
                          ]
                        },
                        "evmVersion": "london",
                        "externalReferences": [
                          {
                            "declaration": 67612,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2390:10:137",
                            "valueSize": 1
                          },
                          {
                            "declaration": 67612,
                            "isOffset": false,
                            "isSlot": false,
                            "src": "2415:10:137",
                            "valueSize": 1
                          }
                        ],
                        "id": 67622,
                        "nodeType": "InlineAssembly",
                        "src": "2352:89:137"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 67578,
              "nodeType": "StructuredDocumentation",
              "src": "1787:85:137",
              "text": "@notice Fallback, performs a delegatecall to the resolved implementation address."
            },
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 67579,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1938:2:137"
            },
            "returnParameters": {
              "id": 67580,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1958:0:137"
            },
            "scope": 67629,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ResolvedDelegateProxy",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 67538,
          "nodeType": "StructuredDocumentation",
          "src": "122:326:137",
          "text": "@custom:legacy\n @title ResolvedDelegateProxy\n @notice ResolvedDelegateProxy is a legacy proxy contract that makes use of the AddressManager to\n         resolve the implementation address. We're maintaining this contract for backwards\n         compatibility so we can manage all legacy proxies where necessary."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          67629
        ],
        "name": "ResolvedDelegateProxy",
        "nameLocation": "457:21:137",
        "scope": 67630,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 137
}