{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract StandardBridge",
          "name": "_otherBridge",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "l1Token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "l2Token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "extraData",
          "type": "bytes"
        }
      ],
      "name": "DepositFinalized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "localToken",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "remoteToken",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "extraData",
          "type": "bytes"
        }
      ],
      "name": "ERC20BridgeFinalized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "localToken",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "remoteToken",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "extraData",
          "type": "bytes"
        }
      ],
      "name": "ERC20BridgeInitiated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "extraData",
          "type": "bytes"
        }
      ],
      "name": "ETHBridgeFinalized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "extraData",
          "type": "bytes"
        }
      ],
      "name": "ETHBridgeInitiated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "l1Token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "l2Token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "extraData",
          "type": "bytes"
        }
      ],
      "name": "WithdrawalInitiated",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MESSENGER",
      "outputs": [
        {
          "internalType": "contract CrossDomainMessenger",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "OTHER_BRIDGE",
      "outputs": [
        {
          "internalType": "contract StandardBridge",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_localToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_remoteToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "_minGasLimit",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "bridgeERC20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_localToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_remoteToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "_minGasLimit",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "bridgeERC20To",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_minGasLimit",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "bridgeETH",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "_minGasLimit",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "bridgeETHTo",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "deposits",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_localToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_remoteToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "finalizeBridgeERC20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "finalizeBridgeETH",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_l1Token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_l2Token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "finalizeDeposit",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "l1TokenBridge",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "messenger",
      "outputs": [
        {
          "internalType": "contract CrossDomainMessenger",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "otherBridge",
      "outputs": [
        {
          "internalType": "contract StandardBridge",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_l2Token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "_minGasLimit",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_minGasLimit",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "withdrawNativeToken",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "_minGasLimit",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "withdrawNativeTokenTo",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_l2Token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "_minGasLimit",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "withdrawTo",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x60a06040523480156200001157600080fd5b5060405162002e2038038062002e208339810160408190526200003491620001e4565b6001600160a01b0381166080526200004b62000052565b5062000216565b600054600390610100900460ff1615801562000075575060005460ff8083169116105b620000de5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805461ffff191660ff8316176101001790556200011173420000000000000000000000000000000000000762000155565b6000805461ff001916905560405160ff821681527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150565b600054610100900460ff16620001c25760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401620000d5565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b600060208284031215620001f757600080fd5b81516001600160a01b03811681146200020f57600080fd5b9392505050565b608051612bcb6200025560003960008181610297015281816103a9015281816105ea01528181610a7f015281816114db015261181d0152612bcb6000f3fe6080604052600436106101485760003560e01c8063662a633a116100c0578063927ede2d11610074578063b7420d3111610059578063b7420d3114610484578063c89701a214610288578063e11013dd1461049757600080fd5b8063927ede2d14610446578063a3a795481461047157600080fd5b80638129fc1c116100a55780638129fc1c146103cb57806387087623146103e05780638f601f661461040057600080fd5b8063662a633a146103845780637f46ddb21461039757600080fd5b806332b7006d116101175780633cb747bf116100fc5780633cb747bf146102e1578063540abf731461030e57806354fd4d501461032e57600080fd5b806332b7006d1461027557806336c717c11461028857600080fd5b80630166a07a1461021c57806309fc88431461023c5780631635f5fd1461024f578063239955f71461026257600080fd5b3661021757333b156101e1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603760248201527f5374616e646172644272696467653a2066756e6374696f6e2063616e206f6e6c60448201527f792062652063616c6c65642066726f6d20616e20454f4100000000000000000060648201526084015b60405180910390fd5b61021573deaddeaddeaddeaddeaddeaddeaddeaddead000033333462030d40604051806020016040528060008152506104aa565b005b600080fd5b34801561022857600080fd5b506102156102373660046125db565b610585565b61021561024a36600461268c565b610943565b61021561025d3660046126df565b610a1a565b610215610270366004612752565b610e88565b6102156102833660046127b5565b610ee6565b34801561029457600080fd5b507f00000000000000000000000000000000000000000000000000000000000000005b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b3480156102ed57600080fd5b506003546102b79073ffffffffffffffffffffffffffffffffffffffff1681565b34801561031a57600080fd5b50610215610329366004612809565b610fc0565b34801561033a57600080fd5b506103776040518060400160405280600581526020017f312e342e3000000000000000000000000000000000000000000000000000000081525081565b6040516102d891906128f6565b6102156103923660046125db565b611005565b3480156103a357600080fd5b506102b77f000000000000000000000000000000000000000000000000000000000000000081565b3480156103d757600080fd5b50610215611078565b3480156103ec57600080fd5b506102156103fb366004612909565b6111d5565b34801561040c57600080fd5b5061043861041b36600461298c565b600260209081526000928352604080842090915290825290205481565b6040519081526020016102d8565b34801561045257600080fd5b5060035473ffffffffffffffffffffffffffffffffffffffff166102b7565b61021561047f366004612909565b6112a9565b61021561049236600461268c565b6112ed565b6102156104a5366004612752565b6113d4565b7fffffffffffffffffffffffff215221522152215221522152215221522153000073ffffffffffffffffffffffffffffffffffffffff8716016104f9576104f48585858585611417565b61057d565b60008673ffffffffffffffffffffffffffffffffffffffff1663c01e1bd66040518163ffffffff1660e01b8152600401602060405180830381865afa158015610546573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056a91906129c5565b905061057b878288888888886115fd565b505b505050505050565b60035473ffffffffffffffffffffffffffffffffffffffff16331480156106745750600354604080517f6e296e45000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000008116931691636e296e459160048083019260209291908290030181865afa158015610638573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065c91906129c5565b73ffffffffffffffffffffffffffffffffffffffff16145b610726576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604160248201527f5374616e646172644272696467653a2066756e6374696f6e2063616e206f6e6c60448201527f792062652063616c6c65642066726f6d20746865206f7468657220627269646760648201527f6500000000000000000000000000000000000000000000000000000000000000608482015260a4016101d8565b61072f87611945565b1561087d5761073e87876119a7565b6107f0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604a60248201527f5374616e646172644272696467653a2077726f6e672072656d6f746520746f6b60448201527f656e20666f72204f7074696d69736d204d696e7461626c65204552433230206c60648201527f6f63616c20746f6b656e00000000000000000000000000000000000000000000608482015260a4016101d8565b6040517f40c10f1900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152602482018590528816906340c10f1990604401600060405180830381600087803b15801561086057600080fd5b505af1158015610874573d6000803e3d6000fd5b505050506108ff565b73ffffffffffffffffffffffffffffffffffffffff8088166000908152600260209081526040808320938a16835292905220546108bb908490612a11565b73ffffffffffffffffffffffffffffffffffffffff8089166000818152600260209081526040808320948c16835293905291909120919091556108ff908585611ac7565b61057b878787878787878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611b9b92505050565b333b156109d2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603760248201527f5374616e646172644272696467653a2066756e6374696f6e2063616e206f6e6c60448201527f792062652063616c6c65642066726f6d20616e20454f4100000000000000000060648201526084016101d8565b610a153333348686868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061141792505050565b505050565b60035473ffffffffffffffffffffffffffffffffffffffff1633148015610b095750600354604080517f6e296e45000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000008116931691636e296e459160048083019260209291908290030181865afa158015610acd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af191906129c5565b73ffffffffffffffffffffffffffffffffffffffff16145b610bbb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604160248201527f5374616e646172644272696467653a2066756e6374696f6e2063616e206f6e6c60448201527f792062652063616c6c65642066726f6d20746865206f7468657220627269646760648201527f6500000000000000000000000000000000000000000000000000000000000000608482015260a4016101d8565b823414610c4a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f5374616e646172644272696467653a20616d6f756e742073656e7420646f657360448201527f206e6f74206d6174636820616d6f756e7420726571756972656400000000000060648201526084016101d8565b3073ffffffffffffffffffffffffffffffffffffffff851603610cef576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f5374616e646172644272696467653a2063616e6e6f742073656e6420746f207360448201527f656c66000000000000000000000000000000000000000000000000000000000060648201526084016101d8565b60035473ffffffffffffffffffffffffffffffffffffffff90811690851603610d9a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f5374616e646172644272696467653a2063616e6e6f742073656e6420746f206d60448201527f657373656e67657200000000000000000000000000000000000000000000000060648201526084016101d8565b610ddc85858585858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611c2992505050565b6000610df9855a8660405180602001604052806000815250611cca565b90508061057d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f5374616e646172644272696467653a20455448207472616e736665722066616960448201527f6c6564000000000000000000000000000000000000000000000000000000000060648201526084016101d8565b610ee073deaddeaddeaddeaddeaddeaddeaddeaddead00003386348787878080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506104aa92505050565b50505050565b333b15610f75576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603760248201527f5374616e646172644272696467653a2066756e6374696f6e2063616e206f6e6c60448201527f792062652063616c6c65642066726f6d20616e20454f4100000000000000000060648201526084016101d8565b610fb9853333878787878080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506104aa92505050565b5050505050565b61057b87873388888888888080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506115fd92505050565b73ffffffffffffffffffffffffffffffffffffffff8716158015611052575073ffffffffffffffffffffffffffffffffffffffff861673deaddeaddeaddeaddeaddeaddeaddeaddead0000145b15611069576110648585858585610a1a565b61057b565b61057b86888787878787610585565b600054600390610100900460ff1615801561109a575060005460ff8083169116105b611126576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084016101d8565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001660ff831617610100179055611174734200000000000000000000000000000000000007611ce4565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16905560405160ff821681527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150565b333b15611264576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603760248201527f5374616e646172644272696467653a2066756e6374696f6e2063616e206f6e6c60448201527f792062652063616c6c65642066726f6d20616e20454f4100000000000000000060648201526084016101d8565b61057d86863333888888888080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506115fd92505050565b61057d863387878787878080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506104aa92505050565b333b1561137c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603760248201527f5374616e646172644272696467653a2066756e6374696f6e2063616e206f6e6c60448201527f792062652063616c6c65642066726f6d20616e20454f4100000000000000000060648201526084016101d8565b610a1573deaddeaddeaddeaddeaddeaddeaddeaddead00003333348787878080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506104aa92505050565b610ee03385348686868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061141792505050565b8234146114a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603e60248201527f5374616e646172644272696467653a206272696467696e6720455448206d757360448201527f7420696e636c7564652073756666696369656e74204554482076616c7565000060648201526084016101d8565b6114b285858584611dc2565b60035460405173ffffffffffffffffffffffffffffffffffffffff90911690633dbb202b9085907f0000000000000000000000000000000000000000000000000000000000000000907f1635f5fd0000000000000000000000000000000000000000000000000000000090611531908b908b9086908a90602401612a28565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009485161790525160e086901b90921682526115c492918890600401612a71565b6000604051808303818588803b1580156115dd57600080fd5b505af11580156115f1573d6000803e3d6000fd5b50505050505050505050565b61160687611945565b156117545761161587876119a7565b6116c7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604a60248201527f5374616e646172644272696467653a2077726f6e672072656d6f746520746f6b60448201527f656e20666f72204f7074696d69736d204d696e7461626c65204552433230206c60648201527f6f63616c20746f6b656e00000000000000000000000000000000000000000000608482015260a4016101d8565b6040517f9dc29fac00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff868116600483015260248201859052881690639dc29fac90604401600060405180830381600087803b15801561173757600080fd5b505af115801561174b573d6000803e3d6000fd5b505050506117e8565b61177673ffffffffffffffffffffffffffffffffffffffff8816863086611e63565b73ffffffffffffffffffffffffffffffffffffffff8088166000908152600260209081526040808320938a16835292905220546117b4908490612ab6565b73ffffffffffffffffffffffffffffffffffffffff8089166000908152600260209081526040808320938b16835292905220555b6117f6878787878786611ec1565b60035460405173ffffffffffffffffffffffffffffffffffffffff90911690633dbb202b907f0000000000000000000000000000000000000000000000000000000000000000907f0166a07a0000000000000000000000000000000000000000000000000000000090611877908b908d908c908c908c908b90602401612ace565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009485161790525160e085901b909216825261190a92918790600401612a71565b600060405180830381600087803b15801561192457600080fd5b505af1158015611938573d6000803e3d6000fd5b5050505050505050505050565b6000611971827f1d1d8b6300000000000000000000000000000000000000000000000000000000611f4f565b806119a157506119a1827fec4fc8e300000000000000000000000000000000000000000000000000000000611f4f565b92915050565b60006119d3837f1d1d8b6300000000000000000000000000000000000000000000000000000000611f4f565b15611a7c578273ffffffffffffffffffffffffffffffffffffffff1663c01e1bd66040518163ffffffff1660e01b8152600401602060405180830381865afa158015611a23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a4791906129c5565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161490506119a1565b8273ffffffffffffffffffffffffffffffffffffffff1663d6c0b2c46040518163ffffffff1660e01b8152600401602060405180830381865afa158015611a23573d6000803e3d6000fd5b60405173ffffffffffffffffffffffffffffffffffffffff8316602482015260448101829052610a159084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611f72565b8373ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fb0444523268717a02698be47d0803aa7468c00acbed2f8bd93a0459cde61dd89868686604051611c1393929190612b29565b60405180910390a461057d86868686868661207e565b8373ffffffffffffffffffffffffffffffffffffffff1673deaddeaddeaddeaddeaddeaddeaddeaddead000073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fb0444523268717a02698be47d0803aa7468c00acbed2f8bd93a0459cde61dd89868686604051611cb693929190612b29565b60405180910390a4610ee084848484612106565b600080600080845160208601878a8af19695505050505050565b600054610100900460ff16611d7b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084016101d8565b600380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b8373ffffffffffffffffffffffffffffffffffffffff1673deaddeaddeaddeaddeaddeaddeaddeaddead000073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f73d170910aba9e6d50b102db522b1dbcd796216f5128b445aa2135272886497e868686604051611e4f93929190612b29565b60405180910390a4610ee084848484612173565b60405173ffffffffffffffffffffffffffffffffffffffff80851660248301528316604482015260648101829052610ee09085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401611b19565b8373ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167f73d170910aba9e6d50b102db522b1dbcd796216f5128b445aa2135272886497e868686604051611f3993929190612b29565b60405180910390a461057d8686868686866121d2565b6000611f5a8361224a565b8015611f6b5750611f6b83836122ae565b9392505050565b6000611fd4826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff1661237d9092919063ffffffff16565b805190915015610a155780806020019051810190611ff29190612b67565b610a15576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016101d8565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fd59c65b35445225835c83f50b6ede06a7be047d22e357073e250d9af537518cd8686866040516120f693929190612b29565b60405180910390a4505050505050565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f31b2166ff604fc5672ea5df08a78081d2bc6d746cadce880747f3643d819e83d8484604051612165929190612b89565b60405180910390a350505050565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f2849b43074093a05396b6f2a937dee8565b15a48a7b3d4bffb732a5017380af58484604051612165929190612b89565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167f7ff126db8024424bbfd9826e8ab82ff59136289ea440b04b39a0df1b03b9cabf8686866040516120f693929190612b29565b6000612276827f01ffc9a7000000000000000000000000000000000000000000000000000000006122ae565b80156119a157506122a7827fffffffff000000000000000000000000000000000000000000000000000000006122ae565b1592915050565b604080517fffffffff000000000000000000000000000000000000000000000000000000008316602480830191909152825180830390910181526044909101909152602080820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f01ffc9a700000000000000000000000000000000000000000000000000000000178152825160009392849283928392918391908a617530fa92503d91506000519050828015612366575060208210155b80156123725750600081115b979650505050505050565b606061238c8484600085612394565b949350505050565b606082471015612426576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016101d8565b73ffffffffffffffffffffffffffffffffffffffff85163b6124a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016101d8565b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516124cd9190612ba2565b60006040518083038185875af1925050503d806000811461250a576040519150601f19603f3d011682016040523d82523d6000602084013e61250f565b606091505b509150915061237282828660608315612529575081611f6b565b8251156125395782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d891906128f6565b73ffffffffffffffffffffffffffffffffffffffff8116811461258f57600080fd5b50565b60008083601f8401126125a457600080fd5b50813567ffffffffffffffff8111156125bc57600080fd5b6020830191508360208285010111156125d457600080fd5b9250929050565b600080600080600080600060c0888a0312156125f657600080fd5b87356126018161256d565b965060208801356126118161256d565b955060408801356126218161256d565b945060608801356126318161256d565b93506080880135925060a088013567ffffffffffffffff81111561265457600080fd5b6126608a828b01612592565b989b979a50959850939692959293505050565b803563ffffffff8116811461268757600080fd5b919050565b6000806000604084860312156126a157600080fd5b6126aa84612673565b9250602084013567ffffffffffffffff8111156126c657600080fd5b6126d286828701612592565b9497909650939450505050565b6000806000806000608086880312156126f757600080fd5b85356127028161256d565b945060208601356127128161256d565b935060408601359250606086013567ffffffffffffffff81111561273557600080fd5b61274188828901612592565b969995985093965092949392505050565b6000806000806060858703121561276857600080fd5b84356127738161256d565b935061278160208601612673565b9250604085013567ffffffffffffffff81111561279d57600080fd5b6127a987828801612592565b95989497509550505050565b6000806000806000608086880312156127cd57600080fd5b85356127d88161256d565b9450602086013593506127ed60408701612673565b9250606086013567ffffffffffffffff81111561273557600080fd5b600080600080600080600060c0888a03121561282457600080fd5b873561282f8161256d565b9650602088013561283f8161256d565b9550604088013561284f8161256d565b94506060880135935061286460808901612673565b925060a088013567ffffffffffffffff81111561265457600080fd5b60005b8381101561289b578181015183820152602001612883565b83811115610ee05750506000910152565b600081518084526128c4816020860160208601612880565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081526000611f6b60208301846128ac565b60008060008060008060a0878903121561292257600080fd5b863561292d8161256d565b9550602087013561293d8161256d565b94506040870135935061295260608801612673565b9250608087013567ffffffffffffffff81111561296e57600080fd5b61297a89828a01612592565b979a9699509497509295939492505050565b6000806040838503121561299f57600080fd5b82356129aa8161256d565b915060208301356129ba8161256d565b809150509250929050565b6000602082840312156129d757600080fd5b8151611f6b8161256d565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082821015612a2357612a236129e2565b500390565b600073ffffffffffffffffffffffffffffffffffffffff808716835280861660208401525083604083015260806060830152612a6760808301846128ac565b9695505050505050565b73ffffffffffffffffffffffffffffffffffffffff84168152606060208201526000612aa060608301856128ac565b905063ffffffff83166040830152949350505050565b60008219821115612ac957612ac96129e2565b500190565b600073ffffffffffffffffffffffffffffffffffffffff80891683528088166020840152808716604084015280861660608401525083608083015260c060a0830152612b1d60c08301846128ac565b98975050505050505050565b73ffffffffffffffffffffffffffffffffffffffff84168152826020820152606060408201526000612b5e60608301846128ac565b95945050505050565b600060208284031215612b7957600080fd5b81518015158114611f6b57600080fd5b82815260406020820152600061238c60408301846128ac565b60008251612bb4818460208701612880565b919091019291505056fea164736f6c634300080f000a",
    "sourceMap": "1141:10207:107:-:0;;;2676:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;5892:27:169;;;;2756:12:107::1;:10;:12::i;:::-;2676:99:::0;1141:10207;;2809:180;4396:13:25;;2762:1:142;;4396:13:25;;;;;4395:14;:40;;;;-1:-1:-1;4413:12:25;;:22;;;;:12;;:22;4395:40;4387:99;;;;-1:-1:-1;;;4387:99:25;;535:2:219;4387:99:25;;;517:21:219;574:2;554:18;;;547:30;613:34;593:18;;;586:62;-1:-1:-1;;;664:18:219;;;657:44;718:19;;4387:99:25;;;;;;;;;4496:12;:22;;-1:-1:-1;;4528:20:25;4496:22;;;4528:20;4496:22;4528:20;;;2885:97:107::1;480:42:148;2885:21:107;:97::i;:::-;4585:5:25::0;4569:21;;-1:-1:-1;;4569:21:25;;;4605:20;;920:4:219;908:17;;890:36;;4605:20:25;;878:2:219;863:18;4605:20:25;;;;;;;2809:180:107;:::o;6091:129:169:-;4888:13:25;;;;;;;4880:69;;;;-1:-1:-1;;;4880:69:25;;1139:2:219;4880:69:25;;;1121:21:219;1178:2;1158:18;;;1151:30;1217:34;1197:18;;;1190:62;-1:-1:-1;;;1268:18:219;;;1261:41;1319:19;;4880:69:25;937:407:219;4880:69:25;6191:9:169::1;:22:::0;;-1:-1:-1;;;;;;6191:22:169::1;-1:-1:-1::0;;;;;6191:22:169;;;::::1;::::0;;;::::1;::::0;;6091:129::o;14:314:219:-;108:6;161:2;149:9;140:7;136:23;132:32;129:52;;;177:1;174;167:12;129:52;203:16;;-1:-1:-1;;;;;248:31:219;;238:42;;228:70;;294:1;291;284:12;228:70;317:5;14:314;-1:-1:-1;;;14:314:219:o;937:407::-;1141:10207:107;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106101485760003560e01c8063662a633a116100c0578063927ede2d11610074578063b7420d3111610059578063b7420d3114610484578063c89701a214610288578063e11013dd1461049757600080fd5b8063927ede2d14610446578063a3a795481461047157600080fd5b80638129fc1c116100a55780638129fc1c146103cb57806387087623146103e05780638f601f661461040057600080fd5b8063662a633a146103845780637f46ddb21461039757600080fd5b806332b7006d116101175780633cb747bf116100fc5780633cb747bf146102e1578063540abf731461030e57806354fd4d501461032e57600080fd5b806332b7006d1461027557806336c717c11461028857600080fd5b80630166a07a1461021c57806309fc88431461023c5780631635f5fd1461024f578063239955f71461026257600080fd5b3661021757333b156101e1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603760248201527f5374616e646172644272696467653a2066756e6374696f6e2063616e206f6e6c60448201527f792062652063616c6c65642066726f6d20616e20454f4100000000000000000060648201526084015b60405180910390fd5b61021573deaddeaddeaddeaddeaddeaddeaddeaddead000033333462030d40604051806020016040528060008152506104aa565b005b600080fd5b34801561022857600080fd5b506102156102373660046125db565b610585565b61021561024a36600461268c565b610943565b61021561025d3660046126df565b610a1a565b610215610270366004612752565b610e88565b6102156102833660046127b5565b610ee6565b34801561029457600080fd5b507f00000000000000000000000000000000000000000000000000000000000000005b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b3480156102ed57600080fd5b506003546102b79073ffffffffffffffffffffffffffffffffffffffff1681565b34801561031a57600080fd5b50610215610329366004612809565b610fc0565b34801561033a57600080fd5b506103776040518060400160405280600581526020017f312e342e3000000000000000000000000000000000000000000000000000000081525081565b6040516102d891906128f6565b6102156103923660046125db565b611005565b3480156103a357600080fd5b506102b77f000000000000000000000000000000000000000000000000000000000000000081565b3480156103d757600080fd5b50610215611078565b3480156103ec57600080fd5b506102156103fb366004612909565b6111d5565b34801561040c57600080fd5b5061043861041b36600461298c565b600260209081526000928352604080842090915290825290205481565b6040519081526020016102d8565b34801561045257600080fd5b5060035473ffffffffffffffffffffffffffffffffffffffff166102b7565b61021561047f366004612909565b6112a9565b61021561049236600461268c565b6112ed565b6102156104a5366004612752565b6113d4565b7fffffffffffffffffffffffff215221522152215221522152215221522153000073ffffffffffffffffffffffffffffffffffffffff8716016104f9576104f48585858585611417565b61057d565b60008673ffffffffffffffffffffffffffffffffffffffff1663c01e1bd66040518163ffffffff1660e01b8152600401602060405180830381865afa158015610546573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061056a91906129c5565b905061057b878288888888886115fd565b505b505050505050565b60035473ffffffffffffffffffffffffffffffffffffffff16331480156106745750600354604080517f6e296e45000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000008116931691636e296e459160048083019260209291908290030181865afa158015610638573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061065c91906129c5565b73ffffffffffffffffffffffffffffffffffffffff16145b610726576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604160248201527f5374616e646172644272696467653a2066756e6374696f6e2063616e206f6e6c60448201527f792062652063616c6c65642066726f6d20746865206f7468657220627269646760648201527f6500000000000000000000000000000000000000000000000000000000000000608482015260a4016101d8565b61072f87611945565b1561087d5761073e87876119a7565b6107f0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604a60248201527f5374616e646172644272696467653a2077726f6e672072656d6f746520746f6b60448201527f656e20666f72204f7074696d69736d204d696e7461626c65204552433230206c60648201527f6f63616c20746f6b656e00000000000000000000000000000000000000000000608482015260a4016101d8565b6040517f40c10f1900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152602482018590528816906340c10f1990604401600060405180830381600087803b15801561086057600080fd5b505af1158015610874573d6000803e3d6000fd5b505050506108ff565b73ffffffffffffffffffffffffffffffffffffffff8088166000908152600260209081526040808320938a16835292905220546108bb908490612a11565b73ffffffffffffffffffffffffffffffffffffffff8089166000818152600260209081526040808320948c16835293905291909120919091556108ff908585611ac7565b61057b878787878787878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611b9b92505050565b333b156109d2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603760248201527f5374616e646172644272696467653a2066756e6374696f6e2063616e206f6e6c60448201527f792062652063616c6c65642066726f6d20616e20454f4100000000000000000060648201526084016101d8565b610a153333348686868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061141792505050565b505050565b60035473ffffffffffffffffffffffffffffffffffffffff1633148015610b095750600354604080517f6e296e45000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000008116931691636e296e459160048083019260209291908290030181865afa158015610acd573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610af191906129c5565b73ffffffffffffffffffffffffffffffffffffffff16145b610bbb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604160248201527f5374616e646172644272696467653a2066756e6374696f6e2063616e206f6e6c60448201527f792062652063616c6c65642066726f6d20746865206f7468657220627269646760648201527f6500000000000000000000000000000000000000000000000000000000000000608482015260a4016101d8565b823414610c4a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603a60248201527f5374616e646172644272696467653a20616d6f756e742073656e7420646f657360448201527f206e6f74206d6174636820616d6f756e7420726571756972656400000000000060648201526084016101d8565b3073ffffffffffffffffffffffffffffffffffffffff851603610cef576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f5374616e646172644272696467653a2063616e6e6f742073656e6420746f207360448201527f656c66000000000000000000000000000000000000000000000000000000000060648201526084016101d8565b60035473ffffffffffffffffffffffffffffffffffffffff90811690851603610d9a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f5374616e646172644272696467653a2063616e6e6f742073656e6420746f206d60448201527f657373656e67657200000000000000000000000000000000000000000000000060648201526084016101d8565b610ddc85858585858080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611c2992505050565b6000610df9855a8660405180602001604052806000815250611cca565b90508061057d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f5374616e646172644272696467653a20455448207472616e736665722066616960448201527f6c6564000000000000000000000000000000000000000000000000000000000060648201526084016101d8565b610ee073deaddeaddeaddeaddeaddeaddeaddeaddead00003386348787878080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506104aa92505050565b50505050565b333b15610f75576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603760248201527f5374616e646172644272696467653a2066756e6374696f6e2063616e206f6e6c60448201527f792062652063616c6c65642066726f6d20616e20454f4100000000000000000060648201526084016101d8565b610fb9853333878787878080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506104aa92505050565b5050505050565b61057b87873388888888888080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506115fd92505050565b73ffffffffffffffffffffffffffffffffffffffff8716158015611052575073ffffffffffffffffffffffffffffffffffffffff861673deaddeaddeaddeaddeaddeaddeaddeaddead0000145b15611069576110648585858585610a1a565b61057b565b61057b86888787878787610585565b600054600390610100900460ff1615801561109a575060005460ff8083169116105b611126576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a656400000000000000000000000000000000000060648201526084016101d8565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001660ff831617610100179055611174734200000000000000000000000000000000000007611ce4565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16905560405160ff821681527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150565b333b15611264576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603760248201527f5374616e646172644272696467653a2066756e6374696f6e2063616e206f6e6c60448201527f792062652063616c6c65642066726f6d20616e20454f4100000000000000000060648201526084016101d8565b61057d86863333888888888080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506115fd92505050565b61057d863387878787878080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506104aa92505050565b333b1561137c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603760248201527f5374616e646172644272696467653a2066756e6374696f6e2063616e206f6e6c60448201527f792062652063616c6c65642066726f6d20616e20454f4100000000000000000060648201526084016101d8565b610a1573deaddeaddeaddeaddeaddeaddeaddeaddead00003333348787878080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506104aa92505050565b610ee03385348686868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061141792505050565b8234146114a6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603e60248201527f5374616e646172644272696467653a206272696467696e6720455448206d757360448201527f7420696e636c7564652073756666696369656e74204554482076616c7565000060648201526084016101d8565b6114b285858584611dc2565b60035460405173ffffffffffffffffffffffffffffffffffffffff90911690633dbb202b9085907f0000000000000000000000000000000000000000000000000000000000000000907f1635f5fd0000000000000000000000000000000000000000000000000000000090611531908b908b9086908a90602401612a28565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009485161790525160e086901b90921682526115c492918890600401612a71565b6000604051808303818588803b1580156115dd57600080fd5b505af11580156115f1573d6000803e3d6000fd5b50505050505050505050565b61160687611945565b156117545761161587876119a7565b6116c7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604a60248201527f5374616e646172644272696467653a2077726f6e672072656d6f746520746f6b60448201527f656e20666f72204f7074696d69736d204d696e7461626c65204552433230206c60648201527f6f63616c20746f6b656e00000000000000000000000000000000000000000000608482015260a4016101d8565b6040517f9dc29fac00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff868116600483015260248201859052881690639dc29fac90604401600060405180830381600087803b15801561173757600080fd5b505af115801561174b573d6000803e3d6000fd5b505050506117e8565b61177673ffffffffffffffffffffffffffffffffffffffff8816863086611e63565b73ffffffffffffffffffffffffffffffffffffffff8088166000908152600260209081526040808320938a16835292905220546117b4908490612ab6565b73ffffffffffffffffffffffffffffffffffffffff8089166000908152600260209081526040808320938b16835292905220555b6117f6878787878786611ec1565b60035460405173ffffffffffffffffffffffffffffffffffffffff90911690633dbb202b907f0000000000000000000000000000000000000000000000000000000000000000907f0166a07a0000000000000000000000000000000000000000000000000000000090611877908b908d908c908c908c908b90602401612ace565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009485161790525160e085901b909216825261190a92918790600401612a71565b600060405180830381600087803b15801561192457600080fd5b505af1158015611938573d6000803e3d6000fd5b5050505050505050505050565b6000611971827f1d1d8b6300000000000000000000000000000000000000000000000000000000611f4f565b806119a157506119a1827fec4fc8e300000000000000000000000000000000000000000000000000000000611f4f565b92915050565b60006119d3837f1d1d8b6300000000000000000000000000000000000000000000000000000000611f4f565b15611a7c578273ffffffffffffffffffffffffffffffffffffffff1663c01e1bd66040518163ffffffff1660e01b8152600401602060405180830381865afa158015611a23573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611a4791906129c5565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff161490506119a1565b8273ffffffffffffffffffffffffffffffffffffffff1663d6c0b2c46040518163ffffffff1660e01b8152600401602060405180830381865afa158015611a23573d6000803e3d6000fd5b60405173ffffffffffffffffffffffffffffffffffffffff8316602482015260448101829052610a159084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090931692909217909152611f72565b8373ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167fb0444523268717a02698be47d0803aa7468c00acbed2f8bd93a0459cde61dd89868686604051611c1393929190612b29565b60405180910390a461057d86868686868661207e565b8373ffffffffffffffffffffffffffffffffffffffff1673deaddeaddeaddeaddeaddeaddeaddeaddead000073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167fb0444523268717a02698be47d0803aa7468c00acbed2f8bd93a0459cde61dd89868686604051611cb693929190612b29565b60405180910390a4610ee084848484612106565b600080600080845160208601878a8af19695505050505050565b600054610100900460ff16611d7b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e6700000000000000000000000000000000000000000060648201526084016101d8565b600380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b8373ffffffffffffffffffffffffffffffffffffffff1673deaddeaddeaddeaddeaddeaddeaddeaddead000073ffffffffffffffffffffffffffffffffffffffff16600073ffffffffffffffffffffffffffffffffffffffff167f73d170910aba9e6d50b102db522b1dbcd796216f5128b445aa2135272886497e868686604051611e4f93929190612b29565b60405180910390a4610ee084848484612173565b60405173ffffffffffffffffffffffffffffffffffffffff80851660248301528316604482015260648101829052610ee09085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401611b19565b8373ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff168673ffffffffffffffffffffffffffffffffffffffff167f73d170910aba9e6d50b102db522b1dbcd796216f5128b445aa2135272886497e868686604051611f3993929190612b29565b60405180910390a461057d8686868686866121d2565b6000611f5a8361224a565b8015611f6b5750611f6b83836122ae565b9392505050565b6000611fd4826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff1661237d9092919063ffffffff16565b805190915015610a155780806020019051810190611ff29190612b67565b610a15576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f7420737563636565640000000000000000000000000000000000000000000060648201526084016101d8565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fd59c65b35445225835c83f50b6ede06a7be047d22e357073e250d9af537518cd8686866040516120f693929190612b29565b60405180910390a4505050505050565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f31b2166ff604fc5672ea5df08a78081d2bc6d746cadce880747f3643d819e83d8484604051612165929190612b89565b60405180910390a350505050565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f2849b43074093a05396b6f2a937dee8565b15a48a7b3d4bffb732a5017380af58484604051612165929190612b89565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167f7ff126db8024424bbfd9826e8ab82ff59136289ea440b04b39a0df1b03b9cabf8686866040516120f693929190612b29565b6000612276827f01ffc9a7000000000000000000000000000000000000000000000000000000006122ae565b80156119a157506122a7827fffffffff000000000000000000000000000000000000000000000000000000006122ae565b1592915050565b604080517fffffffff000000000000000000000000000000000000000000000000000000008316602480830191909152825180830390910181526044909101909152602080820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f01ffc9a700000000000000000000000000000000000000000000000000000000178152825160009392849283928392918391908a617530fa92503d91506000519050828015612366575060208210155b80156123725750600081115b979650505050505050565b606061238c8484600085612394565b949350505050565b606082471015612426576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c000000000000000000000000000000000000000000000000000060648201526084016101d8565b73ffffffffffffffffffffffffffffffffffffffff85163b6124a4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e747261637400000060448201526064016101d8565b6000808673ffffffffffffffffffffffffffffffffffffffff1685876040516124cd9190612ba2565b60006040518083038185875af1925050503d806000811461250a576040519150601f19603f3d011682016040523d82523d6000602084013e61250f565b606091505b509150915061237282828660608315612529575081611f6b565b8251156125395782518084602001fd5b816040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016101d891906128f6565b73ffffffffffffffffffffffffffffffffffffffff8116811461258f57600080fd5b50565b60008083601f8401126125a457600080fd5b50813567ffffffffffffffff8111156125bc57600080fd5b6020830191508360208285010111156125d457600080fd5b9250929050565b600080600080600080600060c0888a0312156125f657600080fd5b87356126018161256d565b965060208801356126118161256d565b955060408801356126218161256d565b945060608801356126318161256d565b93506080880135925060a088013567ffffffffffffffff81111561265457600080fd5b6126608a828b01612592565b989b979a50959850939692959293505050565b803563ffffffff8116811461268757600080fd5b919050565b6000806000604084860312156126a157600080fd5b6126aa84612673565b9250602084013567ffffffffffffffff8111156126c657600080fd5b6126d286828701612592565b9497909650939450505050565b6000806000806000608086880312156126f757600080fd5b85356127028161256d565b945060208601356127128161256d565b935060408601359250606086013567ffffffffffffffff81111561273557600080fd5b61274188828901612592565b969995985093965092949392505050565b6000806000806060858703121561276857600080fd5b84356127738161256d565b935061278160208601612673565b9250604085013567ffffffffffffffff81111561279d57600080fd5b6127a987828801612592565b95989497509550505050565b6000806000806000608086880312156127cd57600080fd5b85356127d88161256d565b9450602086013593506127ed60408701612673565b9250606086013567ffffffffffffffff81111561273557600080fd5b600080600080600080600060c0888a03121561282457600080fd5b873561282f8161256d565b9650602088013561283f8161256d565b9550604088013561284f8161256d565b94506060880135935061286460808901612673565b925060a088013567ffffffffffffffff81111561265457600080fd5b60005b8381101561289b578181015183820152602001612883565b83811115610ee05750506000910152565b600081518084526128c4816020860160208601612880565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b602081526000611f6b60208301846128ac565b60008060008060008060a0878903121561292257600080fd5b863561292d8161256d565b9550602087013561293d8161256d565b94506040870135935061295260608801612673565b9250608087013567ffffffffffffffff81111561296e57600080fd5b61297a89828a01612592565b979a9699509497509295939492505050565b6000806040838503121561299f57600080fd5b82356129aa8161256d565b915060208301356129ba8161256d565b809150509250929050565b6000602082840312156129d757600080fd5b8151611f6b8161256d565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600082821015612a2357612a236129e2565b500390565b600073ffffffffffffffffffffffffffffffffffffffff808716835280861660208401525083604083015260806060830152612a6760808301846128ac565b9695505050505050565b73ffffffffffffffffffffffffffffffffffffffff84168152606060208201526000612aa060608301856128ac565b905063ffffffff83166040830152949350505050565b60008219821115612ac957612ac96129e2565b500190565b600073ffffffffffffffffffffffffffffffffffffffff80891683528088166020840152808716604084015280861660608401525083608083015260c060a0830152612b1d60c08301846128ac565b98975050505050505050565b73ffffffffffffffffffffffffffffffffffffffff84168152826020820152606060408201526000612b5e60608301846128ac565b95945050505050565b600060208284031215612b7957600080fd5b81518015158114611f6b57600080fd5b82815260406020820152600061238c60408301846128ac565b60008251612bb4818460208701612880565b919091019291505056fea164736f6c634300080f000a",
    "sourceMap": "1141:10207:107:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5318:10:169;1465:19:40;:23;5290:99:169;;;;;;;216:2:219;5290:99:169;;;198:21:219;255:2;235:18;;;228:30;294:34;274:18;;;267:62;365:25;345:18;;;338:53;408:19;;5290:99:169;;;;;;;;;3126:212:107::1;2585:42:148;3209:10:107;3233;3257:9;1343:7:169;3319:9:107;;;;;;;;;;;::::0;3126:19:::1;:212::i;:::-;1141:10207:::0;;;;;13266:1038:169;;;;;;;;;;-1:-1:-1;13266:1038:169;;;;;:::i;:::-;;:::i;7214:186::-;;;;;;:::i;:::-;;:::i;11678:856::-;;;;;;:::i;:::-;;:::i;4193:237:107:-;;;;;;:::i;:::-;;:::i;4760:313::-;;;;;;:::i;:::-;;:::i;7636:102::-;;;;;;;;;;-1:-1:-1;7718:12:107;7636:102;;;4892:42:219;4880:55;;;4862:74;;4850:2;4835:18;7636:102:107;;;;;;;;2601:37:169;;;;;;;;;;-1:-1:-1;2601:37:169;;;;;;;;10765:349;;;;;;;;;;-1:-1:-1;10765:349:169;;;;;:::i;:::-;;:::i;2510:40:107:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;6950:514::-;;;;;;:::i;:::-;;:::i;1898:44:169:-;;;;;;;;;;;;;;;2809:180:107;;;;;;;;;;;;;:::i;9480:349:169:-;;;;;;;;;;-1:-1:-1;9480:349:169;;;;;:::i;:::-;;:::i;2331:63::-;;;;;;;;;;-1:-1:-1;2331:63:169;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;8626:25:219;;;8614:2;8599:18;2331:63:169;8480:177:219;6528:99:169;;;;;;;;;;-1:-1:-1;6611:9:169;;;;6528:99;;6060:313:107;;;;;;:::i;:::-;;:::i;3641:259::-;;;;;;:::i;:::-;;:::i;8411:186:169:-;;;;;;:::i;:::-;;:::i;8245:563:107:-;8472:48;;;;;8468:334;;8536:65;8555:5;8562:3;8567:7;8576:12;8590:10;8536:18;:65::i;:::-;8468:334;;;8632:15;8672:8;8650:39;;;:41;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8632:59;;8705:86;8726:8;8736:7;8745:5;8752:3;8757:7;8766:12;8780:10;8705:20;:86::i;:::-;8618:184;8468:334;8245:563;;;;;;:::o;13266:1038:169:-;5581:9;;;;5559:10;:32;:93;;;;-1:-1:-1;5595:9:169;;:32;;;;;;;;:57;5639:12;5595:57;;;:9;;:30;;:32;;;;;;;;;;;;;;:9;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:57;;;5559:93;5538:205;;;;;;;9120:2:219;5538:205:169;;;9102:21:219;9159:2;9139:18;;;9132:30;9198:34;9178:18;;;9171:62;9269:34;9249:18;;;9242:62;9341:3;9320:19;;;9313:32;9362:19;;5538:205:169;8918:469:219;5538:205:169;13537:37:::1;13562:11;13537:24;:37::i;:::-;13533:489;;;13615:46;13635:11;13648:12;13615:19;:46::i;:::-;13590:179;;;::::0;::::1;::::0;;9594:2:219;13590:179:169::1;::::0;::::1;9576:21:219::0;9633:2;9613:18;;;9606:30;9672:34;9652:18;;;9645:62;9743:34;9723:18;;;9716:62;9815:12;9794:19;;;9787:41;9845:19;;13590:179:169::1;9392:478:219::0;13590:179:169::1;13784:53;::::0;;;;:39:::1;10067:55:219::0;;;13784:53:169::1;::::0;::::1;10049:74:219::0;10139:18;;;10132:34;;;13784:39:169;::::1;::::0;::::1;::::0;10022:18:219;;13784:53:169::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;13533:489;;;13906:21;::::0;;::::1;;::::0;;;:8:::1;:21;::::0;;;;;;;:35;;::::1;::::0;;;;;;;:45:::1;::::0;13944:7;;13906:45:::1;:::i;:::-;13868:21;::::0;;::::1;;::::0;;;:8:::1;:21;::::0;;;;;;;:35;;::::1;::::0;;;;;;;;;:83;;;;13965:46:::1;::::0;13998:3;14003:7;13965:32:::1;:46::i;:::-;14212:85;14238:11;14251:12;14265:5;14272:3;14277:7;14286:10;;14212:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;14212:25:169::1;::::0;-1:-1:-1;;;14212:85:169:i:1;7214:186::-:0;5318:10;1465:19:40;:23;5290:99:169;;;;;;;216:2:219;5290:99:169;;;198:21:219;255:2;235:18;;;228:30;294:34;274:18;;;267:62;365:25;345:18;;;338:53;408:19;;5290:99:169;14:419:219;5290:99:169;7314:79:::1;7333:10;7345;7357:9;7368:12;7382:10;;7314:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;7314:18:169::1;::::0;-1:-1:-1;;;7314:79:169:i:1;:::-;7214:186:::0;;;:::o;11678:856::-;5581:9;;;;5559:10;:32;:93;;;;-1:-1:-1;5595:9:169;;:32;;;;;;;;:57;5639:12;5595:57;;;:9;;:30;;:32;;;;;;;;;;;;;;:9;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:57;;;5559:93;5538:205;;;;;;;9120:2:219;5538:205:169;;;9102:21:219;9159:2;9139:18;;;9132:30;9198:34;9178:18;;;9171:62;9269:34;9249:18;;;9242:62;9341:3;9320:19;;;9313:32;9362:19;;5538:205:169;8918:469:219;5538:205:169;11921:7:::1;11908:9;:20;11900:91;;;::::0;::::1;::::0;;10698:2:219;11900:91:169::1;::::0;::::1;10680:21:219::0;10737:2;10717:18;;;10710:30;10776:34;10756:18;;;10749:62;10847:28;10827:18;;;10820:56;10893:19;;11900:91:169::1;10496:422:219::0;11900:91:169::1;12024:4;12009:20;::::0;::::1;::::0;12001:68:::1;;;::::0;::::1;::::0;;11125:2:219;12001:68:169::1;::::0;::::1;11107:21:219::0;11164:2;11144:18;;;11137:30;11203:34;11183:18;;;11176:62;11274:5;11254:18;;;11247:33;11297:19;;12001:68:169::1;10923:399:219::0;12001:68:169::1;12102:9;::::0;::::1;::::0;;::::1;12087:25:::0;;::::1;::::0;12079:78:::1;;;::::0;::::1;::::0;;11529:2:219;12079:78:169::1;::::0;::::1;11511:21:219::0;11568:2;11548:18;;;11541:30;11607:34;11587:18;;;11580:62;11678:10;11658:18;;;11651:38;11706:19;;12079:78:169::1;11327:404:219::0;12079:78:169::1;12335:56;12359:5;12366:3;12371:7;12380:10;;12335:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;12335:23:169::1;::::0;-1:-1:-1;;;12335:56:169:i:1;:::-;12402:12;12417:45;12431:3;12436:9;12447:7;12417:45;;;;;;;;;;;::::0;:13:::1;:45::i;:::-;12402:60;;12480:7;12472:55;;;::::0;::::1;::::0;;11938:2:219;12472:55:169::1;::::0;::::1;11920:21:219::0;11977:2;11957:18;;;11950:30;12016:34;11996:18;;;11989:62;12087:5;12067:18;;;12060:33;12110:19;;12472:55:169::1;11736:399:219::0;4193:237:107;4312:111;2585:42:148;4370:10:107;4382:3;4387:9;4398:12;4412:10;;4312:111;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4312:19:107;;-1:-1:-1;;;4312:111:107:i;:::-;4193:237;;;;:::o;4760:313::-;5318:10:169;1465:19:40;:23;5290:99:169;;;;;;;216:2:219;5290:99:169;;;198:21:219;255:2;235:18;;;228:30;294:34;274:18;;;267:62;365:25;345:18;;;338:53;408:19;;5290:99:169;14:419:219;5290:99:169;4978:88:107::1;4998:8;5008:10;5020;5032:7;5041:12;5055:10;;4978:88;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;4978:19:107::1;::::0;-1:-1:-1;;;4978:88:107:i:1;:::-;4760:313:::0;;;;;:::o;10765:349:169:-;11008:99;11029:11;11042:12;11056:10;11068:3;11073:7;11082:12;11096:10;;11008:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11008:20:169;;-1:-1:-1;;;11008:99:169:i;6950:514:107:-;7204:22;;;;:74;;;;-1:-1:-1;7230:48:107;;;2585:42:148;7230:48:107;7204:74;7200:258;;;7294:50;7312:5;7319:3;7324:7;7333:10;;7294:17;:50::i;:::-;7200:258;;;7375:72;7395:8;7405;7415:5;7422:3;7427:7;7436:10;;7375:19;:72::i;2809:180::-;4396:13:25;;2762:1:142;;4396:13:25;;;;;4395:14;:40;;;;-1:-1:-1;4413:12:25;;:22;;;;:12;;:22;4395:40;4387:99;;;;;;;12342:2:219;4387:99:25;;;12324:21:219;12381:2;12361:18;;;12354:30;12420:34;12400:18;;;12393:62;12491:16;12471:18;;;12464:44;12525:19;;4387:99:25;12140:410:219;4387:99:25;4496:12;:22;;4528:20;;4496:22;;;4528:20;4496:22;4528:20;;;2885:97:107::1;480:42:148;2885:21:107;:97::i;:::-;4585:5:25::0;4569:21;;;;;;4605:20;;12727:4:219;12715:17;;12697:36;;4605:20:25;;12685:2:219;12670:18;4605:20:25;;;;;;;2809:180:107;:::o;9480:349:169:-;5318:10;1465:19:40;:23;5290:99:169;;;;;;;216:2:219;5290:99:169;;;198:21:219;255:2;235:18;;;228:30;294:34;274:18;;;267:62;365:25;345:18;;;338:53;408:19;;5290:99:169;14:419:219;5290:99:169;9716:106:::1;9737:11;9750:12;9764:10;9776;9788:7;9797:12;9811:10;;9716:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;9716:20:169::1;::::0;-1:-1:-1;;;9716:106:169:i:1;6060:313:107:-:0;6285:81;6305:8;6315:10;6327:3;6332:7;6341:12;6355:10;;6285:81;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6285:19:107;;-1:-1:-1;;;6285:81:107:i;3641:259::-;5318:10:169;1465:19:40;:23;5290:99:169;;;;;;;216:2:219;5290:99:169;;;198:21:219;255:2;235:18;;;228:30;294:34;274:18;;;267:62;365:25;345:18;;;338:53;408:19;;5290:99:169;14:419:219;5290:99:169;3753:140:107::1;2585:42:148;3824:10:107;3836;3848:9;3859:12;3873:10;;3753:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;3753:19:107::1;::::0;-1:-1:-1;;;3753:140:107:i:1;8411:186:169:-:0;8518:72;8537:10;8549:3;8554:9;8565:12;8579:10;;8518:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8518:18:169;;-1:-1:-1;;;8518:72:169:i;14892:771::-;15125:7;15112:9;:20;15104:95;;;;;;;12946:2:219;15104:95:169;;;12928:21:219;12985:2;12965:18;;;12958:30;13024:34;13004:18;;;12997:62;13095:32;13075:18;;;13068:60;13145:19;;15104:95:169;12744:426:219;15104:95:169;15377:56;15401:5;15408:3;15413:7;15422:10;15377:23;:56::i;:::-;15444:9;;15532:88;;15444:9;;;;;:21;;15474:7;;15505:12;;15555:31;;15532:88;;15588:5;;15595:3;;15474:7;;15609:10;;15532:88;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;15444:212;;;;;;;;;;;;;15634:12;;15444:212;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14892:771;;;;;:::o;16357:1662::-;16634:37;16659:11;16634:24;:37::i;:::-;16630:512;;;16712:46;16732:11;16745:12;16712:19;:46::i;:::-;16687:179;;;;;;;9594:2:219;16687:179:169;;;9576:21:219;9633:2;9613:18;;;9606:30;9672:34;9652:18;;;9645:62;9743:34;9723:18;;;9716:62;9815:12;9794:19;;;9787:41;9845:19;;16687:179:169;9392:478:219;16687:179:169;16881:55;;;;;:39;10067:55:219;;;16881::169;;;10049:74:219;10139:18;;;10132:34;;;16881:39:169;;;;;10022:18:219;;16881:55:169;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16630:512;;;16967:67;:36;;;17004:5;17019:4;17026:7;16967:36;:67::i;:::-;17086:21;;;;;;;;:8;:21;;;;;;;;:35;;;;;;;;;;:45;;17124:7;;17086:45;:::i;:::-;17048:21;;;;;;;;:8;:21;;;;;;;;:35;;;;;;;;;:83;16630:512;17332:85;17358:11;17371:12;17385:5;17392:3;17397:7;17406:10;17332:25;:85::i;:::-;17428:9;;17498:478;;17428:9;;;;;:21;;17471:12;;17538:33;;17498:478;;17824:12;;17854:11;;17883:5;;17906:3;;17927:7;;17952:10;;17498:478;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;17428:584;;;;;;;;;;;;;17990:12;;17428:584;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16357:1662;;;;;;;:::o;18283:279::-;18356:4;18379:79;18411:6;18419:38;18379:31;:79::i;:::-;:176;;;;18474:81;18506:6;18514:40;18474:31;:81::i;:::-;18372:183;18283:279;-1:-1:-1;;18283:279:169:o;19009:410::-;19106:4;19126:87;19158:14;19174:38;19126:31;:87::i;:::-;19122:291;;;19272:14;19251:44;;;:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19236:61;;:11;:61;;;19229:68;;;;19122:291;19373:14;19350:50;;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;763:205:33;902:58;;10079:42:219;10067:55;;902:58:33;;;10049:74:219;10139:18;;;10132:34;;;875:86:33;;895:5;;925:23;;10022:18:219;;902:58:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;875:19;:86::i;10907:439:107:-;11206:5;11162:76;;11193:11;11162:76;;11179:12;11162:76;;;11213:3;11218:7;11227:10;11162:76;;;;;;;;:::i;:::-;;;;;;;;11248:91;11280:11;11293:12;11307:5;11314:3;11319:7;11328:10;11248:31;:91::i;9636:372::-;9897:5;9830:99;;2585:42:148;9830:99:107;;9855:1;9830:99;;;9904:3;9909:7;9918:10;9830:99;;;;;;;;:::i;:::-;;;;;;;;9939:62;9969:5;9976:3;9981:7;9990:10;9939:29;:62::i;1202:536:149:-;1305:4;1321:13;1668:1;1635;1594:9;1588:16;1554:2;1543:9;1539:18;1496:6;1454:7;1421:4;1395:302;1367:330;1202:536;-1:-1:-1;;;;;;1202:536:149:o;6091:129:169:-;4888:13:25;;;;;;;4880:69;;;;;;;15549:2:219;4880:69:25;;;15531:21:219;15588:2;15568:18;;;15561:30;15627:34;15607:18;;;15600:62;15698:13;15678:18;;;15671:41;15729:19;;4880:69:25;15347:407:219;4880:69:25;6191:9:169::1;:22:::0;;;::::1;;::::0;;;::::1;::::0;;;::::1;::::0;;6091:129::o;9036:375:107:-;9300:5;9230:102;;2585:42:148;9230:102:107;;9258:1;9230:102;;;9307:3;9312:7;9321:10;9230:102;;;;;;;;:::i;:::-;;;;;;;;9342:62;9372:5;9379:3;9384:7;9393:10;9342:29;:62::i;974:241:33:-;1139:68;;15971:42:219;16040:15;;;1139:68:33;;;16022:34:219;16092:15;;16072:18;;;16065:43;16124:18;;;16117:34;;;1112:96:33;;1132:5;;1162:27;;15934:18:219;;1139:68:33;15759:398:219;10238:442:107;10540:5;10493:79;;10527:11;10493:79;;10513:12;10493:79;;;10547:3;10552:7;10561:10;10493:79;;;;;;;;:::i;:::-;;;;;;;;10582:91;10614:11;10627:12;10641:5;10648:3;10653:7;10662:10;10582:31;:91::i;1333:274:47:-;1420:4;1527:23;1542:7;1527:14;:23::i;:::-;:73;;;;;1554:46;1579:7;1588:11;1554:24;:46::i;:::-;1520:80;1333:274;-1:-1:-1;;;1333:274:47:o;3747:706:33:-;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;4192:27;;;;:69;;;;;:::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:33;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;;;;16646:2:219;4351:85:33;;;16628:21:219;16685:2;16665:18;;;16658:30;16724:34;16704:18;;;16697:62;16795:12;16775:18;;;16768:40;16825:19;;4351:85:33;16444:406:219;22074:341:169;22376:5;22328:80;;22362:12;22328:80;;22349:11;22328:80;;;22383:3;22388:7;22397:10;22328:80;;;;;;;;:::i;:::-;;;;;;;;22074:341;;;;;;:::o;20416:251::-;20635:3;20609:51;;20628:5;20609:51;;;20640:7;20649:10;20609:51;;;;;;;:::i;:::-;;;;;;;;20416:251;;;;:::o;19795:::-;20014:3;19988:51;;20007:5;19988:51;;;20019:7;20028:10;19988:51;;;;;;;:::i;21200:341::-;21502:5;21454:80;;21488:12;21454:80;;21475:11;21454:80;;;21509:3;21514:7;21523:10;21454:80;;;;;;;;:::i;704:411:47:-;768:4;975:60;1000:7;1009:25;975:24;:60::i;:::-;:133;;;;-1:-1:-1;1052:56:47;1077:7;1086:21;1052:24;:56::i;:::-;1051:57;956:152;704:411;-1:-1:-1;;704:411:47:o;4223:638::-;4385:71;;;17323:66:219;17311:79;;4385:71:47;;;;17293:98:219;;;;4385:71:47;;;;;;;;;;17266:18:219;;;;4385:71:47;;;;;;;;;;;4408:34;4385:71;;;4664:20;;4316:4;;4385:71;4316:4;;;;;;4385:71;4316:4;;4664:20;4629:7;4622:5;4611:86;4600:97;;4724:16;4710:30;;4774:4;4768:11;4753:26;;4806:7;:29;;;;;4831:4;4817:10;:18;;4806:29;:48;;;;;4853:1;4839:11;:15;4806:48;4799:55;4223:638;-1:-1:-1;;;;;;;4223:638:47:o;3861:223:40:-;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;3861:223;-1:-1:-1;;;;3861:223:40:o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;;;;17604:2:219;5137:81:40;;;17586:21:219;17643:2;17623:18;;;17616:30;17682:34;17662:18;;;17655:62;17753:8;17733:18;;;17726:36;17779:19;;5137:81:40;17402:402:219;5137:81:40;1465:19;;;;5228:60;;;;;;;18011:2:219;5228:60:40;;;17993:21:219;18050:2;18030:18;;;18023:30;18089:31;18069:18;;;18062:59;18138:18;;5228:60:40;17809:353:219;5228:60:40;5300:12;5314:23;5341:6;:11;;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;7707;7735:7;7731:566;;;-1:-1:-1;7765:10:40;7758:17;;7731:566;7876:17;;:21;7872:415;;8120:10;8114:17;8180:15;8167:10;8163:2;8159:19;8152:44;7872:415;8259:12;8252:20;;;;;;;;;;;:::i;438:154:219:-;524:42;517:5;513:54;506:5;503:65;493:93;;582:1;579;572:12;493:93;438:154;:::o;597:347::-;648:8;658:6;712:3;705:4;697:6;693:17;689:27;679:55;;730:1;727;720:12;679:55;-1:-1:-1;753:20:219;;796:18;785:30;;782:50;;;828:1;825;818:12;782:50;865:4;857:6;853:17;841:29;;917:3;910:4;901:6;893;889:19;885:30;882:39;879:59;;;934:1;931;924:12;879:59;597:347;;;;;:::o;949:1038::-;1064:6;1072;1080;1088;1096;1104;1112;1165:3;1153:9;1144:7;1140:23;1136:33;1133:53;;;1182:1;1179;1172:12;1133:53;1221:9;1208:23;1240:31;1265:5;1240:31;:::i;:::-;1290:5;-1:-1:-1;1347:2:219;1332:18;;1319:32;1360:33;1319:32;1360:33;:::i;:::-;1412:7;-1:-1:-1;1471:2:219;1456:18;;1443:32;1484:33;1443:32;1484:33;:::i;:::-;1536:7;-1:-1:-1;1595:2:219;1580:18;;1567:32;1608:33;1567:32;1608:33;:::i;:::-;1660:7;-1:-1:-1;1714:3:219;1699:19;;1686:33;;-1:-1:-1;1770:3:219;1755:19;;1742:33;1798:18;1787:30;;1784:50;;;1830:1;1827;1820:12;1784:50;1869:58;1919:7;1910:6;1899:9;1895:22;1869:58;:::i;:::-;949:1038;;;;-1:-1:-1;949:1038:219;;-1:-1:-1;949:1038:219;;;;1843:84;;-1:-1:-1;;;949:1038:219:o;1992:163::-;2059:20;;2119:10;2108:22;;2098:33;;2088:61;;2145:1;2142;2135:12;2088:61;1992:163;;;:::o;2160:481::-;2238:6;2246;2254;2307:2;2295:9;2286:7;2282:23;2278:32;2275:52;;;2323:1;2320;2313:12;2275:52;2346:28;2364:9;2346:28;:::i;:::-;2336:38;;2425:2;2414:9;2410:18;2397:32;2452:18;2444:6;2441:30;2438:50;;;2484:1;2481;2474:12;2438:50;2523:58;2573:7;2564:6;2553:9;2549:22;2523:58;:::i;:::-;2160:481;;2600:8;;-1:-1:-1;2497:84:219;;-1:-1:-1;;;;2160:481:219:o;2646:754::-;2743:6;2751;2759;2767;2775;2828:3;2816:9;2807:7;2803:23;2799:33;2796:53;;;2845:1;2842;2835:12;2796:53;2884:9;2871:23;2903:31;2928:5;2903:31;:::i;:::-;2953:5;-1:-1:-1;3010:2:219;2995:18;;2982:32;3023:33;2982:32;3023:33;:::i;:::-;3075:7;-1:-1:-1;3129:2:219;3114:18;;3101:32;;-1:-1:-1;3184:2:219;3169:18;;3156:32;3211:18;3200:30;;3197:50;;;3243:1;3240;3233:12;3197:50;3282:58;3332:7;3323:6;3312:9;3308:22;3282:58;:::i;:::-;2646:754;;;;-1:-1:-1;2646:754:219;;-1:-1:-1;3359:8:219;;3256:84;2646:754;-1:-1:-1;;;2646:754:219:o;3405:616::-;3492:6;3500;3508;3516;3569:2;3557:9;3548:7;3544:23;3540:32;3537:52;;;3585:1;3582;3575:12;3537:52;3624:9;3611:23;3643:31;3668:5;3643:31;:::i;:::-;3693:5;-1:-1:-1;3717:37:219;3750:2;3735:18;;3717:37;:::i;:::-;3707:47;;3805:2;3794:9;3790:18;3777:32;3832:18;3824:6;3821:30;3818:50;;;3864:1;3861;3854:12;3818:50;3903:58;3953:7;3944:6;3933:9;3929:22;3903:58;:::i;:::-;3405:616;;;;-1:-1:-1;3980:8:219;-1:-1:-1;;;;3405:616:219:o;4026:685::-;4122:6;4130;4138;4146;4154;4207:3;4195:9;4186:7;4182:23;4178:33;4175:53;;;4224:1;4221;4214:12;4175:53;4263:9;4250:23;4282:31;4307:5;4282:31;:::i;:::-;4332:5;-1:-1:-1;4384:2:219;4369:18;;4356:32;;-1:-1:-1;4407:37:219;4440:2;4425:18;;4407:37;:::i;:::-;4397:47;;4495:2;4484:9;4480:18;4467:32;4522:18;4514:6;4511:30;4508:50;;;4554:1;4551;4544:12;5208:969;5322:6;5330;5338;5346;5354;5362;5370;5423:3;5411:9;5402:7;5398:23;5394:33;5391:53;;;5440:1;5437;5430:12;5391:53;5479:9;5466:23;5498:31;5523:5;5498:31;:::i;:::-;5548:5;-1:-1:-1;5605:2:219;5590:18;;5577:32;5618:33;5577:32;5618:33;:::i;:::-;5670:7;-1:-1:-1;5729:2:219;5714:18;;5701:32;5742:33;5701:32;5742:33;:::i;:::-;5794:7;-1:-1:-1;5848:2:219;5833:18;;5820:32;;-1:-1:-1;5871:38:219;5904:3;5889:19;;5871:38;:::i;:::-;5861:48;;5960:3;5949:9;5945:19;5932:33;5988:18;5980:6;5977:30;5974:50;;;6020:1;6017;6010:12;6182:258;6254:1;6264:113;6278:6;6275:1;6272:13;6264:113;;;6354:11;;;6348:18;6335:11;;;6328:39;6300:2;6293:10;6264:113;;;6395:6;6392:1;6389:13;6386:48;;;-1:-1:-1;;6430:1:219;6412:16;;6405:27;6182:258::o;6445:317::-;6487:3;6525:5;6519:12;6552:6;6547:3;6540:19;6568:63;6624:6;6617:4;6612:3;6608:14;6601:4;6594:5;6590:16;6568:63;:::i;:::-;6676:2;6664:15;6681:66;6660:88;6651:98;;;;6751:4;6647:109;;6445:317;-1:-1:-1;;6445:317:219:o;6767:220::-;6916:2;6905:9;6898:21;6879:4;6936:45;6977:2;6966:9;6962:18;6954:6;6936:45;:::i;7255:827::-;7360:6;7368;7376;7384;7392;7400;7453:3;7441:9;7432:7;7428:23;7424:33;7421:53;;;7470:1;7467;7460:12;7421:53;7509:9;7496:23;7528:31;7553:5;7528:31;:::i;:::-;7578:5;-1:-1:-1;7635:2:219;7620:18;;7607:32;7648:33;7607:32;7648:33;:::i;:::-;7700:7;-1:-1:-1;7754:2:219;7739:18;;7726:32;;-1:-1:-1;7777:37:219;7810:2;7795:18;;7777:37;:::i;:::-;7767:47;;7865:3;7854:9;7850:19;7837:33;7893:18;7885:6;7882:30;7879:50;;;7925:1;7922;7915:12;7879:50;7964:58;8014:7;8005:6;7994:9;7990:22;7964:58;:::i;:::-;7255:827;;;;-1:-1:-1;7255:827:219;;-1:-1:-1;7255:827:219;;8041:8;;7255:827;-1:-1:-1;;;7255:827:219:o;8087:388::-;8155:6;8163;8216:2;8204:9;8195:7;8191:23;8187:32;8184:52;;;8232:1;8229;8222:12;8184:52;8271:9;8258:23;8290:31;8315:5;8290:31;:::i;:::-;8340:5;-1:-1:-1;8397:2:219;8382:18;;8369:32;8410:33;8369:32;8410:33;:::i;:::-;8462:7;8452:17;;;8087:388;;;;;:::o;8662:251::-;8732:6;8785:2;8773:9;8764:7;8760:23;8756:32;8753:52;;;8801:1;8798;8791:12;8753:52;8833:9;8827:16;8852:31;8877:5;8852:31;:::i;10177:184::-;10229:77;10226:1;10219:88;10326:4;10323:1;10316:15;10350:4;10347:1;10340:15;10366:125;10406:4;10434:1;10431;10428:8;10425:34;;;10439:18;;:::i;:::-;-1:-1:-1;10476:9:219;;10366:125::o;13175:512::-;13369:4;13398:42;13479:2;13471:6;13467:15;13456:9;13449:34;13531:2;13523:6;13519:15;13514:2;13503:9;13499:18;13492:43;;13571:6;13566:2;13555:9;13551:18;13544:34;13614:3;13609:2;13598:9;13594:18;13587:31;13635:46;13676:3;13665:9;13661:19;13653:6;13635:46;:::i;:::-;13627:54;13175:512;-1:-1:-1;;;;;;13175:512:219:o;13692:424::-;13905:42;13897:6;13893:55;13882:9;13875:74;13985:2;13980;13969:9;13965:18;13958:30;13856:4;14005:45;14046:2;14035:9;14031:18;14023:6;14005:45;:::i;:::-;13997:53;;14098:10;14090:6;14086:23;14081:2;14070:9;14066:18;14059:51;13692:424;;;;;;:::o;14121:128::-;14161:3;14192:1;14188:6;14185:1;14182:13;14179:39;;;14198:18;;:::i;:::-;-1:-1:-1;14234:9:219;;14121:128::o;14254:674::-;14504:4;14533:42;14614:2;14606:6;14602:15;14591:9;14584:34;14666:2;14658:6;14654:15;14649:2;14638:9;14634:18;14627:43;14718:2;14710:6;14706:15;14701:2;14690:9;14686:18;14679:43;14770:2;14762:6;14758:15;14753:2;14742:9;14738:18;14731:43;;14811:6;14805:3;14794:9;14790:19;14783:35;14855:3;14849;14838:9;14834:19;14827:32;14876:46;14917:3;14906:9;14902:19;14894:6;14876:46;:::i;:::-;14868:54;14254:674;-1:-1:-1;;;;;;;;14254:674:219:o;14933:409::-;15148:42;15140:6;15136:55;15125:9;15118:74;15228:6;15223:2;15212:9;15208:18;15201:34;15271:2;15266;15255:9;15251:18;15244:30;15099:4;15291:45;15332:2;15321:9;15317:18;15309:6;15291:45;:::i;:::-;15283:53;14933:409;-1:-1:-1;;;;;14933:409:219:o;16162:277::-;16229:6;16282:2;16270:9;16261:7;16257:23;16253:32;16250:52;;;16298:1;16295;16288:12;16250:52;16330:9;16324:16;16383:5;16376:13;16369:21;16362:5;16359:32;16349:60;;16405:1;16402;16395:12;16855:289;17030:6;17019:9;17012:25;17073:2;17068;17057:9;17053:18;17046:30;16993:4;17093:45;17134:2;17123:9;17119:18;17111:6;17093:45;:::i;18167:274::-;18296:3;18334:6;18328:13;18350:53;18396:6;18391:3;18384:4;18376:6;18372:17;18350:53;:::i;:::-;18419:16;;;;;18167:274;-1:-1:-1;;18167:274:219:o",
    "linkReferences": {},
    "immutableReferences": {
      "73434": [
        {
          "start": 663,
          "length": 32
        },
        {
          "start": 937,
          "length": 32
        },
        {
          "start": 1514,
          "length": 32
        },
        {
          "start": 2687,
          "length": 32
        },
        {
          "start": 5339,
          "length": 32
        },
        {
          "start": 6173,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "MESSENGER()": "927ede2d",
    "OTHER_BRIDGE()": "7f46ddb2",
    "bridgeERC20(address,address,uint256,uint32,bytes)": "87087623",
    "bridgeERC20To(address,address,address,uint256,uint32,bytes)": "540abf73",
    "bridgeETH(uint32,bytes)": "09fc8843",
    "bridgeETHTo(address,uint32,bytes)": "e11013dd",
    "deposits(address,address)": "8f601f66",
    "finalizeBridgeERC20(address,address,address,address,uint256,bytes)": "0166a07a",
    "finalizeBridgeETH(address,address,uint256,bytes)": "1635f5fd",
    "finalizeDeposit(address,address,address,address,uint256,bytes)": "662a633a",
    "initialize()": "8129fc1c",
    "l1TokenBridge()": "36c717c1",
    "messenger()": "3cb747bf",
    "otherBridge()": "c89701a2",
    "version()": "54fd4d50",
    "withdraw(address,uint256,uint32,bytes)": "32b7006d",
    "withdrawNativeToken(uint32,bytes)": "b7420d31",
    "withdrawNativeTokenTo(address,uint32,bytes)": "239955f7",
    "withdrawTo(address,address,uint256,uint32,bytes)": "a3a79548"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract StandardBridge\",\"name\":\"_otherBridge\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"l1Token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"l2Token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"DepositFinalized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"localToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"remoteToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"ERC20BridgeFinalized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"localToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"remoteToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"ERC20BridgeInitiated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"ETHBridgeFinalized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"ETHBridgeInitiated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"l1Token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"l2Token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"WithdrawalInitiated\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MESSENGER\",\"outputs\":[{\"internalType\":\"contract CrossDomainMessenger\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OTHER_BRIDGE\",\"outputs\":[{\"internalType\":\"contract StandardBridge\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_localToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_remoteToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_minGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"bridgeERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_localToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_remoteToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_minGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"bridgeERC20To\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_minGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"bridgeETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_minGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"bridgeETHTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"deposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_localToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_remoteToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"finalizeBridgeERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"finalizeBridgeETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_l1Token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_l2Token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"finalizeDeposit\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"l1TokenBridge\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"messenger\",\"outputs\":[{\"internalType\":\"contract CrossDomainMessenger\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"otherBridge\",\"outputs\":[{\"internalType\":\"contract StandardBridge\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_l2Token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_minGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_minGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"withdrawNativeToken\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_minGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"withdrawNativeTokenTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_l2Token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_minGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"withdrawTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"custom:proxied\":\"@custom:predeploy 0x4200000000000000000000000000000000000010\",\"events\":{\"DepositFinalized(address,address,address,address,uint256,bytes)\":{\"custom:legacy\":\"@notice Emitted whenever an ERC20 deposit is finalized.\",\"params\":{\"amount\":\"Amount of the ERC20 deposited.\",\"extraData\":\"Extra data attached to the deposit.\",\"from\":\"Address of the depositor.\",\"l1Token\":\"Address of the token on L1.\",\"l2Token\":\"Address of the corresponding token on L2.\",\"to\":\"Address of the recipient on L2.\"}},\"WithdrawalInitiated(address,address,address,address,uint256,bytes)\":{\"custom:legacy\":\"@notice Emitted whenever a withdrawal from L2 to L1 is initiated.\",\"params\":{\"amount\":\"Amount of the ERC20 withdrawn.\",\"extraData\":\"Extra data attached to the withdrawal.\",\"from\":\"Address of the withdrawer.\",\"l1Token\":\"Address of the token on L1.\",\"l2Token\":\"Address of the corresponding token on L2.\",\"to\":\"Address of the recipient on L1.\"}}},\"kind\":\"dev\",\"methods\":{\"MESSENGER()\":{\"custom:legacy\":\"@return Messenger contract on this domain.\"},\"bridgeERC20(address,address,uint256,uint32,bytes)\":{\"params\":{\"_amount\":\"Amount of local tokens to deposit.\",\"_extraData\":\"Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.\",\"_localToken\":\"Address of the ERC20 on this chain.\",\"_minGasLimit\":\"Minimum amount of gas that the bridge can be relayed with.\",\"_remoteToken\":\"Address of the corresponding token on the remote chain.\"}},\"bridgeERC20To(address,address,address,uint256,uint32,bytes)\":{\"params\":{\"_amount\":\"Amount of local tokens to deposit.\",\"_extraData\":\"Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.\",\"_localToken\":\"Address of the ERC20 on this chain.\",\"_minGasLimit\":\"Minimum amount of gas that the bridge can be relayed with.\",\"_remoteToken\":\"Address of the corresponding token on the remote chain.\",\"_to\":\"Address of the receiver.\"}},\"bridgeETH(uint32,bytes)\":{\"params\":{\"_extraData\":\"Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.\",\"_minGasLimit\":\"Minimum amount of gas that the bridge can be relayed with.\"}},\"bridgeETHTo(address,uint32,bytes)\":{\"params\":{\"_extraData\":\"Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.\",\"_minGasLimit\":\"Minimum amount of gas that the bridge can be relayed with.\",\"_to\":\"Address of the receiver.\"}},\"constructor\":{\"params\":{\"_otherBridge\":\"Address of the L1StandardBridge.\"}},\"finalizeBridgeERC20(address,address,address,address,uint256,bytes)\":{\"params\":{\"_amount\":\"Amount of the ERC20 being bridged.\",\"_extraData\":\"Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.\",\"_from\":\"Address of the sender.\",\"_localToken\":\"Address of the ERC20 on this chain.\",\"_remoteToken\":\"Address of the corresponding token on the remote chain.\",\"_to\":\"Address of the receiver.\"}},\"finalizeBridgeETH(address,address,uint256,bytes)\":{\"params\":{\"_amount\":\"Amount of ETH being bridged.\",\"_extraData\":\"Extra data to be sent with the transaction. Note that the recipient will                   not be triggered with this data, but it will be emitted and can be used                   to identify the transaction.\",\"_from\":\"Address of the sender.\",\"_to\":\"Address of the receiver.\"}},\"finalizeDeposit(address,address,address,address,uint256,bytes)\":{\"custom:legacy\":\"@notice Finalizes a deposit from L1 to L2. To finalize a deposit of ether, use address(0)         and the l1Token and the Legacy ERC20 ether predeploy address as the l2Token.\",\"params\":{\"_amount\":\"Amount of the tokens being deposited.\",\"_extraData\":\"Extra data attached to the deposit.\",\"_from\":\"Address of the depositor.\",\"_l1Token\":\"Address of the L1 token to deposit.\",\"_l2Token\":\"Address of the corresponding L2 token.\",\"_to\":\"Address of the recipient.\"}},\"l1TokenBridge()\":{\"custom:legacy\":\"@notice Retrieves the access of the corresponding L1 bridge contract.\",\"returns\":{\"_0\":\"Address of the corresponding L1 bridge contract.\"}},\"withdraw(address,uint256,uint32,bytes)\":{\"params\":{\"_amount\":\"Amount of the L2 token to withdraw.\",\"_extraData\":\"Extra data attached to the withdrawal.\",\"_l2Token\":\"Address of the L2 token to withdraw.\",\"_minGasLimit\":\"Minimum gas limit to use for the transaction.\"}},\"withdrawNativeToken(uint32,bytes)\":{\"custom:legacy\":\"@notice Initiates a withdrawal native token from L2 to L1.         This function only works with native token\",\"params\":{\"_extraData\":\"Extra data attached to the withdrawal.\",\"_minGasLimit\":\"Minimum gas limit to use for the transaction.\"}},\"withdrawNativeTokenTo(address,uint32,bytes)\":{\"params\":{\"_extraData\":\"Extra data attached to the withdrawal.\",\"_minGasLimit\":\"Minimum gas limit to use for the transaction.\",\"_to\":\"Recipient account on L1.\"}},\"withdrawTo(address,address,uint256,uint32,bytes)\":{\"custom:legacy\":\"@notice Initiates a withdrawal from L2 to L1 to a target account on L1.         Note that if ETH is sent to a contract on L1 and the call fails, then that ETH will         be locked in the L1StandardBridge. ETH may be recoverable if the call can be         successfully replayed by increasing the amount of gas supplied to the call. If the         call will fail for any amount of gas, then the ETH will be locked permanently.         This function only works with OptimismMintableERC20 tokens or ether. Use the         `bridgeERC20To` function to bridge native L2 tokens to L1.\",\"params\":{\"_amount\":\"Amount of the L2 token to withdraw.\",\"_extraData\":\"Extra data attached to the withdrawal.\",\"_l2Token\":\"Address of the L2 token to withdraw.\",\"_minGasLimit\":\"Minimum gas limit to use for the transaction.\",\"_to\":\"Recipient account on L1.\"}}},\"stateVariables\":{\"version\":{\"custom:semver\":\"1.4.0\"}},\"title\":\"L2StandardBridge\",\"version\":1},\"userdoc\":{\"events\":{\"ERC20BridgeFinalized(address,address,address,address,uint256,bytes)\":{\"notice\":\"Emitted when an ERC20 bridge is finalized on this chain.\"},\"ERC20BridgeInitiated(address,address,address,address,uint256,bytes)\":{\"notice\":\"Emitted when an ERC20 bridge is initiated to the other chain.\"},\"ETHBridgeFinalized(address,address,uint256,bytes)\":{\"notice\":\"Emitted when an ETH bridge is finalized on this chain.\"},\"ETHBridgeInitiated(address,address,uint256,bytes)\":{\"notice\":\"Emitted when an ETH bridge is initiated to the other chain.\"}},\"kind\":\"user\",\"methods\":{\"MESSENGER()\":{\"notice\":\"Getter for messenger contract.\"},\"OTHER_BRIDGE()\":{\"notice\":\"Corresponding bridge on the other domain. This public getter is deprecated         and will be removed in the future. Please use `otherBridge` instead.         This can safely be an immutable because for the L1StandardBridge, it will         be set to the L2StandardBridge address, which is the same for all OP Stack         chains. For the L2StandardBridge, there are not multiple proxies using the         same implementation.\"},\"bridgeERC20(address,address,uint256,uint32,bytes)\":{\"notice\":\"Sends ERC20 tokens to the sender's address on the other chain. Note that if the         ERC20 token on the other chain does not recognize the local token as the correct         pair token, the ERC20 bridge will fail and the tokens will be returned to sender on         this chain.\"},\"bridgeERC20To(address,address,address,uint256,uint32,bytes)\":{\"notice\":\"Sends ERC20 tokens to a receiver's address on the other chain. Note that if the         ERC20 token on the other chain does not recognize the local token as the correct         pair token, the ERC20 bridge will fail and the tokens will be returned to sender on         this chain.\"},\"bridgeETH(uint32,bytes)\":{\"notice\":\"Sends ETH to the sender's address on the other chain.\"},\"bridgeETHTo(address,uint32,bytes)\":{\"notice\":\"Sends ETH to a receiver's address on the other chain. Note that if ETH is sent to a         smart contract and the call fails, the ETH will be temporarily locked in the         StandardBridge on the other chain until the call is replayed. If the call cannot be         replayed with any amount of gas (call always reverts), then the ETH will be         permanently locked in the StandardBridge on the other chain. ETH will also         be locked if the receiver is the other bridge, because finalizeBridgeETH will revert         in that case.\"},\"constructor\":{\"notice\":\"Constructs the L2StandardBridge contract.\"},\"deposits(address,address)\":{\"notice\":\"Mapping that stores deposits for a given pair of local and remote tokens.\"},\"finalizeBridgeERC20(address,address,address,address,uint256,bytes)\":{\"notice\":\"Finalizes an ERC20 bridge on this chain. Can only be triggered by the other         StandardBridge contract on the remote chain.\"},\"finalizeBridgeETH(address,address,uint256,bytes)\":{\"notice\":\"Finalizes an ETH bridge on this chain. Can only be triggered by the other         StandardBridge contract on the remote chain.\"},\"initialize()\":{\"notice\":\"Initializer\"},\"messenger()\":{\"notice\":\"Messenger contract on this domain. This public getter is deprecated         and will be removed in the future. Please use `messenger` instead.\"},\"otherBridge()\":{\"notice\":\"Getter for the remote domain bridge contract.\"},\"withdraw(address,uint256,uint32,bytes)\":{\"notice\":\"Initiates a withdrawal from L2 to L1.\"},\"withdrawNativeTokenTo(address,uint32,bytes)\":{\"notice\":\"Initiates a withdrawal native token from L2 to L1 to a target account on L1.\"}},\"notice\":\"The L2StandardBridge is responsible for transfering ETH and ERC20 tokens between L1 and         L2. In the case that an ERC20 token is native to L2, it will be escrowed within this         contract. If the ERC20 token is native to L1, it will be burnt.         NOTE: this contract is not intended to support all variations of ERC20 tokens. Examples         of some token types that may not be properly supported by this contract include, but are         not limited to: tokens with transfer fees, rebasing tokens, and tokens with blocklists.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/L2/L2StandardBridge.sol\":\"L2StandardBridge\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@cwia/=lib/clones-with-immutable-args/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/solmate/\",\":clones-with-immutable-args/=lib/clones-with-immutable-args/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x2a21b14ff90012878752f230d3ffd5c3405e5938d06c97a7d89c0a64561d0d66\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3313a8f9bb1f9476857c9050067b31982bf2140b83d84f3bc0cec1f62bbe947f\",\"dweb:/ipfs/Qma17Pk8NRe7aB4UD3jjVxk7nSFaov3eQyv86hcyqkwJRV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6\",\"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165Checker.sol\":{\"keccak256\":\"0xc65c83c1039508fa7a42a09a3c6a32babd1c438ba4dbb23581255e784b5d5eed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1b3b38db0f76429db899909025e534c366415e9ea8b5ddc4c8901e6a7fc1461\",\"dweb:/ipfs/QmYv1KxyHjLEky9JWNSsSfpGJbiCxFyzVFgTwQKpiqYGUg\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929\",\"dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb3ebde1c8d27576db912d87c3560dab14adfb9cd001be95890ec4ba035e652e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a709421c4f5d4677db8216055d2d4dac96a613efdb08178a9f7041f0c5cef689\",\"dweb:/ipfs/QmYs2rStvVLDnSJs8HgaMD1ABwoKKWdiVbQyNfLfFWTjTy\"]},\"lib/solmate/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x622fcd8a49e132df5ec7651cc6ae3aaf0cf59bdcd67a9a804a1b9e2485113b7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af77088eb606427d4c55e578984a615779c86bc30646a20f7bb27299ba390f7c\",\"dweb:/ipfs/QmZGQdhdQDtHc7gZXWrKXgA3govc74X8U63BiWhPQK3mK8\"]},\"src/L1/ResourceMetering.sol\":{\"keccak256\":\"0xa4d524f2a5e91a0b63a62603e712001c51c77e8371b93cbb576bcb7d074b7588\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6d8141b6c6dc72d2e684c1ae388c005fd78c9ca7fc9c15dddebd227ca4fd730\",\"dweb:/ipfs/QmPfJrR4qssu769TDWJnxdTozqKtZUxiY8fs95bhfECTvG\"]},\"src/L2/L2StandardBridge.sol\":{\"keccak256\":\"0x8ff2754d4cabf020336471e83cc181c96d123409bb39fd1df278d40ff206463b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://31f840e2780bae20bae061bf8ec691d88c5ca21a24c150629a1ce7f7e9a389f7\",\"dweb:/ipfs/QmURJnDRFyirjtZCwmrSVgkNG2Vh6QWCKf7edsVKSYAnio\"]},\"src/libraries/Arithmetic.sol\":{\"keccak256\":\"0x06a5a8b00527843f0cfc1bb3c0661316966a6cc432f88be31f23cde78cd07560\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5209e78e5415c0bf8b350362a825cc56152811abd6fcf2df3d4fa47766d3dee\",\"dweb:/ipfs/Qmf43xyc4Um32NmccayDfhm8kSnS2mhHXpPZnwABJS7cWm\"]},\"src/libraries/Burn.sol\":{\"keccak256\":\"0x90a795bcea3ef06d6d5011256c4bd63d1a4271f519246dbf1ee3e8f1c0e21010\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f60c3aa77cf0c484ddda4754157cff4dc0e2eace4bea67990daff4c0612ab5f\",\"dweb:/ipfs/QmSYGanMFve9uBC17X7hFneSFnwnJxz86Jgh6MX9BRMweb\"]},\"src/libraries/Constants.sol\":{\"keccak256\":\"0xe12e392f05f80d3837c9392d016471181ae1ee6b84ea91b4e125e6523e5f18a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a3509231c228b7a4352573cd422cf0260dcbb94cfd915e5b664643db5475a5b7\",\"dweb:/ipfs/QmU2QERY4mHxqWFqSE5Exsy6Ftc5MTjTtYHC11fahLJWDC\"]},\"src/libraries/Encoding.sol\":{\"keccak256\":\"0xd5bbcb7da113e69562498d9543765e03912558ad66348682c2049c31e19f9d9b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afc6656ea10062c0c9d0817bb8683636caebf9222c9c102f29ea54fff74a2f93\",\"dweb:/ipfs/QmTNWtMgrTRHM6XtdUmA8bMZcuFpXoFCXgXR5vRihZWLuW\"]},\"src/libraries/Hashing.sol\":{\"keccak256\":\"0x44e2b2dcfffc39c0fc95ccd3c2118c7e7585fadf3dca327877d5756c7d4b21c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c89e0d9cfcb08a0d3c46c85367a32bbd9703468ba4c0c5bb6e124c1d173b26b\",\"dweb:/ipfs/QmaY3nQHBBhHK1wrurVXiEeNL8hfZ1pRmhpqW44tFDJnDf\"]},\"src/libraries/Predeploys.sol\":{\"keccak256\":\"0xbdc7b26891b9b5eecd44720e941f5f4f94e5ae008087552fcae6b9a9d6305d05\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://894ca1837ab580f3ba5641cf33ca2271bf6d5c60297a80a6a37c2678f9332fc4\",\"dweb:/ipfs/QmXgVnPzCYqbGT4gYwKuvDJiuRPiYjNmzYzjrnf4YXp9Cb\"]},\"src/libraries/SafeCall.sol\":{\"keccak256\":\"0x0636a7abb242bb5d6f5606967c8929e6aa7e63468c1e2ce40ad4780d4c4bf94f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4daec2ac8f9907bbf84ef0a1c48f03bae8657619bc6f42b3a672f25c516f17a\",\"dweb:/ipfs/Qmf8gfRxBv8gEmCkP8YMPb2GGfj9QUnoNUyKE7UR2SWGnq\"]},\"src/libraries/Types.sol\":{\"keccak256\":\"0x75900d651301940d24c00d14f0b3b6cbd6dcf379173ceaa31d9bf5be934a9aa4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c2632c5bf4fa3982391c32110eec9fa07917b483b2442cbaf18bdde5bdb24e\",\"dweb:/ipfs/QmSUs6Amkeootf5gKGbKi4mJpvhN2U8i1ED6ef2dskV5xc\"]},\"src/libraries/rlp/RLPWriter.sol\":{\"keccak256\":\"0x60ac401490f321c9c55e996a2c65151cd5e60de5f8f297e7c94d541c29820bb6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://070f5814db07e4a89173d44a36d90e4261ce530f7336034c01635347f2c2d88b\",\"dweb:/ipfs/QmXqr9yW5Kc8MYgr5wSehU5AiqS9pZ4FKxv7vwiwpZCcyV\"]},\"src/universal/CrossDomainMessenger.sol\":{\"keccak256\":\"0x6876fa0706a4647f4247eea58228dc650a39ff42fb2495ac2f8a37dcc99075b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a61d10bd62b6f4bbc5cc2b6c765c96cfc67e132a808f691ef1d8175eaf363363\",\"dweb:/ipfs/QmdBHpzFQpxVA9L9s3jiwHpB1SDtEeN3yqDazS7wnmEpFY\"]},\"src/universal/IOptimismMintableERC20.sol\":{\"keccak256\":\"0x6f8133b39efcbcbd5088f195dfacf1bedc3146508429c3865443909af735a04c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://adc36971e2e120458769f050428d9d2b0504516660345020c2521ee46e6d8abf\",\"dweb:/ipfs/QmPbFusQkZgGKpU8Fv5JoqL4oVeJtM3yqnhRGLY9eZT5zZ\"]},\"src/universal/ISemver.sol\":{\"keccak256\":\"0xba34562a8026f59886d2e07d1d58d90b9691d00e0788c6263cef6c22740cab44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0826f998632f83c103c3085bf2e872db79a69022b6d2e0444c83a64ca5283c2a\",\"dweb:/ipfs/QmcJ7PNqkAfKqbjFGRordtAg1v9DvcBSKvdTkVvciLyvQR\"]},\"src/universal/OptimismMintableERC20.sol\":{\"keccak256\":\"0x239934f3d2f6fc94587461e080014f61c1f7f24150ef2173fd042c97eb416385\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85a184dba76a4fead2142d6b1ea7dc89efc3046b181961f8aff5f55ea9bc057f\",\"dweb:/ipfs/QmPdmrQhh6YhdK2r3969nPdjk1UUu4p1Q1BFrXutNFUHKt\"]},\"src/universal/Semver.sol\":{\"keccak256\":\"0x9de68ce536aee1aa616b4bf88d7ccc335460e6edd0e7170bdbf94c4fe3d41c60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5909c0b049b03a2bc24816ecf15b0aaf18c04a963174e1eba7624321bef330d\",\"dweb:/ipfs/QmeqdutwZWHqQMXauNR6WY8PrUpfsTiWTQyanbnGM9QqzT\"]},\"src/universal/StandardBridge.sol\":{\"keccak256\":\"0x3c566019ae8102039455fe8878bf77d4ad69d7076f4b177980ea0c070125c8d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://102cc55a435e27b3f012ae8c3a4cd7b48535f2df7db78e7b98c793983fffe347\",\"dweb:/ipfs/QmczRvGDo9H5YwTPW9wW9dkhQSXAvtpDzrmapUPSD4Be1G\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract StandardBridge",
              "name": "_otherBridge",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "l1Token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "l2Token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "DepositFinalized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "localToken",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "remoteToken",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ERC20BridgeFinalized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "localToken",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "remoteToken",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ERC20BridgeInitiated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ETHBridgeFinalized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ETHBridgeInitiated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "l1Token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "l2Token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "WithdrawalInitiated",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MESSENGER",
          "outputs": [
            {
              "internalType": "contract CrossDomainMessenger",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "OTHER_BRIDGE",
          "outputs": [
            {
              "internalType": "contract StandardBridge",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_localToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_remoteToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "_minGasLimit",
              "type": "uint32"
            },
            {
              "internalType": "bytes",
              "name": "_extraData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "bridgeERC20"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_localToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_remoteToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "_minGasLimit",
              "type": "uint32"
            },
            {
              "internalType": "bytes",
              "name": "_extraData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "bridgeERC20To"
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "_minGasLimit",
              "type": "uint32"
            },
            {
              "internalType": "bytes",
              "name": "_extraData",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "bridgeETH"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "_minGasLimit",
              "type": "uint32"
            },
            {
              "internalType": "bytes",
              "name": "_extraData",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "bridgeETHTo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "deposits",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_localToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_remoteToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_extraData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "finalizeBridgeERC20"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_extraData",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "finalizeBridgeETH"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_l1Token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_l2Token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_extraData",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "finalizeDeposit"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "l1TokenBridge",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "messenger",
          "outputs": [
            {
              "internalType": "contract CrossDomainMessenger",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "otherBridge",
          "outputs": [
            {
              "internalType": "contract StandardBridge",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "version",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_l2Token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "_minGasLimit",
              "type": "uint32"
            },
            {
              "internalType": "bytes",
              "name": "_extraData",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "withdraw"
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "_minGasLimit",
              "type": "uint32"
            },
            {
              "internalType": "bytes",
              "name": "_extraData",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "withdrawNativeToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "_minGasLimit",
              "type": "uint32"
            },
            {
              "internalType": "bytes",
              "name": "_extraData",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "withdrawNativeTokenTo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_l2Token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "_minGasLimit",
              "type": "uint32"
            },
            {
              "internalType": "bytes",
              "name": "_extraData",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "withdrawTo"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "MESSENGER()": {
            "custom:legacy": "@return Messenger contract on this domain."
          },
          "bridgeERC20(address,address,uint256,uint32,bytes)": {
            "params": {
              "_amount": "Amount of local tokens to deposit.",
              "_extraData": "Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.",
              "_localToken": "Address of the ERC20 on this chain.",
              "_minGasLimit": "Minimum amount of gas that the bridge can be relayed with.",
              "_remoteToken": "Address of the corresponding token on the remote chain."
            }
          },
          "bridgeERC20To(address,address,address,uint256,uint32,bytes)": {
            "params": {
              "_amount": "Amount of local tokens to deposit.",
              "_extraData": "Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.",
              "_localToken": "Address of the ERC20 on this chain.",
              "_minGasLimit": "Minimum amount of gas that the bridge can be relayed with.",
              "_remoteToken": "Address of the corresponding token on the remote chain.",
              "_to": "Address of the receiver."
            }
          },
          "bridgeETH(uint32,bytes)": {
            "params": {
              "_extraData": "Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.",
              "_minGasLimit": "Minimum amount of gas that the bridge can be relayed with."
            }
          },
          "bridgeETHTo(address,uint32,bytes)": {
            "params": {
              "_extraData": "Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.",
              "_minGasLimit": "Minimum amount of gas that the bridge can be relayed with.",
              "_to": "Address of the receiver."
            }
          },
          "constructor": {
            "params": {
              "_otherBridge": "Address of the L1StandardBridge."
            }
          },
          "finalizeBridgeERC20(address,address,address,address,uint256,bytes)": {
            "params": {
              "_amount": "Amount of the ERC20 being bridged.",
              "_extraData": "Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.",
              "_from": "Address of the sender.",
              "_localToken": "Address of the ERC20 on this chain.",
              "_remoteToken": "Address of the corresponding token on the remote chain.",
              "_to": "Address of the receiver."
            }
          },
          "finalizeBridgeETH(address,address,uint256,bytes)": {
            "params": {
              "_amount": "Amount of ETH being bridged.",
              "_extraData": "Extra data to be sent with the transaction. Note that the recipient will                   not be triggered with this data, but it will be emitted and can be used                   to identify the transaction.",
              "_from": "Address of the sender.",
              "_to": "Address of the receiver."
            }
          },
          "finalizeDeposit(address,address,address,address,uint256,bytes)": {
            "custom:legacy": "@notice Finalizes a deposit from L1 to L2. To finalize a deposit of ether, use address(0)         and the l1Token and the Legacy ERC20 ether predeploy address as the l2Token.",
            "params": {
              "_amount": "Amount of the tokens being deposited.",
              "_extraData": "Extra data attached to the deposit.",
              "_from": "Address of the depositor.",
              "_l1Token": "Address of the L1 token to deposit.",
              "_l2Token": "Address of the corresponding L2 token.",
              "_to": "Address of the recipient."
            }
          },
          "l1TokenBridge()": {
            "custom:legacy": "@notice Retrieves the access of the corresponding L1 bridge contract.",
            "returns": {
              "_0": "Address of the corresponding L1 bridge contract."
            }
          },
          "withdraw(address,uint256,uint32,bytes)": {
            "params": {
              "_amount": "Amount of the L2 token to withdraw.",
              "_extraData": "Extra data attached to the withdrawal.",
              "_l2Token": "Address of the L2 token to withdraw.",
              "_minGasLimit": "Minimum gas limit to use for the transaction."
            }
          },
          "withdrawNativeToken(uint32,bytes)": {
            "custom:legacy": "@notice Initiates a withdrawal native token from L2 to L1.         This function only works with native token",
            "params": {
              "_extraData": "Extra data attached to the withdrawal.",
              "_minGasLimit": "Minimum gas limit to use for the transaction."
            }
          },
          "withdrawNativeTokenTo(address,uint32,bytes)": {
            "params": {
              "_extraData": "Extra data attached to the withdrawal.",
              "_minGasLimit": "Minimum gas limit to use for the transaction.",
              "_to": "Recipient account on L1."
            }
          },
          "withdrawTo(address,address,uint256,uint32,bytes)": {
            "custom:legacy": "@notice Initiates a withdrawal from L2 to L1 to a target account on L1.         Note that if ETH is sent to a contract on L1 and the call fails, then that ETH will         be locked in the L1StandardBridge. ETH may be recoverable if the call can be         successfully replayed by increasing the amount of gas supplied to the call. If the         call will fail for any amount of gas, then the ETH will be locked permanently.         This function only works with OptimismMintableERC20 tokens or ether. Use the         `bridgeERC20To` function to bridge native L2 tokens to L1.",
            "params": {
              "_amount": "Amount of the L2 token to withdraw.",
              "_extraData": "Extra data attached to the withdrawal.",
              "_l2Token": "Address of the L2 token to withdraw.",
              "_minGasLimit": "Minimum gas limit to use for the transaction.",
              "_to": "Recipient account on L1."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "MESSENGER()": {
            "notice": "Getter for messenger contract."
          },
          "OTHER_BRIDGE()": {
            "notice": "Corresponding bridge on the other domain. This public getter is deprecated         and will be removed in the future. Please use `otherBridge` instead.         This can safely be an immutable because for the L1StandardBridge, it will         be set to the L2StandardBridge address, which is the same for all OP Stack         chains. For the L2StandardBridge, there are not multiple proxies using the         same implementation."
          },
          "bridgeERC20(address,address,uint256,uint32,bytes)": {
            "notice": "Sends ERC20 tokens to the sender's address on the other chain. Note that if the         ERC20 token on the other chain does not recognize the local token as the correct         pair token, the ERC20 bridge will fail and the tokens will be returned to sender on         this chain."
          },
          "bridgeERC20To(address,address,address,uint256,uint32,bytes)": {
            "notice": "Sends ERC20 tokens to a receiver's address on the other chain. Note that if the         ERC20 token on the other chain does not recognize the local token as the correct         pair token, the ERC20 bridge will fail and the tokens will be returned to sender on         this chain."
          },
          "bridgeETH(uint32,bytes)": {
            "notice": "Sends ETH to the sender's address on the other chain."
          },
          "bridgeETHTo(address,uint32,bytes)": {
            "notice": "Sends ETH to a receiver's address on the other chain. Note that if ETH is sent to a         smart contract and the call fails, the ETH will be temporarily locked in the         StandardBridge on the other chain until the call is replayed. If the call cannot be         replayed with any amount of gas (call always reverts), then the ETH will be         permanently locked in the StandardBridge on the other chain. ETH will also         be locked if the receiver is the other bridge, because finalizeBridgeETH will revert         in that case."
          },
          "constructor": {
            "notice": "Constructs the L2StandardBridge contract."
          },
          "deposits(address,address)": {
            "notice": "Mapping that stores deposits for a given pair of local and remote tokens."
          },
          "finalizeBridgeERC20(address,address,address,address,uint256,bytes)": {
            "notice": "Finalizes an ERC20 bridge on this chain. Can only be triggered by the other         StandardBridge contract on the remote chain."
          },
          "finalizeBridgeETH(address,address,uint256,bytes)": {
            "notice": "Finalizes an ETH bridge on this chain. Can only be triggered by the other         StandardBridge contract on the remote chain."
          },
          "initialize()": {
            "notice": "Initializer"
          },
          "messenger()": {
            "notice": "Messenger contract on this domain. This public getter is deprecated         and will be removed in the future. Please use `messenger` instead."
          },
          "otherBridge()": {
            "notice": "Getter for the remote domain bridge contract."
          },
          "withdraw(address,uint256,uint32,bytes)": {
            "notice": "Initiates a withdrawal from L2 to L1."
          },
          "withdrawNativeTokenTo(address,uint32,bytes)": {
            "notice": "Initiates a withdrawal native token from L2 to L1 to a target account on L1."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@cwia/=lib/clones-with-immutable-args/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@rari-capital/solmate/=lib/solmate/",
        "clones-with-immutable-args/=lib/clones-with-immutable-args/src/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "safe-contracts/=lib/safe-contracts/contracts/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 999999
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "src/L2/L2StandardBridge.sol": "L2StandardBridge"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
        "urls": [
          "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
          "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x2a21b14ff90012878752f230d3ffd5c3405e5938d06c97a7d89c0a64561d0d66",
        "urls": [
          "bzz-raw://3313a8f9bb1f9476857c9050067b31982bf2140b83d84f3bc0cec1f62bbe947f",
          "dweb:/ipfs/Qma17Pk8NRe7aB4UD3jjVxk7nSFaov3eQyv86hcyqkwJRV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238",
        "urls": [
          "bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0",
          "dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29",
        "urls": [
          "bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6",
          "dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10",
        "urls": [
          "bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487",
          "dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3",
        "urls": [
          "bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638",
          "dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165Checker.sol": {
        "keccak256": "0xc65c83c1039508fa7a42a09a3c6a32babd1c438ba4dbb23581255e784b5d5eed",
        "urls": [
          "bzz-raw://a1b3b38db0f76429db899909025e534c366415e9ea8b5ddc4c8901e6a7fc1461",
          "dweb:/ipfs/QmYv1KxyHjLEky9JWNSsSfpGJbiCxFyzVFgTwQKpiqYGUg"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0",
        "urls": [
          "bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929",
          "dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xb3ebde1c8d27576db912d87c3560dab14adfb9cd001be95890ec4ba035e652e7",
        "urls": [
          "bzz-raw://a709421c4f5d4677db8216055d2d4dac96a613efdb08178a9f7041f0c5cef689",
          "dweb:/ipfs/QmYs2rStvVLDnSJs8HgaMD1ABwoKKWdiVbQyNfLfFWTjTy"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/utils/FixedPointMathLib.sol": {
        "keccak256": "0x622fcd8a49e132df5ec7651cc6ae3aaf0cf59bdcd67a9a804a1b9e2485113b7d",
        "urls": [
          "bzz-raw://af77088eb606427d4c55e578984a615779c86bc30646a20f7bb27299ba390f7c",
          "dweb:/ipfs/QmZGQdhdQDtHc7gZXWrKXgA3govc74X8U63BiWhPQK3mK8"
        ],
        "license": "MIT"
      },
      "src/L1/ResourceMetering.sol": {
        "keccak256": "0xa4d524f2a5e91a0b63a62603e712001c51c77e8371b93cbb576bcb7d074b7588",
        "urls": [
          "bzz-raw://d6d8141b6c6dc72d2e684c1ae388c005fd78c9ca7fc9c15dddebd227ca4fd730",
          "dweb:/ipfs/QmPfJrR4qssu769TDWJnxdTozqKtZUxiY8fs95bhfECTvG"
        ],
        "license": "MIT"
      },
      "src/L2/L2StandardBridge.sol": {
        "keccak256": "0x8ff2754d4cabf020336471e83cc181c96d123409bb39fd1df278d40ff206463b",
        "urls": [
          "bzz-raw://31f840e2780bae20bae061bf8ec691d88c5ca21a24c150629a1ce7f7e9a389f7",
          "dweb:/ipfs/QmURJnDRFyirjtZCwmrSVgkNG2Vh6QWCKf7edsVKSYAnio"
        ],
        "license": "MIT"
      },
      "src/libraries/Arithmetic.sol": {
        "keccak256": "0x06a5a8b00527843f0cfc1bb3c0661316966a6cc432f88be31f23cde78cd07560",
        "urls": [
          "bzz-raw://d5209e78e5415c0bf8b350362a825cc56152811abd6fcf2df3d4fa47766d3dee",
          "dweb:/ipfs/Qmf43xyc4Um32NmccayDfhm8kSnS2mhHXpPZnwABJS7cWm"
        ],
        "license": "MIT"
      },
      "src/libraries/Burn.sol": {
        "keccak256": "0x90a795bcea3ef06d6d5011256c4bd63d1a4271f519246dbf1ee3e8f1c0e21010",
        "urls": [
          "bzz-raw://9f60c3aa77cf0c484ddda4754157cff4dc0e2eace4bea67990daff4c0612ab5f",
          "dweb:/ipfs/QmSYGanMFve9uBC17X7hFneSFnwnJxz86Jgh6MX9BRMweb"
        ],
        "license": "MIT"
      },
      "src/libraries/Constants.sol": {
        "keccak256": "0xe12e392f05f80d3837c9392d016471181ae1ee6b84ea91b4e125e6523e5f18a2",
        "urls": [
          "bzz-raw://a3509231c228b7a4352573cd422cf0260dcbb94cfd915e5b664643db5475a5b7",
          "dweb:/ipfs/QmU2QERY4mHxqWFqSE5Exsy6Ftc5MTjTtYHC11fahLJWDC"
        ],
        "license": "MIT"
      },
      "src/libraries/Encoding.sol": {
        "keccak256": "0xd5bbcb7da113e69562498d9543765e03912558ad66348682c2049c31e19f9d9b",
        "urls": [
          "bzz-raw://afc6656ea10062c0c9d0817bb8683636caebf9222c9c102f29ea54fff74a2f93",
          "dweb:/ipfs/QmTNWtMgrTRHM6XtdUmA8bMZcuFpXoFCXgXR5vRihZWLuW"
        ],
        "license": "MIT"
      },
      "src/libraries/Hashing.sol": {
        "keccak256": "0x44e2b2dcfffc39c0fc95ccd3c2118c7e7585fadf3dca327877d5756c7d4b21c3",
        "urls": [
          "bzz-raw://6c89e0d9cfcb08a0d3c46c85367a32bbd9703468ba4c0c5bb6e124c1d173b26b",
          "dweb:/ipfs/QmaY3nQHBBhHK1wrurVXiEeNL8hfZ1pRmhpqW44tFDJnDf"
        ],
        "license": "MIT"
      },
      "src/libraries/Predeploys.sol": {
        "keccak256": "0xbdc7b26891b9b5eecd44720e941f5f4f94e5ae008087552fcae6b9a9d6305d05",
        "urls": [
          "bzz-raw://894ca1837ab580f3ba5641cf33ca2271bf6d5c60297a80a6a37c2678f9332fc4",
          "dweb:/ipfs/QmXgVnPzCYqbGT4gYwKuvDJiuRPiYjNmzYzjrnf4YXp9Cb"
        ],
        "license": "MIT"
      },
      "src/libraries/SafeCall.sol": {
        "keccak256": "0x0636a7abb242bb5d6f5606967c8929e6aa7e63468c1e2ce40ad4780d4c4bf94f",
        "urls": [
          "bzz-raw://a4daec2ac8f9907bbf84ef0a1c48f03bae8657619bc6f42b3a672f25c516f17a",
          "dweb:/ipfs/Qmf8gfRxBv8gEmCkP8YMPb2GGfj9QUnoNUyKE7UR2SWGnq"
        ],
        "license": "MIT"
      },
      "src/libraries/Types.sol": {
        "keccak256": "0x75900d651301940d24c00d14f0b3b6cbd6dcf379173ceaa31d9bf5be934a9aa4",
        "urls": [
          "bzz-raw://99c2632c5bf4fa3982391c32110eec9fa07917b483b2442cbaf18bdde5bdb24e",
          "dweb:/ipfs/QmSUs6Amkeootf5gKGbKi4mJpvhN2U8i1ED6ef2dskV5xc"
        ],
        "license": "MIT"
      },
      "src/libraries/rlp/RLPWriter.sol": {
        "keccak256": "0x60ac401490f321c9c55e996a2c65151cd5e60de5f8f297e7c94d541c29820bb6",
        "urls": [
          "bzz-raw://070f5814db07e4a89173d44a36d90e4261ce530f7336034c01635347f2c2d88b",
          "dweb:/ipfs/QmXqr9yW5Kc8MYgr5wSehU5AiqS9pZ4FKxv7vwiwpZCcyV"
        ],
        "license": "MIT"
      },
      "src/universal/CrossDomainMessenger.sol": {
        "keccak256": "0x6876fa0706a4647f4247eea58228dc650a39ff42fb2495ac2f8a37dcc99075b6",
        "urls": [
          "bzz-raw://a61d10bd62b6f4bbc5cc2b6c765c96cfc67e132a808f691ef1d8175eaf363363",
          "dweb:/ipfs/QmdBHpzFQpxVA9L9s3jiwHpB1SDtEeN3yqDazS7wnmEpFY"
        ],
        "license": "MIT"
      },
      "src/universal/IOptimismMintableERC20.sol": {
        "keccak256": "0x6f8133b39efcbcbd5088f195dfacf1bedc3146508429c3865443909af735a04c",
        "urls": [
          "bzz-raw://adc36971e2e120458769f050428d9d2b0504516660345020c2521ee46e6d8abf",
          "dweb:/ipfs/QmPbFusQkZgGKpU8Fv5JoqL4oVeJtM3yqnhRGLY9eZT5zZ"
        ],
        "license": "MIT"
      },
      "src/universal/ISemver.sol": {
        "keccak256": "0xba34562a8026f59886d2e07d1d58d90b9691d00e0788c6263cef6c22740cab44",
        "urls": [
          "bzz-raw://0826f998632f83c103c3085bf2e872db79a69022b6d2e0444c83a64ca5283c2a",
          "dweb:/ipfs/QmcJ7PNqkAfKqbjFGRordtAg1v9DvcBSKvdTkVvciLyvQR"
        ],
        "license": "MIT"
      },
      "src/universal/OptimismMintableERC20.sol": {
        "keccak256": "0x239934f3d2f6fc94587461e080014f61c1f7f24150ef2173fd042c97eb416385",
        "urls": [
          "bzz-raw://85a184dba76a4fead2142d6b1ea7dc89efc3046b181961f8aff5f55ea9bc057f",
          "dweb:/ipfs/QmPdmrQhh6YhdK2r3969nPdjk1UUu4p1Q1BFrXutNFUHKt"
        ],
        "license": "MIT"
      },
      "src/universal/Semver.sol": {
        "keccak256": "0x9de68ce536aee1aa616b4bf88d7ccc335460e6edd0e7170bdbf94c4fe3d41c60",
        "urls": [
          "bzz-raw://d5909c0b049b03a2bc24816ecf15b0aaf18c04a963174e1eba7624321bef330d",
          "dweb:/ipfs/QmeqdutwZWHqQMXauNR6WY8PrUpfsTiWTQyanbnGM9QqzT"
        ],
        "license": "MIT"
      },
      "src/universal/StandardBridge.sol": {
        "keccak256": "0x3c566019ae8102039455fe8878bf77d4ad69d7076f4b177980ea0c070125c8d8",
        "urls": [
          "bzz-raw://102cc55a435e27b3f012ae8c3a4cd7b48535f2df7db78e7b98c793983fffe347",
          "dweb:/ipfs/QmczRvGDo9H5YwTPW9wW9dkhQSXAvtpDzrmapUPSD4Be1G"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 30163,
        "contract": "src/L2/L2StandardBridge.sol:L2StandardBridge",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 30166,
        "contract": "src/L2/L2StandardBridge.sol:L2StandardBridge",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 73437,
        "contract": "src/L2/L2StandardBridge.sol:L2StandardBridge",
        "label": "spacer_0_2_20",
        "offset": 2,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 73440,
        "contract": "src/L2/L2StandardBridge.sol:L2StandardBridge",
        "label": "spacer_1_0_20",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 73447,
        "contract": "src/L2/L2StandardBridge.sol:L2StandardBridge",
        "label": "deposits",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 73451,
        "contract": "src/L2/L2StandardBridge.sol:L2StandardBridge",
        "label": "messenger",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(CrossDomainMessenger)71321"
      },
      {
        "astId": 73456,
        "contract": "src/L2/L2StandardBridge.sol:L2StandardBridge",
        "label": "__gap",
        "offset": 0,
        "slot": "4",
        "type": "t_array(t_uint256)46_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)46_storage": {
        "encoding": "inplace",
        "label": "uint256[46]",
        "numberOfBytes": "1472",
        "base": "t_uint256"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(CrossDomainMessenger)71321": {
        "encoding": "inplace",
        "label": "contract CrossDomainMessenger",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  },
  "userdoc": {
    "version": 1,
    "kind": "user",
    "methods": {
      "MESSENGER()": {
        "notice": "Getter for messenger contract."
      },
      "OTHER_BRIDGE()": {
        "notice": "Corresponding bridge on the other domain. This public getter is deprecated         and will be removed in the future. Please use `otherBridge` instead.         This can safely be an immutable because for the L1StandardBridge, it will         be set to the L2StandardBridge address, which is the same for all OP Stack         chains. For the L2StandardBridge, there are not multiple proxies using the         same implementation."
      },
      "bridgeERC20(address,address,uint256,uint32,bytes)": {
        "notice": "Sends ERC20 tokens to the sender's address on the other chain. Note that if the         ERC20 token on the other chain does not recognize the local token as the correct         pair token, the ERC20 bridge will fail and the tokens will be returned to sender on         this chain."
      },
      "bridgeERC20To(address,address,address,uint256,uint32,bytes)": {
        "notice": "Sends ERC20 tokens to a receiver's address on the other chain. Note that if the         ERC20 token on the other chain does not recognize the local token as the correct         pair token, the ERC20 bridge will fail and the tokens will be returned to sender on         this chain."
      },
      "bridgeETH(uint32,bytes)": {
        "notice": "Sends ETH to the sender's address on the other chain."
      },
      "bridgeETHTo(address,uint32,bytes)": {
        "notice": "Sends ETH to a receiver's address on the other chain. Note that if ETH is sent to a         smart contract and the call fails, the ETH will be temporarily locked in the         StandardBridge on the other chain until the call is replayed. If the call cannot be         replayed with any amount of gas (call always reverts), then the ETH will be         permanently locked in the StandardBridge on the other chain. ETH will also         be locked if the receiver is the other bridge, because finalizeBridgeETH will revert         in that case."
      },
      "constructor": {
        "notice": "Constructs the L2StandardBridge contract."
      },
      "deposits(address,address)": {
        "notice": "Mapping that stores deposits for a given pair of local and remote tokens."
      },
      "finalizeBridgeERC20(address,address,address,address,uint256,bytes)": {
        "notice": "Finalizes an ERC20 bridge on this chain. Can only be triggered by the other         StandardBridge contract on the remote chain."
      },
      "finalizeBridgeETH(address,address,uint256,bytes)": {
        "notice": "Finalizes an ETH bridge on this chain. Can only be triggered by the other         StandardBridge contract on the remote chain."
      },
      "initialize()": {
        "notice": "Initializer"
      },
      "messenger()": {
        "notice": "Messenger contract on this domain. This public getter is deprecated         and will be removed in the future. Please use `messenger` instead."
      },
      "otherBridge()": {
        "notice": "Getter for the remote domain bridge contract."
      },
      "withdraw(address,uint256,uint32,bytes)": {
        "notice": "Initiates a withdrawal from L2 to L1."
      },
      "withdrawNativeTokenTo(address,uint32,bytes)": {
        "notice": "Initiates a withdrawal native token from L2 to L1 to a target account on L1."
      }
    },
    "events": {
      "ERC20BridgeFinalized(address,address,address,address,uint256,bytes)": {
        "notice": "Emitted when an ERC20 bridge is finalized on this chain."
      },
      "ERC20BridgeInitiated(address,address,address,address,uint256,bytes)": {
        "notice": "Emitted when an ERC20 bridge is initiated to the other chain."
      },
      "ETHBridgeFinalized(address,address,uint256,bytes)": {
        "notice": "Emitted when an ETH bridge is finalized on this chain."
      },
      "ETHBridgeInitiated(address,address,uint256,bytes)": {
        "notice": "Emitted when an ETH bridge is initiated to the other chain."
      }
    },
    "notice": "The L2StandardBridge is responsible for transfering ETH and ERC20 tokens between L1 and         L2. In the case that an ERC20 token is native to L2, it will be escrowed within this         contract. If the ERC20 token is native to L1, it will be burnt.         NOTE: this contract is not intended to support all variations of ERC20 tokens. Examples         of some token types that may not be properly supported by this contract include, but are         not limited to: tokens with transfer fees, rebasing tokens, and tokens with blocklists."
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "methods": {
      "MESSENGER()": {},
      "bridgeERC20(address,address,uint256,uint32,bytes)": {
        "params": {
          "_amount": "Amount of local tokens to deposit.",
          "_extraData": "Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.",
          "_localToken": "Address of the ERC20 on this chain.",
          "_minGasLimit": "Minimum amount of gas that the bridge can be relayed with.",
          "_remoteToken": "Address of the corresponding token on the remote chain."
        }
      },
      "bridgeERC20To(address,address,address,uint256,uint32,bytes)": {
        "params": {
          "_amount": "Amount of local tokens to deposit.",
          "_extraData": "Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.",
          "_localToken": "Address of the ERC20 on this chain.",
          "_minGasLimit": "Minimum amount of gas that the bridge can be relayed with.",
          "_remoteToken": "Address of the corresponding token on the remote chain.",
          "_to": "Address of the receiver."
        }
      },
      "bridgeETH(uint32,bytes)": {
        "params": {
          "_extraData": "Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.",
          "_minGasLimit": "Minimum amount of gas that the bridge can be relayed with."
        }
      },
      "bridgeETHTo(address,uint32,bytes)": {
        "params": {
          "_extraData": "Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.",
          "_minGasLimit": "Minimum amount of gas that the bridge can be relayed with.",
          "_to": "Address of the receiver."
        }
      },
      "constructor": {
        "params": {
          "_otherBridge": "Address of the L1StandardBridge."
        }
      },
      "finalizeBridgeERC20(address,address,address,address,uint256,bytes)": {
        "params": {
          "_amount": "Amount of the ERC20 being bridged.",
          "_extraData": "Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.",
          "_from": "Address of the sender.",
          "_localToken": "Address of the ERC20 on this chain.",
          "_remoteToken": "Address of the corresponding token on the remote chain.",
          "_to": "Address of the receiver."
        }
      },
      "finalizeBridgeETH(address,address,uint256,bytes)": {
        "params": {
          "_amount": "Amount of ETH being bridged.",
          "_extraData": "Extra data to be sent with the transaction. Note that the recipient will                   not be triggered with this data, but it will be emitted and can be used                   to identify the transaction.",
          "_from": "Address of the sender.",
          "_to": "Address of the receiver."
        }
      },
      "finalizeDeposit(address,address,address,address,uint256,bytes)": {
        "params": {
          "_amount": "Amount of the tokens being deposited.",
          "_extraData": "Extra data attached to the deposit.",
          "_from": "Address of the depositor.",
          "_l1Token": "Address of the L1 token to deposit.",
          "_l2Token": "Address of the corresponding L2 token.",
          "_to": "Address of the recipient."
        }
      },
      "l1TokenBridge()": {
        "returns": {
          "_0": "Address of the corresponding L1 bridge contract."
        }
      },
      "withdraw(address,uint256,uint32,bytes)": {
        "params": {
          "_amount": "Amount of the L2 token to withdraw.",
          "_extraData": "Extra data attached to the withdrawal.",
          "_l2Token": "Address of the L2 token to withdraw.",
          "_minGasLimit": "Minimum gas limit to use for the transaction."
        }
      },
      "withdrawNativeToken(uint32,bytes)": {
        "params": {
          "_extraData": "Extra data attached to the withdrawal.",
          "_minGasLimit": "Minimum gas limit to use for the transaction."
        }
      },
      "withdrawNativeTokenTo(address,uint32,bytes)": {
        "params": {
          "_extraData": "Extra data attached to the withdrawal.",
          "_minGasLimit": "Minimum gas limit to use for the transaction.",
          "_to": "Recipient account on L1."
        }
      },
      "withdrawTo(address,address,uint256,uint32,bytes)": {
        "params": {
          "_amount": "Amount of the L2 token to withdraw.",
          "_extraData": "Extra data attached to the withdrawal.",
          "_l2Token": "Address of the L2 token to withdraw.",
          "_minGasLimit": "Minimum gas limit to use for the transaction.",
          "_to": "Recipient account on L1."
        }
      }
    },
    "events": {
      "DepositFinalized(address,address,address,address,uint256,bytes)": {
        "params": {
          "amount": "Amount of the ERC20 deposited.",
          "extraData": "Extra data attached to the deposit.",
          "from": "Address of the depositor.",
          "l1Token": "Address of the token on L1.",
          "l2Token": "Address of the corresponding token on L2.",
          "to": "Address of the recipient on L2."
        }
      },
      "WithdrawalInitiated(address,address,address,address,uint256,bytes)": {
        "params": {
          "amount": "Amount of the ERC20 withdrawn.",
          "extraData": "Extra data attached to the withdrawal.",
          "from": "Address of the withdrawer.",
          "l1Token": "Address of the token on L1.",
          "l2Token": "Address of the corresponding token on L2.",
          "to": "Address of the recipient on L1."
        }
      }
    },
    "title": "L2StandardBridge"
  },
  "ast": {
    "absolutePath": "src/L2/L2StandardBridge.sol",
    "id": 61211,
    "exportedSymbols": {
      "Constants": [
        68072
      ],
      "CrossDomainMessenger": [
        71321
      ],
      "ISemver": [
        71843
      ],
      "L2StandardBridge": [
        61210
      ],
      "OptimismMintableERC20": [
        72072
      ],
      "Predeploys": [
        68895
      ],
      "StandardBridge": [
        74144
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:11317:107",
    "nodes": [
      {
        "id": 60749,
        "nodeType": "PragmaDirective",
        "src": "32:23:107",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 60751,
        "nodeType": "ImportDirective",
        "src": "57:58:107",
        "nodes": [],
        "absolutePath": "src/libraries/Predeploys.sol",
        "file": "src/libraries/Predeploys.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61211,
        "sourceUnit": 68896,
        "symbolAliases": [
          {
            "foreign": {
              "id": 60750,
              "name": "Predeploys",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 68895,
              "src": "66:10:107",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 60753,
        "nodeType": "ImportDirective",
        "src": "116:66:107",
        "nodes": [],
        "absolutePath": "src/universal/StandardBridge.sol",
        "file": "src/universal/StandardBridge.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61211,
        "sourceUnit": 74145,
        "symbolAliases": [
          {
            "foreign": {
              "id": 60752,
              "name": "StandardBridge",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 74144,
              "src": "125:14:107",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 60755,
        "nodeType": "ImportDirective",
        "src": "183:52:107",
        "nodes": [],
        "absolutePath": "src/universal/ISemver.sol",
        "file": "src/universal/ISemver.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61211,
        "sourceUnit": 71844,
        "symbolAliases": [
          {
            "foreign": {
              "id": 60754,
              "name": "ISemver",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 71843,
              "src": "192:7:107",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 60757,
        "nodeType": "ImportDirective",
        "src": "236:80:107",
        "nodes": [],
        "absolutePath": "src/universal/OptimismMintableERC20.sol",
        "file": "src/universal/OptimismMintableERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61211,
        "sourceUnit": 72073,
        "symbolAliases": [
          {
            "foreign": {
              "id": 60756,
              "name": "OptimismMintableERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 72072,
              "src": "245:21:107",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 60759,
        "nodeType": "ImportDirective",
        "src": "317:78:107",
        "nodes": [],
        "absolutePath": "src/universal/CrossDomainMessenger.sol",
        "file": "src/universal/CrossDomainMessenger.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61211,
        "sourceUnit": 71322,
        "symbolAliases": [
          {
            "foreign": {
              "id": 60758,
              "name": "CrossDomainMessenger",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 71321,
              "src": "326:20:107",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 60761,
        "nodeType": "ImportDirective",
        "src": "396:56:107",
        "nodes": [],
        "absolutePath": "src/libraries/Constants.sol",
        "file": "src/libraries/Constants.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 61211,
        "sourceUnit": 68073,
        "symbolAliases": [
          {
            "foreign": {
              "id": 60760,
              "name": "Constants",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 68072,
              "src": "405:9:107",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 61210,
        "nodeType": "ContractDefinition",
        "src": "1141:10207:107",
        "nodes": [
          {
            "id": 60781,
            "nodeType": "EventDefinition",
            "src": "1646:197:107",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 60767,
              "nodeType": "StructuredDocumentation",
              "src": "1200:441:107",
              "text": "@custom:legacy\n @notice Emitted whenever a withdrawal from L2 to L1 is initiated.\n @param l1Token   Address of the token on L1.\n @param l2Token   Address of the corresponding token on L2.\n @param from      Address of the withdrawer.\n @param to        Address of the recipient on L1.\n @param amount    Amount of the ERC20 withdrawn.\n @param extraData Extra data attached to the withdrawal."
            },
            "eventSelector": "73d170910aba9e6d50b102db522b1dbcd796216f5128b445aa2135272886497e",
            "name": "WithdrawalInitiated",
            "nameLocation": "1652:19:107",
            "parameters": {
              "id": 60780,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60769,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "l1Token",
                  "nameLocation": "1697:7:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 60781,
                  "src": "1681:23:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 60768,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1681:7:107",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60771,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "l2Token",
                  "nameLocation": "1730:7:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 60781,
                  "src": "1714:23:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 60770,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1714:7:107",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60773,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "1763:4:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 60781,
                  "src": "1747:20:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 60772,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1747:7:107",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60775,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "1785:2:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 60781,
                  "src": "1777:10:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 60774,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1777:7:107",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60777,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "1805:6:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 60781,
                  "src": "1797:14:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60776,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1797:7:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60779,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "extraData",
                  "nameLocation": "1827:9:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 60781,
                  "src": "1821:15:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 60778,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1821:5:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1671:171:107"
            }
          },
          {
            "id": 60796,
            "nodeType": "EventDefinition",
            "src": "2281:194:107",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 60782,
              "nodeType": "StructuredDocumentation",
              "src": "1849:427:107",
              "text": "@custom:legacy\n @notice Emitted whenever an ERC20 deposit is finalized.\n @param l1Token   Address of the token on L1.\n @param l2Token   Address of the corresponding token on L2.\n @param from      Address of the depositor.\n @param to        Address of the recipient on L2.\n @param amount    Amount of the ERC20 deposited.\n @param extraData Extra data attached to the deposit."
            },
            "eventSelector": "b0444523268717a02698be47d0803aa7468c00acbed2f8bd93a0459cde61dd89",
            "name": "DepositFinalized",
            "nameLocation": "2287:16:107",
            "parameters": {
              "id": 60795,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60784,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "l1Token",
                  "nameLocation": "2329:7:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 60796,
                  "src": "2313:23:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 60783,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2313:7:107",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60786,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "l2Token",
                  "nameLocation": "2362:7:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 60796,
                  "src": "2346:23:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 60785,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2346:7:107",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60788,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "2395:4:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 60796,
                  "src": "2379:20:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 60787,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2379:7:107",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60790,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2417:2:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 60796,
                  "src": "2409:10:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 60789,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2409:7:107",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60792,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2437:6:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 60796,
                  "src": "2429:14:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60791,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2429:7:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60794,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "extraData",
                  "nameLocation": "2459:9:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 60796,
                  "src": "2453:15:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 60793,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2453:5:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2303:171:107"
            }
          },
          {
            "id": 60800,
            "nodeType": "VariableDeclaration",
            "src": "2510:40:107",
            "nodes": [],
            "baseFunctions": [
              71842
            ],
            "constant": true,
            "documentation": {
              "id": 60797,
              "nodeType": "StructuredDocumentation",
              "src": "2481:24:107",
              "text": "@custom:semver 1.4.0"
            },
            "functionSelector": "54fd4d50",
            "mutability": "constant",
            "name": "version",
            "nameLocation": "2533:7:107",
            "scope": 61210,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 60798,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "2510:6:107",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "312e342e30",
              "id": 60799,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "2543:7:107",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_649061b8d3f3b9c5692fcbef47cba88c670a745e17e5297d42ddc0aa82ab1129",
                "typeString": "literal_string \"1.4.0\""
              },
              "value": "1.4.0"
            },
            "visibility": "public"
          },
          {
            "id": 60814,
            "nodeType": "FunctionDefinition",
            "src": "2676:99:107",
            "nodes": [],
            "body": {
              "id": 60813,
              "nodeType": "Block",
              "src": "2746:29:107",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 60810,
                      "name": "initialize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60830,
                      "src": "2756:10:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 60811,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2756:12:107",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60812,
                  "nodeType": "ExpressionStatement",
                  "src": "2756:12:107"
                }
              ]
            },
            "documentation": {
              "id": 60801,
              "nodeType": "StructuredDocumentation",
              "src": "2557:114:107",
              "text": "@notice Constructs the L2StandardBridge contract.\n @param _otherBridge Address of the L1StandardBridge."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 60807,
                    "name": "_otherBridge",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 60804,
                    "src": "2732:12:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StandardBridge_$74144",
                      "typeString": "contract StandardBridge"
                    }
                  }
                ],
                "id": 60808,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 60806,
                  "name": "StandardBridge",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 74144,
                  "src": "2717:14:107"
                },
                "nodeType": "ModifierInvocation",
                "src": "2717:28:107"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 60805,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60804,
                  "mutability": "mutable",
                  "name": "_otherBridge",
                  "nameLocation": "2703:12:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 60814,
                  "src": "2688:27:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_StandardBridge_$74144",
                    "typeString": "contract StandardBridge"
                  },
                  "typeName": {
                    "id": 60803,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 60802,
                      "name": "StandardBridge",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 74144,
                      "src": "2688:14:107"
                    },
                    "referencedDeclaration": 74144,
                    "src": "2688:14:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StandardBridge_$74144",
                      "typeString": "contract StandardBridge"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2687:29:107"
            },
            "returnParameters": {
              "id": 60809,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2746:0:107"
            },
            "scope": 61210,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 60830,
            "nodeType": "FunctionDefinition",
            "src": "2809:180:107",
            "nodes": [],
            "body": {
              "id": 60829,
              "nodeType": "Block",
              "src": "2875:114:107",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 60824,
                              "name": "Predeploys",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 68895,
                              "src": "2942:10:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Predeploys_$68895_$",
                                "typeString": "type(library Predeploys)"
                              }
                            },
                            "id": 60825,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "L2_CROSS_DOMAIN_MESSENGER",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 68819,
                            "src": "2942:36:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 60823,
                          "name": "CrossDomainMessenger",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 71321,
                          "src": "2921:20:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_CrossDomainMessenger_$71321_$",
                            "typeString": "type(contract CrossDomainMessenger)"
                          }
                        },
                        "id": 60826,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "2921:58:107",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CrossDomainMessenger_$71321",
                          "typeString": "contract CrossDomainMessenger"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_CrossDomainMessenger_$71321",
                          "typeString": "contract CrossDomainMessenger"
                        }
                      ],
                      "id": 60822,
                      "name": "__StandardBridge_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 73574,
                      "src": "2885:21:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_CrossDomainMessenger_$71321_$returns$__$",
                        "typeString": "function (contract CrossDomainMessenger)"
                      }
                    },
                    "id": 60827,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [
                      "_messenger"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "2885:97:107",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60828,
                  "nodeType": "ExpressionStatement",
                  "src": "2885:97:107"
                }
              ]
            },
            "documentation": {
              "id": 60815,
              "nodeType": "StructuredDocumentation",
              "src": "2781:23:107",
              "text": "@notice Initializer"
            },
            "functionSelector": "8129fc1c",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 60818,
                      "name": "Constants",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 68072,
                      "src": "2852:9:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Constants_$68072_$",
                        "typeString": "type(library Constants)"
                      }
                    },
                    "id": 60819,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "INITIALIZER",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 68071,
                    "src": "2852:21:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 60820,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 60817,
                  "name": "reinitializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 30260,
                  "src": "2838:13:107"
                },
                "nodeType": "ModifierInvocation",
                "src": "2838:36:107"
              }
            ],
            "name": "initialize",
            "nameLocation": "2818:10:107",
            "parameters": {
              "id": 60816,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2828:2:107"
            },
            "returnParameters": {
              "id": 60821,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2875:0:107"
            },
            "scope": 61210,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 60854,
            "nodeType": "FunctionDefinition",
            "src": "3072:273:107",
            "nodes": [],
            "body": {
              "id": 60853,
              "nodeType": "Block",
              "src": "3116:229:107",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 60838,
                          "name": "Predeploys",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68895,
                          "src": "3159:10:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Predeploys_$68895_$",
                            "typeString": "type(library Predeploys)"
                          }
                        },
                        "id": 60839,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "LEGACY_ERC20_NATIVE_TOKEN",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 68858,
                        "src": "3159:36:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 60840,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3209:3:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 60841,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3209:10:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 60842,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3233:3:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 60843,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3233:10:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 60844,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3257:3:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 60845,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "3257:9:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 60846,
                        "name": "RECEIVE_DEFAULT_GAS_LIMIT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73430,
                        "src": "3280:25:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "",
                            "id": 60849,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "3325:2:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "id": 60848,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "3319:5:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 60847,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "3319:5:107",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 60850,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3319:9:107",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 60837,
                      "name": "_initiateWithdrawal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61061,
                      "src": "3126:19:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint32,bytes memory)"
                      }
                    },
                    "id": 60851,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3126:212:107",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60852,
                  "nodeType": "ExpressionStatement",
                  "src": "3126:212:107"
                }
              ]
            },
            "baseFunctions": [
              73578
            ],
            "documentation": {
              "id": 60831,
              "nodeType": "StructuredDocumentation",
              "src": "2995:72:107",
              "text": "@notice Allows EOAs to bridge ETH by sending directly to the bridge."
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [
              {
                "id": 60835,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 60834,
                  "name": "onlyEOA",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 73523,
                  "src": "3108:7:107"
                },
                "nodeType": "ModifierInvocation",
                "src": "3108:7:107"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "overrides": {
              "id": 60833,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3099:8:107"
            },
            "parameters": {
              "id": 60832,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3079:2:107"
            },
            "returnParameters": {
              "id": 60836,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3116:0:107"
            },
            "scope": 61210,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 60878,
            "nodeType": "FunctionDefinition",
            "src": "3641:259:107",
            "nodes": [],
            "body": {
              "id": 60877,
              "nodeType": "Block",
              "src": "3743:157:107",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 60865,
                          "name": "Predeploys",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68895,
                          "src": "3786:10:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Predeploys_$68895_$",
                            "typeString": "type(library Predeploys)"
                          }
                        },
                        "id": 60866,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "LEGACY_ERC20_NATIVE_TOKEN",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 68858,
                        "src": "3786:36:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 60867,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3824:3:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 60868,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3824:10:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 60869,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3836:3:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 60870,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "3836:10:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 60871,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "3848:3:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 60872,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "3848:9:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 60873,
                        "name": "_minGasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60857,
                        "src": "3859:12:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 60874,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60859,
                        "src": "3873:10:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 60864,
                      "name": "_initiateWithdrawal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61061,
                      "src": "3753:19:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint32,bytes memory)"
                      }
                    },
                    "id": 60875,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3753:140:107",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60876,
                  "nodeType": "ExpressionStatement",
                  "src": "3753:140:107"
                }
              ]
            },
            "documentation": {
              "id": 60855,
              "nodeType": "StructuredDocumentation",
              "src": "3351:285:107",
              "text": "@custom:legacy\n @notice Initiates a withdrawal native token from L2 to L1.\n         This function only works with native token\n @param _minGasLimit Minimum gas limit to use for the transaction.\n @param _extraData   Extra data attached to the withdrawal."
            },
            "functionSelector": "b7420d31",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 60862,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 60861,
                  "name": "onlyEOA",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 73523,
                  "src": "3735:7:107"
                },
                "nodeType": "ModifierInvocation",
                "src": "3735:7:107"
              }
            ],
            "name": "withdrawNativeToken",
            "nameLocation": "3650:19:107",
            "parameters": {
              "id": 60860,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60857,
                  "mutability": "mutable",
                  "name": "_minGasLimit",
                  "nameLocation": "3677:12:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 60878,
                  "src": "3670:19:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 60856,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3670:6:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60859,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "3706:10:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 60878,
                  "src": "3691:25:107",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 60858,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3691:5:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3669:48:107"
            },
            "returnParameters": {
              "id": 60863,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3743:0:107"
            },
            "scope": 61210,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 60901,
            "nodeType": "FunctionDefinition",
            "src": "4193:237:107",
            "nodes": [],
            "body": {
              "id": 60900,
              "nodeType": "Block",
              "src": "4302:128:107",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 60889,
                          "name": "Predeploys",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68895,
                          "src": "4332:10:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Predeploys_$68895_$",
                            "typeString": "type(library Predeploys)"
                          }
                        },
                        "id": 60890,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "LEGACY_ERC20_NATIVE_TOKEN",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 68858,
                        "src": "4332:36:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 60891,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4370:3:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 60892,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4370:10:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 60893,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60881,
                        "src": "4382:3:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 60894,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4387:3:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 60895,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "4387:9:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 60896,
                        "name": "_minGasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60883,
                        "src": "4398:12:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 60897,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60885,
                        "src": "4412:10:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 60888,
                      "name": "_initiateWithdrawal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61061,
                      "src": "4312:19:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint32,bytes memory)"
                      }
                    },
                    "id": 60898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4312:111:107",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60899,
                  "nodeType": "ExpressionStatement",
                  "src": "4312:111:107"
                }
              ]
            },
            "documentation": {
              "id": 60879,
              "nodeType": "StructuredDocumentation",
              "src": "3906:282:107",
              "text": "@notice Initiates a withdrawal native token from L2 to L1 to a target account on L1.\n @param _to          Recipient account on L1.\n @param _minGasLimit Minimum gas limit to use for the transaction.\n @param _extraData   Extra data attached to the withdrawal."
            },
            "functionSelector": "239955f7",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawNativeTokenTo",
            "nameLocation": "4202:21:107",
            "parameters": {
              "id": 60886,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60881,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "4232:3:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 60901,
                  "src": "4224:11:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 60880,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4224:7:107",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60883,
                  "mutability": "mutable",
                  "name": "_minGasLimit",
                  "nameLocation": "4244:12:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 60901,
                  "src": "4237:19:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 60882,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4237:6:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60885,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "4273:10:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 60901,
                  "src": "4258:25:107",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 60884,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4258:5:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4223:61:107"
            },
            "returnParameters": {
              "id": 60887,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4302:0:107"
            },
            "scope": 61210,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 60927,
            "nodeType": "FunctionDefinition",
            "src": "4760:313:107",
            "nodes": [],
            "body": {
              "id": 60926,
              "nodeType": "Block",
              "src": "4968:105:107",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 60916,
                        "name": "_l2Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60904,
                        "src": "4998:8:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 60917,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5008:3:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 60918,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5008:10:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 60919,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "5020:3:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 60920,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "5020:10:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 60921,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60906,
                        "src": "5032:7:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 60922,
                        "name": "_minGasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60908,
                        "src": "5041:12:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 60923,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60910,
                        "src": "5055:10:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 60915,
                      "name": "_initiateWithdrawal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61061,
                      "src": "4978:19:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint32,bytes memory)"
                      }
                    },
                    "id": 60924,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4978:88:107",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60925,
                  "nodeType": "ExpressionStatement",
                  "src": "4978:88:107"
                }
              ]
            },
            "documentation": {
              "id": 60902,
              "nodeType": "StructuredDocumentation",
              "src": "4436:319:107",
              "text": "@notice Initiates a withdrawal from L2 to L1.\n @param _l2Token     Address of the L2 token to withdraw.\n @param _amount      Amount of the L2 token to withdraw.\n @param _minGasLimit Minimum gas limit to use for the transaction.\n @param _extraData   Extra data attached to the withdrawal."
            },
            "functionSelector": "32b7006d",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 60913,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 60912,
                  "name": "onlyEOA",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 73523,
                  "src": "4956:7:107"
                },
                "nodeType": "ModifierInvocation",
                "src": "4956:7:107"
              }
            ],
            "name": "withdraw",
            "nameLocation": "4769:8:107",
            "parameters": {
              "id": 60911,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60904,
                  "mutability": "mutable",
                  "name": "_l2Token",
                  "nameLocation": "4795:8:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 60927,
                  "src": "4787:16:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 60903,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4787:7:107",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60906,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "4821:7:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 60927,
                  "src": "4813:15:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60905,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4813:7:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60908,
                  "mutability": "mutable",
                  "name": "_minGasLimit",
                  "nameLocation": "4845:12:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 60927,
                  "src": "4838:19:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 60907,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4838:6:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60910,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "4882:10:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 60927,
                  "src": "4867:25:107",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 60909,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "4867:5:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4777:121:107"
            },
            "returnParameters": {
              "id": 60914,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4968:0:107"
            },
            "scope": 61210,
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 60952,
            "nodeType": "FunctionDefinition",
            "src": "6060:313:107",
            "nodes": [],
            "body": {
              "id": 60951,
              "nodeType": "Block",
              "src": "6275:98:107",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 60942,
                        "name": "_l2Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60930,
                        "src": "6305:8:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 60943,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6315:3:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 60944,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6315:10:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 60945,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60932,
                        "src": "6327:3:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 60946,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60934,
                        "src": "6332:7:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 60947,
                        "name": "_minGasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60936,
                        "src": "6341:12:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 60948,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60938,
                        "src": "6355:10:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 60941,
                      "name": "_initiateWithdrawal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61061,
                      "src": "6285:19:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,uint256,uint32,bytes memory)"
                      }
                    },
                    "id": 60949,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6285:81:107",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 60950,
                  "nodeType": "ExpressionStatement",
                  "src": "6285:81:107"
                }
              ]
            },
            "documentation": {
              "id": 60928,
              "nodeType": "StructuredDocumentation",
              "src": "5079:976:107",
              "text": "@custom:legacy\n @notice Initiates a withdrawal from L2 to L1 to a target account on L1.\n         Note that if ETH is sent to a contract on L1 and the call fails, then that ETH will\n         be locked in the L1StandardBridge. ETH may be recoverable if the call can be\n         successfully replayed by increasing the amount of gas supplied to the call. If the\n         call will fail for any amount of gas, then the ETH will be locked permanently.\n         This function only works with OptimismMintableERC20 tokens or ether. Use the\n         `bridgeERC20To` function to bridge native L2 tokens to L1.\n @param _l2Token     Address of the L2 token to withdraw.\n @param _to          Recipient account on L1.\n @param _amount      Amount of the L2 token to withdraw.\n @param _minGasLimit Minimum gas limit to use for the transaction.\n @param _extraData   Extra data attached to the withdrawal."
            },
            "functionSelector": "a3a79548",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawTo",
            "nameLocation": "6069:10:107",
            "parameters": {
              "id": 60939,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60930,
                  "mutability": "mutable",
                  "name": "_l2Token",
                  "nameLocation": "6097:8:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 60952,
                  "src": "6089:16:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 60929,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6089:7:107",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60932,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "6123:3:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 60952,
                  "src": "6115:11:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 60931,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6115:7:107",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60934,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "6144:7:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 60952,
                  "src": "6136:15:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60933,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6136:7:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60936,
                  "mutability": "mutable",
                  "name": "_minGasLimit",
                  "nameLocation": "6168:12:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 60952,
                  "src": "6161:19:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 60935,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6161:6:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60938,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "6205:10:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 60952,
                  "src": "6190:25:107",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 60937,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6190:5:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6079:142:107"
            },
            "returnParameters": {
              "id": 60940,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6275:0:107"
            },
            "scope": 61210,
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 60999,
            "nodeType": "FunctionDefinition",
            "src": "6950:514:107",
            "nodes": [],
            "body": {
              "id": 60998,
              "nodeType": "Block",
              "src": "7190:274:107",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 60978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 60973,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 60968,
                        "name": "_l1Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60955,
                        "src": "7204:8:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 60971,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7224:1:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 60970,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7216:7:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 60969,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "7216:7:107",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 60972,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7216:10:107",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "7204:22:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 60977,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 60974,
                        "name": "_l2Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 60957,
                        "src": "7230:8:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "expression": {
                          "id": 60975,
                          "name": "Predeploys",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68895,
                          "src": "7242:10:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Predeploys_$68895_$",
                            "typeString": "type(library Predeploys)"
                          }
                        },
                        "id": 60976,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "LEGACY_ERC20_NATIVE_TOKEN",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 68858,
                        "src": "7242:36:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "7230:48:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "7204:74:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 60996,
                    "nodeType": "Block",
                    "src": "7361:97:107",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 60988,
                              "name": "_l2Token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60957,
                              "src": "7395:8:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 60989,
                              "name": "_l1Token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60955,
                              "src": "7405:8:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 60990,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60959,
                              "src": "7415:5:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 60991,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60961,
                              "src": "7422:3:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 60992,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60963,
                              "src": "7427:7:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 60993,
                              "name": "_extraData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60965,
                              "src": "7436:10:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            ],
                            "id": 60987,
                            "name": "finalizeBridgeERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73836,
                            "src": "7375:19:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$__$",
                              "typeString": "function (address,address,address,address,uint256,bytes calldata)"
                            }
                          },
                          "id": 60994,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7375:72:107",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 60995,
                        "nodeType": "ExpressionStatement",
                        "src": "7375:72:107"
                      }
                    ]
                  },
                  "id": 60997,
                  "nodeType": "IfStatement",
                  "src": "7200:258:107",
                  "trueBody": {
                    "id": 60986,
                    "nodeType": "Block",
                    "src": "7280:75:107",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 60980,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60959,
                              "src": "7312:5:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 60981,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60961,
                              "src": "7319:3:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 60982,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60963,
                              "src": "7324:7:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 60983,
                              "name": "_extraData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60965,
                              "src": "7333:10:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bytes_calldata_ptr",
                                "typeString": "bytes calldata"
                              }
                            ],
                            "id": 60979,
                            "name": "finalizeBridgeETH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73764,
                            "src": "7294:17:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$__$",
                              "typeString": "function (address,address,uint256,bytes calldata)"
                            }
                          },
                          "id": 60984,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "7294:50:107",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 60985,
                        "nodeType": "ExpressionStatement",
                        "src": "7294:50:107"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 60953,
              "nodeType": "StructuredDocumentation",
              "src": "6379:566:107",
              "text": "@custom:legacy\n @notice Finalizes a deposit from L1 to L2. To finalize a deposit of ether, use address(0)\n         and the l1Token and the Legacy ERC20 ether predeploy address as the l2Token.\n @param _l1Token   Address of the L1 token to deposit.\n @param _l2Token   Address of the corresponding L2 token.\n @param _from      Address of the depositor.\n @param _to        Address of the recipient.\n @param _amount    Amount of the tokens being deposited.\n @param _extraData Extra data attached to the deposit."
            },
            "functionSelector": "662a633a",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "finalizeDeposit",
            "nameLocation": "6959:15:107",
            "parameters": {
              "id": 60966,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 60955,
                  "mutability": "mutable",
                  "name": "_l1Token",
                  "nameLocation": "6992:8:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 60999,
                  "src": "6984:16:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 60954,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6984:7:107",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60957,
                  "mutability": "mutable",
                  "name": "_l2Token",
                  "nameLocation": "7018:8:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 60999,
                  "src": "7010:16:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 60956,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7010:7:107",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60959,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "7044:5:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 60999,
                  "src": "7036:13:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 60958,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7036:7:107",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60961,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "7067:3:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 60999,
                  "src": "7059:11:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 60960,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7059:7:107",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60963,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "7088:7:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 60999,
                  "src": "7080:15:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 60962,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7080:7:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 60965,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "7120:10:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 60999,
                  "src": "7105:25:107",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 60964,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7105:5:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6974:162:107"
            },
            "returnParameters": {
              "id": 60967,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7190:0:107"
            },
            "scope": 61210,
            "stateMutability": "payable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 61011,
            "nodeType": "FunctionDefinition",
            "src": "7636:102:107",
            "nodes": [],
            "body": {
              "id": 61010,
              "nodeType": "Block",
              "src": "7693:45:107",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 61007,
                        "name": "OTHER_BRIDGE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 73434,
                        "src": "7718:12:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StandardBridge_$74144",
                          "typeString": "contract StandardBridge"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_StandardBridge_$74144",
                          "typeString": "contract StandardBridge"
                        }
                      ],
                      "id": 61006,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "7710:7:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 61005,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "7710:7:107",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 61008,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7710:21:107",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 61004,
                  "id": 61009,
                  "nodeType": "Return",
                  "src": "7703:28:107"
                }
              ]
            },
            "documentation": {
              "id": 61000,
              "nodeType": "StructuredDocumentation",
              "src": "7470:161:107",
              "text": "@custom:legacy\n @notice Retrieves the access of the corresponding L1 bridge contract.\n @return Address of the corresponding L1 bridge contract."
            },
            "functionSelector": "36c717c1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "l1TokenBridge",
            "nameLocation": "7645:13:107",
            "parameters": {
              "id": 61001,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7658:2:107"
            },
            "returnParameters": {
              "id": 61004,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61003,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 61011,
                  "src": "7684:7:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 61002,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7684:7:107",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7683:9:107"
            },
            "scope": 61210,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 61061,
            "nodeType": "FunctionDefinition",
            "src": "8245:563:107",
            "nodes": [],
            "body": {
              "id": 61060,
              "nodeType": "Block",
              "src": "8458:350:107",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 61030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 61027,
                      "name": "_l2Token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 61014,
                      "src": "8472:8:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "expression": {
                        "id": 61028,
                        "name": "Predeploys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68895,
                        "src": "8484:10:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Predeploys_$68895_$",
                          "typeString": "type(library Predeploys)"
                        }
                      },
                      "id": 61029,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "LEGACY_ERC20_NATIVE_TOKEN",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 68858,
                      "src": "8484:36:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "8472:48:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 61058,
                    "nodeType": "Block",
                    "src": "8618:184:107",
                    "statements": [
                      {
                        "assignments": [
                          61041
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 61041,
                            "mutability": "mutable",
                            "name": "l1Token",
                            "nameLocation": "8640:7:107",
                            "nodeType": "VariableDeclaration",
                            "scope": 61058,
                            "src": "8632:15:107",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "typeName": {
                              "id": 61040,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "8632:7:107",
                              "stateMutability": "nonpayable",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 61047,
                        "initialValue": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 61043,
                                  "name": "_l2Token",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 61014,
                                  "src": "8672:8:107",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 61042,
                                "name": "OptimismMintableERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 72072,
                                "src": "8650:21:107",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_OptimismMintableERC20_$72072_$",
                                  "typeString": "type(contract OptimismMintableERC20)"
                                }
                              },
                              "id": 61044,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "8650:31:107",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OptimismMintableERC20_$72072",
                                "typeString": "contract OptimismMintableERC20"
                              }
                            },
                            "id": 61045,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "l1Token",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 72034,
                            "src": "8650:39:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                              "typeString": "function () view external returns (address)"
                            }
                          },
                          "id": 61046,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8650:41:107",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8632:59:107"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 61049,
                              "name": "_l2Token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61014,
                              "src": "8726:8:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 61050,
                              "name": "l1Token",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61041,
                              "src": "8736:7:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 61051,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61016,
                              "src": "8745:5:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 61052,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61018,
                              "src": "8752:3:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 61053,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61020,
                              "src": "8757:7:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 61054,
                              "name": "_minGasLimit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61022,
                              "src": "8766:12:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            {
                              "id": 61055,
                              "name": "_extraData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61024,
                              "src": "8780:10:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 61048,
                            "name": "_initiateBridgeERC20",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73986,
                            "src": "8705:20:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint32_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (address,address,address,address,uint256,uint32,bytes memory)"
                            }
                          },
                          "id": 61056,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8705:86:107",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 61057,
                        "nodeType": "ExpressionStatement",
                        "src": "8705:86:107"
                      }
                    ]
                  },
                  "id": 61059,
                  "nodeType": "IfStatement",
                  "src": "8468:334:107",
                  "trueBody": {
                    "id": 61039,
                    "nodeType": "Block",
                    "src": "8522:90:107",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 61032,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61016,
                              "src": "8555:5:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 61033,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61018,
                              "src": "8562:3:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 61034,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61020,
                              "src": "8567:7:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 61035,
                              "name": "_minGasLimit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61022,
                              "src": "8576:12:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            {
                              "id": 61036,
                              "name": "_extraData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 61024,
                              "src": "8590:10:107",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 61031,
                            "name": "_initiateBridgeETH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 73888,
                            "src": "8536:18:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint32_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (address,address,uint256,uint32,bytes memory)"
                            }
                          },
                          "id": 61037,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "8536:65:107",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 61038,
                        "nodeType": "ExpressionStatement",
                        "src": "8536:65:107"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 61012,
              "nodeType": "StructuredDocumentation",
              "src": "7744:496:107",
              "text": "@custom:legacy\n @notice Internal function to initiate a withdrawal from L2 to L1 to a target account on L1.\n @param _l2Token     Address of the L2 token to withdraw.\n @param _from        Address of the withdrawer.\n @param _to          Recipient account on L1.\n @param _amount      Amount of the L2 token to withdraw.\n @param _minGasLimit Minimum gas limit to use for the transaction.\n @param _extraData   Extra data attached to the withdrawal."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_initiateWithdrawal",
            "nameLocation": "8254:19:107",
            "parameters": {
              "id": 61025,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61014,
                  "mutability": "mutable",
                  "name": "_l2Token",
                  "nameLocation": "8291:8:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 61061,
                  "src": "8283:16:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 61013,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8283:7:107",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61016,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "8317:5:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 61061,
                  "src": "8309:13:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 61015,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8309:7:107",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61018,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "8340:3:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 61061,
                  "src": "8332:11:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 61017,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8332:7:107",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61020,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "8361:7:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 61061,
                  "src": "8353:15:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61019,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8353:7:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61022,
                  "mutability": "mutable",
                  "name": "_minGasLimit",
                  "nameLocation": "8385:12:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 61061,
                  "src": "8378:19:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 61021,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8378:6:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61024,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "8420:10:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 61061,
                  "src": "8407:23:107",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 61023,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8407:5:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8273:163:107"
            },
            "returnParameters": {
              "id": 61026,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8458:0:107"
            },
            "scope": 61210,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 61097,
            "nodeType": "FunctionDefinition",
            "src": "9036:375:107",
            "nodes": [],
            "body": {
              "id": 61096,
              "nodeType": "Block",
              "src": "9215:196:107",
              "nodes": [],
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 61077,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9258:1:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 61076,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9250:7:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 61075,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9250:7:107",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 61078,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9250:10:107",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 61079,
                          "name": "Predeploys",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68895,
                          "src": "9262:10:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Predeploys_$68895_$",
                            "typeString": "type(library Predeploys)"
                          }
                        },
                        "id": 61080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "LEGACY_ERC20_NATIVE_TOKEN",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 68858,
                        "src": "9262:36:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 61081,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61064,
                        "src": "9300:5:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 61082,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61066,
                        "src": "9307:3:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 61083,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61068,
                        "src": "9312:7:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 61084,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61070,
                        "src": "9321:10:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 61074,
                      "name": "WithdrawalInitiated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60781,
                      "src": "9230:19:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 61085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9230:102:107",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61086,
                  "nodeType": "EmitStatement",
                  "src": "9225:107:107"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 61090,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61064,
                        "src": "9372:5:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 61091,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61066,
                        "src": "9379:3:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 61092,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61068,
                        "src": "9384:7:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 61093,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61070,
                        "src": "9393:10:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 61087,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "9342:5:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_L2StandardBridge_$61210_$",
                          "typeString": "type(contract super L2StandardBridge)"
                        }
                      },
                      "id": 61089,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_emitETHBridgeInitiated",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74071,
                      "src": "9342:29:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 61094,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9342:62:107",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61095,
                  "nodeType": "ExpressionStatement",
                  "src": "9342:62:107"
                }
              ]
            },
            "baseFunctions": [
              74071
            ],
            "documentation": {
              "id": 61062,
              "nodeType": "StructuredDocumentation",
              "src": "8814:217:107",
              "text": "@notice Emits the legacy WithdrawalInitiated event followed by the ETHBridgeInitiated event.\n         This is necessary for backwards compatibility with the legacy bridge.\n @inheritdoc StandardBridge"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_emitETHBridgeInitiated",
            "nameLocation": "9045:23:107",
            "overrides": {
              "id": 61072,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9202:8:107"
            },
            "parameters": {
              "id": 61071,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61064,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "9086:5:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 61097,
                  "src": "9078:13:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 61063,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9078:7:107",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61066,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "9109:3:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 61097,
                  "src": "9101:11:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 61065,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9101:7:107",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61068,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "9130:7:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 61097,
                  "src": "9122:15:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61067,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9122:7:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61070,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "9160:10:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 61097,
                  "src": "9147:23:107",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 61069,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9147:5:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9068:108:107"
            },
            "returnParameters": {
              "id": 61073,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9215:0:107"
            },
            "scope": 61210,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 61133,
            "nodeType": "FunctionDefinition",
            "src": "9636:372:107",
            "nodes": [],
            "body": {
              "id": 61132,
              "nodeType": "Block",
              "src": "9815:193:107",
              "nodes": [],
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 61113,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9855:1:107",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 61112,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9847:7:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 61111,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "9847:7:107",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 61114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9847:10:107",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 61115,
                          "name": "Predeploys",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 68895,
                          "src": "9859:10:107",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Predeploys_$68895_$",
                            "typeString": "type(library Predeploys)"
                          }
                        },
                        "id": 61116,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "LEGACY_ERC20_NATIVE_TOKEN",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 68858,
                        "src": "9859:36:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 61117,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61100,
                        "src": "9897:5:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 61118,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61102,
                        "src": "9904:3:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 61119,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61104,
                        "src": "9909:7:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 61120,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61106,
                        "src": "9918:10:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 61110,
                      "name": "DepositFinalized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60796,
                      "src": "9830:16:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 61121,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9830:99:107",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61122,
                  "nodeType": "EmitStatement",
                  "src": "9825:104:107"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 61126,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61100,
                        "src": "9969:5:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 61127,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61102,
                        "src": "9976:3:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 61128,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61104,
                        "src": "9981:7:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 61129,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61106,
                        "src": "9990:10:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 61123,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "9939:5:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_L2StandardBridge_$61210_$",
                          "typeString": "type(contract super L2StandardBridge)"
                        }
                      },
                      "id": 61125,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_emitETHBridgeFinalized",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74091,
                      "src": "9939:29:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 61130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9939:62:107",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61131,
                  "nodeType": "ExpressionStatement",
                  "src": "9939:62:107"
                }
              ]
            },
            "baseFunctions": [
              74091
            ],
            "documentation": {
              "id": 61098,
              "nodeType": "StructuredDocumentation",
              "src": "9417:214:107",
              "text": "@notice Emits the legacy DepositFinalized event followed by the ETHBridgeFinalized event.\n         This is necessary for backwards compatibility with the legacy bridge.\n @inheritdoc StandardBridge"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_emitETHBridgeFinalized",
            "nameLocation": "9645:23:107",
            "overrides": {
              "id": 61108,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "9802:8:107"
            },
            "parameters": {
              "id": 61107,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61100,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "9686:5:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 61133,
                  "src": "9678:13:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 61099,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9678:7:107",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61102,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "9709:3:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 61133,
                  "src": "9701:11:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 61101,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9701:7:107",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61104,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "9730:7:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 61133,
                  "src": "9722:15:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61103,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9722:7:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61106,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "9760:10:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 61133,
                  "src": "9747:23:107",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 61105,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9747:5:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9668:108:107"
            },
            "returnParameters": {
              "id": 61109,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9815:0:107"
            },
            "scope": 61210,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 61171,
            "nodeType": "FunctionDefinition",
            "src": "10238:442:107",
            "nodes": [],
            "body": {
              "id": 61170,
              "nodeType": "Block",
              "src": "10478:202:107",
              "nodes": [],
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 61151,
                        "name": "_remoteToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61138,
                        "src": "10513:12:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 61152,
                        "name": "_localToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61136,
                        "src": "10527:11:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 61153,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61140,
                        "src": "10540:5:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 61154,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61142,
                        "src": "10547:3:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 61155,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61144,
                        "src": "10552:7:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 61156,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61146,
                        "src": "10561:10:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 61150,
                      "name": "WithdrawalInitiated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60781,
                      "src": "10493:19:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 61157,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10493:79:107",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61158,
                  "nodeType": "EmitStatement",
                  "src": "10488:84:107"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 61162,
                        "name": "_localToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61136,
                        "src": "10614:11:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 61163,
                        "name": "_remoteToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61138,
                        "src": "10627:12:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 61164,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61140,
                        "src": "10641:5:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 61165,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61142,
                        "src": "10648:3:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 61166,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61144,
                        "src": "10653:7:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 61167,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61146,
                        "src": "10662:10:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 61159,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "10582:5:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_L2StandardBridge_$61210_$",
                          "typeString": "type(contract super L2StandardBridge)"
                        }
                      },
                      "id": 61161,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_emitERC20BridgeInitiated",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74117,
                      "src": "10582:31:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 61168,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10582:91:107",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61169,
                  "nodeType": "ExpressionStatement",
                  "src": "10582:91:107"
                }
              ]
            },
            "baseFunctions": [
              74117
            ],
            "documentation": {
              "id": 61134,
              "nodeType": "StructuredDocumentation",
              "src": "10014:219:107",
              "text": "@notice Emits the legacy WithdrawalInitiated event followed by the ERC20BridgeInitiated\n         event. This is necessary for backwards compatibility with the legacy bridge.\n @inheritdoc StandardBridge"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_emitERC20BridgeInitiated",
            "nameLocation": "10247:25:107",
            "overrides": {
              "id": 61148,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "10465:8:107"
            },
            "parameters": {
              "id": 61147,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61136,
                  "mutability": "mutable",
                  "name": "_localToken",
                  "nameLocation": "10290:11:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 61171,
                  "src": "10282:19:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 61135,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10282:7:107",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61138,
                  "mutability": "mutable",
                  "name": "_remoteToken",
                  "nameLocation": "10319:12:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 61171,
                  "src": "10311:20:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 61137,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10311:7:107",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61140,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "10349:5:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 61171,
                  "src": "10341:13:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 61139,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10341:7:107",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61142,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "10372:3:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 61171,
                  "src": "10364:11:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 61141,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10364:7:107",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61144,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "10393:7:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 61171,
                  "src": "10385:15:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61143,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10385:7:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61146,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "10423:10:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 61171,
                  "src": "10410:23:107",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 61145,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10410:5:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10272:167:107"
            },
            "returnParameters": {
              "id": 61149,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10478:0:107"
            },
            "scope": 61210,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 61209,
            "nodeType": "FunctionDefinition",
            "src": "10907:439:107",
            "nodes": [],
            "body": {
              "id": 61208,
              "nodeType": "Block",
              "src": "11147:199:107",
              "nodes": [],
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 61189,
                        "name": "_remoteToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61176,
                        "src": "11179:12:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 61190,
                        "name": "_localToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61174,
                        "src": "11193:11:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 61191,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61178,
                        "src": "11206:5:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 61192,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61180,
                        "src": "11213:3:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 61193,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61182,
                        "src": "11218:7:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 61194,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61184,
                        "src": "11227:10:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 61188,
                      "name": "DepositFinalized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60796,
                      "src": "11162:16:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 61195,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11162:76:107",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61196,
                  "nodeType": "EmitStatement",
                  "src": "11157:81:107"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 61200,
                        "name": "_localToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61174,
                        "src": "11280:11:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 61201,
                        "name": "_remoteToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61176,
                        "src": "11293:12:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 61202,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61178,
                        "src": "11307:5:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 61203,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61180,
                        "src": "11314:3:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 61204,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61182,
                        "src": "11319:7:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 61205,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 61184,
                        "src": "11328:10:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 61197,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "11248:5:107",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_L2StandardBridge_$61210_$",
                          "typeString": "type(contract super L2StandardBridge)"
                        }
                      },
                      "id": 61199,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_emitERC20BridgeFinalized",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 74143,
                      "src": "11248:31:107",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 61206,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11248:91:107",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 61207,
                  "nodeType": "ExpressionStatement",
                  "src": "11248:91:107"
                }
              ]
            },
            "baseFunctions": [
              74143
            ],
            "documentation": {
              "id": 61172,
              "nodeType": "StructuredDocumentation",
              "src": "10686:216:107",
              "text": "@notice Emits the legacy DepositFinalized event followed by the ERC20BridgeFinalized event.\n         This is necessary for backwards compatibility with the legacy bridge.\n @inheritdoc StandardBridge"
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_emitERC20BridgeFinalized",
            "nameLocation": "10916:25:107",
            "overrides": {
              "id": 61186,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11134:8:107"
            },
            "parameters": {
              "id": 61185,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 61174,
                  "mutability": "mutable",
                  "name": "_localToken",
                  "nameLocation": "10959:11:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 61209,
                  "src": "10951:19:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 61173,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10951:7:107",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61176,
                  "mutability": "mutable",
                  "name": "_remoteToken",
                  "nameLocation": "10988:12:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 61209,
                  "src": "10980:20:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 61175,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10980:7:107",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61178,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "11018:5:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 61209,
                  "src": "11010:13:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 61177,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11010:7:107",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61180,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "11041:3:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 61209,
                  "src": "11033:11:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 61179,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "11033:7:107",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61182,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "11062:7:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 61209,
                  "src": "11054:15:107",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 61181,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11054:7:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 61184,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "11092:10:107",
                  "nodeType": "VariableDeclaration",
                  "scope": 61209,
                  "src": "11079:23:107",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 61183,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11079:5:107",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10941:167:107"
            },
            "returnParameters": {
              "id": 61187,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11147:0:107"
            },
            "scope": 61210,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 60763,
              "name": "StandardBridge",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 74144,
              "src": "1170:14:107"
            },
            "id": 60764,
            "nodeType": "InheritanceSpecifier",
            "src": "1170:14:107"
          },
          {
            "baseName": {
              "id": 60765,
              "name": "ISemver",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 71843,
              "src": "1186:7:107"
            },
            "id": 60766,
            "nodeType": "InheritanceSpecifier",
            "src": "1186:7:107"
          }
        ],
        "canonicalName": "L2StandardBridge",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 60762,
          "nodeType": "StructuredDocumentation",
          "src": "454:687:107",
          "text": "@custom:proxied\n @custom:predeploy 0x4200000000000000000000000000000000000010\n @title L2StandardBridge\n @notice The L2StandardBridge is responsible for transfering ETH and ERC20 tokens between L1 and\n         L2. In the case that an ERC20 token is native to L2, it will be escrowed within this\n         contract. If the ERC20 token is native to L1, it will be burnt.\n         NOTE: this contract is not intended to support all variations of ERC20 tokens. Examples\n         of some token types that may not be properly supported by this contract include, but are\n         not limited to: tokens with transfer fees, rebasing tokens, and tokens with blocklists."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          61210,
          71843,
          74144,
          30307
        ],
        "name": "L2StandardBridge",
        "nameLocation": "1150:16:107",
        "scope": 61211,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 107
}