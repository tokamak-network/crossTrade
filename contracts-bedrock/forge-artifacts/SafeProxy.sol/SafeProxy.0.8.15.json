{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_singleton",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "stateMutability": "payable",
      "type": "fallback"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5060405161016f38038061016f83398101604081905261002f916100b9565b6001600160a01b0381166100945760405162461bcd60e51b815260206004820152602260248201527f496e76616c69642073696e676c65746f6e20616464726573732070726f766964604482015261195960f21b606482015260840160405180910390fd5b600080546001600160a01b0319166001600160a01b03929092169190911790556100e9565b6000602082840312156100cb57600080fd5b81516001600160a01b03811681146100e257600080fd5b9392505050565b6078806100f76000396000f3fe6080604052600073ffffffffffffffffffffffffffffffffffffffff8154167fa619486e00000000000000000000000000000000000000000000000000000000823503604d57808252602082f35b3682833781823684845af490503d82833e806066573d82fd5b503d81f3fea164736f6c634300080f000a",
    "sourceMap": "520:1508:63:-:0;;;965:152;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1015:24:63;;1007:71;;;;-1:-1:-1;;;1007:71:63;;511:2:156;1007:71:63;;;493:21:156;550:2;530:18;;;523:30;589:34;569:18;;;562:62;-1:-1:-1;;;640:18:156;;;633:32;682:19;;1007:71:63;;;;;;;;1088:9;:22;;-1:-1:-1;;;;;;1088:22:63;-1:-1:-1;;;;;1088:22:63;;;;;;;;;;520:1508;;14:290:156;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:156;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:156:o;309:398::-;520:1508:63;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600073ffffffffffffffffffffffffffffffffffffffff8154167fa619486e00000000000000000000000000000000000000000000000000000000823503604d57808252602082f35b3682833781823684845af490503d82833e806066573d82fd5b503d81f3fea164736f6c634300080f000a",
    "sourceMap": "520:1508:63:-:0;;;1363:1;1367:42;1363:1;1357:8;1353:57;1545:66;1363:1;1528:15;1525:87;1522:176;;1641:10;1363:1;1631:21;1679:4;1363:1;1669:15;1522:176;1730:14;1363:1;;1711:34;1363:1;;1730:14;1363:1;1793:10;1786:5;1773:56;1758:71;;1863:16;1363:1;;1842:38;1899:7;1893:77;;1939:16;1363:1;1929:27;1893:77;;1993:16;1363:1;1983:27",
    "linkReferences": {}
  },
  "methodIdentifiers": {},
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_singleton\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"stateMutability\":\"payable\",\"type\":\"fallback\"}],\"devdoc\":{\"author\":\"Stefan George - <stefan@gnosis.io>Richard Meissner - <richard@gnosis.io>\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_singleton\":\"Singleton address.\"}}},\"title\":\"SafeProxy - Generic proxy contract allows to execute all transactions applying the code of a master contract.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"constructor\":{\"notice\":\"Constructor function sets address of singleton contract.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/safe-contracts/contracts/proxies/SafeProxy.sol\":\"SafeProxy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@cwia/=lib/clones-with-immutable-args/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/solmate/\",\":clones-with-immutable-args/=lib/clones-with-immutable-args/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/safe-contracts/contracts/proxies/SafeProxy.sol\":{\"keccak256\":\"0x5dccbe86285c1d4c4b2fed0ae8007620c3186d22411f43feecfbf8a028e5c7e2\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://a1a02d01a92895110505e141d05b0924ea457a25b89a161f0aeedf6b5cb41aec\",\"dweb:/ipfs/QmYWEsFbWwtrVvEF9MNQtf4X3Qt13dAE8o44tEyAS9jmKP\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_singleton",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "fallback"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "constructor": {
            "params": {
              "_singleton": "Singleton address."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "constructor": {
            "notice": "Constructor function sets address of singleton contract."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@cwia/=lib/clones-with-immutable-args/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@rari-capital/solmate/=lib/solmate/",
        "clones-with-immutable-args/=lib/clones-with-immutable-args/src/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "safe-contracts/=lib/safe-contracts/contracts/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 999999
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "lib/safe-contracts/contracts/proxies/SafeProxy.sol": "SafeProxy"
      },
      "libraries": {}
    },
    "sources": {
      "lib/safe-contracts/contracts/proxies/SafeProxy.sol": {
        "keccak256": "0x5dccbe86285c1d4c4b2fed0ae8007620c3186d22411f43feecfbf8a028e5c7e2",
        "urls": [
          "bzz-raw://a1a02d01a92895110505e141d05b0924ea457a25b89a161f0aeedf6b5cb41aec",
          "dweb:/ipfs/QmYWEsFbWwtrVvEF9MNQtf4X3Qt13dAE8o44tEyAS9jmKP"
        ],
        "license": "LGPL-3.0-only"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 36806,
        "contract": "lib/safe-contracts/contracts/proxies/SafeProxy.sol:SafeProxy",
        "label": "singleton",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      }
    }
  },
  "userdoc": {
    "version": 1,
    "kind": "user",
    "methods": {
      "constructor": {
        "notice": "Constructor function sets address of singleton contract."
      }
    }
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "author": "Stefan George - <stefan@gnosis.io>Richard Meissner - <richard@gnosis.io>",
    "methods": {
      "constructor": {
        "params": {
          "_singleton": "Singleton address."
        }
      }
    },
    "title": "SafeProxy - Generic proxy contract allows to execute all transactions applying the code of a master contract."
  },
  "ast": {
    "absolutePath": "lib/safe-contracts/contracts/proxies/SafeProxy.sol",
    "id": 36835,
    "exportedSymbols": {
      "IProxy": [
        36803
      ],
      "SafeProxy": [
        36834
      ]
    },
    "nodeType": "SourceUnit",
    "src": "42:1987:63",
    "nodes": [
      {
        "id": 36796,
        "nodeType": "PragmaDirective",
        "src": "42:31:63",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0",
          "<",
          "0.9",
          ".0"
        ]
      },
      {
        "id": 36803,
        "nodeType": "ContractDefinition",
        "src": "215:79:63",
        "nodes": [
          {
            "id": 36802,
            "nodeType": "FunctionDefinition",
            "src": "238:54:63",
            "nodes": [],
            "functionSelector": "a619486e",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "masterCopy",
            "nameLocation": "247:10:63",
            "parameters": {
              "id": 36798,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "257:2:63"
            },
            "returnParameters": {
              "id": 36801,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36800,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 36802,
                  "src": "283:7:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36799,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "283:7:63",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "282:9:63"
            },
            "scope": 36803,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IProxy",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 36797,
          "nodeType": "StructuredDocumentation",
          "src": "75:139:63",
          "text": " @title IProxy - Helper interface to access the singleton address of the Proxy on-chain.\n @author Richard Meissner - @rmeissner"
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          36803
        ],
        "name": "IProxy",
        "nameLocation": "225:6:63",
        "scope": 36835,
        "usedErrors": []
      },
      {
        "id": 36834,
        "nodeType": "ContractDefinition",
        "src": "520:1508:63",
        "nodes": [
          {
            "id": 36806,
            "nodeType": "VariableDeclaration",
            "src": "800:26:63",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "singleton",
            "nameLocation": "817:9:63",
            "scope": 36834,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 36805,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "800:7:63",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 36827,
            "nodeType": "FunctionDefinition",
            "src": "965:152:63",
            "nodes": [],
            "body": {
              "id": 36826,
              "nodeType": "Block",
              "src": "997:120:63",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 36818,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 36813,
                          "name": "_singleton",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36809,
                          "src": "1015:10:63",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 36816,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1037:1:63",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 36815,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1029:7:63",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 36814,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1029:7:63",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 36817,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1029:10:63",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1015:24:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c69642073696e676c65746f6e20616464726573732070726f7669646564",
                        "id": 36819,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1041:36:63",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f4a46125d24bcf992f3a005546c0f3eafebe1847b2ccd7a103878ded65e88250",
                          "typeString": "literal_string \"Invalid singleton address provided\""
                        },
                        "value": "Invalid singleton address provided"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f4a46125d24bcf992f3a005546c0f3eafebe1847b2ccd7a103878ded65e88250",
                          "typeString": "literal_string \"Invalid singleton address provided\""
                        }
                      ],
                      "id": 36812,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1007:7:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 36820,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1007:71:63",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 36821,
                  "nodeType": "ExpressionStatement",
                  "src": "1007:71:63"
                },
                {
                  "expression": {
                    "id": 36824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 36822,
                      "name": "singleton",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36806,
                      "src": "1088:9:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 36823,
                      "name": "_singleton",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 36809,
                      "src": "1100:10:63",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1088:22:63",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 36825,
                  "nodeType": "ExpressionStatement",
                  "src": "1088:22:63"
                }
              ]
            },
            "documentation": {
              "id": 36807,
              "nodeType": "StructuredDocumentation",
              "src": "833:127:63",
              "text": " @notice Constructor function sets address of singleton contract.\n @param _singleton Singleton address."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 36810,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 36809,
                  "mutability": "mutable",
                  "name": "_singleton",
                  "nameLocation": "985:10:63",
                  "nodeType": "VariableDeclaration",
                  "scope": 36827,
                  "src": "977:18:63",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 36808,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "977:7:63",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "976:20:63"
            },
            "returnParameters": {
              "id": 36811,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "997:0:63"
            },
            "scope": 36834,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 36833,
            "nodeType": "FunctionDefinition",
            "src": "1218:808:63",
            "nodes": [],
            "body": {
              "id": 36832,
              "nodeType": "Block",
              "src": "1246:780:63",
              "nodes": [],
              "statements": [
                {
                  "AST": {
                    "nodeType": "YulBlock",
                    "src": "1321:699:63",
                    "statements": [
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1335:75:63",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1363:1:63",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "sload",
                                "nodeType": "YulIdentifier",
                                "src": "1357:5:63"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1357:8:63"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1367:42:63",
                              "type": "",
                              "value": "0xffffffffffffffffffffffffffffffffffffffff"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nodeType": "YulIdentifier",
                            "src": "1353:3:63"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1353:57:63"
                        },
                        "variables": [
                          {
                            "name": "_singleton",
                            "nodeType": "YulTypedName",
                            "src": "1339:10:63",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1613:85:63",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1638:1:63",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "_singleton",
                                    "nodeType": "YulIdentifier",
                                    "src": "1641:10:63"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nodeType": "YulIdentifier",
                                  "src": "1631:6:63"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1631:21:63"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1631:21:63"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1676:1:63",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1679:4:63",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "return",
                                  "nodeType": "YulIdentifier",
                                  "src": "1669:6:63"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1669:15:63"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1669:15:63"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nodeType": "YulLiteral",
                                  "src": "1541:1:63",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "calldataload",
                                "nodeType": "YulIdentifier",
                                "src": "1528:12:63"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1528:15:63"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1545:66:63",
                              "type": "",
                              "value": "0xa619486e00000000000000000000000000000000000000000000000000000000"
                            }
                          ],
                          "functionName": {
                            "name": "eq",
                            "nodeType": "YulIdentifier",
                            "src": "1525:2:63"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1525:87:63"
                        },
                        "nodeType": "YulIf",
                        "src": "1522:176:63"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1724:1:63",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1727:1:63",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "calldatasize",
                                "nodeType": "YulIdentifier",
                                "src": "1730:12:63"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1730:14:63"
                            }
                          ],
                          "functionName": {
                            "name": "calldatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "1711:12:63"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1711:34:63"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1711:34:63"
                      },
                      {
                        "nodeType": "YulVariableDeclaration",
                        "src": "1758:71:63",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "gas",
                                "nodeType": "YulIdentifier",
                                "src": "1786:3:63"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1786:5:63"
                            },
                            {
                              "name": "_singleton",
                              "nodeType": "YulIdentifier",
                              "src": "1793:10:63"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1805:1:63",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "calldatasize",
                                "nodeType": "YulIdentifier",
                                "src": "1808:12:63"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1808:14:63"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1824:1:63",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1827:1:63",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "delegatecall",
                            "nodeType": "YulIdentifier",
                            "src": "1773:12:63"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1773:56:63"
                        },
                        "variables": [
                          {
                            "name": "success",
                            "nodeType": "YulTypedName",
                            "src": "1762:7:63",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1857:1:63",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1860:1:63",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "returndatasize",
                                "nodeType": "YulIdentifier",
                                "src": "1863:14:63"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1863:16:63"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nodeType": "YulIdentifier",
                            "src": "1842:14:63"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1842:38:63"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1842:38:63"
                      },
                      {
                        "body": {
                          "nodeType": "YulBlock",
                          "src": "1911:59:63",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1936:1:63",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "returndatasize",
                                      "nodeType": "YulIdentifier",
                                      "src": "1939:14:63"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1939:16:63"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nodeType": "YulIdentifier",
                                  "src": "1929:6:63"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1929:27:63"
                              },
                              "nodeType": "YulExpressionStatement",
                              "src": "1929:27:63"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "success",
                              "nodeType": "YulIdentifier",
                              "src": "1899:7:63"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1908:1:63",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "eq",
                            "nodeType": "YulIdentifier",
                            "src": "1896:2:63"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1896:14:63"
                        },
                        "nodeType": "YulIf",
                        "src": "1893:77:63"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1990:1:63",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "returndatasize",
                                "nodeType": "YulIdentifier",
                                "src": "1993:14:63"
                              },
                              "nodeType": "YulFunctionCall",
                              "src": "1993:16:63"
                            }
                          ],
                          "functionName": {
                            "name": "return",
                            "nodeType": "YulIdentifier",
                            "src": "1983:6:63"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1983:27:63"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1983:27:63"
                      }
                    ]
                  },
                  "evmVersion": "london",
                  "externalReferences": [],
                  "id": 36831,
                  "nodeType": "InlineAssembly",
                  "src": "1312:708:63"
                }
              ]
            },
            "documentation": {
              "id": 36828,
              "nodeType": "StructuredDocumentation",
              "src": "1123:90:63",
              "text": "@dev Fallback function forwards all transactions and returns all received return data."
            },
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 36829,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1226:2:63"
            },
            "returnParameters": {
              "id": 36830,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1246:0:63"
            },
            "scope": 36834,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "SafeProxy",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 36804,
          "nodeType": "StructuredDocumentation",
          "src": "296:223:63",
          "text": " @title SafeProxy - Generic proxy contract allows to execute all transactions applying the code of a master contract.\n @author Stefan George - <stefan@gnosis.io>\n @author Richard Meissner - <richard@gnosis.io>"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          36834
        ],
        "name": "SafeProxy",
        "nameLocation": "529:9:63",
        "scope": 36835,
        "usedErrors": []
      }
    ],
    "license": "LGPL-3.0-only"
  },
  "id": 63
}