{
  "abi": [
    {
      "inputs": [],
      "name": "masterCopy",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "masterCopy()": "a619486e"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"masterCopy\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Richard Meissner - @rmeissner\",\"kind\":\"dev\",\"methods\":{},\"title\":\"IProxy - Helper interface to access the singleton address of the Proxy on-chain.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"lib/safe-contracts/contracts/proxies/SafeProxy.sol\":\"IProxy\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@cwia/=lib/clones-with-immutable-args/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/solmate/\",\":clones-with-immutable-args/=lib/clones-with-immutable-args/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/safe-contracts/contracts/proxies/SafeProxy.sol\":{\"keccak256\":\"0x5dccbe86285c1d4c4b2fed0ae8007620c3186d22411f43feecfbf8a028e5c7e2\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://a1a02d01a92895110505e141d05b0924ea457a25b89a161f0aeedf6b5cb41aec\",\"dweb:/ipfs/QmYWEsFbWwtrVvEF9MNQtf4X3Qt13dAE8o44tEyAS9jmKP\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.24+commit.e11b9ed9"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "masterCopy",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@cwia/=lib/clones-with-immutable-args/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@rari-capital/solmate/=lib/solmate/",
        "clones-with-immutable-args/=lib/clones-with-immutable-args/src/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "safe-contracts/=lib/safe-contracts/contracts/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 999999
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "lib/safe-contracts/contracts/proxies/SafeProxy.sol": "IProxy"
      },
      "libraries": {}
    },
    "sources": {
      "lib/safe-contracts/contracts/proxies/SafeProxy.sol": {
        "keccak256": "0x5dccbe86285c1d4c4b2fed0ae8007620c3186d22411f43feecfbf8a028e5c7e2",
        "urls": [
          "bzz-raw://a1a02d01a92895110505e141d05b0924ea457a25b89a161f0aeedf6b5cb41aec",
          "dweb:/ipfs/QmYWEsFbWwtrVvEF9MNQtf4X3Qt13dAE8o44tEyAS9jmKP"
        ],
        "license": "LGPL-3.0-only"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": {}
  },
  "userdoc": {
    "version": 1,
    "kind": "user"
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "author": "Richard Meissner - @rmeissner",
    "title": "IProxy - Helper interface to access the singleton address of the Proxy on-chain."
  },
  "ast": {
    "absolutePath": "lib/safe-contracts/contracts/proxies/SafeProxy.sol",
    "id": 33105,
    "exportedSymbols": {
      "IProxy": [
        33073
      ],
      "SafeProxy": [
        33104
      ]
    },
    "nodeType": "SourceUnit",
    "src": "42:1987:51",
    "nodes": [
      {
        "id": 33066,
        "nodeType": "PragmaDirective",
        "src": "42:31:51",
        "nodes": [],
        "literals": [
          "solidity",
          ">=",
          "0.7",
          ".0",
          "<",
          "0.9",
          ".0"
        ]
      },
      {
        "id": 33073,
        "nodeType": "ContractDefinition",
        "src": "215:79:51",
        "nodes": [
          {
            "id": 33072,
            "nodeType": "FunctionDefinition",
            "src": "238:54:51",
            "nodes": [],
            "functionSelector": "a619486e",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "masterCopy",
            "nameLocation": "247:10:51",
            "parameters": {
              "id": 33068,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "257:2:51"
            },
            "returnParameters": {
              "id": 33071,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33070,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 33072,
                  "src": "283:7:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33069,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "283:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "282:9:51"
            },
            "scope": 33073,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IProxy",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 33067,
          "nodeType": "StructuredDocumentation",
          "src": "75:139:51",
          "text": " @title IProxy - Helper interface to access the singleton address of the Proxy on-chain.\n @author Richard Meissner - @rmeissner"
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          33073
        ],
        "name": "IProxy",
        "nameLocation": "225:6:51",
        "scope": 33105,
        "usedErrors": [],
        "usedEvents": []
      },
      {
        "id": 33104,
        "nodeType": "ContractDefinition",
        "src": "520:1508:51",
        "nodes": [
          {
            "id": 33076,
            "nodeType": "VariableDeclaration",
            "src": "800:26:51",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "singleton",
            "nameLocation": "817:9:51",
            "scope": 33104,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 33075,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "800:7:51",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 33097,
            "nodeType": "FunctionDefinition",
            "src": "965:152:51",
            "nodes": [],
            "body": {
              "id": 33096,
              "nodeType": "Block",
              "src": "997:120:51",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 33088,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 33083,
                          "name": "_singleton",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 33079,
                          "src": "1015:10:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 33086,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "1037:1:51",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 33085,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "1029:7:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 33084,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "1029:7:51",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 33087,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "nameLocations": [],
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1029:10:51",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1015:24:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "496e76616c69642073696e676c65746f6e20616464726573732070726f7669646564",
                        "id": 33089,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1041:36:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f4a46125d24bcf992f3a005546c0f3eafebe1847b2ccd7a103878ded65e88250",
                          "typeString": "literal_string \"Invalid singleton address provided\""
                        },
                        "value": "Invalid singleton address provided"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f4a46125d24bcf992f3a005546c0f3eafebe1847b2ccd7a103878ded65e88250",
                          "typeString": "literal_string \"Invalid singleton address provided\""
                        }
                      ],
                      "id": 33082,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "1007:7:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 33090,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "nameLocations": [],
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1007:71:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 33091,
                  "nodeType": "ExpressionStatement",
                  "src": "1007:71:51"
                },
                {
                  "expression": {
                    "id": 33094,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 33092,
                      "name": "singleton",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33076,
                      "src": "1088:9:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 33093,
                      "name": "_singleton",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 33079,
                      "src": "1100:10:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1088:22:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 33095,
                  "nodeType": "ExpressionStatement",
                  "src": "1088:22:51"
                }
              ]
            },
            "documentation": {
              "id": 33077,
              "nodeType": "StructuredDocumentation",
              "src": "833:127:51",
              "text": " @notice Constructor function sets address of singleton contract.\n @param _singleton Singleton address."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 33080,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 33079,
                  "mutability": "mutable",
                  "name": "_singleton",
                  "nameLocation": "985:10:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 33097,
                  "src": "977:18:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 33078,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "977:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "976:20:51"
            },
            "returnParameters": {
              "id": 33081,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "997:0:51"
            },
            "scope": 33104,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 33103,
            "nodeType": "FunctionDefinition",
            "src": "1218:808:51",
            "nodes": [],
            "body": {
              "id": 33102,
              "nodeType": "Block",
              "src": "1246:780:51",
              "nodes": [],
              "statements": [
                {
                  "AST": {
                    "nativeSrc": "1321:699:51",
                    "nodeType": "YulBlock",
                    "src": "1321:699:51",
                    "statements": [
                      {
                        "nativeSrc": "1335:75:51",
                        "nodeType": "YulVariableDeclaration",
                        "src": "1335:75:51",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nativeSrc": "1363:1:51",
                                  "nodeType": "YulLiteral",
                                  "src": "1363:1:51",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "sload",
                                "nativeSrc": "1357:5:51",
                                "nodeType": "YulIdentifier",
                                "src": "1357:5:51"
                              },
                              "nativeSrc": "1357:8:51",
                              "nodeType": "YulFunctionCall",
                              "src": "1357:8:51"
                            },
                            {
                              "kind": "number",
                              "nativeSrc": "1367:42:51",
                              "nodeType": "YulLiteral",
                              "src": "1367:42:51",
                              "type": "",
                              "value": "0xffffffffffffffffffffffffffffffffffffffff"
                            }
                          ],
                          "functionName": {
                            "name": "and",
                            "nativeSrc": "1353:3:51",
                            "nodeType": "YulIdentifier",
                            "src": "1353:3:51"
                          },
                          "nativeSrc": "1353:57:51",
                          "nodeType": "YulFunctionCall",
                          "src": "1353:57:51"
                        },
                        "variables": [
                          {
                            "name": "_singleton",
                            "nativeSrc": "1339:10:51",
                            "nodeType": "YulTypedName",
                            "src": "1339:10:51",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "body": {
                          "nativeSrc": "1613:85:51",
                          "nodeType": "YulBlock",
                          "src": "1613:85:51",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1638:1:51",
                                    "nodeType": "YulLiteral",
                                    "src": "1638:1:51",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "name": "_singleton",
                                    "nativeSrc": "1641:10:51",
                                    "nodeType": "YulIdentifier",
                                    "src": "1641:10:51"
                                  }
                                ],
                                "functionName": {
                                  "name": "mstore",
                                  "nativeSrc": "1631:6:51",
                                  "nodeType": "YulIdentifier",
                                  "src": "1631:6:51"
                                },
                                "nativeSrc": "1631:21:51",
                                "nodeType": "YulFunctionCall",
                                "src": "1631:21:51"
                              },
                              "nativeSrc": "1631:21:51",
                              "nodeType": "YulExpressionStatement",
                              "src": "1631:21:51"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1676:1:51",
                                    "nodeType": "YulLiteral",
                                    "src": "1676:1:51",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1679:4:51",
                                    "nodeType": "YulLiteral",
                                    "src": "1679:4:51",
                                    "type": "",
                                    "value": "0x20"
                                  }
                                ],
                                "functionName": {
                                  "name": "return",
                                  "nativeSrc": "1669:6:51",
                                  "nodeType": "YulIdentifier",
                                  "src": "1669:6:51"
                                },
                                "nativeSrc": "1669:15:51",
                                "nodeType": "YulFunctionCall",
                                "src": "1669:15:51"
                              },
                              "nativeSrc": "1669:15:51",
                              "nodeType": "YulExpressionStatement",
                              "src": "1669:15:51"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "kind": "number",
                                  "nativeSrc": "1541:1:51",
                                  "nodeType": "YulLiteral",
                                  "src": "1541:1:51",
                                  "type": "",
                                  "value": "0"
                                }
                              ],
                              "functionName": {
                                "name": "calldataload",
                                "nativeSrc": "1528:12:51",
                                "nodeType": "YulIdentifier",
                                "src": "1528:12:51"
                              },
                              "nativeSrc": "1528:15:51",
                              "nodeType": "YulFunctionCall",
                              "src": "1528:15:51"
                            },
                            {
                              "kind": "number",
                              "nativeSrc": "1545:66:51",
                              "nodeType": "YulLiteral",
                              "src": "1545:66:51",
                              "type": "",
                              "value": "0xa619486e00000000000000000000000000000000000000000000000000000000"
                            }
                          ],
                          "functionName": {
                            "name": "eq",
                            "nativeSrc": "1525:2:51",
                            "nodeType": "YulIdentifier",
                            "src": "1525:2:51"
                          },
                          "nativeSrc": "1525:87:51",
                          "nodeType": "YulFunctionCall",
                          "src": "1525:87:51"
                        },
                        "nativeSrc": "1522:176:51",
                        "nodeType": "YulIf",
                        "src": "1522:176:51"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nativeSrc": "1724:1:51",
                              "nodeType": "YulLiteral",
                              "src": "1724:1:51",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nativeSrc": "1727:1:51",
                              "nodeType": "YulLiteral",
                              "src": "1727:1:51",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "calldatasize",
                                "nativeSrc": "1730:12:51",
                                "nodeType": "YulIdentifier",
                                "src": "1730:12:51"
                              },
                              "nativeSrc": "1730:14:51",
                              "nodeType": "YulFunctionCall",
                              "src": "1730:14:51"
                            }
                          ],
                          "functionName": {
                            "name": "calldatacopy",
                            "nativeSrc": "1711:12:51",
                            "nodeType": "YulIdentifier",
                            "src": "1711:12:51"
                          },
                          "nativeSrc": "1711:34:51",
                          "nodeType": "YulFunctionCall",
                          "src": "1711:34:51"
                        },
                        "nativeSrc": "1711:34:51",
                        "nodeType": "YulExpressionStatement",
                        "src": "1711:34:51"
                      },
                      {
                        "nativeSrc": "1758:71:51",
                        "nodeType": "YulVariableDeclaration",
                        "src": "1758:71:51",
                        "value": {
                          "arguments": [
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "gas",
                                "nativeSrc": "1786:3:51",
                                "nodeType": "YulIdentifier",
                                "src": "1786:3:51"
                              },
                              "nativeSrc": "1786:5:51",
                              "nodeType": "YulFunctionCall",
                              "src": "1786:5:51"
                            },
                            {
                              "name": "_singleton",
                              "nativeSrc": "1793:10:51",
                              "nodeType": "YulIdentifier",
                              "src": "1793:10:51"
                            },
                            {
                              "kind": "number",
                              "nativeSrc": "1805:1:51",
                              "nodeType": "YulLiteral",
                              "src": "1805:1:51",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "calldatasize",
                                "nativeSrc": "1808:12:51",
                                "nodeType": "YulIdentifier",
                                "src": "1808:12:51"
                              },
                              "nativeSrc": "1808:14:51",
                              "nodeType": "YulFunctionCall",
                              "src": "1808:14:51"
                            },
                            {
                              "kind": "number",
                              "nativeSrc": "1824:1:51",
                              "nodeType": "YulLiteral",
                              "src": "1824:1:51",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nativeSrc": "1827:1:51",
                              "nodeType": "YulLiteral",
                              "src": "1827:1:51",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "delegatecall",
                            "nativeSrc": "1773:12:51",
                            "nodeType": "YulIdentifier",
                            "src": "1773:12:51"
                          },
                          "nativeSrc": "1773:56:51",
                          "nodeType": "YulFunctionCall",
                          "src": "1773:56:51"
                        },
                        "variables": [
                          {
                            "name": "success",
                            "nativeSrc": "1762:7:51",
                            "nodeType": "YulTypedName",
                            "src": "1762:7:51",
                            "type": ""
                          }
                        ]
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nativeSrc": "1857:1:51",
                              "nodeType": "YulLiteral",
                              "src": "1857:1:51",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nativeSrc": "1860:1:51",
                              "nodeType": "YulLiteral",
                              "src": "1860:1:51",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "returndatasize",
                                "nativeSrc": "1863:14:51",
                                "nodeType": "YulIdentifier",
                                "src": "1863:14:51"
                              },
                              "nativeSrc": "1863:16:51",
                              "nodeType": "YulFunctionCall",
                              "src": "1863:16:51"
                            }
                          ],
                          "functionName": {
                            "name": "returndatacopy",
                            "nativeSrc": "1842:14:51",
                            "nodeType": "YulIdentifier",
                            "src": "1842:14:51"
                          },
                          "nativeSrc": "1842:38:51",
                          "nodeType": "YulFunctionCall",
                          "src": "1842:38:51"
                        },
                        "nativeSrc": "1842:38:51",
                        "nodeType": "YulExpressionStatement",
                        "src": "1842:38:51"
                      },
                      {
                        "body": {
                          "nativeSrc": "1911:59:51",
                          "nodeType": "YulBlock",
                          "src": "1911:59:51",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nativeSrc": "1936:1:51",
                                    "nodeType": "YulLiteral",
                                    "src": "1936:1:51",
                                    "type": "",
                                    "value": "0"
                                  },
                                  {
                                    "arguments": [],
                                    "functionName": {
                                      "name": "returndatasize",
                                      "nativeSrc": "1939:14:51",
                                      "nodeType": "YulIdentifier",
                                      "src": "1939:14:51"
                                    },
                                    "nativeSrc": "1939:16:51",
                                    "nodeType": "YulFunctionCall",
                                    "src": "1939:16:51"
                                  }
                                ],
                                "functionName": {
                                  "name": "revert",
                                  "nativeSrc": "1929:6:51",
                                  "nodeType": "YulIdentifier",
                                  "src": "1929:6:51"
                                },
                                "nativeSrc": "1929:27:51",
                                "nodeType": "YulFunctionCall",
                                "src": "1929:27:51"
                              },
                              "nativeSrc": "1929:27:51",
                              "nodeType": "YulExpressionStatement",
                              "src": "1929:27:51"
                            }
                          ]
                        },
                        "condition": {
                          "arguments": [
                            {
                              "name": "success",
                              "nativeSrc": "1899:7:51",
                              "nodeType": "YulIdentifier",
                              "src": "1899:7:51"
                            },
                            {
                              "kind": "number",
                              "nativeSrc": "1908:1:51",
                              "nodeType": "YulLiteral",
                              "src": "1908:1:51",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "eq",
                            "nativeSrc": "1896:2:51",
                            "nodeType": "YulIdentifier",
                            "src": "1896:2:51"
                          },
                          "nativeSrc": "1896:14:51",
                          "nodeType": "YulFunctionCall",
                          "src": "1896:14:51"
                        },
                        "nativeSrc": "1893:77:51",
                        "nodeType": "YulIf",
                        "src": "1893:77:51"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nativeSrc": "1990:1:51",
                              "nodeType": "YulLiteral",
                              "src": "1990:1:51",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "arguments": [],
                              "functionName": {
                                "name": "returndatasize",
                                "nativeSrc": "1993:14:51",
                                "nodeType": "YulIdentifier",
                                "src": "1993:14:51"
                              },
                              "nativeSrc": "1993:16:51",
                              "nodeType": "YulFunctionCall",
                              "src": "1993:16:51"
                            }
                          ],
                          "functionName": {
                            "name": "return",
                            "nativeSrc": "1983:6:51",
                            "nodeType": "YulIdentifier",
                            "src": "1983:6:51"
                          },
                          "nativeSrc": "1983:27:51",
                          "nodeType": "YulFunctionCall",
                          "src": "1983:27:51"
                        },
                        "nativeSrc": "1983:27:51",
                        "nodeType": "YulExpressionStatement",
                        "src": "1983:27:51"
                      }
                    ]
                  },
                  "evmVersion": "paris",
                  "externalReferences": [],
                  "id": 33101,
                  "nodeType": "InlineAssembly",
                  "src": "1312:708:51"
                }
              ]
            },
            "documentation": {
              "id": 33098,
              "nodeType": "StructuredDocumentation",
              "src": "1123:90:51",
              "text": "@dev Fallback function forwards all transactions and returns all received return data."
            },
            "implemented": true,
            "kind": "fallback",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 33099,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1226:2:51"
            },
            "returnParameters": {
              "id": 33100,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1246:0:51"
            },
            "scope": 33104,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "SafeProxy",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 33074,
          "nodeType": "StructuredDocumentation",
          "src": "296:223:51",
          "text": " @title SafeProxy - Generic proxy contract allows to execute all transactions applying the code of a master contract.\n @author Stefan George - <stefan@gnosis.io>\n @author Richard Meissner - <richard@gnosis.io>"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          33104
        ],
        "name": "SafeProxy",
        "nameLocation": "529:9:51",
        "scope": 33105,
        "usedErrors": [],
        "usedEvents": []
      }
    ],
    "license": "LGPL-3.0-only"
  },
  "id": 51
}