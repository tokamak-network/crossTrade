{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "creator",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "about",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "key",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "AttestationCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "setUp",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_constructor_succeeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_isAllowedToMint_fromAllowlistAttestorWithFalsyValue_fails",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_isAllowedToMint_fromAllowlistAttestor_succeeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_isAllowedToMint_fromCoinbaseQuestAttestorWithFalsyValue_fails",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_isAllowedToMint_fromCoinbaseQuestAttestor_succeeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_isAllowedToMint_fromInvite_succeeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_isAllowedToMint_fromWrongAllowlistAttestor_fails",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_isAllowedToMint_fromWrongCoinbaseQuestAttestor_fails",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_isAllowedToMint_fromWrongOptimistInviter_fails",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_isAllowedToMint_withMultipleAttestations_succeeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "test_isAllowedToMint_withoutAnyAttestations_fails",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "4726:4980:270:-:0;;;1572:26:1;;;1594:4;-1:-1:-1;;1572:26:1;;;;;;;;3161:44:5;;;;;;;;;;;4726:4980:270;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "4726:4980:270:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1077:568;;;:::i;:::-;;2161:134:8;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7399:283:270;;;:::i;2930:133:8:-;;;:::i;2631:141::-;;;:::i;2447:178::-;;;:::i;:::-;;;;;;;:::i;5607:169:270:-;;;:::i;4796:463::-;;;:::i;2301:140:8:-;;;:::i;:::-;;;;;;;:::i;6269:157:270:-;;;:::i;2778:146:8:-;;;:::i;5920:177:270:-;;;:::i;6935:335::-;;;:::i;1866:141:8:-;;;:::i;1819:584:1:-;;;:::i;:::-;;;4086:14:302;;4079:22;4061:41;;4049:2;4034:18;1819:584:1;3921:187:302;7781:584:270;;;:::i;6520:320::-;;;:::i;8444:581::-;;;:::i;2013:142:8:-;;;:::i;9127:577:270:-;;;:::i;5364:138::-;;;:::i;1572:26:1:-;;;;;;;;;1077:568:270;1137:35;;;;;;;;;;;;;;;;;;:8;:35::i;:::-;1111:23;:61;;;;;;;;;;;;;;;1212:39;;;;;;;;;;;;;;;;;;;:8;:39::i;:::-;1182:27;:69;;;;;;;;;;;;;;;1267:15;;;;;;;;;;;;;;;;;;;:8;:15::i;:::-;1261:3;:21;;;;;;;;;;;;;;;1309:10;1293:13;:26;;;1335:22;;;;;;;;4259:25:302;;;;1335:7:270;;;;4232:18:302;;1335:22:270;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1329:3;:28;;;;;;;;;;;;;;1367:20;;;;;;;;;4922:74:302;;;;5012:18;;;5005:30;5071:1;5051:18;;;5044:29;5109:5;5089:18;;;5082:33;1367:8:270;;;;5132:19:302;;1367:20:270;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1455:23:270;;1447:41;;;;;:7;1455:23;;;1447:41;;;5362:74:302;1480:7:270;5452:18:302;;;5445:34;1447:7:270;;-1:-1:-1;1447:7:270;;-1:-1:-1;5335:18:302;;1447:41:270;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1506:27:270;;1498:45;;;;;:7;1506:27;;;1498:45;;;5362:74:302;1535:7:270;5452:18:302;;;5445:34;1498:7:270;;-1:-1:-1;1498:7:270;;-1:-1:-1;5335:18:302;;1498:45:270;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1561:3:270;;1553:21;;;;;:7;1561:3;;;1553:21;;;5362:74:302;1566:7:270;5452:18:302;;;5445:34;1553:7:270;;-1:-1:-1;1553:7:270;;-1:-1:-1;5335:18:302;;1553:21:270;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;1592:3:270;;1584:21;;;;;:7;1592:3;;;1584:21;;;5362:74:302;1597:7:270;5452:18:302;;;5445:34;1584:7:270;;-1:-1:-1;1584:7:270;;-1:-1:-1;5335:18:302;;1584:21:270;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1616:22;:20;:22::i;:::-;1077:568::o;2161:134:8:-;2208:33;2272:16;2253:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2161:134;:::o;7399:283:270:-;7490:3;;7481:13;;;;;:8;7490:3;;;7481:13;;;5636:74:302;7481:8:270;;;;5609:18:302;;7481:13:270;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7504:18:270;;;7530:3;;7600:13;;;;;;;;;;;;;;;;;;;;7504:110;;;;;:18;;;;;-1:-1:-1;7504:25:270;;-1:-1:-1;7504:110:270;;7530:3;;;;;388:40:200;;7504:110:270;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7636:17:270;;7670:3;;7636:38;;;;;:17;7670:3;;;7636:38;;;5636:74:302;7624:51:270;;-1:-1:-1;7636:17:270;;;-1:-1:-1;7636:33:270;;5609:18:302;;7636:38:270;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7624:11;:51::i;2930:133:8:-;2976:33;3040:16;3021:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2930:133;:::o;2631:141::-;2679:35;2747:18;2726:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2631:141;:::o;2447:178::-;2503:48;2592:26;2563:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2447:178;:::o;5607:169:270:-;5705:3;;5689:20;;5705:3;;5689:15;:20::i;:::-;5730:17;;5764:3;;5730:38;;;;;:17;5764:3;;;5730:38;;;5636:74:302;5719:50:270;;5730:17;;;;;:33;;5609:18:302;;5730:38:270;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5719:10;:50::i;4796:463::-;4916:17;;:39;;;;;;;;4899:87;;4916:17;;;:37;;:39;;;;;;;;;;;;;;:17;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4966:18;;;;4899:8;:87::i;:::-;5005:17;;:38;;;;;;;;4996:73;;5005:17;;;:36;;:38;;;;;;;;;;;;;;:17;:38;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5045:23;;;;4996:8;:73::i;:::-;5088:17;;:43;;;;;;;;5079:82;;5088:17;;;:41;;:43;;;;;;;;;;;;;;:17;:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5133:27;;;;5079:8;:82::i;:::-;5188:17;;:36;;;;;;;;5171:81;;5188:17;;;:34;;:36;;;;;;;;;;;;;;:17;:36;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5235:15;;;;5171:8;:81::i;2301:140:8:-;2349:34;2416:18;2395:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6269:157:270;6355:3;;6340:19;;6355:3;;6340:14;:19::i;2778:146:8:-;2826:40;2899:18;2878:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5920:177:270;6026:3;;6006:24;;6026:3;;6006:19;:24::i;6935:335::-;7082:3;;7073:13;;;;;:8;7082:3;;;7073:13;;;5636:74:302;7073:8:270;;;;5609:18:302;;7073:13:270;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7096:18:270;;;7122:3;;7127:17;;:59;;;;;;;;7096:18;;;;;-1:-1:-1;7096:25:270;;-1:-1:-1;7122:3:270;;;;7127:17;;;;;:57;;:59;;;;;;;;;;:17;:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;7188:13;;;;;;;;;;;;;;;;;7096:106;;;;;;;;;;;;;;;;:::i;1866:141:8:-;1915:34;1982:18;1961:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:584:1;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:1;;;;;;;;1819:584::o;1869:528::-;1941:17;2997:42;2985:55;3066:16;1980:374;;2196:43;;;1671:64;2196:43;;;5362:74:302;;;2221:17:1;5452:18:302;;;5445:34;2196:43:1;;;;;;;;;5335:18:302;;;2196:43:1;;;-1:-1:-1;;1671:64:1;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;;;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:1:o;7781::270:-;7882:3;;7866:20;;7882:3;;7866:15;:20::i;:::-;7916:3;;7896:24;;7916:3;;7896:19;:24::i;:::-;7945:3;;7930:19;;7945:3;;7930:14;:19::i;:::-;7971:17;;8005:3;;7971:38;;;;;:17;8005:3;;;7971:38;;;5636:74:302;7960:50:270;;7971:17;;;;;:33;;5609:18:302;;7971:38:270;5490:226:302;7960:50:270;8097:3;;8088:13;;;;;:8;8097:3;;;8088:13;;;5636:74:302;8088:8:270;;;;5609:18:302;;8088:13:270;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8111:18:270;;;8137:3;;8142:17;;:53;;;;;;;;8111:18;;;;;-1:-1:-1;8111:25:270;;-1:-1:-1;8137:3:270;;;;8142:17;;;;;:51;;:53;;;;;;;;;;:17;:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8197:13;;;;;;;;;;;;;;;;;8111:100;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8319:17:270;;8353:3;;8319:38;;;;;:17;8353:3;;;8319:38;;;5636:74:302;8308:50:270;;-1:-1:-1;8319:17:270;;;-1:-1:-1;8319:33:270;;5609:18:302;;8319:38:270;5490:226:302;6520:320:270;6658:3;;6649:13;;;;;:8;6658:3;;;6649:13;;;5636:74:302;6649:8:270;;;;5609:18:302;;6649:13:270;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6672:18:270;;;6698:3;;6703:17;;:53;;;;;;;;6672:18;;;;;-1:-1:-1;6672:25:270;;-1:-1:-1;6698:3:270;;;;6703:17;;;;;:51;;:53;;;;;;;;;;:17;:53;;;;;;;;;;;;;;8444:581;8596:3;;8580:20;;8596:3;;8580:15;:20::i;:::-;8625:17;;:53;;;;;;;;8611:11;;8625:17;;;:51;;:53;;;;;;;;;;;;;;:17;:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;8688:38;;;;;8702:4;8688:38;;;8542:41:302;;;8599:18;;;8592:50;;;8658:18;;;8651:50;309:37:2;8717:18:302;;;8710:50;8611:67:270;;-1:-1:-1;8688:13:270;;;;8514:19:302;;8688:38:270;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8785:3:270;;8760:23;;8795:16;;;;;;;;;;;;;;;;8741:71;;8790:3;;-1:-1:-1;8785:3:270;;;;;-1:-1:-1;8760:23:270;;;;;8741:71;;;;;:::i;:::-;;;;;;;;8876:23;;8867:33;;;;;:8;8876:23;;;8867:33;;;5636:74:302;8867:8:270;;;;5609:18:302;;8867:33:270;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8910:18:270;;;8936:3;;8946:9;;;;;;;;-1:-1:-1;8946:9:270;;8910:46;;;;:18;;;;;-1:-1:-1;8910:25:270;;-1:-1:-1;8910:46:270;;8936:3;;;;;8941;;8910:46;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;8979:17:270;;9013:3;;8979:38;;;;;:17;9013:3;;;8979:38;;;5636:74:302;8967:51:270;;-1:-1:-1;8979:17:270;;;-1:-1:-1;8979:33:270;;5609:18:302;;8979:38:270;5490:226:302;8967:51:270;8527:498;8444:581::o;2013:142:8:-;2062:35;2130:18;2109:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2013:142;:::o;9127:577:270:-;9283:3;;9267:20;;9283:3;;9267:15;:20::i;:::-;9312:17;;:53;;;;;;;;9298:11;;9312:17;;;:51;;:53;;;;;;;;;;;;;;:17;:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;9375:37;;;;;9389:4;9375:37;;;8542:41:302;;;8599:18;;;8592:50;;;8658:18;;;8651:50;;;8717:18;;;8710:50;9298:67:270;;-1:-1:-1;9375:13:270;;;;8514:19:302;;9375:37:270;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9471:3:270;;9446:23;;9481:9;;;;;;;;-1:-1:-1;9481:9:270;;9427:64;;9476:3;;-1:-1:-1;9471:3:270;;;;;-1:-1:-1;9446:23:270;;;;;9427:64;;;;;:::i;5364:138::-;5456:17;;5490:3;;5456:38;;;;;:17;5490:3;;;5456:38;;;5636:74:302;5444:51:270;;5456:17;;;;;:33;;5609:18:302;;5456:38:270;5490:226:302;16415:125:6;16479:12;16513:20;16528:4;16513:14;:20::i;:::-;-1:-1:-1;16503:30:6;16415:125;-1:-1:-1;;16415:125:6:o;4165:557:270:-;4237:24;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4216:18:270;:45;;;;;;;;;;;;;;4310:23;;4290:64;;4310:23;;;4290:64;;;:::i;:::-;9206:42:302;9275:15;;;9257:34;;9327:15;;9322:2;9307:18;;9300:43;9184:2;9169:18;4290:64:270;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4272:15:270;:82;;;;;;;;;;;;;;4364:45;;;;;:26;;:45;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4475:18:270;;4507:23;;4544:27;;4593:15;;4440:179;;4475:18;;;;;-1:-1:-1;4507:23:270;;;;-1:-1:-1;4544:27:270;;;;4593:15;;4440:179;;;:::i;:::-;10074:42:302;10143:15;;;10125:34;;10195:15;;;10190:2;10175:18;;10168:43;10247:15;;;10242:2;10227:18;;10220:43;10299:15;;;10294:2;10279:18;;10272:43;10051:3;10036:19;4440:179:270;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4420:17:270;:199;;;;;;;;;;;4680:15;;4654:61;;4680:15;;;4654:61;;;:::i;:::-;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4630:21:270;:85;;;;;;;;;;;;;;;4165:557::o;587:83:4:-;646:17;658:4;657:5;646:10;:17::i;1651:538:270:-;1773:43;;;1814:1;1773:43;;;;;;;;;1711:59;;1773:43;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;1773:43:270;;;;;;;;;;;;;;;1711:105;;1910:177;;;;;;;;1966:6;1910:177;;;;;;1991:17;;;;;;;;;;;:51;;;:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1910:177;;;;2063:13;;;;;;;;;;;;;;;;;1910:177;;;1889:15;1905:1;1889:18;;;;;;;;:::i;:::-;;;;;;;;;;:198;2106:23;;2097:33;;;;;:8;2106:23;;;2097:33;;;5636:74:302;2097:8:270;;;;5609:18:302;;2097:33:270;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2140:18:270;;:42;;;;;:18;;;;;-1:-1:-1;2140:25:270;;-1:-1:-1;2140:42:270;;2166:15;;2140:42;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1701:488;1651:538;:::o;3262:157:1:-;3322:9;3317:96;;3352:30;;;;;12574:2:302;12556:21;;;12613:2;12593:18;;;12586:30;12652:25;12647:2;12632:18;;12625:53;12710:2;12695:18;;12372:347;3352:30:1;;;;;;;;3396:6;:4;:6::i;3622:277::-;3690:1;3685:6;;:1;:6;;;3681:212;;3712:44;;;;;12926:2:302;12908:21;;;12965:2;12945:18;;;12938:30;13004:34;12999:2;12984:18;;12977:62;13075:7;13070:2;13055:18;;13048:35;13115:3;13100:19;;12724:401;3712:44:1;;;;;;;;3775:34;;;13342:21:302;;;13399:2;13379:18;;;13372:30;13438:12;13433:2;13418:18;;13411:40;13537:42;13525:55;;13518:4;13503:20;;13496:85;3775:34:1;;;;;;;13483:3:302;3775:34:1;;;3828;;;13804:21:302;;;13861:2;13841:18;;;13834:30;13900:12;13895:2;13880:18;;13873:40;13999:42;13987:55;;13980:4;13965:20;;13958:85;3828:34:1;;;;;;;13945:3:302;3828:34:1;;;3876:6;:4;:6::i;:::-;3622:277;;:::o;2753:1018:270:-;2842:16;;;2856:1;2842:16;;;;;;;;;2813:26;;2842:16;;;;;;;;;-1:-1:-1;;2883:3:270;;2868:12;;;;-1:-1:-1;2883:3:270;;;2868:12;;-1:-1:-1;2883:3:270;;2868:12;;;;:::i;:::-;:18;;;;:12;;;;;;;;;:18;2906:23;;2897:33;;;;;2906:23;;2897:33;;;5636:74:302;2897:8:270;;;;5609:18:302;;2897:33:270;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;2974:15:270;;:45;;;;;:15;;;;;-1:-1:-1;2974:31:270;;-1:-1:-1;2974:45:270;;3006:9;;3017:1;;2974:45;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3129:21:270;;3182:3;;3129:57;;;;;:21;3182:3;;;3129:57;;;5636:74:302;3060:54:270;;-1:-1:-1;3129:21:270;;;-1:-1:-1;3129:52:270;;5609:18:302;;3129:57:270;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3283:13;;3298:21;;:48;;;;;3060:126;;-1:-1:-1;3244:22:270;;3269:78;;3283:13;3298:21;;;:31;;:48;;3060:126;;3298:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3269:13;:78::i;:::-;3244:103;;3358:20;3402:7;3411:9;3391:30;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;3381:41;;3391:30;3381:41;;;;3462:17;;;5666:42:302;5654:55;;3462:17:270;;;5636:74:302;3381:41:270;-1:-1:-1;3462:8:270;;;;5609:18:302;;3462:17:270;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3489:15:270;;:42;;;;;;;;4259:25:302;;;3489:15:270;;;;;-1:-1:-1;3489:28:270;;-1:-1:-1;4232:18:302;;3489:42:270;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3592:15:270;;:39;;;;;;;;3584:7;;-1:-1:-1;3584:7:270;;-1:-1:-1;3634:15:270;;3584:7;3592:15;;:37;;:39;;;;;;;;;;;;;;:15;:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:57;;;;:::i;:::-;3584:66;;;;;;;;;;;;;4259:25:302;;4247:2;4232:18;;4113:177;3584:66:270;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;3700:15:270;;:64;;;;;:15;;;;;-1:-1:-1;3700:27:270;;-1:-1:-1;3700:64:270;;3728:7;;3737:15;;3754:9;;3700:64;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2803:968;;;;2753:1018;:::o;2195:552::-;2321:43;;;2362:1;2321:43;;;;;;;;;2259:59;;2321:43;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;2321:43:270;;;;;;;;;;;;;;;2259:105;;2458:183;;;;;;;;2514:6;2458:183;;;;;;2539:17;;;;;;;;;;;:57;;;:59;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2458:183;;;;2617:13;;;;;;;;;;;;;;;;;2458:183;;;2437:15;2453:1;2437:18;;;;;;;;:::i;:::-;;;;;;;;;;:204;2660:27;;2651:37;;;;;:8;2660:27;;;2651:37;;;5636:74:302;2651:8:270;;;;5609:18:302;;2651:37:270;5490:226:302;16134:242:6;16204:12;16218:18;16296:4;16279:22;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;16269:33;;16279:22;16269:33;;;;16320:19;;;;;;4259:25:302;;;16269:33:6;-1:-1:-1;16320:7:6;;;;4232:18:302;;16320:19:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;16349:20;;;;;16313:26;;-1:-1:-1;16349:8:6;;;;:20;;16313:26;;16364:4;;16349:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16134:242;;;:::o;2409:432:1:-;2997:42;2985:55;3066:16;2452:359;;2652:67;;;1671:64;2652:67;;;17962:74:302;;;2677:17:1;18052:18:302;;;18045:34;;;;2712:4:1;18095:18:302;;;18088:34;2489:11:1;;1671:64;2586:43;;17935:18:302;;2652:67:1;;;;;;;;;;;;;;2541:196;;;2652:67;2541:196;;:::i;:::-;;;;;;;;;;;;;;;2506:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2452:359:1;2820:7;:14;;;;;;;;2409:432::o;3880:279:270:-;4029:36;;;;;;;;18307:25:302;;;18348:18;;;18341:34;;;3971:12:270;;3996:7;;;;;;4029;;;;18280:18:302;;4029:36:270;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4101:25;;;;;;18967:19:302;;;;19002:12;;;18995:28;;;;19061:3;19057:16;;;;19075:66;19053:89;19039:12;;;19032:111;4101:25:270;;;;;;;;;19159:12:302;;;;4101:25:270;;;;-1:-1:-1;;;;3880:279:270;;;;;:::o;-1:-1:-1:-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;14:484:302:-;67:3;105:5;99:12;132:6;127:3;120:19;158:4;187:2;182:3;178:12;171:19;;224:2;217:5;213:14;245:1;255:218;269:6;266:1;263:13;255:218;;;334:13;;349:42;330:62;318:75;;413:12;;;;448:15;;;;291:1;284:9;255:218;;;-1:-1:-1;489:3:302;;14:484;-1:-1:-1;;;;;14:484:302:o;503:261::-;682:2;671:9;664:21;645:4;702:56;754:2;743:9;739:18;731:6;702:56;:::i;:::-;694:64;503:261;-1:-1:-1;;;503:261:302:o;769:1695::-;971:4;1000:2;1040;1029:9;1025:18;1070:2;1059:9;1052:21;1093:6;1128;1122:13;1159:6;1151;1144:22;1185:2;1175:12;;1218:2;1207:9;1203:18;1196:25;;1280:2;1270:6;1267:1;1263:14;1252:9;1248:30;1244:39;1318:2;1310:6;1306:15;1339:1;1360;1370:1065;1386:6;1381:3;1378:15;1370:1065;;;1455:22;;;1479:66;1451:95;1439:108;;1570:13;;1657:9;;1668:42;1653:58;1638:74;;1751:11;;1745:18;1783:15;;;1776:27;;;1864:19;;1610:15;;;1896:24;;;1986:21;;;;2031:1;;1954:2;1942:15;;;2045:282;2061:8;2056:3;2053:17;2045:282;;;2142:15;;2159:66;2138:88;2124:103;;2296:17;;;;2089:1;2080:11;;;;;2253:14;;;;2045:282;;;-1:-1:-1;2413:12:302;;;;2350:5;-1:-1:-1;;;2378:15:302;;;;1412:1;1403:11;1370:1065;;;-1:-1:-1;2452:6:302;;769:1695;-1:-1:-1;;;;;;;;;769:1695:302:o;2469:258::-;2541:1;2551:113;2565:6;2562:1;2559:13;2551:113;;;2641:11;;;2635:18;2622:11;;;2615:39;2587:2;2580:10;2551:113;;;2682:6;2679:1;2676:13;2673:48;;;2717:1;2708:6;2703:3;2699:16;2692:27;2673:48;;2469:258;;;:::o;2732:317::-;2774:3;2812:5;2806:12;2839:6;2834:3;2827:19;2855:63;2911:6;2904:4;2899:3;2895:14;2888:4;2881:5;2877:16;2855:63;:::i;:::-;2963:2;2951:15;2968:66;2947:88;2938:98;;;;3038:4;2934:109;;2732:317;-1:-1:-1;;2732:317:302:o;3054:862::-;3216:4;3245:2;3285;3274:9;3270:18;3315:2;3304:9;3297:21;3338:6;3373;3367:13;3404:6;3396;3389:22;3442:2;3431:9;3427:18;3420:25;;3504:2;3494:6;3491:1;3487:14;3476:9;3472:30;3468:39;3454:53;;3542:2;3534:6;3530:15;3563:1;3573:314;3587:6;3584:1;3581:13;3573:314;;;3676:66;3664:9;3656:6;3652:22;3648:95;3643:3;3636:108;3767:40;3800:6;3791;3785:13;3767:40;:::i;:::-;3757:50;-1:-1:-1;3865:12:302;;;;3830:15;;;;3609:1;3602:9;3573:314;;;-1:-1:-1;3904:6:302;;3054:862;-1:-1:-1;;;;;;;3054:862:302:o;4295:154::-;4381:42;4374:5;4370:54;4363:5;4360:65;4350:93;;4439:1;4436;4429:12;4454:251;4524:6;4577:2;4565:9;4556:7;4552:23;4548:32;4545:52;;;4593:1;4590;4583:12;4545:52;4625:9;4619:16;4644:31;4669:5;4644:31;:::i;5721:409::-;5936:42;5928:6;5924:55;5913:9;5906:74;6016:6;6011:2;6000:9;5996:18;5989:34;6059:2;6054;6043:9;6039:18;6032:30;5887:4;6079:45;6120:2;6109:9;6105:18;6097:6;6079:45;:::i;:::-;6071:53;5721:409;-1:-1:-1;;;;;5721:409:302:o;6135:277::-;6202:6;6255:2;6243:9;6234:7;6230:23;6226:32;6223:52;;;6271:1;6268;6261:12;6223:52;6303:9;6297:16;6356:5;6349:13;6342:21;6335:5;6332:32;6322:60;;6378:1;6375;6368:12;6701:437;6780:1;6776:12;;;;6823;;;6844:61;;6898:4;6890:6;6886:17;6876:27;;6844:61;6951:2;6943:6;6940:14;6920:18;6917:38;6914:218;;6988:77;6985:1;6978:88;7089:4;7086:1;7079:15;7117:4;7114:1;7107:15;6914:218;;6701:437;;;:::o;7143:184::-;7213:6;7266:2;7254:9;7245:7;7241:23;7237:32;7234:52;;;7282:1;7279;7272:12;7234:52;-1:-1:-1;7305:16:302;;7143:184;-1:-1:-1;7143:184:302:o;7634:417::-;7831:66;7823:6;7819:79;7814:3;7807:92;7789:3;7928:6;7922:13;7944:61;7998:6;7994:1;7989:3;7985:11;7978:4;7970:6;7966:17;7944:61;:::i;:::-;8025:16;;;;8043:1;8021:24;;7634:417;-1:-1:-1;;;7634:417:302:o;8056:274::-;8185:3;8223:6;8217:13;8239:53;8285:6;8280:3;8273:4;8265:6;8261:17;8239:53;:::i;:::-;8308:16;;;;;8056:274;-1:-1:-1;;8056:274:302:o;8771:218::-;8918:2;8907:9;8900:21;8881:4;8938:45;8979:2;8968:9;8964:18;8956:6;8938:45;:::i;9523:277::-;9725:2;9714:9;9707:21;9688:4;9745:49;9790:2;9779:9;9775:18;9431:2;9419:15;;9466:17;9459:4;9450:14;;9443:41;9509:2;9500:12;;9354:164;10326:422;10593:42;10585:6;10581:55;10570:9;10563:74;10673:2;10668;10657:9;10653:18;10646:30;10544:4;10693:49;10738:2;10727:9;10723:18;9431:2;9419:15;;9466:17;9459:4;9450:14;;9443:41;9509:2;9500:12;;9354:164;10942:184;10994:77;10991:1;10984:88;11091:4;11088:1;11081:15;11115:4;11112:1;11105:15;11131:1236;11341:4;11370:2;11410;11399:9;11395:18;11440:2;11429:9;11422:21;11463:6;11498;11492:13;11529:6;11521;11514:22;11555:2;11545:12;;11588:2;11577:9;11573:18;11566:25;;11650:2;11640:6;11637:1;11633:14;11622:9;11618:30;11614:39;11688:2;11680:6;11676:15;11709:1;11719:619;11733:6;11730:1;11727:13;11719:619;;;11798:22;;;11822:66;11794:95;11782:108;;11913:13;;11985:9;;11996:42;11981:58;11966:74;;12083:11;;;12077:18;12060:15;;;12053:43;12135:11;;12129:18;11949:4;12167:15;;;12160:27;;;12210:48;12242:15;;;12129:18;12210:48;:::i;:::-;12316:12;;;;12200:58;-1:-1:-1;;;12281:15:302;;;;11755:1;11748:9;11719:619;;;-1:-1:-1;12355:6:302;;11131:1236;-1:-1:-1;;;;;;;;11131:1236:302:o;14054:340::-;14269:2;14258:9;14251:21;14232:4;14289:56;14341:2;14330:9;14326:18;14318:6;14289:56;:::i;:::-;14281:64;;14381:6;14376:2;14365:9;14361:18;14354:34;14054:340;;;;;:::o;14399:731::-;14503:6;14556:2;14544:9;14535:7;14531:23;14527:32;14524:52;;;14572:1;14569;14562:12;14524:52;14605:2;14599:9;14647:2;14639:6;14635:15;14716:6;14704:10;14701:22;14680:18;14668:10;14665:34;14662:62;14659:242;;;14757:77;14754:1;14747:88;14858:4;14855:1;14848:15;14886:4;14883:1;14876:15;14659:242;14917:2;14910:22;14954:16;;14979:31;14954:16;14979:31;:::i;:::-;15019:21;;15094:2;15079:18;;;15073:25;15056:15;;;15049:50;;;;-1:-1:-1;15026:6:302;14399:731;-1:-1:-1;14399:731:302:o;15345:272::-;15220:12;;15234:42;15216:61;15204:74;;15327:4;15316:16;;;15310:23;15294:14;;;15287:47;15547:2;15532:18;;15559:52;15135:205;15622:338;15809:42;15801:6;15797:55;15786:9;15779:74;15889:2;15884;15873:9;15869:18;15862:30;15760:4;15909:45;15950:2;15939:9;15935:18;15927:6;15909:45;:::i;:::-;15901:53;15622:338;-1:-1:-1;;;;15622:338:302:o;16336:282::-;16376:3;16407:1;16403:6;16400:1;16397:13;16394:193;;;16443:77;16440:1;16433:88;16544:4;16541:1;16534:15;16572:4;16569:1;16562:15;16394:193;-1:-1:-1;16603:9:302;;16336:282::o;16623:506::-;16906:42;16898:6;16894:55;16883:9;16876:74;16959:61;17016:2;17005:9;17001:18;16993:6;15220:12;;15234:42;15216:61;15204:74;;15327:4;15316:16;;;15310:23;15294:14;;15287:47;15135:205;16959:61;17056:3;17051:2;17040:9;17036:18;17029:31;16857:4;17077:46;17118:3;17107:9;17103:19;17095:6;17077:46;:::i;18386:395::-;18472:6;18480;18488;18541:2;18529:9;18520:7;18516:23;18512:32;18509:52;;;18557:1;18554;18547:12;18509:52;18589:9;18583:16;18639:4;18632:5;18628:16;18621:5;18618:27;18608:55;;18659:1;18656;18649:12;18608:55;18727:2;18712:18;;18706:25;18771:2;18756:18;;;18750:25;18682:5;;18706:25;;-1:-1:-1;18750:25:302;18386:395;-1:-1:-1;;;18386:395:302:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "setUp()": "0a9254e4",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "test_constructor_succeeds()": "80aee254",
    "test_isAllowedToMint_fromAllowlistAttestorWithFalsyValue_fails()": "defdd115",
    "test_isAllowedToMint_fromAllowlistAttestor_succeeds()": "7d9f5772",
    "test_isAllowedToMint_fromCoinbaseQuestAttestorWithFalsyValue_fails()": "ec85c462",
    "test_isAllowedToMint_fromCoinbaseQuestAttestor_succeeds()": "a2ebe184",
    "test_isAllowedToMint_fromInvite_succeeds()": "910cfdae",
    "test_isAllowedToMint_fromWrongAllowlistAttestor_fails()": "c4873875",
    "test_isAllowedToMint_fromWrongCoinbaseQuestAttestor_fails()": "b44cd0e1",
    "test_isAllowedToMint_fromWrongOptimistInviter_fails()": "276beb5f",
    "test_isAllowedToMint_withMultipleAttestations_succeeds()": "c4625960",
    "test_isAllowedToMint_withoutAnyAttestations_fails()": "f4fa2a45"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"creator\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"about\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"key\",\"type\":\"bytes32\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"AttestationCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"setUp\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_constructor_succeeds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_isAllowedToMint_fromAllowlistAttestorWithFalsyValue_fails\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_isAllowedToMint_fromAllowlistAttestor_succeeds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_isAllowedToMint_fromCoinbaseQuestAttestorWithFalsyValue_fails\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_isAllowedToMint_fromCoinbaseQuestAttestor_succeeds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_isAllowedToMint_fromInvite_succeeds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_isAllowedToMint_fromWrongAllowlistAttestor_fails\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_isAllowedToMint_fromWrongCoinbaseQuestAttestor_fails\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_isAllowedToMint_fromWrongOptimistInviter_fails\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_isAllowedToMint_withMultipleAttestations_succeeds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"test_isAllowedToMint_withoutAnyAttestations_fails\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"test_isAllowedToMint_fromAllowlistAttestorWithFalsyValue_fails()\":{\"notice\":\"Having falsy attestation value should not allow minting.\"},\"test_isAllowedToMint_fromAllowlistAttestor_succeeds()\":{\"notice\":\"After receiving a valid allowlist attestation, the account should be able to mint.\"},\"test_isAllowedToMint_fromCoinbaseQuestAttestorWithFalsyValue_fails()\":{\"notice\":\"Having falsy attestation value from Coinbase attestor should not allow minting.\"},\"test_isAllowedToMint_fromCoinbaseQuestAttestor_succeeds()\":{\"notice\":\"After receiving a valid attestation from the Coinbase Quest attestor,         the account should be able to mint.\"},\"test_isAllowedToMint_fromInvite_succeeds()\":{\"notice\":\"Account that received an attestation from the OptimistInviter contract by going         through the claim invite flow should be able to mint.\"},\"test_isAllowedToMint_fromWrongAllowlistAttestor_fails()\":{\"notice\":\"Attestation from the wrong allowlist attestor should not allow minting.\"},\"test_isAllowedToMint_fromWrongCoinbaseQuestAttestor_fails()\":{\"notice\":\"Coinbase quest attestation from wrong attestor should not allow minting.\"},\"test_isAllowedToMint_fromWrongOptimistInviter_fails()\":{\"notice\":\"Claiming an invite on the non-official OptimistInviter contract should not allow          minting.\"},\"test_isAllowedToMint_withMultipleAttestations_succeeds()\":{\"notice\":\"Having multiple signals, even if one is invalid, should still allow minting.\"},\"test_isAllowedToMint_withoutAnyAttestations_fails()\":{\"notice\":\"Base case, a account without any relevant attestations should not be able to mint.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/OptimistAllowlist.t.sol\":\"OptimistAllowlistTest\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@cwia/=lib/clones-with-immutable-args/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/solmate/\",\":clones-with-immutable-args/=lib/clones-with-immutable-args/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240\",\"dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b\",\"dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x9100bd38453711d5f5ae32d16b4aacef8d4e26abb3061fcc9920cd30cdb49315\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://114654e304083d3403510edd13d7df2223747337150ecf51dd36b441e50498f7\",\"dweb:/ipfs/QmQy6uvcVHyHzU2RbuvEo1hKiV7k81z21gR6DSj4DkCP8D\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xb58d624eb0922d4ab14856efb0ab558b0727ccfc28448c5779f1ab4d98cf3daf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1869fc58cb27a7b680428b79d0e0b6f45bd3c61fedb4b3f895e143fb899519d5\",\"dweb:/ipfs/QmcjECGVpQPjhL2bokDyQeGWdzM99qPFMhq5r7KqKLot7R\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477\",\"dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c\",\"dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5\",\"dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985\",\"dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x18ac6dcce9cdfe3bc754ce910b4b97e56963c49a92e50f57d055adb562416b86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6b29b4a814dc26c3722e994a792f4cc1be86e6b8c2b2adc352ed54fb326593d\",\"dweb:/ipfs/Qma8a7XELNmUepiitaLyxJXW66urnXsvCwx1bMLmRw2Fpn\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf\",\"dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xb5d4816a3f37977b1efa07b5e715daa917e96fd28dec1805c4189653db4ea33a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34338fa7f079f8d64f20d976f9bf908a710c8728f18c4b361b020b24fedfedf2\",\"dweb:/ipfs/QmYhwY1wi6vVLMUsJ32L3GiSR9HRaFhGL1Y3wRDjy41KXn\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c\",\"dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0xbf5daf926894541a40a64b43c3746aa1940c5a1b3b8d14a06465eea72a9b90cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbdea6be4e36fc5406e81560d8f3f073a61c5d3cb5889b7c896ff5981e2128eb\",\"dweb:/ipfs/QmPpkPNkLEjDf4RZYjiypj9BrNyaXrb2U4pE9aq7sTG9km\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/draft-EIP712Upgradeable.sol\":{\"keccak256\":\"0xaf5a96100f421d61693605349511e43221d3c2e47d4b3efa87af2b936e2567fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://371fd95bad4416766089d3e621dee1fd86fece2b266ad3f9443fefe567e24e94\",\"dweb:/ipfs/QmNciwwtGev3Q8uVhnoE5PQUSCDpMp6KtVjiDgnGdqLmWX\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e\",\"dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xdb7f5c28fc61cda0bd8ab60ce288e206b791643bcd3ba464a70cbec18895a2f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf52bdf22a33263f5ca6227a35faeac3b81e7d2c692fbcc6a079d488710c5900\",\"dweb:/ipfs/QmcmsjkP4yq3UhiJbvyzwufaY2EKh1zhHaRK8ATag2cpD2\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/SignatureChecker.sol\":{\"keccak256\":\"0xbb5c92a62f2a917ec08667ebc024d5f4172ae3594cd5f4eaa997485ed0440d81\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://392c009a19ece7831c9851d8f47fa8a1ee7ae81eeff01040a976cc110b0b9a3b\",\"dweb:/ipfs/QmbtmS8RRPVNghAu9qWieesPkyrabQSypVpgbyhfzzubCe\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/draft-EIP712.sol\":{\"keccak256\":\"0x6688fad58b9ec0286d40fa957152e575d5d8bd4c3aa80985efdb11b44f776ae7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc00ab7f133cdaafd212a5cc6a16c8d37319721105d130c8e5af0c4e8f170ba\",\"dweb:/ipfs/QmVmf6LVMfFiEkvKYLzSv3bGHzymEW93AcUuFrNUdY3NtT\"]},\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0x43aa1509bb753f053143530705d9c4eee415691d26a4779769bf028a74e6ac69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb440672ebad7d487c1600e406e140fd1ffc4bd7520c86b5709183ca2602da58\",\"dweb:/ipfs/QmNgZaBoAZwnwm4mTL1cUZnMtvt1iZnruMnfpJnDu6upuc\"]},\"lib/solmate/src/tokens/ERC721.sol\":{\"keccak256\":\"0xdac91feb466e74905737338d80cac5303eb7aedcbe76eda11c45eaa728451075\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe01292f5b4d2182859cc30a773f5e9d1a91d02bd8b40fbb73a591cd67896408\",\"dweb:/ipfs/QmTUKUuFJ4QZRD8ge6eTorfni9RKhBtPo1wFVm3GFSgLW8\"]},\"src/periphery/faucet/Faucet.sol\":{\"keccak256\":\"0x82331800d9a28e4e9ea46939fded26e5d76371c9eddfffacd630313a6f8ff5bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04490faba2d3b9a68c678536e12717339adb5c4d6947c3a2d0e881a98026f727\",\"dweb:/ipfs/Qmbi8x84Lo2Y3CE1Azjif1GifVqFYvuhEzEDc6jXrRMnrS\"]},\"src/periphery/faucet/authmodules/AdminFaucetAuthModule.sol\":{\"keccak256\":\"0x631d0642fd235744338a702d884db56a7d132d47def45059170b272b6c79677f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e7a14b64a30e738f9f582452e1380268a6415a91d976a9febabe1cfeddc51ca3\",\"dweb:/ipfs/QmWvT3aZk2Q76URxQdxZtwcQqhqDtRh6LrBNjXwMDNEjwa\"]},\"src/periphery/faucet/authmodules/IFaucetAuthModule.sol\":{\"keccak256\":\"0x1ae04232fda8aa0ae4fced4af75032bed7020576126cf04bd53ecb329673276d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a74059bfdfb5d091d7e3966e1e4157c20f97b4dc29b62a4a66e82d433fac850\",\"dweb:/ipfs/QmetdNihkTcus9YupsexJU7U3LSDM1EUAuVoNTH1Bebsjf\"]},\"src/periphery/op-nft/AttestationStation.sol\":{\"keccak256\":\"0xab54f28712653e8926b23c501975aee5d3368dbf436a14da6ddb9dbc792de2ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a6c5ad2becb79bc6bf3afaaca89dfda6d8f096d55184c0adce20efb3ff19d33\",\"dweb:/ipfs/QmP3qyEYnB195og1FdvW4su4KoBZZQ7UzC8V7CQMz7Ear9\"]},\"src/periphery/op-nft/OptimistAllowlist.sol\":{\"keccak256\":\"0x21c1973eaa45001faae000af13badb7620f6062432c26f792aaa2c75ceb5ece7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://46a8dc4f90b0b2701e223dd8e0357846230b7cc12cd27c9d05273cdfe62740ad\",\"dweb:/ipfs/QmP78hkkrojRMPu989LnV266C51wbf4RX1Lyq7LYHSZVVR\"]},\"src/periphery/op-nft/OptimistInviter.sol\":{\"keccak256\":\"0x447dd2c65410e42a8ddfa0245bcf68ffc51b6c0988715c2978ea4ccde70b8d55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db15eaab1f5ff2314590e535edca99edcc4ebede0170034219228357cdf0c4c2\",\"dweb:/ipfs/QmUqoY781MTXgHx2VrUueRmZKTxuzCt1DVHjxPDFsgYMC2\"]},\"src/periphery/op-nft/libraries/OptimistConstants.sol\":{\"keccak256\":\"0x901c8a2a333a668ef2a6336a803dd06fea51d4128a38087af4565bff1ae6db8c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87e68615dea2494b1cd8f96d7ad97ccb9556d00539526b53a7ce5314570fc268\",\"dweb:/ipfs/QmZBNNrSVMKz4GDkRJyp5jjV6V4wGN7ySAhDd1pBvbJkS2\"]},\"src/universal/Semver.sol\":{\"keccak256\":\"0x9de68ce536aee1aa616b4bf88d7ccc335460e6edd0e7170bdbf94c4fe3d41c60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5909c0b049b03a2bc24816ecf15b0aaf18c04a963174e1eba7624321bef330d\",\"dweb:/ipfs/QmeqdutwZWHqQMXauNR6WY8PrUpfsTiWTQyanbnGM9QqzT\"]},\"test/Helpers.sol\":{\"keccak256\":\"0x022e89924ead94001a5c3d775a986baf574481b48e5fe0c35bdf60433115103d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b75d63ab2d869ab4ab5dedce511be2a5c7a91dc6a75da6a698a23f77d903e03f\",\"dweb:/ipfs/QmUu7Sf9mmbEYV7FaPYQc1JgtLfjLv1D4UaEMRfanbDFDd\"]},\"test/OptimistAllowlist.t.sol\":{\"keccak256\":\"0x155e703aa8adac43fba3e56fe29974cc977a1c10005ab9a50a057cc2309b5d09\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1b05e4b7459b5269b218cb852760b5a9696fd31ac0679cfad6209468bd81891\",\"dweb:/ipfs/QmNdSBqB5K9rGtfV9L2acNcD5D8RTfcDjmMtDZtEJRBcXq\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "creator",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "about",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "key",
              "type": "bytes32",
              "indexed": true
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "AttestationCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setUp"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_constructor_succeeds"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_isAllowedToMint_fromAllowlistAttestorWithFalsyValue_fails"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_isAllowedToMint_fromAllowlistAttestor_succeeds"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_isAllowedToMint_fromCoinbaseQuestAttestorWithFalsyValue_fails"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_isAllowedToMint_fromCoinbaseQuestAttestor_succeeds"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_isAllowedToMint_fromInvite_succeeds"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_isAllowedToMint_fromWrongAllowlistAttestor_fails"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_isAllowedToMint_fromWrongCoinbaseQuestAttestor_fails"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_isAllowedToMint_fromWrongOptimistInviter_fails"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_isAllowedToMint_withMultipleAttestations_succeeds"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "test_isAllowedToMint_withoutAnyAttestations_fails"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {},
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "test_isAllowedToMint_fromAllowlistAttestorWithFalsyValue_fails()": {
            "notice": "Having falsy attestation value should not allow minting."
          },
          "test_isAllowedToMint_fromAllowlistAttestor_succeeds()": {
            "notice": "After receiving a valid allowlist attestation, the account should be able to mint."
          },
          "test_isAllowedToMint_fromCoinbaseQuestAttestorWithFalsyValue_fails()": {
            "notice": "Having falsy attestation value from Coinbase attestor should not allow minting."
          },
          "test_isAllowedToMint_fromCoinbaseQuestAttestor_succeeds()": {
            "notice": "After receiving a valid attestation from the Coinbase Quest attestor,         the account should be able to mint."
          },
          "test_isAllowedToMint_fromInvite_succeeds()": {
            "notice": "Account that received an attestation from the OptimistInviter contract by going         through the claim invite flow should be able to mint."
          },
          "test_isAllowedToMint_fromWrongAllowlistAttestor_fails()": {
            "notice": "Attestation from the wrong allowlist attestor should not allow minting."
          },
          "test_isAllowedToMint_fromWrongCoinbaseQuestAttestor_fails()": {
            "notice": "Coinbase quest attestation from wrong attestor should not allow minting."
          },
          "test_isAllowedToMint_fromWrongOptimistInviter_fails()": {
            "notice": "Claiming an invite on the non-official OptimistInviter contract should not allow          minting."
          },
          "test_isAllowedToMint_withMultipleAttestations_succeeds()": {
            "notice": "Having multiple signals, even if one is invalid, should still allow minting."
          },
          "test_isAllowedToMint_withoutAnyAttestations_fails()": {
            "notice": "Base case, a account without any relevant attestations should not be able to mint."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@cwia/=lib/clones-with-immutable-args/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@rari-capital/solmate/=lib/solmate/",
        "clones-with-immutable-args/=lib/clones-with-immutable-args/src/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "safe-contracts/=lib/safe-contracts/contracts/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 999999
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "test/OptimistAllowlist.t.sol": "OptimistAllowlistTest"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b",
        "urls": [
          "bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240",
          "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c",
        "urls": [
          "bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224",
          "dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60",
        "urls": [
          "bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b",
          "dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x9100bd38453711d5f5ae32d16b4aacef8d4e26abb3061fcc9920cd30cdb49315",
        "urls": [
          "bzz-raw://114654e304083d3403510edd13d7df2223747337150ecf51dd36b441e50498f7",
          "dweb:/ipfs/QmQy6uvcVHyHzU2RbuvEo1hKiV7k81z21gR6DSj4DkCP8D"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0xb58d624eb0922d4ab14856efb0ab558b0727ccfc28448c5779f1ab4d98cf3daf",
        "urls": [
          "bzz-raw://1869fc58cb27a7b680428b79d0e0b6f45bd3c61fedb4b3f895e143fb899519d5",
          "dweb:/ipfs/QmcjECGVpQPjhL2bokDyQeGWdzM99qPFMhq5r7KqKLot7R"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c",
        "urls": [
          "bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477",
          "dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b",
        "urls": [
          "bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c",
          "dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673",
        "urls": [
          "bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5",
          "dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337",
        "urls": [
          "bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985",
          "dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x18ac6dcce9cdfe3bc754ce910b4b97e56963c49a92e50f57d055adb562416b86",
        "urls": [
          "bzz-raw://d6b29b4a814dc26c3722e994a792f4cc1be86e6b8c2b2adc352ed54fb326593d",
          "dweb:/ipfs/Qma8a7XELNmUepiitaLyxJXW66urnXsvCwx1bMLmRw2Fpn"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945",
        "urls": [
          "bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf",
          "dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xb5d4816a3f37977b1efa07b5e715daa917e96fd28dec1805c4189653db4ea33a",
        "urls": [
          "bzz-raw://34338fa7f079f8d64f20d976f9bf908a710c8728f18c4b361b020b24fedfedf2",
          "dweb:/ipfs/QmYhwY1wi6vVLMUsJ32L3GiSR9HRaFhGL1Y3wRDjy41KXn"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea",
        "urls": [
          "bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973",
          "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
        "urls": [
          "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
          "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol": {
        "keccak256": "0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863",
        "urls": [
          "bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c",
          "dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/ECDSAUpgradeable.sol": {
        "keccak256": "0xbf5daf926894541a40a64b43c3746aa1940c5a1b3b8d14a06465eea72a9b90cc",
        "urls": [
          "bzz-raw://fbdea6be4e36fc5406e81560d8f3f073a61c5d3cb5889b7c896ff5981e2128eb",
          "dweb:/ipfs/QmPpkPNkLEjDf4RZYjiypj9BrNyaXrb2U4pE9aq7sTG9km"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/draft-EIP712Upgradeable.sol": {
        "keccak256": "0xaf5a96100f421d61693605349511e43221d3c2e47d4b3efa87af2b936e2567fc",
        "urls": [
          "bzz-raw://371fd95bad4416766089d3e621dee1fd86fece2b266ad3f9443fefe567e24e94",
          "dweb:/ipfs/QmNciwwtGev3Q8uVhnoE5PQUSCDpMp6KtVjiDgnGdqLmWX"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol": {
        "keccak256": "0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544",
        "urls": [
          "bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e",
          "dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10",
        "urls": [
          "bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487",
          "dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3",
        "urls": [
          "bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638",
          "dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0xdb7f5c28fc61cda0bd8ab60ce288e206b791643bcd3ba464a70cbec18895a2f5",
        "urls": [
          "bzz-raw://bf52bdf22a33263f5ca6227a35faeac3b81e7d2c692fbcc6a079d488710c5900",
          "dweb:/ipfs/QmcmsjkP4yq3UhiJbvyzwufaY2EKh1zhHaRK8ATag2cpD2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/SignatureChecker.sol": {
        "keccak256": "0xbb5c92a62f2a917ec08667ebc024d5f4172ae3594cd5f4eaa997485ed0440d81",
        "urls": [
          "bzz-raw://392c009a19ece7831c9851d8f47fa8a1ee7ae81eeff01040a976cc110b0b9a3b",
          "dweb:/ipfs/QmbtmS8RRPVNghAu9qWieesPkyrabQSypVpgbyhfzzubCe"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/draft-EIP712.sol": {
        "keccak256": "0x6688fad58b9ec0286d40fa957152e575d5d8bd4c3aa80985efdb11b44f776ae7",
        "urls": [
          "bzz-raw://8bc00ab7f133cdaafd212a5cc6a16c8d37319721105d130c8e5af0c4e8f170ba",
          "dweb:/ipfs/QmVmf6LVMfFiEkvKYLzSv3bGHzymEW93AcUuFrNUdY3NtT"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0x43aa1509bb753f053143530705d9c4eee415691d26a4779769bf028a74e6ac69",
        "urls": [
          "bzz-raw://fb440672ebad7d487c1600e406e140fd1ffc4bd7520c86b5709183ca2602da58",
          "dweb:/ipfs/QmNgZaBoAZwnwm4mTL1cUZnMtvt1iZnruMnfpJnDu6upuc"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/tokens/ERC721.sol": {
        "keccak256": "0xdac91feb466e74905737338d80cac5303eb7aedcbe76eda11c45eaa728451075",
        "urls": [
          "bzz-raw://fe01292f5b4d2182859cc30a773f5e9d1a91d02bd8b40fbb73a591cd67896408",
          "dweb:/ipfs/QmTUKUuFJ4QZRD8ge6eTorfni9RKhBtPo1wFVm3GFSgLW8"
        ],
        "license": "MIT"
      },
      "src/periphery/faucet/Faucet.sol": {
        "keccak256": "0x82331800d9a28e4e9ea46939fded26e5d76371c9eddfffacd630313a6f8ff5bb",
        "urls": [
          "bzz-raw://04490faba2d3b9a68c678536e12717339adb5c4d6947c3a2d0e881a98026f727",
          "dweb:/ipfs/Qmbi8x84Lo2Y3CE1Azjif1GifVqFYvuhEzEDc6jXrRMnrS"
        ],
        "license": "MIT"
      },
      "src/periphery/faucet/authmodules/AdminFaucetAuthModule.sol": {
        "keccak256": "0x631d0642fd235744338a702d884db56a7d132d47def45059170b272b6c79677f",
        "urls": [
          "bzz-raw://e7a14b64a30e738f9f582452e1380268a6415a91d976a9febabe1cfeddc51ca3",
          "dweb:/ipfs/QmWvT3aZk2Q76URxQdxZtwcQqhqDtRh6LrBNjXwMDNEjwa"
        ],
        "license": "MIT"
      },
      "src/periphery/faucet/authmodules/IFaucetAuthModule.sol": {
        "keccak256": "0x1ae04232fda8aa0ae4fced4af75032bed7020576126cf04bd53ecb329673276d",
        "urls": [
          "bzz-raw://8a74059bfdfb5d091d7e3966e1e4157c20f97b4dc29b62a4a66e82d433fac850",
          "dweb:/ipfs/QmetdNihkTcus9YupsexJU7U3LSDM1EUAuVoNTH1Bebsjf"
        ],
        "license": "MIT"
      },
      "src/periphery/op-nft/AttestationStation.sol": {
        "keccak256": "0xab54f28712653e8926b23c501975aee5d3368dbf436a14da6ddb9dbc792de2ef",
        "urls": [
          "bzz-raw://8a6c5ad2becb79bc6bf3afaaca89dfda6d8f096d55184c0adce20efb3ff19d33",
          "dweb:/ipfs/QmP3qyEYnB195og1FdvW4su4KoBZZQ7UzC8V7CQMz7Ear9"
        ],
        "license": "MIT"
      },
      "src/periphery/op-nft/OptimistAllowlist.sol": {
        "keccak256": "0x21c1973eaa45001faae000af13badb7620f6062432c26f792aaa2c75ceb5ece7",
        "urls": [
          "bzz-raw://46a8dc4f90b0b2701e223dd8e0357846230b7cc12cd27c9d05273cdfe62740ad",
          "dweb:/ipfs/QmP78hkkrojRMPu989LnV266C51wbf4RX1Lyq7LYHSZVVR"
        ],
        "license": "MIT"
      },
      "src/periphery/op-nft/OptimistInviter.sol": {
        "keccak256": "0x447dd2c65410e42a8ddfa0245bcf68ffc51b6c0988715c2978ea4ccde70b8d55",
        "urls": [
          "bzz-raw://db15eaab1f5ff2314590e535edca99edcc4ebede0170034219228357cdf0c4c2",
          "dweb:/ipfs/QmUqoY781MTXgHx2VrUueRmZKTxuzCt1DVHjxPDFsgYMC2"
        ],
        "license": "MIT"
      },
      "src/periphery/op-nft/libraries/OptimistConstants.sol": {
        "keccak256": "0x901c8a2a333a668ef2a6336a803dd06fea51d4128a38087af4565bff1ae6db8c",
        "urls": [
          "bzz-raw://87e68615dea2494b1cd8f96d7ad97ccb9556d00539526b53a7ce5314570fc268",
          "dweb:/ipfs/QmZBNNrSVMKz4GDkRJyp5jjV6V4wGN7ySAhDd1pBvbJkS2"
        ],
        "license": "MIT"
      },
      "src/universal/Semver.sol": {
        "keccak256": "0x9de68ce536aee1aa616b4bf88d7ccc335460e6edd0e7170bdbf94c4fe3d41c60",
        "urls": [
          "bzz-raw://d5909c0b049b03a2bc24816ecf15b0aaf18c04a963174e1eba7624321bef330d",
          "dweb:/ipfs/QmeqdutwZWHqQMXauNR6WY8PrUpfsTiWTQyanbnGM9QqzT"
        ],
        "license": "MIT"
      },
      "test/Helpers.sol": {
        "keccak256": "0x022e89924ead94001a5c3d775a986baf574481b48e5fe0c35bdf60433115103d",
        "urls": [
          "bzz-raw://b75d63ab2d869ab4ab5dedce511be2a5c7a91dc6a75da6a698a23f77d903e03f",
          "dweb:/ipfs/QmUu7Sf9mmbEYV7FaPYQc1JgtLfjLv1D4UaEMRfanbDFDd"
        ],
        "license": "MIT"
      },
      "test/OptimistAllowlist.t.sol": {
        "keccak256": "0x155e703aa8adac43fba3e56fe29974cc977a1c10005ab9a50a057cc2309b5d09",
        "urls": [
          "bzz-raw://a1b05e4b7459b5269b218cb852760b5a9696fd31ac0679cfad6209468bd81891",
          "dweb:/ipfs/QmNdSBqB5K9rGtfV9L2acNcD5D8RTfcDjmMtDZtEJRBcXq"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 119,
        "contract": "test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
        "label": "IS_TEST",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 121,
        "contract": "test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
        "label": "_failed",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 3877,
        "contract": "test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
        "label": "stdChainsInitialized",
        "offset": 2,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 3898,
        "contract": "test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
        "label": "chains",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_string_memory_ptr,t_struct(Chain)3893_storage)"
      },
      {
        "astId": 3902,
        "contract": "test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
        "label": "defaultRpcUrls",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_string_memory_ptr,t_string_storage)"
      },
      {
        "astId": 3906,
        "contract": "test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
        "label": "idToAlias",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_string_storage)"
      },
      {
        "astId": 3909,
        "contract": "test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
        "label": "fallbackToDefaultRpcUrls",
        "offset": 0,
        "slot": "4",
        "type": "t_bool"
      },
      {
        "astId": 4575,
        "contract": "test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
        "label": "gasMeteringOff",
        "offset": 1,
        "slot": "4",
        "type": "t_bool"
      },
      {
        "astId": 6288,
        "contract": "test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
        "label": "stdstore",
        "offset": 0,
        "slot": "5",
        "type": "t_struct(StdStorage)7998_storage"
      },
      {
        "astId": 7036,
        "contract": "test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
        "label": "_excludedContracts",
        "offset": 0,
        "slot": "12",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 7039,
        "contract": "test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
        "label": "_excludedSenders",
        "offset": 0,
        "slot": "13",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 7042,
        "contract": "test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
        "label": "_targetedContracts",
        "offset": 0,
        "slot": "14",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 7045,
        "contract": "test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
        "label": "_targetedSenders",
        "offset": 0,
        "slot": "15",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 7048,
        "contract": "test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
        "label": "_excludedArtifacts",
        "offset": 0,
        "slot": "16",
        "type": "t_array(t_string_storage)dyn_storage"
      },
      {
        "astId": 7051,
        "contract": "test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
        "label": "_targetedArtifacts",
        "offset": 0,
        "slot": "17",
        "type": "t_array(t_string_storage)dyn_storage"
      },
      {
        "astId": 7055,
        "contract": "test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
        "label": "_targetedArtifactSelectors",
        "offset": 0,
        "slot": "18",
        "type": "t_array(t_struct(FuzzSelector)7033_storage)dyn_storage"
      },
      {
        "astId": 7059,
        "contract": "test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
        "label": "_targetedSelectors",
        "offset": 0,
        "slot": "19",
        "type": "t_array(t_struct(FuzzSelector)7033_storage)dyn_storage"
      },
      {
        "astId": 2384,
        "contract": "test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
        "label": "stdstore",
        "offset": 0,
        "slot": "20",
        "type": "t_struct(StdStorage)7998_storage"
      },
      {
        "astId": 135378,
        "contract": "test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
        "label": "alice_allowlistAttestor",
        "offset": 0,
        "slot": "27",
        "type": "t_address"
      },
      {
        "astId": 135380,
        "contract": "test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
        "label": "sally_coinbaseQuestAttestor",
        "offset": 0,
        "slot": "28",
        "type": "t_address"
      },
      {
        "astId": 135382,
        "contract": "test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
        "label": "ted",
        "offset": 0,
        "slot": "29",
        "type": "t_address"
      },
      {
        "astId": 135384,
        "contract": "test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
        "label": "bobPrivateKey",
        "offset": 0,
        "slot": "30",
        "type": "t_uint256"
      },
      {
        "astId": 135386,
        "contract": "test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
        "label": "bob",
        "offset": 0,
        "slot": "31",
        "type": "t_address"
      },
      {
        "astId": 135389,
        "contract": "test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
        "label": "attestationStation",
        "offset": 0,
        "slot": "32",
        "type": "t_contract(AttestationStation)79552"
      },
      {
        "astId": 135392,
        "contract": "test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
        "label": "optimistAllowlist",
        "offset": 0,
        "slot": "33",
        "type": "t_contract(OptimistAllowlist)79987"
      },
      {
        "astId": 135395,
        "contract": "test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
        "label": "optimistInviter",
        "offset": 0,
        "slot": "34",
        "type": "t_contract(OptimistInviter)80326"
      },
      {
        "astId": 135398,
        "contract": "test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
        "label": "optimistInviterHelper",
        "offset": 0,
        "slot": "35",
        "type": "t_contract(OptimistInviterHelper)104368"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32",
        "base": "t_address"
      },
      "t_array(t_bytes32)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32",
        "base": "t_bytes32"
      },
      "t_array(t_bytes4)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "bytes4[]",
        "numberOfBytes": "32",
        "base": "t_bytes4"
      },
      "t_array(t_string_storage)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32",
        "base": "t_string_storage"
      },
      "t_array(t_struct(FuzzSelector)7033_storage)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "struct StdInvariant.FuzzSelector[]",
        "numberOfBytes": "32",
        "base": "t_struct(FuzzSelector)7033_storage"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_bytes4": {
        "encoding": "inplace",
        "label": "bytes4",
        "numberOfBytes": "4"
      },
      "t_contract(AttestationStation)79552": {
        "encoding": "inplace",
        "label": "contract AttestationStation",
        "numberOfBytes": "20"
      },
      "t_contract(OptimistAllowlist)79987": {
        "encoding": "inplace",
        "label": "contract OptimistAllowlist",
        "numberOfBytes": "20"
      },
      "t_contract(OptimistInviter)80326": {
        "encoding": "inplace",
        "label": "contract OptimistInviter",
        "numberOfBytes": "20"
      },
      "t_contract(OptimistInviterHelper)104368": {
        "encoding": "inplace",
        "label": "contract OptimistInviterHelper",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_bool)))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(bytes4 => mapping(bytes32 => bool)))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes4,t_mapping(t_bytes32,t_bool))"
      },
      "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_uint256)))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(bytes4 => mapping(bytes32 => uint256)))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes4,t_mapping(t_bytes32,t_uint256))"
      },
      "t_mapping(t_bytes32,t_bool)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_bytes32,t_uint256)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_bytes4,t_mapping(t_bytes32,t_bool))": {
        "encoding": "mapping",
        "key": "t_bytes4",
        "label": "mapping(bytes4 => mapping(bytes32 => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes32,t_bool)"
      },
      "t_mapping(t_bytes4,t_mapping(t_bytes32,t_uint256))": {
        "encoding": "mapping",
        "key": "t_bytes4",
        "label": "mapping(bytes4 => mapping(bytes32 => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes32,t_uint256)"
      },
      "t_mapping(t_string_memory_ptr,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_mapping(t_string_memory_ptr,t_struct(Chain)3893_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct StdChains.Chain)",
        "numberOfBytes": "32",
        "value": "t_struct(Chain)3893_storage"
      },
      "t_mapping(t_uint256,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Chain)3893_storage": {
        "encoding": "inplace",
        "label": "struct StdChains.Chain",
        "numberOfBytes": "128",
        "members": [
          {
            "astId": 3886,
            "contract": "test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 3888,
            "contract": "test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
            "label": "chainId",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 3890,
            "contract": "test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
            "label": "chainAlias",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 3892,
            "contract": "test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
            "label": "rpcUrl",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          }
        ]
      },
      "t_struct(FuzzSelector)7033_storage": {
        "encoding": "inplace",
        "label": "struct StdInvariant.FuzzSelector",
        "numberOfBytes": "64",
        "members": [
          {
            "astId": 7029,
            "contract": "test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
            "label": "addr",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 7032,
            "contract": "test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
            "label": "selectors",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_bytes4)dyn_storage"
          }
        ]
      },
      "t_struct(StdStorage)7998_storage": {
        "encoding": "inplace",
        "label": "struct StdStorage",
        "numberOfBytes": "224",
        "members": [
          {
            "astId": 7978,
            "contract": "test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
            "label": "slots",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_uint256)))"
          },
          {
            "astId": 7986,
            "contract": "test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
            "label": "finds",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_bool)))"
          },
          {
            "astId": 7989,
            "contract": "test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
            "label": "_keys",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_bytes32)dyn_storage"
          },
          {
            "astId": 7991,
            "contract": "test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
            "label": "_sig",
            "offset": 0,
            "slot": "3",
            "type": "t_bytes4"
          },
          {
            "astId": 7993,
            "contract": "test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
            "label": "_depth",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 7995,
            "contract": "test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
            "label": "_target",
            "offset": 0,
            "slot": "5",
            "type": "t_address"
          },
          {
            "astId": 7997,
            "contract": "test/OptimistAllowlist.t.sol:OptimistAllowlistTest",
            "label": "_set",
            "offset": 0,
            "slot": "6",
            "type": "t_bytes32"
          }
        ]
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  },
  "userdoc": {
    "version": 1,
    "kind": "user",
    "methods": {
      "test_isAllowedToMint_fromAllowlistAttestorWithFalsyValue_fails()": {
        "notice": "Having falsy attestation value should not allow minting."
      },
      "test_isAllowedToMint_fromAllowlistAttestor_succeeds()": {
        "notice": "After receiving a valid allowlist attestation, the account should be able to mint."
      },
      "test_isAllowedToMint_fromCoinbaseQuestAttestorWithFalsyValue_fails()": {
        "notice": "Having falsy attestation value from Coinbase attestor should not allow minting."
      },
      "test_isAllowedToMint_fromCoinbaseQuestAttestor_succeeds()": {
        "notice": "After receiving a valid attestation from the Coinbase Quest attestor,         the account should be able to mint."
      },
      "test_isAllowedToMint_fromInvite_succeeds()": {
        "notice": "Account that received an attestation from the OptimistInviter contract by going         through the claim invite flow should be able to mint."
      },
      "test_isAllowedToMint_fromWrongAllowlistAttestor_fails()": {
        "notice": "Attestation from the wrong allowlist attestor should not allow minting."
      },
      "test_isAllowedToMint_fromWrongCoinbaseQuestAttestor_fails()": {
        "notice": "Coinbase quest attestation from wrong attestor should not allow minting."
      },
      "test_isAllowedToMint_fromWrongOptimistInviter_fails()": {
        "notice": "Claiming an invite on the non-official OptimistInviter contract should not allow          minting."
      },
      "test_isAllowedToMint_withMultipleAttestations_succeeds()": {
        "notice": "Having multiple signals, even if one is invalid, should still allow minting."
      },
      "test_isAllowedToMint_withoutAnyAttestations_fails()": {
        "notice": "Base case, a account without any relevant attestations should not be able to mint."
      }
    }
  },
  "devdoc": {
    "version": 1,
    "kind": "dev"
  },
  "ast": {
    "absolutePath": "test/OptimistAllowlist.t.sol",
    "id": 136110,
    "exportedSymbols": {
      "AttestationStation": [
        79552
      ],
      "OptimistAllowlist": [
        79987
      ],
      "OptimistAllowlistTest": [
        136109
      ],
      "OptimistAllowlist_Initializer": [
        135744
      ],
      "OptimistConstants": [
        80337
      ],
      "OptimistInviter": [
        80326
      ],
      "OptimistInviterHelper": [
        104368
      ],
      "Test": [
        11539
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:9675:270",
    "nodes": [
      {
        "id": 135352,
        "nodeType": "PragmaDirective",
        "src": "32:23:270",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 135354,
        "nodeType": "ImportDirective",
        "src": "78:42:270",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 136110,
        "sourceUnit": 11540,
        "symbolAliases": [
          {
            "foreign": {
              "id": 135353,
              "name": "Test",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 11539,
              "src": "87:4:270",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 135356,
        "nodeType": "ImportDirective",
        "src": "121:81:270",
        "nodes": [],
        "absolutePath": "src/periphery/op-nft/AttestationStation.sol",
        "file": "src/periphery/op-nft/AttestationStation.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 136110,
        "sourceUnit": 79553,
        "symbolAliases": [
          {
            "foreign": {
              "id": 135355,
              "name": "AttestationStation",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 79552,
              "src": "130:18:270",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 135358,
        "nodeType": "ImportDirective",
        "src": "203:79:270",
        "nodes": [],
        "absolutePath": "src/periphery/op-nft/OptimistAllowlist.sol",
        "file": "src/periphery/op-nft/OptimistAllowlist.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 136110,
        "sourceUnit": 79988,
        "symbolAliases": [
          {
            "foreign": {
              "id": 135357,
              "name": "OptimistAllowlist",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 79987,
              "src": "212:17:270",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 135360,
        "nodeType": "ImportDirective",
        "src": "283:75:270",
        "nodes": [],
        "absolutePath": "src/periphery/op-nft/OptimistInviter.sol",
        "file": "src/periphery/op-nft/OptimistInviter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 136110,
        "sourceUnit": 80327,
        "symbolAliases": [
          {
            "foreign": {
              "id": 135359,
              "name": "OptimistInviter",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 80326,
              "src": "292:15:270",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 135362,
        "nodeType": "ImportDirective",
        "src": "359:57:270",
        "nodes": [],
        "absolutePath": "test/Helpers.sol",
        "file": "test/Helpers.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 136110,
        "sourceUnit": 104514,
        "symbolAliases": [
          {
            "foreign": {
              "id": 135361,
              "name": "OptimistInviterHelper",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 104368,
              "src": "368:21:270",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 135364,
        "nodeType": "ImportDirective",
        "src": "417:89:270",
        "nodes": [],
        "absolutePath": "src/periphery/op-nft/libraries/OptimistConstants.sol",
        "file": "src/periphery/op-nft/libraries/OptimistConstants.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 136110,
        "sourceUnit": 80338,
        "symbolAliases": [
          {
            "foreign": {
              "id": 135363,
              "name": "OptimistConstants",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 80337,
              "src": "426:17:270",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 135744,
        "nodeType": "ContractDefinition",
        "src": "508:4216:270",
        "nodes": [
          {
            "id": 135376,
            "nodeType": "EventDefinition",
            "src": "561:105:270",
            "nodes": [],
            "anonymous": false,
            "eventSelector": "28710dfecab43d1e29e02aa56b2e1e610c0bae19135c9cf7a83a1adb6df96d85",
            "name": "AttestationCreated",
            "nameLocation": "567:18:270",
            "parameters": {
              "id": 135375,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 135368,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "creator",
                  "nameLocation": "602:7:270",
                  "nodeType": "VariableDeclaration",
                  "scope": 135376,
                  "src": "586:23:270",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 135367,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "586:7:270",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 135370,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "about",
                  "nameLocation": "627:5:270",
                  "nodeType": "VariableDeclaration",
                  "scope": 135376,
                  "src": "611:21:270",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 135369,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "611:7:270",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 135372,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "key",
                  "nameLocation": "650:3:270",
                  "nodeType": "VariableDeclaration",
                  "scope": 135376,
                  "src": "634:19:270",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 135371,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "634:7:270",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 135374,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "val",
                  "nameLocation": "661:3:270",
                  "nodeType": "VariableDeclaration",
                  "scope": 135376,
                  "src": "655:9:270",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 135373,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "655:5:270",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "585:80:270"
            }
          },
          {
            "id": 135378,
            "nodeType": "VariableDeclaration",
            "src": "672:40:270",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "alice_allowlistAttestor",
            "nameLocation": "689:23:270",
            "scope": 135744,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 135377,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "672:7:270",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 135380,
            "nodeType": "VariableDeclaration",
            "src": "718:44:270",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "sally_coinbaseQuestAttestor",
            "nameLocation": "735:27:270",
            "scope": 135744,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 135379,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "718:7:270",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 135382,
            "nodeType": "VariableDeclaration",
            "src": "768:20:270",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "ted",
            "nameLocation": "785:3:270",
            "scope": 135744,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 135381,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "768:7:270",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 135384,
            "nodeType": "VariableDeclaration",
            "src": "795:30:270",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "bobPrivateKey",
            "nameLocation": "812:13:270",
            "scope": 135744,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 135383,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "795:7:270",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 135386,
            "nodeType": "VariableDeclaration",
            "src": "831:20:270",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "bob",
            "nameLocation": "848:3:270",
            "scope": 135744,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 135385,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "831:7:270",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 135389,
            "nodeType": "VariableDeclaration",
            "src": "858:37:270",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "attestationStation",
            "nameLocation": "877:18:270",
            "scope": 135744,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AttestationStation_$79552",
              "typeString": "contract AttestationStation"
            },
            "typeName": {
              "id": 135388,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 135387,
                "name": "AttestationStation",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 79552,
                "src": "858:18:270"
              },
              "referencedDeclaration": 79552,
              "src": "858:18:270",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AttestationStation_$79552",
                "typeString": "contract AttestationStation"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 135392,
            "nodeType": "VariableDeclaration",
            "src": "901:35:270",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "optimistAllowlist",
            "nameLocation": "919:17:270",
            "scope": 135744,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_OptimistAllowlist_$79987",
              "typeString": "contract OptimistAllowlist"
            },
            "typeName": {
              "id": 135391,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 135390,
                "name": "OptimistAllowlist",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 79987,
                "src": "901:17:270"
              },
              "referencedDeclaration": 79987,
              "src": "901:17:270",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OptimistAllowlist_$79987",
                "typeString": "contract OptimistAllowlist"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 135395,
            "nodeType": "VariableDeclaration",
            "src": "942:31:270",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "optimistInviter",
            "nameLocation": "958:15:270",
            "scope": 135744,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_OptimistInviter_$80326",
              "typeString": "contract OptimistInviter"
            },
            "typeName": {
              "id": 135394,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 135393,
                "name": "OptimistInviter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 80326,
                "src": "942:15:270"
              },
              "referencedDeclaration": 80326,
              "src": "942:15:270",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OptimistInviter_$80326",
                "typeString": "contract OptimistInviter"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 135398,
            "nodeType": "VariableDeclaration",
            "src": "1027:43:270",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "optimistInviterHelper",
            "nameLocation": "1049:21:270",
            "scope": 135744,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_OptimistInviterHelper_$104368",
              "typeString": "contract OptimistInviterHelper"
            },
            "typeName": {
              "id": 135397,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 135396,
                "name": "OptimistInviterHelper",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 104368,
                "src": "1027:21:270"
              },
              "referencedDeclaration": 104368,
              "src": "1027:21:270",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OptimistInviterHelper_$104368",
                "typeString": "contract OptimistInviterHelper"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 135469,
            "nodeType": "FunctionDefinition",
            "src": "1077:568:270",
            "nodes": [],
            "body": {
              "id": 135468,
              "nodeType": "Block",
              "src": "1101:544:270",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 135405,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 135401,
                      "name": "alice_allowlistAttestor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 135378,
                      "src": "1111:23:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "616c6963655f616c6c6f776c6973744174746573746f72",
                          "id": 135403,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1146:25:270",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_1a532924a33c891785a403c6978a7794470a29efc20e0f5443c4f4607a4f14a0",
                            "typeString": "literal_string \"alice_allowlistAttestor\""
                          },
                          "value": "alice_allowlistAttestor"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_1a532924a33c891785a403c6978a7794470a29efc20e0f5443c4f4607a4f14a0",
                            "typeString": "literal_string \"alice_allowlistAttestor\""
                          }
                        ],
                        "id": 135402,
                        "name": "makeAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6056,
                        "src": "1137:8:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_address_$",
                          "typeString": "function (string memory) returns (address)"
                        }
                      },
                      "id": 135404,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1137:35:270",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1111:61:270",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 135406,
                  "nodeType": "ExpressionStatement",
                  "src": "1111:61:270"
                },
                {
                  "expression": {
                    "id": 135411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 135407,
                      "name": "sally_coinbaseQuestAttestor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 135380,
                      "src": "1182:27:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "73616c6c795f636f696e6261736551756573744174746573746f72",
                          "id": 135409,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1221:29:270",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_93d30dfdad791c18650c4bec00bc083c3c78341af41f97e3738ff7eba705ece7",
                            "typeString": "literal_string \"sally_coinbaseQuestAttestor\""
                          },
                          "value": "sally_coinbaseQuestAttestor"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_93d30dfdad791c18650c4bec00bc083c3c78341af41f97e3738ff7eba705ece7",
                            "typeString": "literal_string \"sally_coinbaseQuestAttestor\""
                          }
                        ],
                        "id": 135408,
                        "name": "makeAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6056,
                        "src": "1212:8:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_address_$",
                          "typeString": "function (string memory) returns (address)"
                        }
                      },
                      "id": 135410,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1212:39:270",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1182:69:270",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 135412,
                  "nodeType": "ExpressionStatement",
                  "src": "1182:69:270"
                },
                {
                  "expression": {
                    "id": 135417,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 135413,
                      "name": "ted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 135382,
                      "src": "1261:3:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "hexValue": "746564",
                          "id": 135415,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1276:5:270",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_2a6164b193c097414f141367909e9588ffea11f645f7d9ccd0a1bd7763362541",
                            "typeString": "literal_string \"ted\""
                          },
                          "value": "ted"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_stringliteral_2a6164b193c097414f141367909e9588ffea11f645f7d9ccd0a1bd7763362541",
                            "typeString": "literal_string \"ted\""
                          }
                        ],
                        "id": 135414,
                        "name": "makeAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 6056,
                        "src": "1267:8:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$returns$_t_address_$",
                          "typeString": "function (string memory) returns (address)"
                        }
                      },
                      "id": 135416,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1267:15:270",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1261:21:270",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 135418,
                  "nodeType": "ExpressionStatement",
                  "src": "1261:21:270"
                },
                {
                  "expression": {
                    "id": 135421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 135419,
                      "name": "bobPrivateKey",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 135384,
                      "src": "1293:13:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "30784230423042304230",
                      "id": 135420,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1309:10:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_2964369584_by_1",
                        "typeString": "int_const 2964369584"
                      },
                      "value": "0xB0B0B0B0"
                    },
                    "src": "1293:26:270",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 135422,
                  "nodeType": "ExpressionStatement",
                  "src": "1293:26:270"
                },
                {
                  "expression": {
                    "id": 135428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 135423,
                      "name": "bob",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 135386,
                      "src": "1329:3:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 135426,
                          "name": "bobPrivateKey",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 135384,
                          "src": "1343:13:270",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 135424,
                          "name": "vm",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 2381,
                          "src": "1335:2:270",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_Vm_$13045",
                            "typeString": "contract Vm"
                          }
                        },
                        "id": 135425,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "addr",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 11610,
                        "src": "1335:7:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_pure$_t_uint256_$returns$_t_address_$",
                          "typeString": "function (uint256) pure external returns (address)"
                        }
                      },
                      "id": 135427,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1335:22:270",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1329:28:270",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 135429,
                  "nodeType": "ExpressionStatement",
                  "src": "1329:28:270"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 135433,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135386,
                        "src": "1376:3:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "626f62",
                        "id": 135434,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1381:5:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_38e47a7b719dce63662aeaf43440326f551b8a7ee198cee35cb5d517f2d296a2",
                          "typeString": "literal_string \"bob\""
                        },
                        "value": "bob"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_38e47a7b719dce63662aeaf43440326f551b8a7ee198cee35cb5d517f2d296a2",
                          "typeString": "literal_string \"bob\""
                        }
                      ],
                      "expression": {
                        "id": 135430,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2381,
                        "src": "1367:2:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13045",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 135432,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "label",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11940,
                      "src": "1367:8:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (address,string memory) external"
                      }
                    },
                    "id": 135435,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1367:20:270",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 135436,
                  "nodeType": "ExpressionStatement",
                  "src": "1367:20:270"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 135440,
                        "name": "alice_allowlistAttestor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135378,
                        "src": "1455:23:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 135441,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1480:7:270",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 135437,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2381,
                        "src": "1447:2:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13045",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 135439,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12687,
                      "src": "1447:7:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 135442,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1447:41:270",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 135443,
                  "nodeType": "ExpressionStatement",
                  "src": "1447:41:270"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 135447,
                        "name": "sally_coinbaseQuestAttestor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135380,
                        "src": "1506:27:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 135448,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1535:7:270",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 135444,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2381,
                        "src": "1498:2:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13045",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 135446,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12687,
                      "src": "1498:7:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 135449,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1498:45:270",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 135450,
                  "nodeType": "ExpressionStatement",
                  "src": "1498:45:270"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 135454,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135386,
                        "src": "1561:3:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 135455,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1566:7:270",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 135451,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2381,
                        "src": "1553:2:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13045",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 135453,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12687,
                      "src": "1553:7:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 135456,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1553:21:270",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 135457,
                  "nodeType": "ExpressionStatement",
                  "src": "1553:21:270"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 135461,
                        "name": "ted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135382,
                        "src": "1592:3:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 135462,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1597:7:270",
                        "subdenomination": "ether",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_rational_1000000000000000000_by_1",
                          "typeString": "int_const 1000000000000000000"
                        }
                      ],
                      "expression": {
                        "id": 135458,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2381,
                        "src": "1584:2:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13045",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 135460,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "deal",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12687,
                      "src": "1584:7:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256) external"
                      }
                    },
                    "id": 135463,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1584:21:270",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 135464,
                  "nodeType": "ExpressionStatement",
                  "src": "1584:21:270"
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 135465,
                      "name": "_initializeContracts",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 135743,
                      "src": "1616:20:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 135466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1616:22:270",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 135467,
                  "nodeType": "ExpressionStatement",
                  "src": "1616:22:270"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "1086:5:270",
            "parameters": {
              "id": 135399,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1091:2:270"
            },
            "returnParameters": {
              "id": 135400,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1101:0:270"
            },
            "scope": 135744,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 135516,
            "nodeType": "FunctionDefinition",
            "src": "1651:538:270",
            "nodes": [],
            "body": {
              "id": 135515,
              "nodeType": "Block",
              "src": "1701:488:270",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    135479
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 135479,
                      "mutability": "mutable",
                      "name": "attestationData",
                      "nameLocation": "1755:15:270",
                      "nodeType": "VariableDeclaration",
                      "scope": 135515,
                      "src": "1711:59:270",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_AttestationData_$79448_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct AttestationStation.AttestationData[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 135477,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 135476,
                            "name": "AttestationStation.AttestationData",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 79448,
                            "src": "1711:34:270"
                          },
                          "referencedDeclaration": 79448,
                          "src": "1711:34:270",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AttestationData_$79448_storage_ptr",
                            "typeString": "struct AttestationStation.AttestationData"
                          }
                        },
                        "id": 135478,
                        "nodeType": "ArrayTypeName",
                        "src": "1711:36:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AttestationData_$79448_storage_$dyn_storage_ptr",
                          "typeString": "struct AttestationStation.AttestationData[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 135486,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 135484,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1814:1:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 135483,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1773:40:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_AttestationData_$79448_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct AttestationStation.AttestationData memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 135481,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 135480,
                            "name": "AttestationStation.AttestationData",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 79448,
                            "src": "1777:34:270"
                          },
                          "referencedDeclaration": 79448,
                          "src": "1777:34:270",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AttestationData_$79448_storage_ptr",
                            "typeString": "struct AttestationStation.AttestationData"
                          }
                        },
                        "id": 135482,
                        "nodeType": "ArrayTypeName",
                        "src": "1777:36:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AttestationData_$79448_storage_$dyn_storage_ptr",
                          "typeString": "struct AttestationStation.AttestationData[]"
                        }
                      }
                    },
                    "id": 135485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1773:43:270",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_AttestationData_$79448_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct AttestationStation.AttestationData memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1711:105:270"
                },
                {
                  "expression": {
                    "id": 135501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 135487,
                        "name": "attestationData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135479,
                        "src": "1889:15:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AttestationData_$79448_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AttestationStation.AttestationData memory[] memory"
                        }
                      },
                      "id": 135489,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 135488,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1905:1:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1889:18:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AttestationData_$79448_memory_ptr",
                        "typeString": "struct AttestationStation.AttestationData memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 135492,
                          "name": "_about",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 135471,
                          "src": "1966:6:270",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 135493,
                              "name": "optimistAllowlist",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 135392,
                              "src": "1991:17:270",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OptimistAllowlist_$79987",
                                "typeString": "contract OptimistAllowlist"
                              }
                            },
                            "id": 135494,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "OPTIMIST_CAN_MINT_ATTESTATION_KEY",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 79831,
                            "src": "1991:51:270",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
                              "typeString": "function () view external returns (bytes32)"
                            }
                          },
                          "id": 135495,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1991:53:270",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "74727565",
                              "id": 135498,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2069:6:270",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6273151f959616268004b58dbb21e5c851b7b8d04498b4aabee12291d22fc034",
                                "typeString": "literal_string \"true\""
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_6273151f959616268004b58dbb21e5c851b7b8d04498b4aabee12291d22fc034",
                                "typeString": "literal_string \"true\""
                              }
                            ],
                            "id": 135497,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2063:5:270",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 135496,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "2063:5:270",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 135499,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2063:13:270",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "id": 135490,
                          "name": "AttestationStation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79552,
                          "src": "1910:18:270",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_AttestationStation_$79552_$",
                            "typeString": "type(contract AttestationStation)"
                          }
                        },
                        "id": 135491,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "AttestationData",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 79448,
                        "src": "1910:34:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_AttestationData_$79448_storage_ptr_$",
                          "typeString": "type(struct AttestationStation.AttestationData storage pointer)"
                        }
                      },
                      "id": 135500,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "about",
                        "key",
                        "val"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "1910:177:270",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AttestationData_$79448_memory_ptr",
                        "typeString": "struct AttestationStation.AttestationData memory"
                      }
                    },
                    "src": "1889:198:270",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AttestationData_$79448_memory_ptr",
                      "typeString": "struct AttestationStation.AttestationData memory"
                    }
                  },
                  "id": 135502,
                  "nodeType": "ExpressionStatement",
                  "src": "1889:198:270"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 135506,
                        "name": "alice_allowlistAttestor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135378,
                        "src": "2106:23:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 135503,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2381,
                        "src": "2097:2:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13045",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 135505,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12658,
                      "src": "2097:8:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 135507,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2097:33:270",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 135508,
                  "nodeType": "ExpressionStatement",
                  "src": "2097:33:270"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 135512,
                        "name": "attestationData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135479,
                        "src": "2166:15:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AttestationData_$79448_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AttestationStation.AttestationData memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_AttestationData_$79448_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AttestationStation.AttestationData memory[] memory"
                        }
                      ],
                      "expression": {
                        "id": 135509,
                        "name": "attestationStation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135389,
                        "src": "2140:18:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AttestationStation_$79552",
                          "typeString": "contract AttestationStation"
                        }
                      },
                      "id": 135511,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "attest",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 79551,
                      "src": "2140:25:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_struct$_AttestationData_$79448_memory_ptr_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (struct AttestationStation.AttestationData memory[] memory) external"
                      }
                    },
                    "id": 135513,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2140:42:270",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 135514,
                  "nodeType": "ExpressionStatement",
                  "src": "2140:42:270"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "attestAllowlist",
            "nameLocation": "1660:15:270",
            "parameters": {
              "id": 135472,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 135471,
                  "mutability": "mutable",
                  "name": "_about",
                  "nameLocation": "1684:6:270",
                  "nodeType": "VariableDeclaration",
                  "scope": 135516,
                  "src": "1676:14:270",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 135470,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1676:7:270",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1675:16:270"
            },
            "returnParameters": {
              "id": 135473,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1701:0:270"
            },
            "scope": 135744,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 135563,
            "nodeType": "FunctionDefinition",
            "src": "2195:552:270",
            "nodes": [],
            "body": {
              "id": 135562,
              "nodeType": "Block",
              "src": "2249:498:270",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    135526
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 135526,
                      "mutability": "mutable",
                      "name": "attestationData",
                      "nameLocation": "2303:15:270",
                      "nodeType": "VariableDeclaration",
                      "scope": 135562,
                      "src": "2259:59:270",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_AttestationData_$79448_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct AttestationStation.AttestationData[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 135524,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 135523,
                            "name": "AttestationStation.AttestationData",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 79448,
                            "src": "2259:34:270"
                          },
                          "referencedDeclaration": 79448,
                          "src": "2259:34:270",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AttestationData_$79448_storage_ptr",
                            "typeString": "struct AttestationStation.AttestationData"
                          }
                        },
                        "id": 135525,
                        "nodeType": "ArrayTypeName",
                        "src": "2259:36:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AttestationData_$79448_storage_$dyn_storage_ptr",
                          "typeString": "struct AttestationStation.AttestationData[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 135533,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 135531,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2362:1:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 135530,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2321:40:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_struct$_AttestationData_$79448_memory_ptr_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (struct AttestationStation.AttestationData memory[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 135528,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 135527,
                            "name": "AttestationStation.AttestationData",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 79448,
                            "src": "2325:34:270"
                          },
                          "referencedDeclaration": 79448,
                          "src": "2325:34:270",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_AttestationData_$79448_storage_ptr",
                            "typeString": "struct AttestationStation.AttestationData"
                          }
                        },
                        "id": 135529,
                        "nodeType": "ArrayTypeName",
                        "src": "2325:36:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AttestationData_$79448_storage_$dyn_storage_ptr",
                          "typeString": "struct AttestationStation.AttestationData[]"
                        }
                      }
                    },
                    "id": 135532,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2321:43:270",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_AttestationData_$79448_memory_ptr_$dyn_memory_ptr",
                      "typeString": "struct AttestationStation.AttestationData memory[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2259:105:270"
                },
                {
                  "expression": {
                    "id": 135548,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 135534,
                        "name": "attestationData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135526,
                        "src": "2437:15:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AttestationData_$79448_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AttestationStation.AttestationData memory[] memory"
                        }
                      },
                      "id": 135536,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 135535,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2453:1:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2437:18:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AttestationData_$79448_memory_ptr",
                        "typeString": "struct AttestationStation.AttestationData memory"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 135539,
                          "name": "_about",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 135518,
                          "src": "2514:6:270",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 135540,
                              "name": "optimistAllowlist",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 135392,
                              "src": "2539:17:270",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OptimistAllowlist_$79987",
                                "typeString": "contract OptimistAllowlist"
                              }
                            },
                            "id": 135541,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "COINBASE_QUEST_ELIGIBLE_ATTESTATION_KEY",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 79838,
                            "src": "2539:57:270",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
                              "typeString": "function () view external returns (bytes32)"
                            }
                          },
                          "id": 135542,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2539:59:270",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "hexValue": "74727565",
                              "id": 135545,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2623:6:270",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_6273151f959616268004b58dbb21e5c851b7b8d04498b4aabee12291d22fc034",
                                "typeString": "literal_string \"true\""
                              },
                              "value": "true"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_stringliteral_6273151f959616268004b58dbb21e5c851b7b8d04498b4aabee12291d22fc034",
                                "typeString": "literal_string \"true\""
                              }
                            ],
                            "id": 135544,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "2617:5:270",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                              "typeString": "type(bytes storage pointer)"
                            },
                            "typeName": {
                              "id": 135543,
                              "name": "bytes",
                              "nodeType": "ElementaryTypeName",
                              "src": "2617:5:270",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 135546,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2617:13:270",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "id": 135537,
                          "name": "AttestationStation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79552,
                          "src": "2458:18:270",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_AttestationStation_$79552_$",
                            "typeString": "type(contract AttestationStation)"
                          }
                        },
                        "id": 135538,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "AttestationData",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 79448,
                        "src": "2458:34:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_struct$_AttestationData_$79448_storage_ptr_$",
                          "typeString": "type(struct AttestationStation.AttestationData storage pointer)"
                        }
                      },
                      "id": 135547,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "structConstructorCall",
                      "lValueRequested": false,
                      "names": [
                        "about",
                        "key",
                        "val"
                      ],
                      "nodeType": "FunctionCall",
                      "src": "2458:183:270",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_AttestationData_$79448_memory_ptr",
                        "typeString": "struct AttestationStation.AttestationData memory"
                      }
                    },
                    "src": "2437:204:270",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_AttestationData_$79448_memory_ptr",
                      "typeString": "struct AttestationStation.AttestationData memory"
                    }
                  },
                  "id": 135549,
                  "nodeType": "ExpressionStatement",
                  "src": "2437:204:270"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 135553,
                        "name": "sally_coinbaseQuestAttestor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135380,
                        "src": "2660:27:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 135550,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2381,
                        "src": "2651:2:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13045",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 135552,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12658,
                      "src": "2651:8:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 135554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2651:37:270",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 135555,
                  "nodeType": "ExpressionStatement",
                  "src": "2651:37:270"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 135559,
                        "name": "attestationData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135526,
                        "src": "2724:15:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_AttestationData_$79448_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AttestationStation.AttestationData memory[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_struct$_AttestationData_$79448_memory_ptr_$dyn_memory_ptr",
                          "typeString": "struct AttestationStation.AttestationData memory[] memory"
                        }
                      ],
                      "expression": {
                        "id": 135556,
                        "name": "attestationStation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135389,
                        "src": "2698:18:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AttestationStation_$79552",
                          "typeString": "contract AttestationStation"
                        }
                      },
                      "id": 135558,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "attest",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 79551,
                      "src": "2698:25:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_struct$_AttestationData_$79448_memory_ptr_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (struct AttestationStation.AttestationData memory[] memory) external"
                      }
                    },
                    "id": 135560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2698:42:270",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 135561,
                  "nodeType": "ExpressionStatement",
                  "src": "2698:42:270"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "attestCoinbaseQuest",
            "nameLocation": "2204:19:270",
            "parameters": {
              "id": 135519,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 135518,
                  "mutability": "mutable",
                  "name": "_about",
                  "nameLocation": "2232:6:270",
                  "nodeType": "VariableDeclaration",
                  "scope": 135563,
                  "src": "2224:14:270",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 135517,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2224:7:270",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2223:16:270"
            },
            "returnParameters": {
              "id": 135520,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2249:0:270"
            },
            "scope": 135744,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 135660,
            "nodeType": "FunctionDefinition",
            "src": "2753:1018:270",
            "nodes": [],
            "body": {
              "id": 135659,
              "nodeType": "Block",
              "src": "2803:968:270",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    135572
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 135572,
                      "mutability": "mutable",
                      "name": "addresses",
                      "nameLocation": "2830:9:270",
                      "nodeType": "VariableDeclaration",
                      "scope": 135659,
                      "src": "2813:26:270",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 135570,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2813:7:270",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 135571,
                        "nodeType": "ArrayTypeName",
                        "src": "2813:9:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 135578,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 135576,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2856:1:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 135575,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "2842:13:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (address[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 135573,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "2846:7:270",
                          "stateMutability": "nonpayable",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 135574,
                        "nodeType": "ArrayTypeName",
                        "src": "2846:9:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      }
                    },
                    "id": 135577,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2842:16:270",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2813:45:270"
                },
                {
                  "expression": {
                    "id": 135583,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 135579,
                        "name": "addresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135572,
                        "src": "2868:9:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      "id": 135581,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 135580,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2878:1:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2868:12:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 135582,
                      "name": "bob",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 135386,
                      "src": "2883:3:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2868:18:270",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 135584,
                  "nodeType": "ExpressionStatement",
                  "src": "2868:18:270"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 135588,
                        "name": "alice_allowlistAttestor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135378,
                        "src": "2906:23:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 135585,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2381,
                        "src": "2897:2:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13045",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 135587,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12658,
                      "src": "2897:8:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 135589,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2897:33:270",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 135590,
                  "nodeType": "ExpressionStatement",
                  "src": "2897:33:270"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 135594,
                        "name": "addresses",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135572,
                        "src": "3006:9:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        }
                      },
                      {
                        "hexValue": "33",
                        "id": 135595,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3017:1:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        },
                        "value": "3"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                          "typeString": "address[] memory"
                        },
                        {
                          "typeIdentifier": "t_rational_3_by_1",
                          "typeString": "int_const 3"
                        }
                      ],
                      "expression": {
                        "id": 135591,
                        "name": "optimistInviter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135395,
                        "src": "2974:15:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimistInviter_$80326",
                          "typeString": "contract OptimistInviter"
                        }
                      },
                      "id": 135593,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "setInviteCounts",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 80176,
                      "src": "2974:31:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_array$_t_address_$dyn_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (address[] memory,uint256) external"
                      }
                    },
                    "id": 135596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2974:45:270",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 135597,
                  "nodeType": "ExpressionStatement",
                  "src": "2974:45:270"
                },
                {
                  "assignments": [
                    135602
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 135602,
                      "mutability": "mutable",
                      "name": "claimableInvite",
                      "nameLocation": "3099:15:270",
                      "nodeType": "VariableDeclaration",
                      "scope": 135659,
                      "src": "3060:54:270",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_ClaimableInvite_$80044_memory_ptr",
                        "typeString": "struct OptimistInviter.ClaimableInvite"
                      },
                      "typeName": {
                        "id": 135601,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 135600,
                          "name": "OptimistInviter.ClaimableInvite",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 80044,
                          "src": "3060:31:270"
                        },
                        "referencedDeclaration": 80044,
                        "src": "3060:31:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ClaimableInvite_$80044_storage_ptr",
                          "typeString": "struct OptimistInviter.ClaimableInvite"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 135607,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 135605,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135386,
                        "src": "3182:3:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 135603,
                        "name": "optimistInviterHelper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135398,
                        "src": "3129:21:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimistInviterHelper_$104368",
                          "typeString": "contract OptimistInviterHelper"
                        }
                      },
                      "id": 135604,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getClaimableInviteWithNewNonce",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 104294,
                      "src": "3129:52:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$_t_struct$_ClaimableInvite_$80044_memory_ptr_$",
                        "typeString": "function (address) external returns (struct OptimistInviter.ClaimableInvite memory)"
                      }
                    },
                    "id": 135606,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3129:57:270",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ClaimableInvite_$80044_memory_ptr",
                      "typeString": "struct OptimistInviter.ClaimableInvite memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3060:126:270"
                },
                {
                  "assignments": [
                    135609
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 135609,
                      "mutability": "mutable",
                      "name": "signature",
                      "nameLocation": "3257:9:270",
                      "nodeType": "VariableDeclaration",
                      "scope": 135659,
                      "src": "3244:22:270",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 135608,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "3244:5:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 135617,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 135611,
                        "name": "bobPrivateKey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135384,
                        "src": "3283:13:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 135614,
                            "name": "claimableInvite",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135602,
                            "src": "3330:15:270",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ClaimableInvite_$80044_memory_ptr",
                              "typeString": "struct OptimistInviter.ClaimableInvite memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_ClaimableInvite_$80044_memory_ptr",
                              "typeString": "struct OptimistInviter.ClaimableInvite memory"
                            }
                          ],
                          "expression": {
                            "id": 135612,
                            "name": "optimistInviterHelper",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135398,
                            "src": "3298:21:270",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimistInviterHelper_$104368",
                              "typeString": "contract OptimistInviterHelper"
                            }
                          },
                          "id": 135613,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "getDigest",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 104324,
                          "src": "3298:31:270",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_struct$_ClaimableInvite_$80044_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (struct OptimistInviter.ClaimableInvite memory) view external returns (bytes32)"
                          }
                        },
                        "id": 135615,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3298:48:270",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 135610,
                      "name": "_getSignature",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 135694,
                      "src": "3269:13:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_bytes32_$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function (uint256,bytes32) pure returns (bytes memory)"
                      }
                    },
                    "id": 135616,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3269:78:270",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3244:103:270"
                },
                {
                  "assignments": [
                    135619
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 135619,
                      "mutability": "mutable",
                      "name": "hashedCommit",
                      "nameLocation": "3366:12:270",
                      "nodeType": "VariableDeclaration",
                      "scope": 135659,
                      "src": "3358:20:270",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 135618,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3358:7:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 135627,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 135623,
                            "name": "claimer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135565,
                            "src": "3402:7:270",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 135624,
                            "name": "signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135609,
                            "src": "3411:9:270",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 135621,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3391:3:270",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 135622,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "3391:10:270",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 135625,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3391:30:270",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 135620,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "3381:9:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 135626,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3381:41:270",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3358:64:270"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 135631,
                        "name": "claimer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135565,
                        "src": "3471:7:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 135628,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2381,
                        "src": "3462:2:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13045",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 135630,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12658,
                      "src": "3462:8:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 135632,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3462:17:270",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 135633,
                  "nodeType": "ExpressionStatement",
                  "src": "3462:17:270"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 135637,
                        "name": "hashedCommit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135619,
                        "src": "3518:12:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 135634,
                        "name": "optimistInviter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135395,
                        "src": "3489:15:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimistInviter_$80326",
                          "typeString": "contract OptimistInviter"
                        }
                      },
                      "id": 135636,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "commitInvite",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 80199,
                      "src": "3489:28:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32) external"
                      }
                    },
                    "id": 135638,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3489:42:270",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 135639,
                  "nodeType": "ExpressionStatement",
                  "src": "3489:42:270"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 135648,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [],
                          "expression": {
                            "argumentTypes": [],
                            "expression": {
                              "id": 135643,
                              "name": "optimistInviter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 135395,
                              "src": "3592:15:270",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OptimistInviter_$80326",
                                "typeString": "contract OptimistInviter"
                              }
                            },
                            "id": 135644,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "MIN_COMMITMENT_PERIOD",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 80039,
                            "src": "3592:37:270",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$__$returns$_t_uint256_$",
                              "typeString": "function () view external returns (uint256)"
                            }
                          },
                          "id": 135645,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "3592:39:270",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "+",
                        "rightExpression": {
                          "expression": {
                            "id": 135646,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "3634:5:270",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 135647,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "3634:15:270",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "3592:57:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 135640,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2381,
                        "src": "3584:2:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13045",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 135642,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "warp",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12595,
                      "src": "3584:7:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256) external"
                      }
                    },
                    "id": 135649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3584:66:270",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 135650,
                  "nodeType": "ExpressionStatement",
                  "src": "3584:66:270"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 135654,
                        "name": "claimer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135565,
                        "src": "3728:7:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 135655,
                        "name": "claimableInvite",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135602,
                        "src": "3737:15:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ClaimableInvite_$80044_memory_ptr",
                          "typeString": "struct OptimistInviter.ClaimableInvite memory"
                        }
                      },
                      {
                        "id": 135656,
                        "name": "signature",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135609,
                        "src": "3754:9:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_struct$_ClaimableInvite_$80044_memory_ptr",
                          "typeString": "struct OptimistInviter.ClaimableInvite memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 135651,
                        "name": "optimistInviter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135395,
                        "src": "3700:15:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimistInviter_$80326",
                          "typeString": "contract OptimistInviter"
                        }
                      },
                      "id": 135653,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "claimInvite",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 80325,
                      "src": "3700:27:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_struct$_ClaimableInvite_$80044_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,struct OptimistInviter.ClaimableInvite memory,bytes memory) external"
                      }
                    },
                    "id": 135657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3700:64:270",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 135658,
                  "nodeType": "ExpressionStatement",
                  "src": "3700:64:270"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "inviteAndClaim",
            "nameLocation": "2762:14:270",
            "parameters": {
              "id": 135566,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 135565,
                  "mutability": "mutable",
                  "name": "claimer",
                  "nameLocation": "2785:7:270",
                  "nodeType": "VariableDeclaration",
                  "scope": 135660,
                  "src": "2777:15:270",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 135564,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2777:7:270",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2776:17:270"
            },
            "returnParameters": {
              "id": 135567,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2803:0:270"
            },
            "scope": 135744,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 135694,
            "nodeType": "FunctionDefinition",
            "src": "3880:279:270",
            "nodes": [],
            "body": {
              "id": 135693,
              "nodeType": "Block",
              "src": "3985:174:270",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    135671,
                    135673,
                    135675
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 135671,
                      "mutability": "mutable",
                      "name": "v",
                      "nameLocation": "4002:1:270",
                      "nodeType": "VariableDeclaration",
                      "scope": 135693,
                      "src": "3996:7:270",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 135670,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "3996:5:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 135673,
                      "mutability": "mutable",
                      "name": "r",
                      "nameLocation": "4013:1:270",
                      "nodeType": "VariableDeclaration",
                      "scope": 135693,
                      "src": "4005:9:270",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 135672,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4005:7:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 135675,
                      "mutability": "mutable",
                      "name": "s",
                      "nameLocation": "4024:1:270",
                      "nodeType": "VariableDeclaration",
                      "scope": 135693,
                      "src": "4016:9:270",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 135674,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "4016:7:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 135681,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 135678,
                        "name": "_signingPrivateKey",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135663,
                        "src": "4037:18:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 135679,
                        "name": "_digest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135665,
                        "src": "4057:7:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 135676,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2381,
                        "src": "4029:2:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13045",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 135677,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sign",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 11603,
                      "src": "4029:7:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_pure$_t_uint256_$_t_bytes32_$returns$_t_uint8_$_t_bytes32_$_t_bytes32_$",
                        "typeString": "function (uint256,bytes32) pure external returns (uint8,bytes32,bytes32)"
                      }
                    },
                    "id": 135680,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4029:36:270",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint8_$_t_bytes32_$_t_bytes32_$",
                      "typeString": "tuple(uint8,bytes32,bytes32)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "3995:70:270"
                },
                {
                  "assignments": [
                    135683
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 135683,
                      "mutability": "mutable",
                      "name": "signature",
                      "nameLocation": "4089:9:270",
                      "nodeType": "VariableDeclaration",
                      "scope": 135693,
                      "src": "4076:22:270",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 135682,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "4076:5:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 135690,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 135686,
                        "name": "r",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135673,
                        "src": "4118:1:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 135687,
                        "name": "s",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135675,
                        "src": "4121:1:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 135688,
                        "name": "v",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135671,
                        "src": "4124:1:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      ],
                      "expression": {
                        "id": 135684,
                        "name": "abi",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -1,
                        "src": "4101:3:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_abi",
                          "typeString": "abi"
                        }
                      },
                      "id": 135685,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "encodePacked",
                      "nodeType": "MemberAccess",
                      "src": "4101:16:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                        "typeString": "function () pure returns (bytes memory)"
                      }
                    },
                    "id": 135689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4101:25:270",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4076:50:270"
                },
                {
                  "expression": {
                    "id": 135691,
                    "name": "signature",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 135683,
                    "src": "4143:9:270",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_memory_ptr",
                      "typeString": "bytes memory"
                    }
                  },
                  "functionReturnParameters": 135669,
                  "id": 135692,
                  "nodeType": "Return",
                  "src": "4136:16:270"
                }
              ]
            },
            "documentation": {
              "id": 135661,
              "nodeType": "StructuredDocumentation",
              "src": "3777:98:270",
              "text": "@notice Get signature as a bytes blob, since SignatureChecker takes arbitrary signature blobs."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_getSignature",
            "nameLocation": "3889:13:270",
            "parameters": {
              "id": 135666,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 135663,
                  "mutability": "mutable",
                  "name": "_signingPrivateKey",
                  "nameLocation": "3911:18:270",
                  "nodeType": "VariableDeclaration",
                  "scope": 135694,
                  "src": "3903:26:270",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 135662,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3903:7:270",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 135665,
                  "mutability": "mutable",
                  "name": "_digest",
                  "nameLocation": "3939:7:270",
                  "nodeType": "VariableDeclaration",
                  "scope": 135694,
                  "src": "3931:15:270",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 135664,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3931:7:270",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3902:45:270"
            },
            "returnParameters": {
              "id": 135669,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 135668,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 135694,
                  "src": "3971:12:270",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 135667,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3971:5:270",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3970:14:270"
            },
            "scope": 135744,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 135743,
            "nodeType": "FunctionDefinition",
            "src": "4165:557:270",
            "nodes": [],
            "body": {
              "id": 135742,
              "nodeType": "Block",
              "src": "4206:516:270",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 135702,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 135697,
                      "name": "attestationStation",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 135389,
                      "src": "4216:18:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AttestationStation_$79552",
                        "typeString": "contract AttestationStation"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 135700,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "4237:22:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_AttestationStation_$79552_$",
                          "typeString": "function () returns (contract AttestationStation)"
                        },
                        "typeName": {
                          "id": 135699,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 135698,
                            "name": "AttestationStation",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 79552,
                            "src": "4241:18:270"
                          },
                          "referencedDeclaration": 79552,
                          "src": "4241:18:270",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AttestationStation_$79552",
                            "typeString": "contract AttestationStation"
                          }
                        }
                      },
                      "id": 135701,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4237:24:270",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AttestationStation_$79552",
                        "typeString": "contract AttestationStation"
                      }
                    },
                    "src": "4216:45:270",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AttestationStation_$79552",
                      "typeString": "contract AttestationStation"
                    }
                  },
                  "id": 135703,
                  "nodeType": "ExpressionStatement",
                  "src": "4216:45:270"
                },
                {
                  "expression": {
                    "id": 135711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 135704,
                      "name": "optimistInviter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 135395,
                      "src": "4272:15:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OptimistInviter_$80326",
                        "typeString": "contract OptimistInviter"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 135708,
                          "name": "alice_allowlistAttestor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 135378,
                          "src": "4310:23:270",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 135709,
                          "name": "attestationStation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 135389,
                          "src": "4335:18:270",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AttestationStation_$79552",
                            "typeString": "contract AttestationStation"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_contract$_AttestationStation_$79552",
                            "typeString": "contract AttestationStation"
                          }
                        ],
                        "id": 135707,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "4290:19:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_address_$_t_contract$_AttestationStation_$79552_$returns$_t_contract$_OptimistInviter_$80326_$",
                          "typeString": "function (address,contract AttestationStation) returns (contract OptimistInviter)"
                        },
                        "typeName": {
                          "id": 135706,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 135705,
                            "name": "OptimistInviter",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 80326,
                            "src": "4294:15:270"
                          },
                          "referencedDeclaration": 80326,
                          "src": "4294:15:270",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OptimistInviter_$80326",
                            "typeString": "contract OptimistInviter"
                          }
                        }
                      },
                      "id": 135710,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4290:64:270",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OptimistInviter_$80326",
                        "typeString": "contract OptimistInviter"
                      }
                    },
                    "src": "4272:82:270",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OptimistInviter_$80326",
                      "typeString": "contract OptimistInviter"
                    }
                  },
                  "id": 135712,
                  "nodeType": "ExpressionStatement",
                  "src": "4272:82:270"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "4f7074696d697374496e7669746572",
                        "id": 135716,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4391:17:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_864e3d1ed7cca9bbc038030f43e1b88a93f10f2414bccf59b3f17382d621ebf9",
                          "typeString": "literal_string \"OptimistInviter\""
                        },
                        "value": "OptimistInviter"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_864e3d1ed7cca9bbc038030f43e1b88a93f10f2414bccf59b3f17382d621ebf9",
                          "typeString": "literal_string \"OptimistInviter\""
                        }
                      ],
                      "expression": {
                        "id": 135713,
                        "name": "optimistInviter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135395,
                        "src": "4364:15:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimistInviter_$80326",
                          "typeString": "contract OptimistInviter"
                        }
                      },
                      "id": 135715,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "initialize",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 80098,
                      "src": "4364:26:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) external"
                      }
                    },
                    "id": 135717,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4364:45:270",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 135718,
                  "nodeType": "ExpressionStatement",
                  "src": "4364:45:270"
                },
                {
                  "expression": {
                    "id": 135731,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 135719,
                      "name": "optimistAllowlist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 135392,
                      "src": "4420:17:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OptimistAllowlist_$79987",
                        "typeString": "contract OptimistAllowlist"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 135723,
                          "name": "attestationStation",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 135389,
                          "src": "4475:18:270",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AttestationStation_$79552",
                            "typeString": "contract AttestationStation"
                          }
                        },
                        {
                          "id": 135724,
                          "name": "alice_allowlistAttestor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 135378,
                          "src": "4507:23:270",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 135725,
                          "name": "sally_coinbaseQuestAttestor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 135380,
                          "src": "4544:27:270",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "id": 135728,
                              "name": "optimistInviter",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 135395,
                              "src": "4593:15:270",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OptimistInviter_$80326",
                                "typeString": "contract OptimistInviter"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_OptimistInviter_$80326",
                                "typeString": "contract OptimistInviter"
                              }
                            ],
                            "id": 135727,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4585:7:270",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 135726,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4585:7:270",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 135729,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4585:24:270",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_AttestationStation_$79552",
                            "typeString": "contract AttestationStation"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 135722,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "4440:21:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_AttestationStation_$79552_$_t_address_$_t_address_$_t_address_$returns$_t_contract$_OptimistAllowlist_$79987_$",
                          "typeString": "function (contract AttestationStation,address,address,address) returns (contract OptimistAllowlist)"
                        },
                        "typeName": {
                          "id": 135721,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 135720,
                            "name": "OptimistAllowlist",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 79987,
                            "src": "4444:17:270"
                          },
                          "referencedDeclaration": 79987,
                          "src": "4444:17:270",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OptimistAllowlist_$79987",
                            "typeString": "contract OptimistAllowlist"
                          }
                        }
                      },
                      "id": 135730,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4440:179:270",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OptimistAllowlist_$79987",
                        "typeString": "contract OptimistAllowlist"
                      }
                    },
                    "src": "4420:199:270",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OptimistAllowlist_$79987",
                      "typeString": "contract OptimistAllowlist"
                    }
                  },
                  "id": 135732,
                  "nodeType": "ExpressionStatement",
                  "src": "4420:199:270"
                },
                {
                  "expression": {
                    "id": 135740,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 135733,
                      "name": "optimistInviterHelper",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 135398,
                      "src": "4630:21:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OptimistInviterHelper_$104368",
                        "typeString": "contract OptimistInviterHelper"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 135737,
                          "name": "optimistInviter",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 135395,
                          "src": "4680:15:270",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OptimistInviter_$80326",
                            "typeString": "contract OptimistInviter"
                          }
                        },
                        {
                          "hexValue": "4f7074696d697374496e7669746572",
                          "id": 135738,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "string",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "4697:17:270",
                          "typeDescriptions": {
                            "typeIdentifier": "t_stringliteral_864e3d1ed7cca9bbc038030f43e1b88a93f10f2414bccf59b3f17382d621ebf9",
                            "typeString": "literal_string \"OptimistInviter\""
                          },
                          "value": "OptimistInviter"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_OptimistInviter_$80326",
                            "typeString": "contract OptimistInviter"
                          },
                          {
                            "typeIdentifier": "t_stringliteral_864e3d1ed7cca9bbc038030f43e1b88a93f10f2414bccf59b3f17382d621ebf9",
                            "typeString": "literal_string \"OptimistInviter\""
                          }
                        ],
                        "id": 135736,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "4654:25:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$_t_contract$_OptimistInviter_$80326_$_t_string_memory_ptr_$returns$_t_contract$_OptimistInviterHelper_$104368_$",
                          "typeString": "function (contract OptimistInviter,string memory) returns (contract OptimistInviterHelper)"
                        },
                        "typeName": {
                          "id": 135735,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 135734,
                            "name": "OptimistInviterHelper",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 104368,
                            "src": "4658:21:270"
                          },
                          "referencedDeclaration": 104368,
                          "src": "4658:21:270",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_OptimistInviterHelper_$104368",
                            "typeString": "contract OptimistInviterHelper"
                          }
                        }
                      },
                      "id": 135739,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "4654:61:270",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OptimistInviterHelper_$104368",
                        "typeString": "contract OptimistInviterHelper"
                      }
                    },
                    "src": "4630:85:270",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OptimistInviterHelper_$104368",
                      "typeString": "contract OptimistInviterHelper"
                    }
                  },
                  "id": 135741,
                  "nodeType": "ExpressionStatement",
                  "src": "4630:85:270"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_initializeContracts",
            "nameLocation": "4174:20:270",
            "parameters": {
              "id": 135695,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4194:2:270"
            },
            "returnParameters": {
              "id": 135696,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4206:0:270"
            },
            "scope": 135744,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 135365,
              "name": "Test",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11539,
              "src": "550:4:270"
            },
            "id": 135366,
            "nodeType": "InheritanceSpecifier",
            "src": "550:4:270"
          }
        ],
        "canonicalName": "OptimistAllowlist_Initializer",
        "contractDependencies": [
          79552,
          79987,
          80326,
          104368
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          135744,
          11539,
          2388,
          2385,
          11490,
          7248,
          6958,
          6279,
          4546,
          3852,
          2322
        ],
        "name": "OptimistAllowlist_Initializer",
        "nameLocation": "517:29:270",
        "scope": 136110,
        "usedErrors": []
      },
      {
        "id": 136109,
        "nodeType": "ContractDefinition",
        "src": "4726:4980:270",
        "nodes": [
          {
            "id": 135790,
            "nodeType": "FunctionDefinition",
            "src": "4796:463:270",
            "nodes": [],
            "body": {
              "id": 135789,
              "nodeType": "Block",
              "src": "4842:417:270",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 135752,
                                "name": "optimistAllowlist",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 135392,
                                "src": "4916:17:270",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_OptimistAllowlist_$79987",
                                  "typeString": "contract OptimistAllowlist"
                                }
                              },
                              "id": 135753,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ATTESTATION_STATION",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 79842,
                              "src": "4916:37:270",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_contract$_AttestationStation_$79552_$",
                                "typeString": "function () view external returns (contract AttestationStation)"
                              }
                            },
                            "id": 135754,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4916:39:270",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AttestationStation_$79552",
                              "typeString": "contract AttestationStation"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AttestationStation_$79552",
                              "typeString": "contract AttestationStation"
                            }
                          ],
                          "id": 135751,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4908:7:270",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 135750,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4908:7:270",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 135755,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4908:48:270",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 135758,
                            "name": "attestationStation",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135389,
                            "src": "4966:18:270",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AttestationStation_$79552",
                              "typeString": "contract AttestationStation"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AttestationStation_$79552",
                              "typeString": "contract AttestationStation"
                            }
                          ],
                          "id": 135757,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4958:7:270",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 135756,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4958:7:270",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 135759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4958:27:270",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 135749,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2553,
                        2578,
                        2591,
                        2607,
                        2649,
                        2691,
                        2733,
                        2770,
                        2807,
                        2844,
                        351,
                        376,
                        406,
                        431,
                        490,
                        515,
                        545,
                        570,
                        2043,
                        2078
                      ],
                      "referencedDeclaration": 351,
                      "src": "4899:8:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 135760,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4899:87:270",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 135761,
                  "nodeType": "ExpressionStatement",
                  "src": "4899:87:270"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 135763,
                            "name": "optimistAllowlist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135392,
                            "src": "5005:17:270",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimistAllowlist_$79987",
                              "typeString": "contract OptimistAllowlist"
                            }
                          },
                          "id": 135764,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ALLOWLIST_ATTESTOR",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 79845,
                          "src": "5005:36:270",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 135765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5005:38:270",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 135766,
                        "name": "alice_allowlistAttestor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135378,
                        "src": "5045:23:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 135762,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2553,
                        2578,
                        2591,
                        2607,
                        2649,
                        2691,
                        2733,
                        2770,
                        2807,
                        2844,
                        351,
                        376,
                        406,
                        431,
                        490,
                        515,
                        545,
                        570,
                        2043,
                        2078
                      ],
                      "referencedDeclaration": 351,
                      "src": "4996:8:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 135767,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4996:73:270",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 135768,
                  "nodeType": "ExpressionStatement",
                  "src": "4996:73:270"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 135770,
                            "name": "optimistAllowlist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135392,
                            "src": "5088:17:270",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimistAllowlist_$79987",
                              "typeString": "contract OptimistAllowlist"
                            }
                          },
                          "id": 135771,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "COINBASE_QUEST_ATTESTOR",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 79848,
                          "src": "5088:41:270",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                            "typeString": "function () view external returns (address)"
                          }
                        },
                        "id": 135772,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5088:43:270",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 135773,
                        "name": "sally_coinbaseQuestAttestor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135380,
                        "src": "5133:27:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 135769,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2553,
                        2578,
                        2591,
                        2607,
                        2649,
                        2691,
                        2733,
                        2770,
                        2807,
                        2844,
                        351,
                        376,
                        406,
                        431,
                        490,
                        515,
                        545,
                        570,
                        2043,
                        2078
                      ],
                      "referencedDeclaration": 351,
                      "src": "5079:8:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 135774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5079:82:270",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 135775,
                  "nodeType": "ExpressionStatement",
                  "src": "5079:82:270"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 135779,
                                "name": "optimistAllowlist",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 135392,
                                "src": "5188:17:270",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_OptimistAllowlist_$79987",
                                  "typeString": "contract OptimistAllowlist"
                                }
                              },
                              "id": 135780,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "OPTIMIST_INVITER",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 79851,
                              "src": "5188:34:270",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_address_$",
                                "typeString": "function () view external returns (address)"
                              }
                            },
                            "id": 135781,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5188:36:270",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 135778,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5180:7:270",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 135777,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5180:7:270",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 135782,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5180:45:270",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 135785,
                            "name": "optimistInviter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135395,
                            "src": "5235:15:270",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimistInviter_$80326",
                              "typeString": "contract OptimistInviter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OptimistInviter_$80326",
                              "typeString": "contract OptimistInviter"
                            }
                          ],
                          "id": 135784,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "5227:7:270",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 135783,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "5227:7:270",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 135786,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5227:24:270",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 135776,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2553,
                        2578,
                        2591,
                        2607,
                        2649,
                        2691,
                        2733,
                        2770,
                        2807,
                        2844,
                        351,
                        376,
                        406,
                        431,
                        490,
                        515,
                        545,
                        570,
                        2043,
                        2078
                      ],
                      "referencedDeclaration": 351,
                      "src": "5171:8:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 135787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5171:81:270",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 135788,
                  "nodeType": "ExpressionStatement",
                  "src": "5171:81:270"
                }
              ]
            },
            "functionSelector": "80aee254",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_constructor_succeeds",
            "nameLocation": "4805:25:270",
            "parameters": {
              "id": 135747,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4830:2:270"
            },
            "returnParameters": {
              "id": 135748,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4842:0:270"
            },
            "scope": 136109,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 135802,
            "nodeType": "FunctionDefinition",
            "src": "5364:138:270",
            "nodes": [],
            "body": {
              "id": 135801,
              "nodeType": "Block",
              "src": "5434:68:270",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 135797,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135386,
                            "src": "5490:3:270",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 135795,
                            "name": "optimistAllowlist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135392,
                            "src": "5456:17:270",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimistAllowlist_$79987",
                              "typeString": "contract OptimistAllowlist"
                            }
                          },
                          "id": 135796,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isAllowedToMint",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 79909,
                          "src": "5456:33:270",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 135798,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5456:38:270",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 135794,
                      "name": "assertFalse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2503,
                        2517
                      ],
                      "referencedDeclaration": 2503,
                      "src": "5444:11:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 135799,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5444:51:270",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 135800,
                  "nodeType": "ExpressionStatement",
                  "src": "5444:51:270"
                }
              ]
            },
            "documentation": {
              "id": 135791,
              "nodeType": "StructuredDocumentation",
              "src": "5265:94:270",
              "text": "@notice Base case, a account without any relevant attestations should not be able to mint."
            },
            "functionSelector": "f4fa2a45",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_isAllowedToMint_withoutAnyAttestations_fails",
            "nameLocation": "5373:49:270",
            "parameters": {
              "id": 135792,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5422:2:270"
            },
            "returnParameters": {
              "id": 135793,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5434:0:270"
            },
            "scope": 136109,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 135818,
            "nodeType": "FunctionDefinition",
            "src": "5607:169:270",
            "nodes": [],
            "body": {
              "id": 135817,
              "nodeType": "Block",
              "src": "5679:97:270",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 135807,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135386,
                        "src": "5705:3:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 135806,
                      "name": "attestAllowlist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 135516,
                      "src": "5689:15:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 135808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5689:20:270",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 135809,
                  "nodeType": "ExpressionStatement",
                  "src": "5689:20:270"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 135813,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135386,
                            "src": "5764:3:270",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 135811,
                            "name": "optimistAllowlist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135392,
                            "src": "5730:17:270",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimistAllowlist_$79987",
                              "typeString": "contract OptimistAllowlist"
                            }
                          },
                          "id": 135812,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isAllowedToMint",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 79909,
                          "src": "5730:33:270",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 135814,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5730:38:270",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 135810,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        300,
                        321
                      ],
                      "referencedDeclaration": 300,
                      "src": "5719:10:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 135815,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5719:50:270",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 135816,
                  "nodeType": "ExpressionStatement",
                  "src": "5719:50:270"
                }
              ]
            },
            "documentation": {
              "id": 135803,
              "nodeType": "StructuredDocumentation",
              "src": "5508:94:270",
              "text": "@notice After receiving a valid allowlist attestation, the account should be able to mint."
            },
            "functionSelector": "7d9f5772",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_isAllowedToMint_fromAllowlistAttestor_succeeds",
            "nameLocation": "5616:51:270",
            "parameters": {
              "id": 135804,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5667:2:270"
            },
            "returnParameters": {
              "id": 135805,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5679:0:270"
            },
            "scope": 136109,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 135834,
            "nodeType": "FunctionDefinition",
            "src": "5920:177:270",
            "nodes": [],
            "body": {
              "id": 135833,
              "nodeType": "Block",
              "src": "5996:101:270",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 135823,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135386,
                        "src": "6026:3:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 135822,
                      "name": "attestCoinbaseQuest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 135563,
                      "src": "6006:19:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 135824,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6006:24:270",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 135825,
                  "nodeType": "ExpressionStatement",
                  "src": "6006:24:270"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 135829,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135386,
                            "src": "6085:3:270",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 135827,
                            "name": "optimistAllowlist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135392,
                            "src": "6051:17:270",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimistAllowlist_$79987",
                              "typeString": "contract OptimistAllowlist"
                            }
                          },
                          "id": 135828,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isAllowedToMint",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 79909,
                          "src": "6051:33:270",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 135830,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6051:38:270",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 135826,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        300,
                        321
                      ],
                      "referencedDeclaration": 300,
                      "src": "6040:10:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 135831,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6040:50:270",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 135832,
                  "nodeType": "ExpressionStatement",
                  "src": "6040:50:270"
                }
              ]
            },
            "documentation": {
              "id": 135819,
              "nodeType": "StructuredDocumentation",
              "src": "5782:133:270",
              "text": "@notice After receiving a valid attestation from the Coinbase Quest attestor,\n         the account should be able to mint."
            },
            "functionSelector": "a2ebe184",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_isAllowedToMint_fromCoinbaseQuestAttestor_succeeds",
            "nameLocation": "5929:55:270",
            "parameters": {
              "id": 135820,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5984:2:270"
            },
            "returnParameters": {
              "id": 135821,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5996:0:270"
            },
            "scope": 136109,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 135850,
            "nodeType": "FunctionDefinition",
            "src": "6269:157:270",
            "nodes": [],
            "body": {
              "id": 135849,
              "nodeType": "Block",
              "src": "6330:96:270",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 135839,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135386,
                        "src": "6355:3:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 135838,
                      "name": "inviteAndClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 135660,
                      "src": "6340:14:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 135840,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6340:19:270",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 135841,
                  "nodeType": "ExpressionStatement",
                  "src": "6340:19:270"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 135845,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135386,
                            "src": "6414:3:270",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 135843,
                            "name": "optimistAllowlist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135392,
                            "src": "6380:17:270",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimistAllowlist_$79987",
                              "typeString": "contract OptimistAllowlist"
                            }
                          },
                          "id": 135844,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isAllowedToMint",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 79909,
                          "src": "6380:33:270",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 135846,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6380:38:270",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 135842,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        300,
                        321
                      ],
                      "referencedDeclaration": 300,
                      "src": "6369:10:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 135847,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6369:50:270",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 135848,
                  "nodeType": "ExpressionStatement",
                  "src": "6369:50:270"
                }
              ]
            },
            "documentation": {
              "id": 135835,
              "nodeType": "StructuredDocumentation",
              "src": "6103:161:270",
              "text": "@notice Account that received an attestation from the OptimistInviter contract by going\n         through the claim invite flow should be able to mint."
            },
            "functionSelector": "910cfdae",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_isAllowedToMint_fromInvite_succeeds",
            "nameLocation": "6278:40:270",
            "parameters": {
              "id": 135836,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6318:2:270"
            },
            "returnParameters": {
              "id": 135837,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6330:0:270"
            },
            "scope": 136109,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 135881,
            "nodeType": "FunctionDefinition",
            "src": "6520:320:270",
            "nodes": [],
            "body": {
              "id": 135880,
              "nodeType": "Block",
              "src": "6594:246:270",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 135857,
                        "name": "ted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135382,
                        "src": "6658:3:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 135854,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2381,
                        "src": "6649:2:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13045",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 135856,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12658,
                      "src": "6649:8:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 135858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6649:13:270",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 135859,
                  "nodeType": "ExpressionStatement",
                  "src": "6649:13:270"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 135863,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135386,
                        "src": "6698:3:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 135864,
                            "name": "optimistAllowlist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135392,
                            "src": "6703:17:270",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimistAllowlist_$79987",
                              "typeString": "contract OptimistAllowlist"
                            }
                          },
                          "id": 135865,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "OPTIMIST_CAN_MINT_ATTESTATION_KEY",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 79831,
                          "src": "6703:51:270",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
                            "typeString": "function () view external returns (bytes32)"
                          }
                        },
                        "id": 135866,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6703:53:270",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "74727565",
                            "id": 135869,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "6764:6:270",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_6273151f959616268004b58dbb21e5c851b7b8d04498b4aabee12291d22fc034",
                              "typeString": "literal_string \"true\""
                            },
                            "value": "true"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_6273151f959616268004b58dbb21e5c851b7b8d04498b4aabee12291d22fc034",
                              "typeString": "literal_string \"true\""
                            }
                          ],
                          "id": 135868,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "6758:5:270",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 135867,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "6758:5:270",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 135870,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6758:13:270",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 135860,
                        "name": "attestationStation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135389,
                        "src": "6672:18:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AttestationStation_$79552",
                          "typeString": "contract AttestationStation"
                        }
                      },
                      "id": 135862,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "attest",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 79508,
                      "src": "6672:25:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes32,bytes memory) external"
                      }
                    },
                    "id": 135871,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6672:100:270",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 135872,
                  "nodeType": "ExpressionStatement",
                  "src": "6672:100:270"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 135876,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135386,
                            "src": "6828:3:270",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 135874,
                            "name": "optimistAllowlist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135392,
                            "src": "6794:17:270",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimistAllowlist_$79987",
                              "typeString": "contract OptimistAllowlist"
                            }
                          },
                          "id": 135875,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isAllowedToMint",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 79909,
                          "src": "6794:33:270",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 135877,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6794:38:270",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 135873,
                      "name": "assertFalse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2503,
                        2517
                      ],
                      "referencedDeclaration": 2503,
                      "src": "6782:11:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 135878,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6782:51:270",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 135879,
                  "nodeType": "ExpressionStatement",
                  "src": "6782:51:270"
                }
              ]
            },
            "documentation": {
              "id": 135851,
              "nodeType": "StructuredDocumentation",
              "src": "6432:83:270",
              "text": "@notice Attestation from the wrong allowlist attestor should not allow minting."
            },
            "functionSelector": "c4873875",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_isAllowedToMint_fromWrongAllowlistAttestor_fails",
            "nameLocation": "6529:53:270",
            "parameters": {
              "id": 135852,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6582:2:270"
            },
            "returnParameters": {
              "id": 135853,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6594:0:270"
            },
            "scope": 136109,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 135912,
            "nodeType": "FunctionDefinition",
            "src": "6935:335:270",
            "nodes": [],
            "body": {
              "id": 135911,
              "nodeType": "Block",
              "src": "7013:257:270",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 135888,
                        "name": "ted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135382,
                        "src": "7082:3:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 135885,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2381,
                        "src": "7073:2:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13045",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 135887,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12658,
                      "src": "7073:8:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 135889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7073:13:270",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 135890,
                  "nodeType": "ExpressionStatement",
                  "src": "7073:13:270"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 135894,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135386,
                        "src": "7122:3:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 135895,
                            "name": "optimistAllowlist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135392,
                            "src": "7127:17:270",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimistAllowlist_$79987",
                              "typeString": "contract OptimistAllowlist"
                            }
                          },
                          "id": 135896,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "COINBASE_QUEST_ELIGIBLE_ATTESTATION_KEY",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 79838,
                          "src": "7127:57:270",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
                            "typeString": "function () view external returns (bytes32)"
                          }
                        },
                        "id": 135897,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7127:59:270",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "74727565",
                            "id": 135900,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7194:6:270",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_6273151f959616268004b58dbb21e5c851b7b8d04498b4aabee12291d22fc034",
                              "typeString": "literal_string \"true\""
                            },
                            "value": "true"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_6273151f959616268004b58dbb21e5c851b7b8d04498b4aabee12291d22fc034",
                              "typeString": "literal_string \"true\""
                            }
                          ],
                          "id": 135899,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7188:5:270",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 135898,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "7188:5:270",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 135901,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7188:13:270",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 135891,
                        "name": "attestationStation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135389,
                        "src": "7096:18:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AttestationStation_$79552",
                          "typeString": "contract AttestationStation"
                        }
                      },
                      "id": 135893,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "attest",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 79508,
                      "src": "7096:25:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes32,bytes memory) external"
                      }
                    },
                    "id": 135902,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7096:106:270",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 135903,
                  "nodeType": "ExpressionStatement",
                  "src": "7096:106:270"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 135907,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135386,
                            "src": "7258:3:270",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 135905,
                            "name": "optimistAllowlist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135392,
                            "src": "7224:17:270",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimistAllowlist_$79987",
                              "typeString": "contract OptimistAllowlist"
                            }
                          },
                          "id": 135906,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isAllowedToMint",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 79909,
                          "src": "7224:33:270",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 135908,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7224:38:270",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 135904,
                      "name": "assertFalse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2503,
                        2517
                      ],
                      "referencedDeclaration": 2503,
                      "src": "7212:11:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 135909,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7212:51:270",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 135910,
                  "nodeType": "ExpressionStatement",
                  "src": "7212:51:270"
                }
              ]
            },
            "documentation": {
              "id": 135882,
              "nodeType": "StructuredDocumentation",
              "src": "6846:84:270",
              "text": "@notice Coinbase quest attestation from wrong attestor should not allow minting."
            },
            "functionSelector": "b44cd0e1",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_isAllowedToMint_fromWrongCoinbaseQuestAttestor_fails",
            "nameLocation": "6944:57:270",
            "parameters": {
              "id": 135883,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7001:2:270"
            },
            "returnParameters": {
              "id": 135884,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7013:0:270"
            },
            "scope": 136109,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 135942,
            "nodeType": "FunctionDefinition",
            "src": "7399:283:270",
            "nodes": [],
            "body": {
              "id": 135941,
              "nodeType": "Block",
              "src": "7471:211:270",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 135919,
                        "name": "ted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135382,
                        "src": "7490:3:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 135916,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2381,
                        "src": "7481:2:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13045",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 135918,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12658,
                      "src": "7481:8:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 135920,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7481:13:270",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 135921,
                  "nodeType": "ExpressionStatement",
                  "src": "7481:13:270"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 135925,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135386,
                        "src": "7530:3:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 135926,
                          "name": "OptimistConstants",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 80337,
                          "src": "7535:17:270",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_OptimistConstants_$80337_$",
                            "typeString": "type(library OptimistConstants)"
                          }
                        },
                        "id": 135927,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "OPTIMIST_CAN_MINT_FROM_INVITE_ATTESTATION_KEY",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 80336,
                        "src": "7535:63:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "74727565",
                            "id": 135930,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "7606:6:270",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_6273151f959616268004b58dbb21e5c851b7b8d04498b4aabee12291d22fc034",
                              "typeString": "literal_string \"true\""
                            },
                            "value": "true"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_6273151f959616268004b58dbb21e5c851b7b8d04498b4aabee12291d22fc034",
                              "typeString": "literal_string \"true\""
                            }
                          ],
                          "id": 135929,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "7600:5:270",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 135928,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "7600:5:270",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 135931,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7600:13:270",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 135922,
                        "name": "attestationStation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135389,
                        "src": "7504:18:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AttestationStation_$79552",
                          "typeString": "contract AttestationStation"
                        }
                      },
                      "id": 135924,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "attest",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 79508,
                      "src": "7504:25:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes32,bytes memory) external"
                      }
                    },
                    "id": 135932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7504:110:270",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 135933,
                  "nodeType": "ExpressionStatement",
                  "src": "7504:110:270"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 135937,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135386,
                            "src": "7670:3:270",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 135935,
                            "name": "optimistAllowlist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135392,
                            "src": "7636:17:270",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimistAllowlist_$79987",
                              "typeString": "contract OptimistAllowlist"
                            }
                          },
                          "id": 135936,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isAllowedToMint",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 79909,
                          "src": "7636:33:270",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 135938,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7636:38:270",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 135934,
                      "name": "assertFalse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2503,
                        2517
                      ],
                      "referencedDeclaration": 2503,
                      "src": "7624:11:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 135939,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7624:51:270",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 135940,
                  "nodeType": "ExpressionStatement",
                  "src": "7624:51:270"
                }
              ]
            },
            "documentation": {
              "id": 135913,
              "nodeType": "StructuredDocumentation",
              "src": "7276:118:270",
              "text": "@notice Claiming an invite on the non-official OptimistInviter contract should not allow\n          minting."
            },
            "functionSelector": "276beb5f",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_isAllowedToMint_fromWrongOptimistInviter_fails",
            "nameLocation": "7408:51:270",
            "parameters": {
              "id": 135914,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7459:2:270"
            },
            "returnParameters": {
              "id": 135915,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7471:0:270"
            },
            "scope": 136109,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 135992,
            "nodeType": "FunctionDefinition",
            "src": "7781:584:270",
            "nodes": [],
            "body": {
              "id": 135991,
              "nodeType": "Block",
              "src": "7856:509:270",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 135947,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135386,
                        "src": "7882:3:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 135946,
                      "name": "attestAllowlist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 135516,
                      "src": "7866:15:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 135948,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7866:20:270",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 135949,
                  "nodeType": "ExpressionStatement",
                  "src": "7866:20:270"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 135951,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135386,
                        "src": "7916:3:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 135950,
                      "name": "attestCoinbaseQuest",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 135563,
                      "src": "7896:19:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 135952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7896:24:270",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 135953,
                  "nodeType": "ExpressionStatement",
                  "src": "7896:24:270"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 135955,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135386,
                        "src": "7945:3:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 135954,
                      "name": "inviteAndClaim",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 135660,
                      "src": "7930:14:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 135956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7930:19:270",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 135957,
                  "nodeType": "ExpressionStatement",
                  "src": "7930:19:270"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 135961,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135386,
                            "src": "8005:3:270",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 135959,
                            "name": "optimistAllowlist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135392,
                            "src": "7971:17:270",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimistAllowlist_$79987",
                              "typeString": "contract OptimistAllowlist"
                            }
                          },
                          "id": 135960,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isAllowedToMint",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 79909,
                          "src": "7971:33:270",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 135962,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7971:38:270",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 135958,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        300,
                        321
                      ],
                      "referencedDeclaration": 300,
                      "src": "7960:10:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 135963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7960:50:270",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 135964,
                  "nodeType": "ExpressionStatement",
                  "src": "7960:50:270"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 135968,
                        "name": "ted",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135382,
                        "src": "8097:3:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 135965,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2381,
                        "src": "8088:2:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13045",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 135967,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12658,
                      "src": "8088:8:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 135969,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8088:13:270",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 135970,
                  "nodeType": "ExpressionStatement",
                  "src": "8088:13:270"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 135974,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135386,
                        "src": "8137:3:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 135975,
                            "name": "optimistAllowlist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135392,
                            "src": "8142:17:270",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimistAllowlist_$79987",
                              "typeString": "contract OptimistAllowlist"
                            }
                          },
                          "id": 135976,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "OPTIMIST_CAN_MINT_ATTESTATION_KEY",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 79831,
                          "src": "8142:51:270",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
                            "typeString": "function () view external returns (bytes32)"
                          }
                        },
                        "id": 135977,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8142:53:270",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "74727565",
                            "id": 135980,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8203:6:270",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_6273151f959616268004b58dbb21e5c851b7b8d04498b4aabee12291d22fc034",
                              "typeString": "literal_string \"true\""
                            },
                            "value": "true"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_6273151f959616268004b58dbb21e5c851b7b8d04498b4aabee12291d22fc034",
                              "typeString": "literal_string \"true\""
                            }
                          ],
                          "id": 135979,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8197:5:270",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 135978,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "8197:5:270",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 135981,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8197:13:270",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 135971,
                        "name": "attestationStation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135389,
                        "src": "8111:18:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AttestationStation_$79552",
                          "typeString": "contract AttestationStation"
                        }
                      },
                      "id": 135973,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "attest",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 79508,
                      "src": "8111:25:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes32,bytes memory) external"
                      }
                    },
                    "id": 135982,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8111:100:270",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 135983,
                  "nodeType": "ExpressionStatement",
                  "src": "8111:100:270"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 135987,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135386,
                            "src": "8353:3:270",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 135985,
                            "name": "optimistAllowlist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135392,
                            "src": "8319:17:270",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimistAllowlist_$79987",
                              "typeString": "contract OptimistAllowlist"
                            }
                          },
                          "id": 135986,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isAllowedToMint",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 79909,
                          "src": "8319:33:270",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 135988,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8319:38:270",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 135984,
                      "name": "assertTrue",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        300,
                        321
                      ],
                      "referencedDeclaration": 300,
                      "src": "8308:10:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 135989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8308:50:270",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 135990,
                  "nodeType": "ExpressionStatement",
                  "src": "8308:50:270"
                }
              ]
            },
            "documentation": {
              "id": 135943,
              "nodeType": "StructuredDocumentation",
              "src": "7688:88:270",
              "text": "@notice Having multiple signals, even if one is invalid, should still allow minting."
            },
            "functionSelector": "c4625960",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_isAllowedToMint_withMultipleAttestations_succeeds",
            "nameLocation": "7790:54:270",
            "parameters": {
              "id": 135944,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7844:2:270"
            },
            "returnParameters": {
              "id": 135945,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7856:0:270"
            },
            "scope": 136109,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 136050,
            "nodeType": "FunctionDefinition",
            "src": "8444:581:270",
            "nodes": [],
            "body": {
              "id": 136049,
              "nodeType": "Block",
              "src": "8527:498:270",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 135997,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135386,
                        "src": "8596:3:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 135996,
                      "name": "attestAllowlist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 135516,
                      "src": "8580:15:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 135998,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8580:20:270",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 135999,
                  "nodeType": "ExpressionStatement",
                  "src": "8580:20:270"
                },
                {
                  "assignments": [
                    136001
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 136001,
                      "mutability": "mutable",
                      "name": "key",
                      "nameLocation": "8619:3:270",
                      "nodeType": "VariableDeclaration",
                      "scope": 136049,
                      "src": "8611:11:270",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 136000,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "8611:7:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 136005,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 136002,
                        "name": "optimistAllowlist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135392,
                        "src": "8625:17:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimistAllowlist_$79987",
                          "typeString": "contract OptimistAllowlist"
                        }
                      },
                      "id": 136003,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "OPTIMIST_CAN_MINT_ATTESTATION_KEY",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 79831,
                      "src": "8625:51:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
                        "typeString": "function () view external returns (bytes32)"
                      }
                    },
                    "id": 136004,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8625:53:270",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8611:67:270"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 136009,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8702:4:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 136010,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8708:4:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 136011,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8714:4:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 136012,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "8720:5:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 136006,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2381,
                        "src": "8688:2:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13045",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 136008,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectEmit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12726,
                      "src": "8688:13:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_bool_$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (bool,bool,bool,bool) external"
                      }
                    },
                    "id": 136013,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8688:38:270",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 136014,
                  "nodeType": "ExpressionStatement",
                  "src": "8688:38:270"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 136016,
                        "name": "alice_allowlistAttestor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135378,
                        "src": "8760:23:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 136017,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135386,
                        "src": "8785:3:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 136018,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 136001,
                        "src": "8790:3:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "64736166736473",
                            "id": 136021,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8801:9:270",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_ea3e3f7147c048d654af79f29d0828563335e686aa09abaeacfa73a259a8741a",
                              "typeString": "literal_string \"dsafsds\""
                            },
                            "value": "dsafsds"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_ea3e3f7147c048d654af79f29d0828563335e686aa09abaeacfa73a259a8741a",
                              "typeString": "literal_string \"dsafsds\""
                            }
                          ],
                          "id": 136020,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8795:5:270",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 136019,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "8795:5:270",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 136022,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8795:16:270",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 136015,
                      "name": "AttestationCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 135376,
                      "src": "8741:18:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,bytes32,bytes memory)"
                      }
                    },
                    "id": 136023,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8741:71:270",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 136024,
                  "nodeType": "EmitStatement",
                  "src": "8736:76:270"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 136028,
                        "name": "alice_allowlistAttestor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135378,
                        "src": "8876:23:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 136025,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2381,
                        "src": "8867:2:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13045",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 136027,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12658,
                      "src": "8867:8:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 136029,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8867:33:270",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 136030,
                  "nodeType": "ExpressionStatement",
                  "src": "8867:33:270"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 136034,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135386,
                        "src": "8936:3:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 136035,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 136001,
                        "src": "8941:3:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "",
                            "id": 136038,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "8952:2:270",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "id": 136037,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "8946:5:270",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 136036,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "8946:5:270",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 136039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8946:9:270",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 136031,
                        "name": "attestationStation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135389,
                        "src": "8910:18:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AttestationStation_$79552",
                          "typeString": "contract AttestationStation"
                        }
                      },
                      "id": 136033,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "attest",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 79508,
                      "src": "8910:25:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes32,bytes memory) external"
                      }
                    },
                    "id": 136040,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8910:46:270",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 136041,
                  "nodeType": "ExpressionStatement",
                  "src": "8910:46:270"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 136045,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135386,
                            "src": "9013:3:270",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 136043,
                            "name": "optimistAllowlist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135392,
                            "src": "8979:17:270",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimistAllowlist_$79987",
                              "typeString": "contract OptimistAllowlist"
                            }
                          },
                          "id": 136044,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isAllowedToMint",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 79909,
                          "src": "8979:33:270",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 136046,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8979:38:270",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 136042,
                      "name": "assertFalse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2503,
                        2517
                      ],
                      "referencedDeclaration": 2503,
                      "src": "8967:11:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 136047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8967:51:270",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 136048,
                  "nodeType": "ExpressionStatement",
                  "src": "8967:51:270"
                }
              ]
            },
            "documentation": {
              "id": 135993,
              "nodeType": "StructuredDocumentation",
              "src": "8371:68:270",
              "text": "@notice Having falsy attestation value should not allow minting."
            },
            "functionSelector": "defdd115",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_isAllowedToMint_fromAllowlistAttestorWithFalsyValue_fails",
            "nameLocation": "8453:62:270",
            "parameters": {
              "id": 135994,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8515:2:270"
            },
            "returnParameters": {
              "id": 135995,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8527:0:270"
            },
            "scope": 136109,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 136108,
            "nodeType": "FunctionDefinition",
            "src": "9127:577:270",
            "nodes": [],
            "body": {
              "id": 136107,
              "nodeType": "Block",
              "src": "9214:490:270",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 136055,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135386,
                        "src": "9283:3:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 136054,
                      "name": "attestAllowlist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 135516,
                      "src": "9267:15:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 136056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9267:20:270",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 136057,
                  "nodeType": "ExpressionStatement",
                  "src": "9267:20:270"
                },
                {
                  "assignments": [
                    136059
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 136059,
                      "mutability": "mutable",
                      "name": "key",
                      "nameLocation": "9306:3:270",
                      "nodeType": "VariableDeclaration",
                      "scope": 136107,
                      "src": "9298:11:270",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 136058,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "9298:7:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 136063,
                  "initialValue": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "id": 136060,
                        "name": "optimistAllowlist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135392,
                        "src": "9312:17:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_OptimistAllowlist_$79987",
                          "typeString": "contract OptimistAllowlist"
                        }
                      },
                      "id": 136061,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "OPTIMIST_CAN_MINT_ATTESTATION_KEY",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 79831,
                      "src": "9312:51:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$__$returns$_t_bytes32_$",
                        "typeString": "function () view external returns (bytes32)"
                      }
                    },
                    "id": 136062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9312:53:270",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9298:67:270"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "74727565",
                        "id": 136067,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9389:4:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 136068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9395:4:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 136069,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9401:4:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      },
                      {
                        "hexValue": "74727565",
                        "id": 136070,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9407:4:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "true"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "expression": {
                        "id": 136064,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2381,
                        "src": "9375:2:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13045",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 136066,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "expectEmit",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12726,
                      "src": "9375:13:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_bool_$_t_bool_$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (bool,bool,bool,bool) external"
                      }
                    },
                    "id": 136071,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9375:37:270",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 136072,
                  "nodeType": "ExpressionStatement",
                  "src": "9375:37:270"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 136074,
                        "name": "alice_allowlistAttestor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135378,
                        "src": "9446:23:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 136075,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135386,
                        "src": "9471:3:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 136076,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 136059,
                        "src": "9476:3:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "",
                            "id": 136079,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9487:2:270",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "id": 136078,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9481:5:270",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 136077,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "9481:5:270",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 136080,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9481:9:270",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 136073,
                      "name": "AttestationCreated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 135376,
                      "src": "9427:18:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,bytes32,bytes memory)"
                      }
                    },
                    "id": 136081,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9427:64:270",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 136082,
                  "nodeType": "EmitStatement",
                  "src": "9422:69:270"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 136086,
                        "name": "alice_allowlistAttestor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135378,
                        "src": "9555:23:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 136083,
                        "name": "vm",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 2381,
                        "src": "9546:2:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_Vm_$13045",
                          "typeString": "contract Vm"
                        }
                      },
                      "id": 136085,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "prank",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 12658,
                      "src": "9546:8:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 136087,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9546:33:270",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 136088,
                  "nodeType": "ExpressionStatement",
                  "src": "9546:33:270"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 136092,
                        "name": "bob",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135386,
                        "src": "9615:3:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 136093,
                        "name": "key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 136059,
                        "src": "9620:3:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "",
                            "id": 136096,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "9631:2:270",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "id": 136095,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "9625:5:270",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 136094,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "9625:5:270",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 136097,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9625:9:270",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 136089,
                        "name": "attestationStation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 135389,
                        "src": "9589:18:270",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_AttestationStation_$79552",
                          "typeString": "contract AttestationStation"
                        }
                      },
                      "id": 136091,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "attest",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 79508,
                      "src": "9589:25:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,bytes32,bytes memory) external"
                      }
                    },
                    "id": 136098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9589:46:270",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 136099,
                  "nodeType": "ExpressionStatement",
                  "src": "9589:46:270"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 136103,
                            "name": "bob",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135386,
                            "src": "9692:3:270",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 136101,
                            "name": "optimistAllowlist",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 135392,
                            "src": "9658:17:270",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimistAllowlist_$79987",
                              "typeString": "contract OptimistAllowlist"
                            }
                          },
                          "id": 136102,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isAllowedToMint",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 79909,
                          "src": "9658:33:270",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 136104,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9658:38:270",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 136100,
                      "name": "assertFalse",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2503,
                        2517
                      ],
                      "referencedDeclaration": 2503,
                      "src": "9646:11:270",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$returns$__$",
                        "typeString": "function (bool)"
                      }
                    },
                    "id": 136105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9646:51:270",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 136106,
                  "nodeType": "ExpressionStatement",
                  "src": "9646:51:270"
                }
              ]
            },
            "documentation": {
              "id": 136051,
              "nodeType": "StructuredDocumentation",
              "src": "9031:91:270",
              "text": "@notice Having falsy attestation value from Coinbase attestor should not allow minting."
            },
            "functionSelector": "ec85c462",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "test_isAllowedToMint_fromCoinbaseQuestAttestorWithFalsyValue_fails",
            "nameLocation": "9136:66:270",
            "parameters": {
              "id": 136052,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9202:2:270"
            },
            "returnParameters": {
              "id": 136053,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9214:0:270"
            },
            "scope": 136109,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 135745,
              "name": "OptimistAllowlist_Initializer",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 135744,
              "src": "4760:29:270"
            },
            "id": 135746,
            "nodeType": "InheritanceSpecifier",
            "src": "4760:29:270"
          }
        ],
        "canonicalName": "OptimistAllowlistTest",
        "contractDependencies": [
          79552,
          79987,
          80326,
          104368
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          136109,
          135744,
          11539,
          2388,
          2385,
          11490,
          7248,
          6958,
          6279,
          4546,
          3852,
          2322
        ],
        "name": "OptimistAllowlistTest",
        "nameLocation": "4735:21:270",
        "scope": 136110,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 270
}