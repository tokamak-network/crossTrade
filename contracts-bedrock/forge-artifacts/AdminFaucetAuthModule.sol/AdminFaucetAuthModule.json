{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_admin",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "_version",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "ADMIN",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "PROOF_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address payable",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "nonce",
              "type": "bytes32"
            }
          ],
          "internalType": "struct Faucet.DripParameters",
          "name": "_params",
          "type": "tuple"
        },
        {
          "internalType": "bytes32",
          "name": "_id",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "_proof",
          "type": "bytes"
        }
      ],
      "name": "verify",
      "outputs": [
        {
          "internalType": "bool",
          "name": "valid_",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x61016060405234801561001157600080fd5b50604051610b9c380380610b9c83398101604081905261003091610193565b815160209283012081519183019190912060e08290526101008190524660a0818152604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f818801819052818301969096526060810194909452608080850193909352308483018190528151808603909301835260c094850190915281519190950120905291909152610120526001600160a01b031661014052610215565b634e487b7160e01b600052604160045260246000fd5b600082601f8301126100f857600080fd5b81516001600160401b0380821115610112576101126100d1565b604051601f8301601f19908116603f0116810190828211818310171561013a5761013a6100d1565b8160405283815260209250868385880101111561015657600080fd5b600091505b83821015610178578582018301518183018401529082019061015b565b838211156101895760008385830101525b9695505050505050565b6000806000606084860312156101a857600080fd5b83516001600160a01b03811681146101bf57600080fd5b60208501519093506001600160401b03808211156101dc57600080fd5b6101e8878388016100e7565b935060408601519150808211156101fe57600080fd5b5061020b868287016100e7565b9150509250925092565b60805160a05160c05160e05161010051610120516101405161092861027460003960008181604b015260f601526000610481015260006104d0015260006104ab015260006104040152600061042e0152600061045801526109286000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c80632a0acc6a146100465780638b3e3bf614610097578063f5431ffa146100cc575b600080fd5b61006d7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100be7fd4283507dc7a8282faa6b4c8c18bacbb74dbbab5467342e6f581656f3577236e81565b60405190815260200161008e565b6100df6100da366004610722565b6100ef565b604051901515815260200161008e565b60006101a47f000000000000000000000000000000000000000000000000000000000000000061019e7fd4283507dc7a8282faa6b4c8c18bacbb74dbbab5467342e6f581656f3577236e8760000151886020015188604051602001610183949392919093845273ffffffffffffffffffffffffffffffffffffffff9290921660208401526040830152606082015260800190565b604051602081830303815290604052805190602001206101ac565b8461021b565b949350505050565b60006102156101b96103ea565b836040517f19010000000000000000000000000000000000000000000000000000000000006020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b92915050565b600080600061022a858561051e565b909250905060008160048111156102435761024361082f565b14801561027b57508573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b1561028b576001925050506103e3565b6000808773ffffffffffffffffffffffffffffffffffffffff16631626ba7e60e01b88886040516024016102c092919061088e565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090941693909317909252905161034991906108e6565b600060405180830381855afa9150503d8060008114610384576040519150601f19603f3d011682016040523d82523d6000602084013e610389565b606091505b509150915081801561039c575080516020145b80156103dc575080517f1626ba7e00000000000000000000000000000000000000000000000000000000906103da9083016020908101908401610902565b145b9450505050505b9392505050565b60003073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614801561045057507f000000000000000000000000000000000000000000000000000000000000000046145b1561047a57507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b60008082516041036105545760208301516040840151606085015160001a61054887828585610563565b9450945050505061055c565b506000905060025b9250929050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561059a5750600090506003610672565b8460ff16601b141580156105b257508460ff16601c14155b156105c35750600090506004610672565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610617573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff811661066b57600060019250925050610672565b9150600090505b94509492505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156106cd576106cd61067b565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561071a5761071a61067b565b604052919050565b6000806000838503608081121561073857600080fd5b604081121561074657600080fd5b5061074f6106aa565b843573ffffffffffffffffffffffffffffffffffffffff8116811461077357600080fd5b8152602085810135818301529093506040850135925060608501359067ffffffffffffffff808311156107a557600080fd5b828701925087601f8401126107b957600080fd5b8235818111156107cb576107cb61067b565b6107fb837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116016106d3565b9150808252888382860101111561081157600080fd5b80838501848401376000838284010152508093505050509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60005b83811015610879578181015183820152602001610861565b83811115610888576000848401525b50505050565b82815260406020820152600082518060408401526108b381606085016020870161085e565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016060019392505050565b600082516108f881846020870161085e565b9190910192915050565b60006020828403121561091457600080fd5b505191905056fea164736f6c634300080f000a",
    "sourceMap": "521:1555:194:-:0;;;1426:128;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2541:22:58;;;;;;;2597:25;;;;;;;;;2778;;;;2813:31;;;;2873:13;2854:32;;;;-1:-1:-1;3633:73:58;;2651:117;3633:73;;;2029:25:302;;;2070:18;;;2063:34;;;;-1:-1:-1;2113:18:302;;2106:34;;;;2156:18;;;;2149:34;;;;3700:4:58;2199:19:302;;;2192:61;;;3633:73:58;;;;;;;;;;2001:19:302;;;;3633:73:58;;;3623:84;;;;;;;2896:85;;2991:28;;;;3029:21;;-1:-1:-1;;;;;1533:14:194::1;;::::0;521:1555;;14:127:302;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:885;200:5;253:3;246:4;238:6;234:17;230:27;220:55;;271:1;268;261:12;220:55;294:13;;-1:-1:-1;;;;;356:10:302;;;353:36;;;369:18;;:::i;:::-;444:2;438:9;412:2;498:13;;-1:-1:-1;;494:22:302;;;518:2;490:31;486:40;474:53;;;542:18;;;562:22;;;539:46;536:72;;;588:18;;:::i;:::-;628:10;624:2;617:22;663:2;655:6;648:18;685:4;675:14;;730:3;725:2;720;712:6;708:15;704:24;701:33;698:53;;;747:1;744;737:12;698:53;769:1;760:10;;779:133;793:2;790:1;787:9;779:133;;;881:14;;;877:23;;871:30;850:14;;;846:23;;839:63;804:10;;;;779:133;;;930:2;927:1;924:9;921:80;;;989:1;984:2;979;971:6;967:15;963:24;956:35;921:80;1019:6;146:885;-1:-1:-1;;;;;;146:885:302:o;1036:729::-;1144:6;1152;1160;1213:2;1201:9;1192:7;1188:23;1184:32;1181:52;;;1229:1;1226;1219:12;1181:52;1255:16;;-1:-1:-1;;;;;1300:31:302;;1290:42;;1280:70;;1346:1;1343;1336:12;1280:70;1418:2;1403:18;;1397:25;1369:5;;-1:-1:-1;;;;;;1471:14:302;;;1468:34;;;1498:1;1495;1488:12;1468:34;1521:61;1574:7;1565:6;1554:9;1550:22;1521:61;:::i;:::-;1511:71;;1628:2;1617:9;1613:18;1607:25;1591:41;;1657:2;1647:8;1644:16;1641:36;;;1673:1;1670;1663:12;1641:36;;1696:63;1751:7;1740:8;1729:9;1725:24;1696:63;:::i;:::-;1686:73;;;1036:729;;;;;:::o;1770:489::-;521:1555:194;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100415760003560e01c80632a0acc6a146100465780638b3e3bf614610097578063f5431ffa146100cc575b600080fd5b61006d7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6100be7fd4283507dc7a8282faa6b4c8c18bacbb74dbbab5467342e6f581656f3577236e81565b60405190815260200161008e565b6100df6100da366004610722565b6100ef565b604051901515815260200161008e565b60006101a47f000000000000000000000000000000000000000000000000000000000000000061019e7fd4283507dc7a8282faa6b4c8c18bacbb74dbbab5467342e6f581656f3577236e8760000151886020015188604051602001610183949392919093845273ffffffffffffffffffffffffffffffffffffffff9290921660208401526040830152606082015260800190565b604051602081830303815290604052805190602001206101ac565b8461021b565b949350505050565b60006102156101b96103ea565b836040517f19010000000000000000000000000000000000000000000000000000000000006020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b92915050565b600080600061022a858561051e565b909250905060008160048111156102435761024361082f565b14801561027b57508573ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16145b1561028b576001925050506103e3565b6000808773ffffffffffffffffffffffffffffffffffffffff16631626ba7e60e01b88886040516024016102c092919061088e565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff0000000000000000000000000000000000000000000000000000000090941693909317909252905161034991906108e6565b600060405180830381855afa9150503d8060008114610384576040519150601f19603f3d011682016040523d82523d6000602084013e610389565b606091505b509150915081801561039c575080516020145b80156103dc575080517f1626ba7e00000000000000000000000000000000000000000000000000000000906103da9083016020908101908401610902565b145b9450505050505b9392505050565b60003073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001614801561045057507f000000000000000000000000000000000000000000000000000000000000000046145b1561047a57507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b60008082516041036105545760208301516040840151606085015160001a61054887828585610563565b9450945050505061055c565b506000905060025b9250929050565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561059a5750600090506003610672565b8460ff16601b141580156105b257508460ff16601c14155b156105c35750600090506004610672565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610617573d6000803e3d6000fd5b50506040517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0015191505073ffffffffffffffffffffffffffffffffffffffff811661066b57600060019250925050610672565b9150600090505b94509492505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040805190810167ffffffffffffffff811182821017156106cd576106cd61067b565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561071a5761071a61067b565b604052919050565b6000806000838503608081121561073857600080fd5b604081121561074657600080fd5b5061074f6106aa565b843573ffffffffffffffffffffffffffffffffffffffff8116811461077357600080fd5b8152602085810135818301529093506040850135925060608501359067ffffffffffffffff808311156107a557600080fd5b828701925087601f8401126107b957600080fd5b8235818111156107cb576107cb61067b565b6107fb837fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116016106d3565b9150808252888382860101111561081157600080fd5b80838501848401376000838284010152508093505050509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60005b83811015610879578181015183820152602001610861565b83811115610888576000848401525b50505050565b82815260406020820152600082518060408401526108b381606085016020870161085e565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016060019392505050565b600082516108f881846020870161085e565b9190910192915050565b60006020828403121561091457600080fd5b505191905056fea164736f6c634300080f000a",
    "sourceMap": "521:1555:194:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;645:30;;;;;;;;190:42:302;178:55;;;160:74;;148:2;133:18;645:30:194;;;;;;;;734:103;;775:62;734:103;;;;;391:25:302;;;379:2;364:18;734:103:194;245:177:302;1598:476:194;;;;;;:::i;:::-;;:::i;:::-;;;2717:14:302;;2710:22;2692:41;;2680:2;2665:18;1598:476:194;2552:187:302;1598:476:194;1763:11;1874:193;1924:5;1943:94;775:62;1997:7;:17;;;2016:7;:13;;;2031:3;1970:65;;;;;;;;;;2991:25:302;;;3064:42;3052:55;;;;3047:2;3032:18;;3025:83;3139:2;3124:18;;3117:34;3182:2;3167:18;;3160:34;2978:3;2963:19;;2744:456;1970:65:194;;;;;;;;;;;;;1960:76;;;;;;1943:16;:94::i;:::-;2051:6;1874:36;:193::i;:::-;1865:202;1598:476;-1:-1:-1;;;;1598:476:194:o;4339:165:58:-;4416:7;4442:55;4464:20;:18;:20::i;:::-;4486:10;8677:57:56;;4911:66:302;8677:57:56;;;4899:79:302;4994:11;;;4987:27;;;5030:12;;;5023:28;;;8641:7:56;;5067:12:302;;8677:57:56;;;;;;;;;;;;8667:68;;;;;;8660:75;;8548:194;;;;;4442:55:58;4435:62;4339:165;-1:-1:-1;;4339:165:58:o;1039:667:57:-;1175:4;1192:17;1211:24;1239:33;1256:4;1262:9;1239:16;:33::i;:::-;1191:81;;-1:-1:-1;1191:81:57;-1:-1:-1;1295:26:57;1286:5;:35;;;;;;;;:::i;:::-;;:58;;;;;1338:6;1325:19;;:9;:19;;;1286:58;1282:100;;;1367:4;1360:11;;;;;;1282:100;1393:12;1407:19;1430:6;:17;;1484:34;;;1520:4;1526:9;1461:75;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1430:116;;;;1461:75;1430:116;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1392:154;;;;1564:7;:42;;;;;1587:6;:13;1604:2;1587:19;1564:42;:134;;;;-1:-1:-1;1622:29:57;;1663:34;;1622:29;;;;;;;;;;;;:::i;:::-;:76;1564:134;1556:143;;;;;;1039:667;;;;;;:::o;3143:308:58:-;3196:7;3227:4;3219:29;3236:12;3219:29;;:66;;;;;3269:16;3252:13;:33;3219:66;3215:230;;;-1:-1:-1;3308:24:58;;3143:308::o;3215:230::-;-1:-1:-1;3633:73:58;;;3392:10;3633:73;;;;5349:25:302;;;;3404:12:58;5390:18:302;;;5383:34;3418:15:58;5433:18:302;;;5426:34;3677:13:58;5476:18:302;;;5469:34;3700:4:58;5519:19:302;;;;5512:84;;;;3633:73:58;;;;;;;;;;5321:19:302;;;;3633:73:58;;;3623:84;;;;;;3143:308::o;2243:730:56:-;2324:7;2333:12;2361:9;:16;2381:2;2361:22;2357:610;;2697:4;2682:20;;2676:27;2746:4;2731:20;;2725:27;2803:4;2788:20;;2782:27;2399:9;2774:36;2844:25;2855:4;2774:36;2676:27;2725;2844:10;:25::i;:::-;2837:32;;;;;;;;;2357:610;-1:-1:-1;2916:1:56;;-1:-1:-1;2920:35:56;2357:610;2243:730;;;;;:::o;5167:1603::-;5293:7;;6217:66;6204:79;;6200:161;;;-1:-1:-1;6315:1:56;;-1:-1:-1;6319:30:56;6299:51;;6200:161;6374:1;:7;;6379:2;6374:7;;:18;;;;;6385:1;:7;;6390:2;6385:7;;6374:18;6370:100;;;-1:-1:-1;6424:1:56;;-1:-1:-1;6428:30:56;6408:51;;6370:100;6581:24;;;6564:14;6581:24;;;;;;;;;5834:25:302;;;5907:4;5895:17;;5875:18;;;5868:45;;;;5929:18;;;5922:34;;;5972:18;;;5965:34;;;6581:24:56;;5806:19:302;;6581:24:56;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6581:24:56;;;;;;-1:-1:-1;;6619:20:56;;;6615:101;;6671:1;6675:29;6655:50;;;;;;;6615:101;6734:6;-1:-1:-1;6742:20:56;;-1:-1:-1;5167:1603:56;;;;;;;;:::o;427:184:302:-;479:77;476:1;469:88;576:4;573:1;566:15;600:4;597:1;590:15;616:256;687:4;681:11;;;719:17;;766:18;751:34;;787:22;;;748:62;745:88;;;813:18;;:::i;:::-;849:4;842:24;616:256;:::o;877:334::-;948:2;942:9;1004:2;994:13;;1009:66;990:86;978:99;;1107:18;1092:34;;1128:22;;;1089:62;1086:88;;;1154:18;;:::i;:::-;1190:2;1183:22;877:334;;-1:-1:-1;877:334:302:o;1216:1331::-;1335:6;1343;1351;1395:9;1386:7;1382:23;1425:3;1421:2;1417:12;1414:32;;;1442:1;1439;1432:12;1414:32;1466:4;1462:2;1458:13;1455:33;;;1484:1;1481;1474:12;1455:33;;1510:21;;:::i;:::-;1568:9;1555:23;1622:42;1613:7;1609:56;1600:7;1597:69;1587:97;;1680:1;1677;1670:12;1587:97;1693:22;;1734:2;1781:18;;;1768:32;1752:14;;;1745:56;1700:5;;-1:-1:-1;1872:4:302;1857:20;;1844:34;;-1:-1:-1;1929:2:302;1914:18;;1901:32;;1952:18;1982:14;;;1979:34;;;2009:1;2006;1999:12;1979:34;2047:6;2036:9;2032:22;2022:32;;2092:7;2085:4;2081:2;2077:13;2073:27;2063:55;;2114:1;2111;2104:12;2063:55;2150:2;2137:16;2172:2;2168;2165:10;2162:36;;;2178:18;;:::i;:::-;2220:112;2328:2;2259:66;2252:4;2248:2;2244:13;2240:86;2236:95;2220:112;:::i;:::-;2207:125;;2355:2;2348:5;2341:17;2395:7;2390:2;2385;2381;2377:11;2373:20;2370:33;2367:53;;;2416:1;2413;2406:12;2367:53;2471:2;2466;2462;2458:11;2453:2;2446:5;2442:14;2429:45;2515:1;2510:2;2505;2498:5;2494:14;2490:23;2483:34;;2536:5;2526:15;;;;;1216:1331;;;;;:::o;3205:184::-;3257:77;3254:1;3247:88;3354:4;3351:1;3344:15;3378:4;3375:1;3368:15;3394:258;3466:1;3476:113;3490:6;3487:1;3484:13;3476:113;;;3566:11;;;3560:18;3547:11;;;3540:39;3512:2;3505:10;3476:113;;;3607:6;3604:1;3601:13;3598:48;;;3642:1;3633:6;3628:3;3624:16;3617:27;3598:48;;3394:258;;;:::o;3657:511::-;3832:6;3821:9;3814:25;3875:2;3870;3859:9;3855:18;3848:30;3795:4;3907:6;3901:13;3950:6;3945:2;3934:9;3930:18;3923:34;3966:66;4025:6;4020:2;4009:9;4005:18;4000:2;3992:6;3988:15;3966:66;:::i;:::-;4084:2;4072:15;4089:66;4068:88;4053:104;;;;4159:2;4049:113;;3657:511;-1:-1:-1;;;3657:511:302:o;4173:274::-;4302:3;4340:6;4334:13;4356:53;4402:6;4397:3;4390:4;4382:6;4378:17;4356:53;:::i;:::-;4425:16;;;;;4173:274;-1:-1:-1;;4173:274:302:o;4452:184::-;4522:6;4575:2;4563:9;4554:7;4550:23;4546:32;4543:52;;;4591:1;4588;4581:12;4543:52;-1:-1:-1;4614:16:302;;4452:184;-1:-1:-1;4452:184:302:o",
    "linkReferences": {},
    "immutableReferences": {
      "36634": [
        {
          "start": 1112,
          "length": 32
        }
      ],
      "36636": [
        {
          "start": 1070,
          "length": 32
        }
      ],
      "36638": [
        {
          "start": 1028,
          "length": 32
        }
      ],
      "36640": [
        {
          "start": 1195,
          "length": 32
        }
      ],
      "36642": [
        {
          "start": 1232,
          "length": 32
        }
      ],
      "36644": [
        {
          "start": 1153,
          "length": 32
        }
      ],
      "79347": [
        {
          "start": 75,
          "length": 32
        },
        {
          "start": 246,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "ADMIN()": "2a0acc6a",
    "PROOF_TYPEHASH()": "8b3e3bf6",
    "verify((address,bytes32),bytes32,bytes)": "f5431ffa"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_admin\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_version\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"ADMIN\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"PROOF_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address payable\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"nonce\",\"type\":\"bytes32\"}],\"internalType\":\"struct Faucet.DripParameters\",\"name\":\"_params\",\"type\":\"tuple\"},{\"internalType\":\"bytes32\",\"name\":\"_id\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_proof\",\"type\":\"bytes\"}],\"name\":\"verify\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"valid_\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_admin\":\"Admin address that can sign off on drips.\",\"_name\":\"Contract name.\",\"_version\":\"The current major version of the signing domain.\"}},\"verify((address,bytes32),bytes32,bytes)\":{\"params\":{\"_id\":\"Authentication ID to verify.\",\"_params\":\"Drip parameters to verify.\",\"_proof\":\"Authentication proof to verify.\"},\"returns\":{\"valid_\":\"True if the drip parameters are valid.\"}}},\"title\":\"AdminFaucetAuthModule\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"ADMIN()\":{\"notice\":\"Admin address that can sign off on drips.\"},\"PROOF_TYPEHASH()\":{\"notice\":\"EIP712 typehash for the Proof type.\"},\"verify((address,bytes32),bytes32,bytes)\":{\"notice\":\"Verifies that the given drip parameters are valid.\"}},\"notice\":\"FaucetAuthModule that allows an admin to sign off on a given faucet drip. Takes an admin         as the constructor argument.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/periphery/faucet/authmodules/AdminFaucetAuthModule.sol\":\"AdminFaucetAuthModule\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@cwia/=lib/clones-with-immutable-args/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/solmate/\",\":clones-with-immutable-args/=lib/clones-with-immutable-args/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e\",\"dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xdb7f5c28fc61cda0bd8ab60ce288e206b791643bcd3ba464a70cbec18895a2f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf52bdf22a33263f5ca6227a35faeac3b81e7d2c692fbcc6a079d488710c5900\",\"dweb:/ipfs/QmcmsjkP4yq3UhiJbvyzwufaY2EKh1zhHaRK8ATag2cpD2\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/SignatureChecker.sol\":{\"keccak256\":\"0xbb5c92a62f2a917ec08667ebc024d5f4172ae3594cd5f4eaa997485ed0440d81\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://392c009a19ece7831c9851d8f47fa8a1ee7ae81eeff01040a976cc110b0b9a3b\",\"dweb:/ipfs/QmbtmS8RRPVNghAu9qWieesPkyrabQSypVpgbyhfzzubCe\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/draft-EIP712.sol\":{\"keccak256\":\"0x6688fad58b9ec0286d40fa957152e575d5d8bd4c3aa80985efdb11b44f776ae7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc00ab7f133cdaafd212a5cc6a16c8d37319721105d130c8e5af0c4e8f170ba\",\"dweb:/ipfs/QmVmf6LVMfFiEkvKYLzSv3bGHzymEW93AcUuFrNUdY3NtT\"]},\"src/periphery/faucet/Faucet.sol\":{\"keccak256\":\"0x82331800d9a28e4e9ea46939fded26e5d76371c9eddfffacd630313a6f8ff5bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04490faba2d3b9a68c678536e12717339adb5c4d6947c3a2d0e881a98026f727\",\"dweb:/ipfs/Qmbi8x84Lo2Y3CE1Azjif1GifVqFYvuhEzEDc6jXrRMnrS\"]},\"src/periphery/faucet/authmodules/AdminFaucetAuthModule.sol\":{\"keccak256\":\"0x631d0642fd235744338a702d884db56a7d132d47def45059170b272b6c79677f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e7a14b64a30e738f9f582452e1380268a6415a91d976a9febabe1cfeddc51ca3\",\"dweb:/ipfs/QmWvT3aZk2Q76URxQdxZtwcQqhqDtRh6LrBNjXwMDNEjwa\"]},\"src/periphery/faucet/authmodules/IFaucetAuthModule.sol\":{\"keccak256\":\"0x1ae04232fda8aa0ae4fced4af75032bed7020576126cf04bd53ecb329673276d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a74059bfdfb5d091d7e3966e1e4157c20f97b4dc29b62a4a66e82d433fac850\",\"dweb:/ipfs/QmetdNihkTcus9YupsexJU7U3LSDM1EUAuVoNTH1Bebsjf\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_admin",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "_version",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "ADMIN",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "PROOF_TYPEHASH",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct Faucet.DripParameters",
              "name": "_params",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address payable",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "nonce",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "bytes32",
              "name": "_id",
              "type": "bytes32"
            },
            {
              "internalType": "bytes",
              "name": "_proof",
              "type": "bytes"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "verify",
          "outputs": [
            {
              "internalType": "bool",
              "name": "valid_",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "constructor": {
            "params": {
              "_admin": "Admin address that can sign off on drips.",
              "_name": "Contract name.",
              "_version": "The current major version of the signing domain."
            }
          },
          "verify((address,bytes32),bytes32,bytes)": {
            "params": {
              "_id": "Authentication ID to verify.",
              "_params": "Drip parameters to verify.",
              "_proof": "Authentication proof to verify."
            },
            "returns": {
              "valid_": "True if the drip parameters are valid."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "ADMIN()": {
            "notice": "Admin address that can sign off on drips."
          },
          "PROOF_TYPEHASH()": {
            "notice": "EIP712 typehash for the Proof type."
          },
          "verify((address,bytes32),bytes32,bytes)": {
            "notice": "Verifies that the given drip parameters are valid."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@cwia/=lib/clones-with-immutable-args/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@rari-capital/solmate/=lib/solmate/",
        "clones-with-immutable-args/=lib/clones-with-immutable-args/src/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "safe-contracts/=lib/safe-contracts/contracts/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 999999
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "src/periphery/faucet/authmodules/AdminFaucetAuthModule.sol": "AdminFaucetAuthModule"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol": {
        "keccak256": "0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544",
        "urls": [
          "bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e",
          "dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10",
        "urls": [
          "bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487",
          "dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3",
        "urls": [
          "bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638",
          "dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0xdb7f5c28fc61cda0bd8ab60ce288e206b791643bcd3ba464a70cbec18895a2f5",
        "urls": [
          "bzz-raw://bf52bdf22a33263f5ca6227a35faeac3b81e7d2c692fbcc6a079d488710c5900",
          "dweb:/ipfs/QmcmsjkP4yq3UhiJbvyzwufaY2EKh1zhHaRK8ATag2cpD2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/SignatureChecker.sol": {
        "keccak256": "0xbb5c92a62f2a917ec08667ebc024d5f4172ae3594cd5f4eaa997485ed0440d81",
        "urls": [
          "bzz-raw://392c009a19ece7831c9851d8f47fa8a1ee7ae81eeff01040a976cc110b0b9a3b",
          "dweb:/ipfs/QmbtmS8RRPVNghAu9qWieesPkyrabQSypVpgbyhfzzubCe"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/draft-EIP712.sol": {
        "keccak256": "0x6688fad58b9ec0286d40fa957152e575d5d8bd4c3aa80985efdb11b44f776ae7",
        "urls": [
          "bzz-raw://8bc00ab7f133cdaafd212a5cc6a16c8d37319721105d130c8e5af0c4e8f170ba",
          "dweb:/ipfs/QmVmf6LVMfFiEkvKYLzSv3bGHzymEW93AcUuFrNUdY3NtT"
        ],
        "license": "MIT"
      },
      "src/periphery/faucet/Faucet.sol": {
        "keccak256": "0x82331800d9a28e4e9ea46939fded26e5d76371c9eddfffacd630313a6f8ff5bb",
        "urls": [
          "bzz-raw://04490faba2d3b9a68c678536e12717339adb5c4d6947c3a2d0e881a98026f727",
          "dweb:/ipfs/Qmbi8x84Lo2Y3CE1Azjif1GifVqFYvuhEzEDc6jXrRMnrS"
        ],
        "license": "MIT"
      },
      "src/periphery/faucet/authmodules/AdminFaucetAuthModule.sol": {
        "keccak256": "0x631d0642fd235744338a702d884db56a7d132d47def45059170b272b6c79677f",
        "urls": [
          "bzz-raw://e7a14b64a30e738f9f582452e1380268a6415a91d976a9febabe1cfeddc51ca3",
          "dweb:/ipfs/QmWvT3aZk2Q76URxQdxZtwcQqhqDtRh6LrBNjXwMDNEjwa"
        ],
        "license": "MIT"
      },
      "src/periphery/faucet/authmodules/IFaucetAuthModule.sol": {
        "keccak256": "0x1ae04232fda8aa0ae4fced4af75032bed7020576126cf04bd53ecb329673276d",
        "urls": [
          "bzz-raw://8a74059bfdfb5d091d7e3966e1e4157c20f97b4dc29b62a4a66e82d433fac850",
          "dweb:/ipfs/QmetdNihkTcus9YupsexJU7U3LSDM1EUAuVoNTH1Bebsjf"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": {}
  },
  "userdoc": {
    "version": 1,
    "kind": "user",
    "methods": {
      "ADMIN()": {
        "notice": "Admin address that can sign off on drips."
      },
      "PROOF_TYPEHASH()": {
        "notice": "EIP712 typehash for the Proof type."
      },
      "verify((address,bytes32),bytes32,bytes)": {
        "notice": "Verifies that the given drip parameters are valid."
      }
    },
    "notice": "FaucetAuthModule that allows an admin to sign off on a given faucet drip. Takes an admin         as the constructor argument."
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "methods": {
      "constructor": {
        "params": {
          "_admin": "Admin address that can sign off on drips.",
          "_name": "Contract name.",
          "_version": "The current major version of the signing domain."
        }
      },
      "verify((address,bytes32),bytes32,bytes)": {
        "params": {
          "_id": "Authentication ID to verify.",
          "_params": "Drip parameters to verify.",
          "_proof": "Authentication proof to verify."
        },
        "returns": {
          "valid_": "True if the drip parameters are valid."
        }
      }
    },
    "title": "AdminFaucetAuthModule"
  },
  "ast": {
    "absolutePath": "src/periphery/faucet/authmodules/AdminFaucetAuthModule.sol",
    "id": 79416,
    "exportedSymbols": {
      "AdminFaucetAuthModule": [
        79415
      ],
      "EIP712": [
        36782
      ],
      "Faucet": [
        79329
      ],
      "IFaucetAuthModule": [
        79434
      ],
      "SignatureChecker": [
        36628
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:2045:194",
    "nodes": [
      {
        "id": 79331,
        "nodeType": "PragmaDirective",
        "src": "32:23:194",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 79333,
        "nodeType": "ImportDirective",
        "src": "57:85:194",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/cryptography/draft-EIP712.sol",
        "file": "@openzeppelin/contracts/utils/cryptography/draft-EIP712.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 79416,
        "sourceUnit": 36783,
        "symbolAliases": [
          {
            "foreign": {
              "id": 79332,
              "name": "EIP712",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36782,
              "src": "66:6:194",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 79335,
        "nodeType": "ImportDirective",
        "src": "143:99:194",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/cryptography/SignatureChecker.sol",
        "file": "@openzeppelin/contracts/utils/cryptography/SignatureChecker.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 79416,
        "sourceUnit": 36629,
        "symbolAliases": [
          {
            "foreign": {
              "id": 79334,
              "name": "SignatureChecker",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36628,
              "src": "152:16:194",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 79337,
        "nodeType": "ImportDirective",
        "src": "243:60:194",
        "nodes": [],
        "absolutePath": "src/periphery/faucet/authmodules/IFaucetAuthModule.sol",
        "file": "./IFaucetAuthModule.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 79416,
        "sourceUnit": 79435,
        "symbolAliases": [
          {
            "foreign": {
              "id": 79336,
              "name": "IFaucetAuthModule",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 79434,
              "src": "252:17:194",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 79339,
        "nodeType": "ImportDirective",
        "src": "304:39:194",
        "nodes": [],
        "absolutePath": "src/periphery/faucet/Faucet.sol",
        "file": "../Faucet.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 79416,
        "sourceUnit": 79330,
        "symbolAliases": [
          {
            "foreign": {
              "id": 79338,
              "name": "Faucet",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 79329,
              "src": "313:6:194",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 79415,
        "nodeType": "ContractDefinition",
        "src": "521:1555:194",
        "nodes": [
          {
            "id": 79347,
            "nodeType": "VariableDeclaration",
            "src": "645:30:194",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 79345,
              "nodeType": "StructuredDocumentation",
              "src": "587:53:194",
              "text": "@notice Admin address that can sign off on drips."
            },
            "functionSelector": "2a0acc6a",
            "mutability": "immutable",
            "name": "ADMIN",
            "nameLocation": "670:5:194",
            "scope": 79415,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 79346,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "645:7:194",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 79353,
            "nodeType": "VariableDeclaration",
            "src": "734:103:194",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 79348,
              "nodeType": "StructuredDocumentation",
              "src": "682:47:194",
              "text": "@notice EIP712 typehash for the Proof type."
            },
            "functionSelector": "8b3e3bf6",
            "mutability": "constant",
            "name": "PROOF_TYPEHASH",
            "nameLocation": "758:14:194",
            "scope": 79415,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 79349,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "734:7:194",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "50726f6f66286164647265737320726563697069656e742c62797465733332206e6f6e63652c6279746573333220696429",
                  "id": 79351,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "785:51:194",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_d4283507dc7a8282faa6b4c8c18bacbb74dbbab5467342e6f581656f3577236e",
                    "typeString": "literal_string \"Proof(address recipient,bytes32 nonce,bytes32 id)\""
                  },
                  "value": "Proof(address recipient,bytes32 nonce,bytes32 id)"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_d4283507dc7a8282faa6b4c8c18bacbb74dbbab5467342e6f581656f3577236e",
                    "typeString": "literal_string \"Proof(address recipient,bytes32 nonce,bytes32 id)\""
                  }
                ],
                "id": 79350,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "775:9:194",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 79352,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "775:62:194",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 79360,
            "nodeType": "StructDefinition",
            "src": "1152:90:194",
            "nodes": [],
            "canonicalName": "AdminFaucetAuthModule.Proof",
            "members": [
              {
                "constant": false,
                "id": 79355,
                "mutability": "mutable",
                "name": "recipient",
                "nameLocation": "1183:9:194",
                "nodeType": "VariableDeclaration",
                "scope": 79360,
                "src": "1175:17:194",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 79354,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1175:7:194",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 79357,
                "mutability": "mutable",
                "name": "nonce",
                "nameLocation": "1210:5:194",
                "nodeType": "VariableDeclaration",
                "scope": 79360,
                "src": "1202:13:194",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 79356,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1202:7:194",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 79359,
                "mutability": "mutable",
                "name": "id",
                "nameLocation": "1233:2:194",
                "nodeType": "VariableDeclaration",
                "scope": 79360,
                "src": "1225:10:194",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 79358,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "1225:7:194",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Proof",
            "nameLocation": "1159:5:194",
            "scope": 79415,
            "visibility": "public"
          },
          {
            "id": 79379,
            "nodeType": "FunctionDefinition",
            "src": "1426:128:194",
            "nodes": [],
            "body": {
              "id": 79378,
              "nodeType": "Block",
              "src": "1523:31:194",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 79376,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 79374,
                      "name": "ADMIN",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79347,
                      "src": "1533:5:194",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 79375,
                      "name": "_admin",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79363,
                      "src": "1541:6:194",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1533:14:194",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 79377,
                  "nodeType": "ExpressionStatement",
                  "src": "1533:14:194"
                }
              ]
            },
            "documentation": {
              "id": 79361,
              "nodeType": "StructuredDocumentation",
              "src": "1248:173:194",
              "text": "@param _admin   Admin address that can sign off on drips.\n @param _name    Contract name.\n @param _version The current major version of the signing domain."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 79370,
                    "name": "_name",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 79365,
                    "src": "1506:5:194",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  },
                  {
                    "id": 79371,
                    "name": "_version",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 79367,
                    "src": "1513:8:194",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_memory_ptr",
                      "typeString": "string memory"
                    }
                  }
                ],
                "id": 79372,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 79369,
                  "name": "EIP712",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 36782,
                  "src": "1499:6:194"
                },
                "nodeType": "ModifierInvocation",
                "src": "1499:23:194"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 79368,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79363,
                  "mutability": "mutable",
                  "name": "_admin",
                  "nameLocation": "1446:6:194",
                  "nodeType": "VariableDeclaration",
                  "scope": 79379,
                  "src": "1438:14:194",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 79362,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1438:7:194",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79365,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "1468:5:194",
                  "nodeType": "VariableDeclaration",
                  "scope": 79379,
                  "src": "1454:19:194",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 79364,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1454:6:194",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79367,
                  "mutability": "mutable",
                  "name": "_version",
                  "nameLocation": "1489:8:194",
                  "nodeType": "VariableDeclaration",
                  "scope": 79379,
                  "src": "1475:22:194",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 79366,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1475:6:194",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1437:61:194"
            },
            "returnParameters": {
              "id": 79373,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1523:0:194"
            },
            "scope": 79415,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 79414,
            "nodeType": "FunctionDefinition",
            "src": "1598:476:194",
            "nodes": [],
            "body": {
              "id": 79413,
              "nodeType": "Block",
              "src": "1780:294:194",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 79411,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 79392,
                      "name": "valid_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 79390,
                      "src": "1865:6:194",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 79395,
                          "name": "ADMIN",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79347,
                          "src": "1924:5:194",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "id": 79400,
                                      "name": "PROOF_TYPEHASH",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 79353,
                                      "src": "1981:14:194",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    {
                                      "expression": {
                                        "id": 79401,
                                        "name": "_params",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 79383,
                                        "src": "1997:7:194",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_DripParameters_$79094_memory_ptr",
                                          "typeString": "struct Faucet.DripParameters memory"
                                        }
                                      },
                                      "id": 79402,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "recipient",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 79091,
                                      "src": "1997:17:194",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      }
                                    },
                                    {
                                      "expression": {
                                        "id": 79403,
                                        "name": "_params",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 79383,
                                        "src": "2016:7:194",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_DripParameters_$79094_memory_ptr",
                                          "typeString": "struct Faucet.DripParameters memory"
                                        }
                                      },
                                      "id": 79404,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "nonce",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 79093,
                                      "src": "2016:13:194",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    {
                                      "id": 79405,
                                      "name": "_id",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 79385,
                                      "src": "2031:3:194",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      },
                                      {
                                        "typeIdentifier": "t_address_payable",
                                        "typeString": "address payable"
                                      },
                                      {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      },
                                      {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    ],
                                    "expression": {
                                      "id": 79398,
                                      "name": "abi",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -1,
                                      "src": "1970:3:194",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_abi",
                                        "typeString": "abi"
                                      }
                                    },
                                    "id": 79399,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "memberName": "encode",
                                    "nodeType": "MemberAccess",
                                    "src": "1970:10:194",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 79406,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1970:65:194",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 79397,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -8,
                                "src": "1960:9:194",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 79407,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "1960:76:194",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            ],
                            "id": 79396,
                            "name": "_hashTypedDataV4",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36781,
                            "src": "1943:16:194",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_view$_t_bytes32_$returns$_t_bytes32_$",
                              "typeString": "function (bytes32) view returns (bytes32)"
                            }
                          },
                          "id": 79408,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1943:94:194",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        {
                          "id": 79409,
                          "name": "_proof",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 79387,
                          "src": "2051:6:194",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          },
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "expression": {
                          "id": 79393,
                          "name": "SignatureChecker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 36628,
                          "src": "1874:16:194",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_SignatureChecker_$36628_$",
                            "typeString": "type(library SignatureChecker)"
                          }
                        },
                        "id": 79394,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isValidSignatureNow",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 36627,
                        "src": "1874:36:194",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                          "typeString": "function (address,bytes32,bytes memory) view returns (bool)"
                        }
                      },
                      "id": 79410,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1874:193:194",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "1865:202:194",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 79412,
                  "nodeType": "ExpressionStatement",
                  "src": "1865:202:194"
                }
              ]
            },
            "baseFunctions": [
              79433
            ],
            "documentation": {
              "id": 79380,
              "nodeType": "StructuredDocumentation",
              "src": "1560:33:194",
              "text": "@inheritdoc IFaucetAuthModule"
            },
            "functionSelector": "f5431ffa",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "verify",
            "nameLocation": "1607:6:194",
            "parameters": {
              "id": 79388,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79383,
                  "mutability": "mutable",
                  "name": "_params",
                  "nameLocation": "1652:7:194",
                  "nodeType": "VariableDeclaration",
                  "scope": 79414,
                  "src": "1623:36:194",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_DripParameters_$79094_memory_ptr",
                    "typeString": "struct Faucet.DripParameters"
                  },
                  "typeName": {
                    "id": 79382,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 79381,
                      "name": "Faucet.DripParameters",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 79094,
                      "src": "1623:21:194"
                    },
                    "referencedDeclaration": 79094,
                    "src": "1623:21:194",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_DripParameters_$79094_storage_ptr",
                      "typeString": "struct Faucet.DripParameters"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79385,
                  "mutability": "mutable",
                  "name": "_id",
                  "nameLocation": "1677:3:194",
                  "nodeType": "VariableDeclaration",
                  "scope": 79414,
                  "src": "1669:11:194",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 79384,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1669:7:194",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 79387,
                  "mutability": "mutable",
                  "name": "_proof",
                  "nameLocation": "1703:6:194",
                  "nodeType": "VariableDeclaration",
                  "scope": 79414,
                  "src": "1690:19:194",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 79386,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1690:5:194",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1613:102:194"
            },
            "returnParameters": {
              "id": 79391,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 79390,
                  "mutability": "mutable",
                  "name": "valid_",
                  "nameLocation": "1768:6:194",
                  "nodeType": "VariableDeclaration",
                  "scope": 79414,
                  "src": "1763:11:194",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 79389,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1763:4:194",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1762:13:194"
            },
            "scope": 79415,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 79341,
              "name": "IFaucetAuthModule",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 79434,
              "src": "555:17:194"
            },
            "id": 79342,
            "nodeType": "InheritanceSpecifier",
            "src": "555:17:194"
          },
          {
            "baseName": {
              "id": 79343,
              "name": "EIP712",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 36782,
              "src": "574:6:194"
            },
            "id": 79344,
            "nodeType": "InheritanceSpecifier",
            "src": "574:6:194"
          }
        ],
        "canonicalName": "AdminFaucetAuthModule",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 79340,
          "nodeType": "StructuredDocumentation",
          "src": "345:176:194",
          "text": "@title  AdminFaucetAuthModule\n @notice FaucetAuthModule that allows an admin to sign off on a given faucet drip. Takes an admin\n         as the constructor argument."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          79415,
          36782,
          79434
        ],
        "name": "AdminFaucetAuthModule",
        "nameLocation": "530:21:194",
        "scope": 79416,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 194
}