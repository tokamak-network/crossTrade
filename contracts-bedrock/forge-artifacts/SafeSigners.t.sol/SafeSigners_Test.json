{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "log_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "log_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "log_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "int256",
          "name": "",
          "type": "int256"
        }
      ],
      "name": "log_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "val",
          "type": "address"
        }
      ],
      "name": "log_named_address",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256[]",
          "name": "val",
          "type": "uint256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256[]",
          "name": "val",
          "type": "int256[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "address[]",
          "name": "val",
          "type": "address[]"
        }
      ],
      "name": "log_named_array",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "val",
          "type": "bytes"
        }
      ],
      "name": "log_named_bytes",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "val",
          "type": "bytes32"
        }
      ],
      "name": "log_named_bytes32",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "decimals",
          "type": "uint256"
        }
      ],
      "name": "log_named_decimal_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "val",
          "type": "int256"
        }
      ],
      "name": "log_named_int",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "string",
          "name": "val",
          "type": "string"
        }
      ],
      "name": "log_named_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "key",
          "type": "string"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "val",
          "type": "uint256"
        }
      ],
      "name": "log_named_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "name": "log_string",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "log_uint",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "",
          "type": "bytes"
        }
      ],
      "name": "logs",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "IS_TEST",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "ownerPKs",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "threshold",
          "type": "uint256"
        }
      ],
      "name": "_setupSafe",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "instanceId",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "ownerPKs",
              "type": "uint256[]"
            },
            {
              "internalType": "address[]",
              "name": "owners",
              "type": "address[]"
            },
            {
              "internalType": "uint256",
              "name": "threshold",
              "type": "uint256"
            },
            {
              "internalType": "contract DeployedSafe",
              "name": "safe",
              "type": "address"
            }
          ],
          "internalType": "struct SafeInstance",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "ownerPKs",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "threshold",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "initialBalance",
          "type": "uint256"
        },
        {
          "components": [
            {
              "internalType": "bool",
              "name": "includeFallbackHandler",
              "type": "bool"
            },
            {
              "internalType": "uint256",
              "name": "saltNonce",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "setupModulesCall_to",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "setupModulesCall_data",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "refundAmount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "refundToken",
              "type": "address"
            },
            {
              "internalType": "address payable",
              "name": "refundReceiver",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "initData",
              "type": "bytes"
            }
          ],
          "internalType": "struct AdvancedSafeInitParams",
          "name": "advancedParams",
          "type": "tuple"
        }
      ],
      "name": "_setupSafe",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "instanceId",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "ownerPKs",
              "type": "uint256[]"
            },
            {
              "internalType": "address[]",
              "name": "owners",
              "type": "address[]"
            },
            {
              "internalType": "uint256",
              "name": "threshold",
              "type": "uint256"
            },
            {
              "internalType": "contract DeployedSafe",
              "name": "safe",
              "type": "address"
            }
          ],
          "internalType": "struct SafeInstance",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "ownerPKs",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256",
          "name": "threshold",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "initialBalance",
          "type": "uint256"
        }
      ],
      "name": "_setupSafe",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "instanceId",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "ownerPKs",
              "type": "uint256[]"
            },
            {
              "internalType": "address[]",
              "name": "owners",
              "type": "address[]"
            },
            {
              "internalType": "uint256",
              "name": "threshold",
              "type": "uint256"
            },
            {
              "internalType": "contract DeployedSafe",
              "name": "safe",
              "type": "address"
            }
          ],
          "internalType": "struct SafeInstance",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "_setupSafe",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "instanceId",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "ownerPKs",
              "type": "uint256[]"
            },
            {
              "internalType": "address[]",
              "name": "owners",
              "type": "address[]"
            },
            {
              "internalType": "uint256",
              "name": "threshold",
              "type": "uint256"
            },
            {
              "internalType": "contract DeployedSafe",
              "name": "safe",
              "type": "address"
            }
          ],
          "internalType": "struct SafeInstance",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "excludedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "excludeSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "excludedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failed",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getSafe",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "instanceId",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "ownerPKs",
              "type": "uint256[]"
            },
            {
              "internalType": "address[]",
              "name": "owners",
              "type": "address[]"
            },
            {
              "internalType": "uint256",
              "name": "threshold",
              "type": "uint256"
            },
            {
              "internalType": "contract DeployedSafe",
              "name": "safe",
              "type": "address"
            }
          ],
          "internalType": "struct SafeInstance",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_safe",
          "type": "address"
        }
      ],
      "name": "getSafe",
      "outputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "instanceId",
              "type": "uint256"
            },
            {
              "internalType": "uint256[]",
              "name": "ownerPKs",
              "type": "uint256[]"
            },
            {
              "internalType": "address[]",
              "name": "owners",
              "type": "address[]"
            },
            {
              "internalType": "uint256",
              "name": "threshold",
              "type": "uint256"
            },
            {
              "internalType": "contract DeployedSafe",
              "name": "safe",
              "type": "address"
            }
          ],
          "internalType": "struct SafeInstance",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifactSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedArtifactSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetArtifacts",
      "outputs": [
        {
          "internalType": "string[]",
          "name": "targetedArtifacts_",
          "type": "string[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetContracts",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedContracts_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSelectors",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            },
            {
              "internalType": "bytes4[]",
              "name": "selectors",
              "type": "bytes4[]"
            }
          ],
          "internalType": "struct StdInvariant.FuzzSelector[]",
          "name": "targetedSelectors_",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "targetSenders",
      "outputs": [
        {
          "internalType": "address[]",
          "name": "targetedSenders_",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "_numSigs",
          "type": "uint256"
        }
      ],
      "name": "testDiff_getSignaturesVsCheckSignatures_succeeds",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6080604081905260008054600160ff1991821681179092556004805490911690911790556200002e9062000118565b604051809103906000f0801580156200004b573d6000803e3d6000fd5b50601b80546001600160a01b0319166001600160a01b03929092169190911790556040516200007a9062000126565b604051809103906000f08015801562000097573d6000803e3d6000fd5b50601c80546001600160a01b0319166001600160a01b0392909216919091179055604051620000c69062000134565b604051809103906000f080158015620000e3573d6000803e3d6000fd5b50601d80546001600160a01b0319166001600160a01b03929092169190911790553480156200011157600080fd5b5062000142565b614226806200437e83390190565b61093380620085a483390190565b6111098062008ed783390190565b61422c80620001526000396000f3fe608060405234801561001057600080fd5b506004361061011b5760003560e01c806368bc573e116100b2578063b38b471711610081578063ba414fa611610066578063ba414fa614610206578063e20c9f711461021e578063fa7626d41461022657600080fd5b8063b38b4717146101f6578063b5508aa9146101fe57600080fd5b806368bc573e146101be57806385226c81146101c6578063894adc65146101db578063916a17c6146101ee57600080fd5b80633f7286f4116100ee5780633f7286f41461017b578063403b551a146101835780634867cf9a1461019657806366d9a9a0146101a957600080fd5b8063080df7f1146101205780631778976d146101495780631ed7831c1461015e5780633e5e3c2314610173575b600080fd5b61013361012e3660046134b1565b610233565b6040516101409190613547565b60405180910390f35b61015c61015736600461369e565b610339565b005b610166610d17565b60405161014091906136d4565b610166610d86565b610166610df3565b610133610191366004613730565b610e60565b6101336101a4366004613852565b611397565b6101b1611494565b60405161014091906138a0565b6101336115a5565b6101ce6117d8565b6040516101409190613a10565b6101336101e9366004613a90565b6118a8565b6101b1611b1e565b610133611c26565b6101ce611d79565b61020e611e49565b6040519015158152602001610140565b610166611fa9565b60005461020e9060ff1681565b61027b6040518060a0016040528060008152602001606081526020016060815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b610332838369021e19e0c9bab240000060405180610100016040528060011515815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160405180602001604052806000815250815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160405180602001604052806000815250815250610e60565b9392505050565b81516020830120600061034f8360016019612016565b905060006103926040518060400160405280600b81526020017f676574536967735465737400000000000000000000000000000000000000000081525083612064565b91505060005b815181101561046a5760036103c58383815181106103b8576103b8613adc565b60200260200101516123de565b60038111156103d6576103d6613aad565b03610458576104396104148383815181106103f3576103f3613adc565b602002602001015173ffffffffffffffffffffffffffffffffffffffff1690565b7fffffffffffffffffffffffff00000000000000000000000000000000000000001790565b82828151811061044b5761044b613adc565b6020026020010181815250505b8061046281613b3a565b915050610398565b50600061047982846000611397565b9050600080600080606060008660200151905060005b8151811015610bae5760006104af8383815181106103b8576103b8613adc565b60038111156104c0576104c0613aad565b03610623577f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c73ffffffffffffffffffffffffffffffffffffffff1663e341eaa483838151811061051657610516613adc565b60200260200101518d6040518363ffffffff1660e01b8152600401610545929190918252602082015260400190565b606060405180830381865afa158015610562573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105869190613b72565b60408051602081018490529081018290527fff0000000000000000000000000000000000000000000000000000000000000060f885901b166060820152929950909750955083906061015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905261060d9291602001613baf565b6040516020818303038152906040529250610b9c565b600161063a8383815181106103b8576103b8613adc565b600381111561064b5761064b613aad565b036107bf577f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c73ffffffffffffffffffffffffffffffffffffffff1663e341eaa48383815181106106a1576106a1613adc565b60200260200101518d6040516020016106e691907f19457468657265756d205369676e6564204d6573736167653a0a3332000000008152601c810191909152603c0190565b604051602081830303815290604052805190602001206040518363ffffffff1660e01b8152600401610722929190918252602082015260400190565b606060405180830381865afa15801561073f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107639190613b72565b91985096509450610775600488613bde565b60408051602081018990529081018790527fff0000000000000000000000000000000000000000000000000000000000000060f883901b16606082015290975083906061016105d1565b60026107d68383815181106103b8576103b8613adc565b60038111156107e7576107e7613aad565b036109cc577f885cb69240a935d632d79c317109709ecfa91a80626ff3989d68f67f5b1dd12d60001c73ffffffffffffffffffffffffffffffffffffffff1663ca669fa761084d84848151811061084057610840613adc565b6020026020010151612400565b6040517fffffffff0000000000000000000000000000000000000000000000000000000060e084901b16815273ffffffffffffffffffffffffffffffffffffffff9091166004820152602401600060405180830381600087803b1580156108b357600080fd5b505af11580156108c7573d6000803e3d6000fd5b50505060808901516040517fd4d9bdcd000000000000000000000000000000000000000000000000000000008152600481018e905273ffffffffffffffffffffffffffffffffffffffff909116915063d4d9bdcd90602401600060405180830381600087803b15801561093957600080fd5b505af115801561094d573d6000803e3d6000fd5b505050506001965061096a82828151811061084057610840613adc565b6040805173ffffffffffffffffffffffffffffffffffffffff92909216602083018190529082018790527fff0000000000000000000000000000000000000000000000000000000000000060f88a901b166060830152965083906061016105d1565b60036109e38383815181106103b8576103b8613adc565b60038111156109f4576109f4613aad565b03610b9c5783610a0381613b3a565b9450506000610a1d8383815181106103f3576103f3613adc565b6040805160048152602481018252602080820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f20c13b0b0000000000000000000000000000000000000000000000000000000090811790915283519182015273ffffffffffffffffffffffffffffffffffffffff84169a50929350737109709ecfa91a80626ff3989d68f67f5b1dd12d9263b96213e492859291016040516020818303038152906040526040518463ffffffff1660e01b8152600401610ae693929190613c03565b600060405180830381600087803b158015610b0057600080fd5b505af1158015610b14573d6000803e3d6000fd5b50505050600097508a6041610b299190613c4e565b60408051602081018a905280820183905260f88b901b7fff000000000000000000000000000000000000000000000000000000000000001660608201528151604181830301815260618201909252919750610b8991869190608101613baf565b6040516020818303038152906040529350505b80610ba681613b3a565b91505061048f565b5060005b83811015610c0c576040805160208082015260018183015281518082038301815260608201909252610be8918591608001613baf565b60405160208183030381529060405292508080610c0490613b3a565b915050610bb2565b50866080015173ffffffffffffffffffffffffffffffffffffffff166312fb68e08b8e858d6040518563ffffffff1660e01b8152600401610c509493929190613c8b565b60006040518083038186803b158015610c6857600080fd5b505afa158015610c7c573d6000803e3d6000fd5b505050506000610c8d8b848c612496565b9050610c9a81518b6126b3565b610caa81518960400151516126b3565b60005b8a811015610d0757610cf589604001518281518110610cce57610cce613adc565b6020026020010151838381518110610ce857610ce8613adc565b60200260200101516127c1565b80610cff81613b3a565b915050610cad565b5050505050505050505050505050565b6060600d805480602002602001604051908101604052809291908181526020018280548015610d7c57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610d51575b5050505050905090565b6060600f805480602002602001604051908101604052809291908181526020018280548015610d7c5760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610d51575050505050905090565b6060600e805480602002602001604051908101604052809291908181526020018280548015610d7c5760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610d51575050505050905090565b610ea86040518060a0016040528060008152602001606081526020016060815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b6000610eb3866128e7565b90506000815167ffffffffffffffff811115610ed157610ed161337a565b604051908082528060200260200182016040528015610efa578160200160208202803683370190505b50905060005b825181101561101957610f3a838281518110610f1e57610f1e613adc565b602002602001015160a01c6bffffffffffffffffffffffff1490565b15610fa557610f548382815181106103f3576103f3613adc565b828281518110610f6657610f66613adc565b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050611007565b610fba83828151811061084057610840613adc565b828281518110610fcc57610fcc613adc565b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff16815250505b8061101181613b3a565b915050610f00565b506000808560e001515111611127576040850151606086015186517fb63e800d000000000000000000000000000000000000000000000000000000009285928b9261106557600061107f565b601d5473ffffffffffffffffffffffffffffffffffffffff165b8a60a001518b608001518c60c001516040516024016110a5989796959493929190613cc8565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009093169290921790915261112d565b8460e001515b601c54601b5460208801516040517f1688f0b900000000000000000000000000000000000000000000000000000000815293945060009373ffffffffffffffffffffffffffffffffffffffff93841693631688f0b99361119593911691879190600401613d3e565b6020604051808303816000875af11580156111b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111d89190613d7d565b6040805160a081018252601e805480835260208084018a8152948401899052606084018e905273ffffffffffffffffffffffffffffffffffffffff86166080850152600182018355600092909252825160059091027f50bb669a95c7b50b7e8a6f09454034b2b14cf2b85c730dca9a539ca82cb6e350810191825593518051959650929485949193611290937f50bb669a95c7b50b7e8a6f09454034b2b14cf2b85c730dca9a539ca82cb6e351909301920190613282565b50604082015180516112ac9160028401916020909101906132cd565b5060608201516003820155608090910151600491820180547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9283161790556040517fc88a5e6d0000000000000000000000000000000000000000000000000000000081529084169181019190915260248101899052737109709ecfa91a80626ff3989d68f67f5b1dd12d9063c88a5e6d90604401600060405180830381600087803b15801561137157600080fd5b505af1158015611385573d6000803e3d6000fd5b50929c9b505050505050505050505050565b6113df6040518060a0016040528060008152602001606081526020016060815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b61148c84848460405180610100016040528060011515815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160405180602001604052806000815250815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff16815260200160405180602001604052806000815250815250610e60565b949350505050565b60606012805480602002602001604051908101604052809291908181526020016000905b8282101561159c57600084815260209081902060408051808201825260028602909201805473ffffffffffffffffffffffffffffffffffffffff16835260018101805483518187028101870190945280845293949193858301939283018282801561158457602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1916815260200190600401906020826003010492830192600103820291508084116115315790505b505050505081525050815260200190600101906114b8565b50505050905090565b6115ed6040518060a0016040528060008152602001606081526020016060815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b601e546000036116aa576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604f60248201527f5341464554455354544f4f4c533a2054657374205361666520686173206e6f7460448201527f206265656e206465706c6f7965642c20757365205f736574757053616665282960648201527f2063616c6c696e67207361666528290000000000000000000000000000000000608482015260a4015b60405180910390fd5b601e6000815481106116be576116be613adc565b90600052602060002090600502016040518060a0016040529081600082015481526020016001820180548060200260200160405190810160405280929190818152602001828054801561173057602002820191906000526020600020905b81548152602001906001019080831161171c575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561179f57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311611774575b50505091835250506003820154602082015260049091015473ffffffffffffffffffffffffffffffffffffffff16604090910152919050565b60606011805480602002602001604051908101604052809291908181526020016000905b8282101561159c57838290600052602060002001805461181b90613d9a565b80601f016020809104026020016040519081016040528092919081815260200182805461184790613d9a565b80156118945780601f1061186957610100808354040283529160200191611894565b820191906000526020600020905b81548152906001019060200180831161187757829003601f168201915b5050505050815260200190600101906117fc565b6118f06040518060a0016040528060008152602001606081526020016060815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b60005b601e54811015611a95578273ffffffffffffffffffffffffffffffffffffffff16601e828154811061192757611927613adc565b600091825260209091206004600590920201015473ffffffffffffffffffffffffffffffffffffffff1603611a8557601e818154811061196957611969613adc565b90600052602060002090600502016040518060a001604052908160008201548152602001600182018054806020026020016040519081016040528092919081815260200182805480156119db57602002820191906000526020600020905b8154815260200190600101908083116119c7575b5050505050815260200160028201805480602002602001604051908101604052809291908181526020018280548015611a4a57602002820191906000526020600020905b815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311611a1f575b50505091835250506003820154602082015260049091015473ffffffffffffffffffffffffffffffffffffffff166040909101529392505050565b611a8e81613b3a565b90506118f3565b506040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f5341464554455354544f4f4c533a205361666520696e7374616e6365206e6f7460448201527f20666f756e64000000000000000000000000000000000000000000000000000060648201526084016116a1565b60606013805480602002602001604051908101604052809291908181526020016000905b8282101561159c57600084815260209081902060408051808201825260028602909201805473ffffffffffffffffffffffffffffffffffffffff168352600181018054835181870281018701909452808452939491938583019392830182828015611c0e57602002820191906000526020600020906000905b82829054906101000a900460e01b7bffffffffffffffffffffffffffffffffffffffffffffffffffffffff191681526020019060040190602082600301049283019260010382029150808411611bbb5790505b50505050508152505081526020019060010190611b42565b611c6e6040518060a0016040528060008152602001606081526020016060815260200160008152602001600073ffffffffffffffffffffffffffffffffffffffff1681525090565b6000611cb06040518060400160405280600781526020017f64656661756c74000000000000000000000000000000000000000000000000008152506003612064565b60408051610100810182526001815281518083018352600981527f53414645205445535400000000000000000000000000000000000000000000006020918201527fbff0e1d6be3df3bedf05c892f554fbea3c6ca2bb9d224bc3f3d3fbc3ec267d1c8183015260008284018190528351808301855281815260608401526080830181905260a0830181905260c08301819052835191820190935291825260e0810191909152909250611d739150829060029069021e19e0c9bab240000090610e60565b91505090565b60606010805480602002602001604051908101604052809291908181526020016000905b8282101561159c578382906000526020600020018054611dbc90613d9a565b80601f0160208091040260200160405190810160405280929190818152602001828054611de890613d9a565b8015611e355780601f10611e0a57610100808354040283529160200191611e35565b820191906000526020600020905b815481529060010190602001808311611e1857829003601f168201915b505050505081526020019060010190611d9d565b60008054610100900460ff1615611e695750600054610100900460ff1690565b6000737109709ecfa91a80626ff3989d68f67f5b1dd12d3b15611fa45760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190527f6661696c6564000000000000000000000000000000000000000000000000000082840152825180830384018152606083019093526000929091611f0e917f667f9d70ca411d70ead50d8d5c22070dafc36ad75f3dcf5e7237b22ade9aecc491608001613ded565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815290829052611f4691613e35565b6000604051808303816000865af19150503d8060008114611f83576040519150601f19603f3d011682016040523d82523d6000602084013e611f88565b606091505b5091505080806020019051810190611fa09190613e51565b9150505b919050565b6060600c805480602002602001604051908101604052809291908181526020018280548015610d7c5760200282019190600052602060002090815473ffffffffffffffffffffffffffffffffffffffff168152600190910190602001808311610d51575050505050905090565b6000612023848484612dce565b90506103326040518060400160405280600c81526020017f426f756e6420526573756c74000000000000000000000000000000000000000081525082613006565b6060808267ffffffffffffffff8111156120805761208061337a565b6040519080825280602002602001820160405280156120a9578160200160208202803683370190505b5090508267ffffffffffffffff8111156120c5576120c561337a565b6040519080825280602002602001820160405280156120ee578160200160208202803683370190505b50915060005b8381101561215d5760008160405160200161211191815260200190565b6040516020818303038152906040528051906020012060001c90508083838151811061213f5761213f613adc565b6020908102919091010152508061215581613b3a565b9150506120f4565b5060005b838110156123d657737109709ecfa91a80626ff3989d68f67f5b1dd12d73ffffffffffffffffffffffffffffffffffffffff1663ffa186498383815181106121ab576121ab613adc565b60200260200101516040518263ffffffff1660e01b81526004016121d191815260200190565b602060405180830381865afa1580156121ee573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122129190613d7d565b83828151811061222457612224613adc565b602002602001019073ffffffffffffffffffffffffffffffffffffffff16908173ffffffffffffffffffffffffffffffffffffffff1681525050737109709ecfa91a80626ff3989d68f67f5b1dd12d73ffffffffffffffffffffffffffffffffffffffff1663c657c7186122a384848151811061084057610840613adc565b6040517f6900a3ae000000000000000000000000000000000000000000000000000000008152600481018590528890737109709ecfa91a80626ff3989d68f67f5b1dd12d90636900a3ae90602401600060405180830381865afa15801561230e573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526123549190810190613e6e565b604051602001612365929190613baf565b6040516020818303038152906040526040518363ffffffff1660e01b8152600401612391929190613ee5565b600060405180830381600087803b1580156123ab57600080fd5b505af11580156123bf573d6000803e3d6000fd5b5050505080806123ce90613b3a565b915050612161565b509250929050565b6000806123ec600484613f14565b905080600381111561033257610332613aad565b6040517fffa1864900000000000000000000000000000000000000000000000000000000815260048101829052600090737109709ecfa91a80626ff3989d68f67f5b1dd12d9063ffa1864990602401602060405180830381865afa15801561246c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906124909190613d7d565b92915050565b60608167ffffffffffffffff8111156124b1576124b161337a565b6040519080825280602002602001820160405280156124da578160200160208202803683370190505b50905060008060008060005b868110156126a7576041818102890160208101516040820151919092015160ff16955090935091506000849003612522578260001c945061265d565b8360ff16600103612538578260001c945061265d565b601e8460ff1611156125fd576040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c81018a9052600190605c016040516020818303038152906040528051906020012060048661259d9190613f4f565b6040805160008152602081018083529390935260ff90911690820152606081018590526080810184905260a0016020604051602081039080840390855afa1580156125ec573d6000803e3d6000fd5b50505060206040510351945061265d565b6040805160008152602081018083528b905260ff861691810191909152606081018490526080810183905260019060a0016020604051602081039080840390855afa158015612650573d6000803e3d6000fd5b5050506020604051035194505b8486828151811061267057612670613adc565b73ffffffffffffffffffffffffffffffffffffffff909216602092830291909101909101528061269f81613b3a565b9150506124e6565b50505050509392505050565b8082146127bd577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f5060405161273f9060208082526022908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b75696e60408201527f745d000000000000000000000000000000000000000000000000000000000000606082015260800190565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8826040516127769190613f72565b60405180910390a17fb2de2fbe801a0df6c0cbddfd448ba3c41d48a040ca35c56c8196ef0fcae721a8816040516127ad9190613fbd565b60405180910390a16127bd613106565b5050565b8073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16146127bd577f41304facd9323d75b11bcdd609cb38effffdb05710f7caf0e9b16c6d9d709f506040516128799060208082526025908201527f4572726f723a2061203d3d2062206e6f7420736174697366696564205b61646460408201527f726573735d000000000000000000000000000000000000000000000000000000606082015260800190565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f826040516128b09190613ffa565b60405180910390a17f9c4e8541ca8f0dc1c413f9108f66d82d3cecb1bddbce437a61caa3175c4cc96f816040516127ad919061405b565b60606000825167ffffffffffffffff8111156129055761290561337a565b60405190808252806020026020018201604052801561292e578160200160208202803683370190505b5090506000835167ffffffffffffffff81111561294d5761294d61337a565b604051908082528060200260200182016040528015612976578160200160208202803683370190505b5090506000845167ffffffffffffffff8111156129955761299561337a565b6040519080825280602002602001820160405280156129ce57816020015b6129bb613347565b8152602001906001900390816129b35790505b50905060005b8551811015612b335760008682815181106129f1576129f1613adc565b602002602001015190506000612a0682612400565b9050612a208260a01c6bffffffffffffffffffffffff1490565b15612a3e575073ffffffffffffffffffffffffffffffffffffffff81165b80858481518110612a5157612a51613adc565b73ffffffffffffffffffffffffffffffffffffffff909216602092830291909101820152604051612aa09183910173ffffffffffffffffffffffffffffffffffffffff91909116815260200190565b604051602081830303815290604052612ab890614098565b848481518110612aca57612aca613adc565b6020026020010151600060028110612ae457612ae4613adc565b602002015283518290859085908110612aff57612aff613adc565b6020026020010151600160028110612b1957612b19613adc565b602002015250819050612b2b81613b3a565b9150506129d4565b506040517f128424a700000000000000000000000000000000000000000000000000000000815273__$dfdc500774783d96746216ea464aa94b2d$__9063128424a790612b849085906004016140da565b600060405180830381865af4158015612ba1573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052612be79190810190614134565b91506000805b8351811015612d0c576000848281518110612c0a57612c0a613adc565b602002602001015190506000805b8551811015612cd7578273ffffffffffffffffffffffffffffffffffffffff16868281518110612c4a57612c4a613adc565b6020026020010151600060028110612c6457612c64613adc565b602002015173ffffffffffffffffffffffffffffffffffffffff1603612cc557858181518110612c9657612c96613adc565b6020026020010151600160028110612cb057612cb0613adc565b6020020151915084612cc181613b3a565b9550505b80612ccf81613b3a565b915050612c18565b5080878481518110612ceb57612ceb613adc565b60200260200101818152505050508080612d0490613b3a565b915050612bed565b508551811015612dc4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604d60248201527f5341464554455354544f4f4c533a20697373756520776974682070726976617460448201527f65206b657920736f7274696e672c20706c65617365206f70656e20612074696360648201527f6b6574206f6e2067697468756200000000000000000000000000000000000000608482015260a4016116a1565b5091949350505050565b600081831115612e60576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603e60248201527f5374645574696c7320626f756e642875696e743235362c75696e743235362c7560448201527f696e74323536293a204d6178206973206c657373207468616e206d696e2e000060648201526084016116a1565b828410158015612e705750818411155b15612e7c575082610332565b6000612e8884846141ce565b612e939060016141e5565b905060038511158015612ea557508481115b15612ebc57612eb485856141e5565b915050610332565b612ee760037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6141ce565b8510158015612f1e5750612f1b857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6141ce565b81115b15612f5757612f4d857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6141ce565b612eb490846141ce565b82851115612fad576000612f6b84876141ce565b90506000612f798383613f14565b905080600003612f8e57849350505050610332565b6001612f9a82886141e5565b612fa491906141ce565b93505050612ffe565b83851015612ffe576000612fc186866141ce565b90506000612fcf8383613f14565b905080600003612fe457859350505050610332565b612fee81866141ce565b612ff99060016141e5565b935050505b509392505050565b60006a636f6e736f6c652e6c6f6773ffffffffffffffffffffffffffffffffffffffff16838360405160240161303d9291906141fd565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fb60e72cc00000000000000000000000000000000000000000000000000000000179052516130be9190613e35565b600060405180830381855afa9150503d80600081146130f9576040519150601f19603f3d011682016040523d82523d6000602084013e6130fe565b606091505b505050505050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156132545760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190527f6661696c656400000000000000000000000000000000000000000000000000009282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc490608001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290526131d59291602001613ded565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905261320d91613e35565b6000604051808303816000865af19150503d806000811461324a576040519150601f19603f3d011682016040523d82523d6000602084013e61324f565b606091505b505050505b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16610100179055565b8280548282559060005260206000209081019282156132bd579160200282015b828111156132bd5782518255916020019190600101906132a2565b506132c9929150613365565b5090565b8280548282559060005260206000209081019282156132bd579160200282015b828111156132bd57825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9091161782556020909201916001909101906132ed565b60405180604001604052806002906020820280368337509192915050565b5b808211156132c95760008155600101613366565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610100810167ffffffffffffffff811182821017156133cd576133cd61337a565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561341a5761341a61337a565b604052919050565b600067ffffffffffffffff82111561343c5761343c61337a565b5060051b60200190565b600082601f83011261345757600080fd5b8135602061346c61346783613422565b6133d3565b82815260059290921b8401810191818101908684111561348b57600080fd5b8286015b848110156134a6578035835291830191830161348f565b509695505050505050565b600080604083850312156134c457600080fd5b823567ffffffffffffffff8111156134db57600080fd5b6134e785828601613446565b95602094909401359450505050565b600081518084526020808501945080840160005b8381101561353c57815173ffffffffffffffffffffffffffffffffffffffff168752958201959082019060010161350a565b509495945050505050565b60208082528251828201528281015160a06040840152805160c0840181905260009291820190839060e08601905b808310156135955783518252928401926001929092019190840190613575565b50604087015193507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08682030160608701526135d181856134f6565b9350505050606084015160808401526080840151612ffe60a085018273ffffffffffffffffffffffffffffffffffffffff169052565b600067ffffffffffffffff8211156136215761362161337a565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f83011261365e57600080fd5b813561366c61346782613607565b81815284602083860101111561368157600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156136b157600080fd5b823567ffffffffffffffff8111156136c857600080fd5b6134e78582860161364d565b60208152600061033260208301846134f6565b80151581146136f557600080fd5b50565b8035611fa4816136e7565b73ffffffffffffffffffffffffffffffffffffffff811681146136f557600080fd5b8035611fa481613703565b6000806000806080858703121561374657600080fd5b843567ffffffffffffffff8082111561375e57600080fd5b61376a88838901613446565b95506020870135945060408701359350606087013591508082111561378e57600080fd5b9086019061010082890312156137a357600080fd5b6137ab6133a9565b6137b4836136f8565b8152602083013560208201526137cc60408401613725565b60408201526060830135828111156137e357600080fd5b6137ef8a82860161364d565b6060830152506080830135608082015261380b60a08401613725565b60a082015261381c60c08401613725565b60c082015260e08301358281111561383357600080fd5b61383f8a82860161364d565b60e0830152509598949750929550505050565b60008060006060848603121561386757600080fd5b833567ffffffffffffffff81111561387e57600080fd5b61388a86828701613446565b9660208601359650604090950135949350505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015613987578984037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc00186528251805173ffffffffffffffffffffffffffffffffffffffff168552880151888501889052805188860181905290890190839060608701905b808310156139725783517fffffffff00000000000000000000000000000000000000000000000000000000168252928b019260019290920191908b0190613930565b50978a019795505050918701916001016138c8565b50919998505050505050505050565b60005b838110156139b1578181015183820152602001613999565b838111156139c0576000848401525b50505050565b600081518084526139de816020860160208601613996565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015613a83577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0888603018452613a718583516139c6565b94509285019290850190600101613a37565b5092979650505050505050565b600060208284031215613aa257600080fd5b813561033281613703565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203613b6b57613b6b613b0b565b5060010190565b600080600060608486031215613b8757600080fd5b835160ff81168114613b9857600080fd5b602085015160409095015190969495509392505050565b60008351613bc1818460208801613996565b835190830190613bd5818360208801613996565b01949350505050565b600060ff821660ff84168060ff03821115613bfb57613bfb613b0b565b019392505050565b73ffffffffffffffffffffffffffffffffffffffff84168152606060208201526000613c3260608301856139c6565b8281036040840152613c4481856139c6565b9695505050505050565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615613c8657613c86613b0b565b500290565b848152608060208201526000613ca460808301866139c6565b8281036040840152613cb681866139c6565b91505082606083015295945050505050565b6000610100808352613cdc8184018c6134f6565b905089602084015273ffffffffffffffffffffffffffffffffffffffff808a1660408501528382036060850152613d13828a6139c6565b978116608085015295861660a0840152505060c081019290925290911660e090910152949350505050565b73ffffffffffffffffffffffffffffffffffffffff84168152606060208201526000613d6d60608301856139c6565b9050826040830152949350505050565b600060208284031215613d8f57600080fd5b815161033281613703565b600181811c90821680613dae57607f821691505b602082108103613de7577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7fffffffff000000000000000000000000000000000000000000000000000000008316815260008251613e27816004850160208701613996565b919091016004019392505050565b60008251613e47818460208701613996565b9190910192915050565b600060208284031215613e6357600080fd5b8151610332816136e7565b600060208284031215613e8057600080fd5b815167ffffffffffffffff811115613e9757600080fd5b8201601f81018413613ea857600080fd5b8051613eb661346782613607565b818152856020838501011115613ecb57600080fd5b613edc826020830160208601613996565b95945050505050565b73ffffffffffffffffffffffffffffffffffffffff8316815260406020820152600061148c60408301846139c6565b600082613f4a577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500690565b600060ff821660ff841680821015613f6957613f69613b0b565b90039392505050565b604081526000613faf60408301600a81527f2020202020204c65667400000000000000000000000000000000000000000000602082015260400190565b905082602083015292915050565b604081526000613faf60408301600a81527f2020202020526967687400000000000000000000000000000000000000000000602082015260400190565b60408152600061403760408301600a81527f2020202020204c65667400000000000000000000000000000000000000000000602082015260400190565b905073ffffffffffffffffffffffffffffffffffffffff8316602083015292915050565b60408152600061403760408301600a81527f2020202020526967687400000000000000000000000000000000000000000000602082015260400190565b80516020808301519190811015613de7577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60209190910360031b1b16919050565b6020808252825182820181905260009190848201906040850190845b8181101561412857835173ffffffffffffffffffffffffffffffffffffffff16835292840192918401916001016140f6565b50909695505050505050565b6000602080838503121561414757600080fd5b825167ffffffffffffffff81111561415e57600080fd5b8301601f8101851361416f57600080fd5b805161417d61346782613422565b81815260059190911b8201830190838101908783111561419c57600080fd5b928401925b828410156141c35783516141b481613703565b825292840192908401906141a1565b979650505050505050565b6000828210156141e0576141e0613b0b565b500390565b600082198211156141f8576141f8613b0b565b500190565b60408152600061421060408301856139c6565b9050826020830152939250505056fea164736f6c634300080f000a608060405234801561001057600080fd5b506001600455614201806100256000396000f3fe6080604052600436106101d15760003560e01c8063affed0e0116100f7578063e19a9dd911610095578063f08a032311610064578063f08a0323146105f5578063f698da2514610615578063f8dc5dd91461067c578063ffa1ad741461069c5761020d565b8063e19a9dd914610580578063e318b52b146105a0578063e75235b8146105c0578063e86637db146105d55761020d565b8063cc2f8452116100d1578063cc2f8452146104f2578063d4d9bdcd14610520578063d8d11f7814610540578063e009cfde146105605761020d565b8063affed0e01461049c578063b4faba09146104b2578063b63e800d146104d25761020d565b80635624b25b1161016f5780636a7612021161013e5780636a7612021461040f5780637d83297414610422578063934f3a111461045a578063a0e67e2b1461047a5761020d565b80635624b25b146103755780635ae6bd37146103a2578063610b5925146103cf578063694e80c3146103ef5761020d565b80632f54bf6e116101ab5780632f54bf6e146102ea5780633408e4701461030a578063468721a7146103275780635229073f146103475761020d565b80630d582f131461027357806312fb68e0146102955780632d9ad53d146102b55761020d565b3661020d5760405134815233907f3d0ce9bfc3ed7d6862dbb28b2dea94561fe714a1b4d019aa8af39730d1ad7c3d9060200160405180910390a2005b34801561021957600080fd5b507f6c9a6c4a39284e37ed1cf53d337577d14212a4870fb976a4366c693b939918d580548061024457005b36600080373360601b365260008060143601600080855af190503d6000803e8061026d573d6000fd5b503d6000f35b34801561027f57600080fd5b5061029361028e366004613568565b6106e5565b005b3480156102a157600080fd5b506102936102b036600461366e565b610933565b3480156102c157600080fd5b506102d56102d03660046136e3565b610ff7565b60405190151581526020015b60405180910390f35b3480156102f657600080fd5b506102d56103053660046136e3565b61104c565b34801561031657600080fd5b50465b6040519081526020016102e1565b34801561033357600080fd5b506102d561034236600461370f565b61109e565b34801561035357600080fd5b5061036761036236600461370f565b6111d4565b6040516102e19291906137e4565b34801561038157600080fd5b506103956103903660046137ff565b61120a565b6040516102e19190613821565b3480156103ae57600080fd5b506103196103bd366004613834565b60076020526000908152604090205481565b3480156103db57600080fd5b506102936103ea3660046136e3565b611290565b3480156103fb57600080fd5b5061029361040a366004613834565b611479565b6102d561041d366004613896565b611593565b34801561042e57600080fd5b5061031961043d366004613568565b600860209081526000928352604080842090915290825290205481565b34801561046657600080fd5b5061029361047536600461396f565b61198f565b34801561048657600080fd5b5061048f611a0b565b6040516102e19190613a2d565b3480156104a857600080fd5b5061031960055481565b3480156104be57600080fd5b506102936104cd366004613a40565b611b23565b3480156104de57600080fd5b506102936104ed366004613a90565b611b46565b3480156104fe57600080fd5b5061051261050d366004613568565b611c62565b6040516102e1929190613b85565b34801561052c57600080fd5b5061029361053b366004613834565b611ed0565b34801561054c57600080fd5b5061031961055b366004613bbd565b611fa4565b34801561056c57600080fd5b5061029361057b366004613c7e565b611fd1565b34801561058c57600080fd5b5061029361059b3660046136e3565b6121a3565b3480156105ac57600080fd5b506102936105bb366004613cb7565b612344565b3480156105cc57600080fd5b50600454610319565b3480156105e157600080fd5b506103956105f0366004613bbd565b6126bc565b34801561060157600080fd5b506102936106103660046136e3565b612855565b34801561062157600080fd5b5061031960007f47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a794692184660408051602081019390935282015230606082015260800160405160208183030381529060405280519060200120905090565b34801561068857600080fd5b50610293610697366004613d02565b6128aa565b3480156106a857600080fd5b506103956040518060400160405280600581526020017f312e342e3000000000000000000000000000000000000000000000000000000081525081565b6106ed612b34565b73ffffffffffffffffffffffffffffffffffffffff821615801590610729575073ffffffffffffffffffffffffffffffffffffffff8216600114155b801561074b575073ffffffffffffffffffffffffffffffffffffffff82163014155b6107b6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475332303300000000000000000000000000000000000000000000000000000060448201526064015b60405180910390fd5b73ffffffffffffffffffffffffffffffffffffffff8281166000908152600260205260409020541615610845576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475332303400000000000000000000000000000000000000000000000000000060448201526064016107ad565b60026020527fe90b7bceb6e7df5418fb78d8ee546e97c83a08bbccc01a0644d599ccd2a7c2e0805473ffffffffffffffffffffffffffffffffffffffff8481166000818152604081208054939094167fffffffffffffffffffffffff0000000000000000000000000000000000000000938416179093556001835283549091161790915560038054916108d783613d72565b909155505060405173ffffffffffffffffffffffffffffffffffffffff8316907f9465fa0c962cc76958e6373a993326400c1c94f8be2fe3a952adfa7f60b2ea2690600090a2806004541461092f5761092f81611479565b5050565b61093e816041612b9f565b825110156109a8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475330323000000000000000000000000000000000000000000000000000000060448201526064016107ad565b6000808060008060005b86811015610feb576041818102890160208101516040820151919092015160ff16955090935091506000849003610cf857885160208a01208a14610a52576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475330323700000000000000000000000000000000000000000000000000000060448201526064016107ad565b9193508391610a62876041612b9f565b821015610acb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475330323100000000000000000000000000000000000000000000000000000060448201526064016107ad565b8751610ad8836020612bdb565b1115610b40576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475330323200000000000000000000000000000000000000000000000000000060448201526064016107ad565b602082890181015189519091610b63908390610b5d908790612bdb565b90612bdb565b1115610bcb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475330323300000000000000000000000000000000000000000000000000000060448201526064016107ad565b6040517f20c13b0b000000000000000000000000000000000000000000000000000000008082528a85016020019173ffffffffffffffffffffffffffffffffffffffff8916906320c13b0b90610c27908f908690600401613daa565b602060405180830381865afa158015610c44573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c689190613dcf565b7fffffffff000000000000000000000000000000000000000000000000000000001614610cf1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475330323400000000000000000000000000000000000000000000000000000060448201526064016107ad565b5050610eeb565b8360ff16600103610dc65791935083913373ffffffffffffffffffffffffffffffffffffffff84161480610d5b575073ffffffffffffffffffffffffffffffffffffffff851660009081526008602090815260408083208d845290915290205415155b610dc1576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475330323500000000000000000000000000000000000000000000000000000060448201526064016107ad565b610eeb565b601e8460ff161115610e8b576040517f19457468657265756d205369676e6564204d6573736167653a0a3332000000006020820152603c81018b9052600190605c0160405160208183030381529060405280519060200120600486610e2b9190613e11565b6040805160008152602081018083529390935260ff90911690820152606081018590526080810184905260a0016020604051602081039080840390855afa158015610e7a573d6000803e3d6000fd5b505050602060405103519450610eeb565b6040805160008152602081018083528c905260ff861691810191909152606081018490526080810183905260019060a0016020604051602081039080840390855afa158015610ede573d6000803e3d6000fd5b5050506020604051035194505b8573ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff16118015610f4c575073ffffffffffffffffffffffffffffffffffffffff8581166000908152600260205260409020541615155b8015610f6f575073ffffffffffffffffffffffffffffffffffffffff8516600114155b610fd5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475330323600000000000000000000000000000000000000000000000000000060448201526064016107ad565b8495508080610fe390613d72565b9150506109b2565b50505050505050505050565b6000600173ffffffffffffffffffffffffffffffffffffffff831614801590611046575073ffffffffffffffffffffffffffffffffffffffff8281166000908152600160205260409020541615155b92915050565b600073ffffffffffffffffffffffffffffffffffffffff821660011480159061104657505073ffffffffffffffffffffffffffffffffffffffff90811660009081526002602052604090205416151590565b6000336001148015906110d557503360009081526001602052604090205473ffffffffffffffffffffffffffffffffffffffff1615155b61113b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475331303400000000000000000000000000000000000000000000000000000060448201526064016107ad565b611168858585857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff612bf7565b905080156111a05760405133907f6895c13664aa4f67288b25d7a21d7aaa34916e355fb9b6fae0a139a9085becb890600090a26111cc565b60405133907facd2c8702804128fdb0db2bb49f6d127dd0181c13fd45dbfe16de0930e2bd37590600090a25b949350505050565b600060606111e48686868661109e565b915060405160203d0181016040523d81523d6000602083013e8091505094509492505050565b60606000611219836020613e34565b67ffffffffffffffff81111561123157611231613594565b6040519080825280601f01601f19166020018201604052801561125b576020820181803683370190505b50905060005b8381101561128857848101546020808302840101528061128081613d72565b915050611261565b509392505050565b611298612b34565b73ffffffffffffffffffffffffffffffffffffffff8116158015906112d4575073ffffffffffffffffffffffffffffffffffffffff8116600114155b61133a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475331303100000000000000000000000000000000000000000000000000000060448201526064016107ad565b73ffffffffffffffffffffffffffffffffffffffff81811660009081526001602052604090205416156113c9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475331303200000000000000000000000000000000000000000000000000000060448201526064016107ad565b600160208190527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f805473ffffffffffffffffffffffffffffffffffffffff848116600081815260408082208054949095167fffffffffffffffffffffffff000000000000000000000000000000000000000094851617909455948552835490911681179092555190917fecdf3a3effea5783a3c4c2140e677577666428d44ed9d474a0b3a4c9943f844091a250565b611481612b34565b6003548111156114ed576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475332303100000000000000000000000000000000000000000000000000000060448201526064016107ad565b6001811015611558576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475332303200000000000000000000000000000000000000000000000000000060448201526064016107ad565b60048190556040518181527f610f7ff2b304ae8903c3de74c60c6ab1f7d6226b3f52c5161905bb5ad4039c939060200160405180910390a150565b60008060006115ad8e8e8e8e8e8e8e8e8e8e6005546126bc565b6005805491925060006115bf83613d72565b90915550508051602082012091506115d882828661198f565b5060006116037f4a204f620c8c5ccdca3fd54d003badd85ba500436a431f0cbda4f558c93c34c85490565b905073ffffffffffffffffffffffffffffffffffffffff8116156116a3578073ffffffffffffffffffffffffffffffffffffffff166375f0bb528f8f8f8f8f8f8f8f8f8f8f336040518d63ffffffff1660e01b81526004016116709c9b9a99989796959493929190613edb565b600060405180830381600087803b15801561168a57600080fd5b505af115801561169e573d6000803e3d6000fd5b505050505b6116cf6116b28a6109c4613ff1565b603f6116bf8c6040613e34565b6116c99190614009565b90612c3e565b6116db906101f4613ff1565b5a1015611744576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475330313000000000000000000000000000000000000000000000000000000060448201526064016107ad565b60005a90506117b58f8f8f8f8080601f016020809104026020016040519081016040528093929190818152602001838380828437600081840152601f19601f820116905080830192505050505050508e8c6000146117a2578e612bf7565b6109c45a6117b09190614044565b612bf7565b93506117c25a8290612c55565b905083806117cf57508915155b806117d957508715155b61183f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475330313300000000000000000000000000000000000000000000000000000060448201526064016107ad565b6000881561185757611854828b8b8b8b612c70565b90505b841561189c57837f442e715f626346e8c54381002da614f62bee8d27386535b2521ec8540898556e8260405161188f91815260200190565b60405180910390a26118d7565b837f23428b18acfb3ea64b08dc0c1d296ea9c09702c09083ca5272e64d115b687d23826040516118ce91815260200190565b60405180910390a25b505073ffffffffffffffffffffffffffffffffffffffff81161561197e576040517f9327136800000000000000000000000000000000000000000000000000000000815260048101839052831515602482015273ffffffffffffffffffffffffffffffffffffffff821690639327136890604401600060405180830381600087803b15801561196557600080fd5b505af1158015611979573d6000803e3d6000fd5b505050505b50509b9a5050505050505050505050565b600454806119f9576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475330303100000000000000000000000000000000000000000000000000000060448201526064016107ad565b611a0584848484610933565b50505050565b6060600060035467ffffffffffffffff811115611a2a57611a2a613594565b604051908082528060200260200182016040528015611a53578160200160208202803683370190505b506001600090815260026020527fe90b7bceb6e7df5418fb78d8ee546e97c83a08bbccc01a0644d599ccd2a7c2e0549192509073ffffffffffffffffffffffffffffffffffffffff165b73ffffffffffffffffffffffffffffffffffffffff8116600114611b1b5780838381518110611ace57611ace61405b565b73ffffffffffffffffffffffffffffffffffffffff928316602091820292909201810191909152918116600090815260029092526040909120541681611b1381613d72565b925050611a9d565b509092915050565b600080825160208401855af480600052503d6020523d600060403e60403d016000fd5b611b848a8a808060200260200160405190810160405280939291908181526020018383602002808284376000920191909152508c9250612e01915050565b73ffffffffffffffffffffffffffffffffffffffff841615611ba957611ba9846131ce565b611be98787878080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061327192505050565b8115611c0057611bfe82600060018685612c70565b505b3373ffffffffffffffffffffffffffffffffffffffff167f141df868a6331af528e38c83b7aa03edc19be66e37ae67f9285bf4f8e3c6a1a88b8b8b8b89604051611c4e95949392919061408a565b60405180910390a250505050505050505050565b6060600073ffffffffffffffffffffffffffffffffffffffff841660011480611c8f5750611c8f84610ff7565b611cf5576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475331303500000000000000000000000000000000000000000000000000000060448201526064016107ad565b60008311611d5f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475331303600000000000000000000000000000000000000000000000000000060448201526064016107ad565b8267ffffffffffffffff811115611d7857611d78613594565b604051908082528060200260200182016040528015611da1578160200160208202803683370190505b5073ffffffffffffffffffffffffffffffffffffffff808616600090815260016020526040812054929450911691505b73ffffffffffffffffffffffffffffffffffffffff821615801590611e0d575073ffffffffffffffffffffffffffffffffffffffff8216600114155b8015611e1857508381105b15611e805781838281518110611e3057611e3061405b565b73ffffffffffffffffffffffffffffffffffffffff928316602091820292909201810191909152928116600090815260019093526040909220549091169080611e7881613d72565b915050611dd1565b73ffffffffffffffffffffffffffffffffffffffff8216600114611ec55782611eaa600183614044565b81518110611eba57611eba61405b565b602002602001015191505b808352509250929050565b3360009081526002602052604090205473ffffffffffffffffffffffffffffffffffffffff16611f5c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475330333000000000000000000000000000000000000000000000000000000060448201526064016107ad565b336000818152600860209081526040808320858452909152808220600190555183917ff2a0eb156472d1440255b0d7c1e19cc07115d1051fe605b0dce69acfec884d9c91a350565b6000611fb98c8c8c8c8c8c8c8c8c8c8c6126bc565b8051906020012090509b9a5050505050505050505050565b611fd9612b34565b73ffffffffffffffffffffffffffffffffffffffff811615801590612015575073ffffffffffffffffffffffffffffffffffffffff8116600114155b61207b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475331303100000000000000000000000000000000000000000000000000000060448201526064016107ad565b73ffffffffffffffffffffffffffffffffffffffff82811660009081526001602052604090205481169082161461210e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475331303300000000000000000000000000000000000000000000000000000060448201526064016107ad565b73ffffffffffffffffffffffffffffffffffffffff818116600081815260016020526040808220805487861684528284208054919096167fffffffffffffffffffffffff0000000000000000000000000000000000000000918216179095558383528054909416909355915190917faab4fa2b463f581b2b32cb3b7e3b704b9ce37cc209b5fb4d77e593ace405427691a25050565b6121ab612b34565b73ffffffffffffffffffffffffffffffffffffffff8116156122db576040517f01ffc9a70000000000000000000000000000000000000000000000000000000081527fe6d7a83a00000000000000000000000000000000000000000000000000000000600482015273ffffffffffffffffffffffffffffffffffffffff8216906301ffc9a790602401602060405180830381865afa158015612251573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906122759190614110565b6122db576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475333303000000000000000000000000000000000000000000000000000000060448201526064016107ad565b7f4a204f620c8c5ccdca3fd54d003badd85ba500436a431f0cbda4f558c93c34c881815560405173ffffffffffffffffffffffffffffffffffffffff8316907f1151116914515bc0891ff9047a6cb32cf902546f83066499bcf8ba33d2353fa290600090a25050565b61234c612b34565b73ffffffffffffffffffffffffffffffffffffffff811615801590612388575073ffffffffffffffffffffffffffffffffffffffff8116600114155b80156123aa575073ffffffffffffffffffffffffffffffffffffffff81163014155b612410576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475332303300000000000000000000000000000000000000000000000000000060448201526064016107ad565b73ffffffffffffffffffffffffffffffffffffffff818116600090815260026020526040902054161561249f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475332303400000000000000000000000000000000000000000000000000000060448201526064016107ad565b73ffffffffffffffffffffffffffffffffffffffff8216158015906124db575073ffffffffffffffffffffffffffffffffffffffff8216600114155b612541576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475332303300000000000000000000000000000000000000000000000000000060448201526064016107ad565b73ffffffffffffffffffffffffffffffffffffffff8381166000908152600260205260409020548116908316146125d4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475332303500000000000000000000000000000000000000000000000000000060448201526064016107ad565b73ffffffffffffffffffffffffffffffffffffffff828116600081815260026020526040808220805486861680855283852080549288167fffffffffffffffffffffffff00000000000000000000000000000000000000009384161790559589168452828420805482169096179095558383528054909416909355915190917ff8d49fc529812e9a7c5c50e69c20f0dccc0db8fa95c98bc58cc9a4f1c1299eaf91a260405173ffffffffffffffffffffffffffffffffffffffff8216907f9465fa0c962cc76958e6373a993326400c1c94f8be2fe3a952adfa7f60b2ea2690600090a2505050565b606060007fbb8310d486368db6bd6f849402fdd73ad53d316b5a4b2644ad6efe0f941286d860001b8d8d8d8d6040516126f6929190614132565b60405190819003812061271c949392918e908e908e908e908e908e908e90602001614142565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152919052805160209091012090507f19000000000000000000000000000000000000000000000000000000000000007f01000000000000000000000000000000000000000000000000000000000000006127f060007f47e79534a245952e8b16893a336b85a3d9ea9fa8c573f3d803afb92a794692184660408051602081019390935282015230606082015260800160405160208183030381529060405280519060200120905090565b6040517fff0000000000000000000000000000000000000000000000000000000000000093841660208201529290911660218301526022820152604281018290526062016040516020818303038152906040529150509b9a5050505050505050505050565b61285d612b34565b612866816131ce565b60405173ffffffffffffffffffffffffffffffffffffffff8216907f5ac6c46c93c8d0e53714ba3b53db3e7c046da994313d7ed0d192028bc7c228b090600090a250565b6128b2612b34565b8060016003546128c29190614044565b101561292a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475332303100000000000000000000000000000000000000000000000000000060448201526064016107ad565b73ffffffffffffffffffffffffffffffffffffffff821615801590612966575073ffffffffffffffffffffffffffffffffffffffff8216600114155b6129cc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475332303300000000000000000000000000000000000000000000000000000060448201526064016107ad565b73ffffffffffffffffffffffffffffffffffffffff838116600090815260026020526040902054811690831614612a5f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475332303500000000000000000000000000000000000000000000000000000060448201526064016107ad565b73ffffffffffffffffffffffffffffffffffffffff828116600081815260026020526040808220805488861684529183208054929095167fffffffffffffffffffffffff00000000000000000000000000000000000000009283161790945591815282549091169091556003805491612ad7836141bf565b909155505060405173ffffffffffffffffffffffffffffffffffffffff8316907ff8d49fc529812e9a7c5c50e69c20f0dccc0db8fa95c98bc58cc9a4f1c1299eaf90600090a28060045414612b2f57612b2f81611479565b505050565b333014612b9d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475330333100000000000000000000000000000000000000000000000000000060448201526064016107ad565b565b600082600003612bb157506000611046565b6000612bbd8385613e34565b905082612bca8583614009565b14612bd457600080fd5b9392505050565b600080612be88385613ff1565b905083811015612bd457600080fd5b60006001836001811115612c0d57612c0d613e71565b03612c25576000808551602087018986f49050612c35565b600080855160208701888a87f190505b95945050505050565b600081831015612c4e5781612bd4565b5090919050565b600082821115612c6457600080fd5b60006111cc8385614044565b60008073ffffffffffffffffffffffffffffffffffffffff831615612c955782612c97565b325b905073ffffffffffffffffffffffffffffffffffffffff8416612d7657612cd63a8610612cc4573a612cc6565b855b612cd08989612bdb565b90612b9f565b60405190925073ffffffffffffffffffffffffffffffffffffffff82169083156108fc029084906000818181858888f19350505050612d71576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475330313100000000000000000000000000000000000000000000000000000060448201526064016107ad565b612df7565b612d8485612cd08989612bdb565b9150612d91848284613469565b612df7576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475330313200000000000000000000000000000000000000000000000000000060448201526064016107ad565b5095945050505050565b60045415612e6b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475332303000000000000000000000000000000000000000000000000000000060448201526064016107ad565b8151811115612ed6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475332303100000000000000000000000000000000000000000000000000000060448201526064016107ad565b6001811015612f41576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475332303200000000000000000000000000000000000000000000000000000060448201526064016107ad565b600160005b8351811015613176576000848281518110612f6357612f6361405b565b60200260200101519050600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff1614158015612fc1575073ffffffffffffffffffffffffffffffffffffffff8116600114155b8015612fe3575073ffffffffffffffffffffffffffffffffffffffff81163014155b801561301b57508073ffffffffffffffffffffffffffffffffffffffff168373ffffffffffffffffffffffffffffffffffffffff1614155b613081576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475332303300000000000000000000000000000000000000000000000000000060448201526064016107ad565b73ffffffffffffffffffffffffffffffffffffffff8181166000908152600260205260409020541615613110576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475332303400000000000000000000000000000000000000000000000000000060448201526064016107ad565b73ffffffffffffffffffffffffffffffffffffffff928316600090815260026020526040902080547fffffffffffffffffffffffff000000000000000000000000000000000000000016938216939093179092558061316e81613d72565b915050612f46565b5073ffffffffffffffffffffffffffffffffffffffff16600090815260026020526040902080547fffffffffffffffffffffffff00000000000000000000000000000000000000001660011790559051600355600455565b3073ffffffffffffffffffffffffffffffffffffffff82160361324d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475334303000000000000000000000000000000000000000000000000000000060448201526064016107ad565b7f6c9a6c4a39284e37ed1cf53d337577d14212a4870fb976a4366c693b939918d555565b600160008190526020527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f5473ffffffffffffffffffffffffffffffffffffffff161561331a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475331303000000000000000000000000000000000000000000000000000000060448201526064016107ad565b6001600081905260208190527fcc69885fda6bcc1a4ace058b4a62bf5e179ea78fd58a1ccd71c22cc9b688792f80547fffffffffffffffffffffffff000000000000000000000000000000000000000016909117905573ffffffffffffffffffffffffffffffffffffffff82161561092f57813b6133f4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475330303200000000000000000000000000000000000000000000000000000060448201526064016107ad565b6134038260008360015a612bf7565b61092f576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152600560248201527f475330303000000000000000000000000000000000000000000000000000000060448201526064016107ad565b6040805173ffffffffffffffffffffffffffffffffffffffff841660248201526044808201849052825180830390910181526064909101909152602080820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fa9059cbb000000000000000000000000000000000000000000000000000000001781528251600093929184919082896127105a03f13d8015613516576020811461351e5760009350613529565b819350613529565b600051158215171593505b5050509392505050565b73ffffffffffffffffffffffffffffffffffffffff8116811461355557600080fd5b50565b803561356381613533565b919050565b6000806040838503121561357b57600080fd5b823561358681613533565b946020939093013593505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f8301126135d457600080fd5b813567ffffffffffffffff808211156135ef576135ef613594565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190828211818310171561363557613635613594565b8160405283815286602085880101111561364e57600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000806080858703121561368457600080fd5b84359350602085013567ffffffffffffffff808211156136a357600080fd5b6136af888389016135c3565b945060408701359150808211156136c557600080fd5b506136d2878288016135c3565b949793965093946060013593505050565b6000602082840312156136f557600080fd5b8135612bd481613533565b80356002811061356357600080fd5b6000806000806080858703121561372557600080fd5b843561373081613533565b935060208501359250604085013567ffffffffffffffff81111561375357600080fd5b61375f878288016135c3565b92505061376e60608601613700565b905092959194509250565b6000815180845260005b8181101561379f57602081850181015186830182015201613783565b818111156137b1576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b82151581526040602082015260006111cc6040830184613779565b6000806040838503121561381257600080fd5b50508035926020909101359150565b602081526000612bd46020830184613779565b60006020828403121561384657600080fd5b5035919050565b60008083601f84011261385f57600080fd5b50813567ffffffffffffffff81111561387757600080fd5b60208301915083602082850101111561388f57600080fd5b9250929050565b60008060008060008060008060008060006101408c8e0312156138b857600080fd5b6138c18c613558565b9a5060208c0135995067ffffffffffffffff8060408e013511156138e457600080fd5b6138f48e60408f01358f0161384d565b909a50985061390560608e01613700565b975060808d0135965060a08d0135955060c08d0135945061392860e08e01613558565b93506139376101008e01613558565b9250806101208e0135111561394b57600080fd5b5061395d8d6101208e01358e016135c3565b90509295989b509295989b9093969950565b60008060006060848603121561398457600080fd5b83359250602084013567ffffffffffffffff808211156139a357600080fd5b6139af878388016135c3565b935060408601359150808211156139c557600080fd5b506139d2868287016135c3565b9150509250925092565b600081518084526020808501945080840160005b83811015613a2257815173ffffffffffffffffffffffffffffffffffffffff16875295820195908201906001016139f0565b509495945050505050565b602081526000612bd460208301846139dc565b60008060408385031215613a5357600080fd5b8235613a5e81613533565b9150602083013567ffffffffffffffff811115613a7a57600080fd5b613a86858286016135c3565b9150509250929050565b6000806000806000806000806000806101008b8d031215613ab057600080fd5b8a3567ffffffffffffffff80821115613ac857600080fd5b818d0191508d601f830112613adc57600080fd5b813581811115613aeb57600080fd5b8e60208260051b8501011115613b0057600080fd5b60208381019d50909b508d01359950613b1b60408e01613558565b985060608d0135915080821115613b3157600080fd5b50613b3e8d828e0161384d565b9097509550613b51905060808c01613558565b9350613b5f60a08c01613558565b925060c08b01359150613b7460e08c01613558565b90509295989b9194979a5092959850565b604081526000613b9860408301856139dc565b905073ffffffffffffffffffffffffffffffffffffffff831660208301529392505050565b60008060008060008060008060008060006101408c8e031215613bdf57600080fd5b8b35613bea81613533565b9a5060208c0135995060408c013567ffffffffffffffff811115613c0d57600080fd5b613c198e828f0161384d565b909a509850613c2c905060608d01613700565b965060808c0135955060a08c0135945060c08c0135935060e08c0135613c5181613533565b92506101008c0135613c6281613533565b809250506101208c013590509295989b509295989b9093969950565b60008060408385031215613c9157600080fd5b8235613c9c81613533565b91506020830135613cac81613533565b809150509250929050565b600080600060608486031215613ccc57600080fd5b8335613cd781613533565b92506020840135613ce781613533565b91506040840135613cf781613533565b809150509250925092565b600080600060608486031215613d1757600080fd5b8335613d2281613533565b92506020840135613d3281613533565b929592945050506040919091013590565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203613da357613da3613d43565b5060010190565b604081526000613dbd6040830185613779565b8281036020840152612c358185613779565b600060208284031215613de157600080fd5b81517fffffffff0000000000000000000000000000000000000000000000000000000081168114612bd457600080fd5b600060ff821660ff841680821015613e2b57613e2b613d43565b90039392505050565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615613e6c57613e6c613d43565b500290565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b60028110613ed7577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b9052565b600061016073ffffffffffffffffffffffffffffffffffffffff8f1683528d60208401528060408401528b81840152506101808b8d828501376000818d850101527fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8d01168301613f51606085018d613ea0565b8a60808501528960a08501528860c0850152613f8560e085018973ffffffffffffffffffffffffffffffffffffffff169052565b73ffffffffffffffffffffffffffffffffffffffff87166101008501528184820301610120850152613fb982820187613779565b92505050613fe061014083018473ffffffffffffffffffffffffffffffffffffffff169052565b9d9c50505050505050505050505050565b6000821982111561400457614004613d43565b500190565b60008261403f577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500490565b60008282101561405657614056613d43565b500390565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b6080808252810185905260008660a08301825b888110156140da5782356140b081613533565b73ffffffffffffffffffffffffffffffffffffffff1682526020928301929091019060010161409d565b506020840196909652505073ffffffffffffffffffffffffffffffffffffffff9283166040820152911660609091015292915050565b60006020828403121561412257600080fd5b81518015158114612bd457600080fd5b8183823760009101908152919050565b6000610160820190508c825273ffffffffffffffffffffffffffffffffffffffff808d1660208401528b60408401528a6060840152614184608084018b613ea0565b60a083019890985260c082019690965260e0810194909452918516610100840152909316610120820152610140019190915295945050505050565b6000816141ce576141ce613d43565b507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff019056fea164736f6c634300080f000a608060405234801561001057600080fd5b50610913806100206000396000f3fe608060405234801561001057600080fd5b50600436106100675760003560e01c806353e5d9351161005057806353e5d935146100b7578063d18af54d146100cc578063ec9e80bb146100df57600080fd5b80631688f0b91461006c5780633408e470146100a9575b600080fd5b61007f61007a3660046105d2565b6100f2565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b6040514681526020016100a0565b6100bf610194565b6040516100a091906106a5565b61007f6100da3660046106bf565b6101dc565b61007f6100ed3660046105d2565b6102f8565b600080838051906020012083604051602001610118929190918252602082015260400190565b60405160208183030381529060405280519060200120905061013b85858361032a565b60405173ffffffffffffffffffffffffffffffffffffffff8781168252919350908316907f4f51faf6c4561ff95f067657e43439f0f856d97c04d9ec9070a6199ad418e2359060200160405180910390a2509392505050565b6060604051806020016101a6906104c6565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082820381018352601f90910116604052919050565b600080838360405160200161022092919091825260601b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016602082015260340190565b6040516020818303038152906040528051906020012060001c90506102468686836100f2565b915073ffffffffffffffffffffffffffffffffffffffff8316156102ef576040517f1e52b51800000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff841690631e52b518906102bc9085908a908a908a9060040161072b565b600060405180830381600087803b1580156102d657600080fd5b505af11580156102ea573d6000803e3d6000fd5b505050505b50949350505050565b60008083805190602001208361030b4690565b6040805160208101949094528301919091526060820152608001610118565b6000833b610399576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f53696e676c65746f6e20636f6e7472616374206e6f74206465706c6f7965640060448201526064015b60405180910390fd5b6000604051806020016103ab906104c6565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe082820381018352601f909101166040819052610403919073ffffffffffffffffffffffffffffffffffffffff881690602001610775565b6040516020818303038152906040529050828151826020016000f5915073ffffffffffffffffffffffffffffffffffffffff821661049d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601360248201527f437265617465322063616c6c206661696c6564000000000000000000000000006044820152606401610390565b8351156104be5760008060008651602088016000875af1036104be57600080fd5b509392505050565b61016f8061079883390190565b73ffffffffffffffffffffffffffffffffffffffff811681146104f557600080fd5b50565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b600082601f83011261053857600080fd5b813567ffffffffffffffff80821115610553576105536104f8565b604051601f83017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f01168101908282118183101715610599576105996104f8565b816040528381528660208588010111156105b257600080fd5b836020870160208301376000602085830101528094505050505092915050565b6000806000606084860312156105e757600080fd5b83356105f2816104d3565b9250602084013567ffffffffffffffff81111561060e57600080fd5b61061a86828701610527565b925050604084013590509250925092565b60005b8381101561064657818101518382015260200161062e565b83811115610655576000848401525b50505050565b6000815180845261067381602086016020860161062b565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006106b8602083018461065b565b9392505050565b600080600080608085870312156106d557600080fd5b84356106e0816104d3565b9350602085013567ffffffffffffffff8111156106fc57600080fd5b61070887828801610527565b935050604085013591506060850135610720816104d3565b939692955090935050565b600073ffffffffffffffffffffffffffffffffffffffff808716835280861660208401525060806040830152610764608083018561065b565b905082606083015295945050505050565b6000835161078781846020880161062b565b919091019182525060200191905056fe608060405234801561001057600080fd5b5060405161016f38038061016f83398101604081905261002f916100b9565b6001600160a01b0381166100945760405162461bcd60e51b815260206004820152602260248201527f496e76616c69642073696e676c65746f6e20616464726573732070726f766964604482015261195960f21b606482015260840160405180910390fd5b600080546001600160a01b0319166001600160a01b03929092169190911790556100e9565b6000602082840312156100cb57600080fd5b81516001600160a01b03811681146100e257600080fd5b9392505050565b6078806100f76000396000f3fe6080604052600073ffffffffffffffffffffffffffffffffffffffff8154167fa619486e00000000000000000000000000000000000000000000000000000000823503604d57808252602082f35b3682833781823684845af490503d82833e806066573d82fd5b503d81f3fea164736f6c634300080f000aa164736f6c634300080f000a608060405234801561001057600080fd5b506110e9806100206000396000f3fe608060405234801561001057600080fd5b50600436106100c85760003560e01c806320c13b0b11610081578063bc197c811161005b578063bc197c81146101e7578063bd61951d14610222578063f23a6e611461024257600080fd5b806320c13b0b146101ac5780636ac24784146101bf578063b2494df3146101d257600080fd5b80630a1028c4116100b25780630a1028c41461010f578063150b7a02146101305780631626ba7e1461019957600080fd5b806223de29146100cd57806301ffc9a7146100e7575b600080fd5b6100e56100db366004610918565b5050505050505050565b005b6100fa6100f53660046109f7565b61027b565b60405190151581526020015b60405180910390f35b61012261011d366004610b20565b610360565b604051908152602001610106565b61016861013e366004610b5d565b7f150b7a020000000000000000000000000000000000000000000000000000000095945050505050565b6040517fffffffff000000000000000000000000000000000000000000000000000000009091168152602001610106565b6101686101a7366004610bd0565b61036c565b6101686101ba366004610c1c565b61048d565b6101226101cd366004610c80565b610658565b6101da610795565b6040516101069190610cc6565b6101686101f5366004610d65565b7fbc197c810000000000000000000000000000000000000000000000000000000098975050505050505050565b610235610230366004610e03565b610847565b6040516101069190610eaa565b610168610250366004610ebd565b7ff23a6e61000000000000000000000000000000000000000000000000000000009695505050505050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f4e2312e000000000000000000000000000000000000000000000000000000000148061030e57507fffffffff0000000000000000000000000000000000000000000000000000000082167f150b7a0200000000000000000000000000000000000000000000000000000000145b8061035a57507fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b600061035a3383610658565b60408051602080820186905282518083039091018152818301928390527f20c13b0b000000000000000000000000000000000000000000000000000000009092526000913391839183916320c13b0b916103cc9189908990604401610f39565b602060405180830381865afa1580156103e9573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061040d9190610f9d565b90507fffffffff0000000000000000000000000000000000000000000000000000000081167f20c13b0b000000000000000000000000000000000000000000000000000000001461045f576000610481565b7f1626ba7e000000000000000000000000000000000000000000000000000000005b925050505b9392505050565b6000338161049b8286610658565b905083516000036105a7576040517f5ae6bd370000000000000000000000000000000000000000000000000000000081526004810182905273ffffffffffffffffffffffffffffffffffffffff831690635ae6bd3790602401602060405180830381865afa158015610511573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906105359190610fba565b6000036105a2576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601160248201527f48617368206e6f7420617070726f766564000000000000000000000000000000604482015260640160405180910390fd5b61062e565b6040517f934f3a1100000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff83169063934f3a11906105fd90849089908990600401610fd3565b60006040518083038186803b15801561061557600080fd5b505afa158015610629573d6000803e3d6000fd5b505050505b507f20c13b0b00000000000000000000000000000000000000000000000000000000949350505050565b6000807f60b3cbf8b4a223d68d641b3b6ddf9a298e7f33710cf3d3a9d1146b5a6150fbca60001b83805190602001206040516020016106a1929190918252602082015260400190565b604051602081830303815290604052805190602001209050601960f81b600160f81b8573ffffffffffffffffffffffffffffffffffffffff1663f698da256040518163ffffffff1660e01b8152600401602060405180830381865afa15801561070e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107329190610fba565b6040517fff0000000000000000000000000000000000000000000000000000000000000093841660208201529290911660218301526022820152604281018290526062016040516020818303038152906040528051906020012091505092915050565b6040517fcc2f845200000000000000000000000000000000000000000000000000000000815260016004820152600a60248201526060903390600090829063cc2f845290604401600060405180830381865afa1580156107f9573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016820160405261083f9190810190611018565b509392505050565b60606040517fb4faba09000000000000000000000000000000000000000000000000000000008152600436036004808301376020600036836000335af1505060203d036040519150808201604052806020833e5060005161048657805160208201fd5b73ffffffffffffffffffffffffffffffffffffffff811681146108cc57600080fd5b50565b60008083601f8401126108e157600080fd5b50813567ffffffffffffffff8111156108f957600080fd5b60208301915083602082850101111561091157600080fd5b9250929050565b60008060008060008060008060c0898b03121561093457600080fd5b883561093f816108aa565b9750602089013561094f816108aa565b9650604089013561095f816108aa565b955060608901359450608089013567ffffffffffffffff8082111561098357600080fd5b61098f8c838d016108cf565b909650945060a08b01359150808211156109a857600080fd5b506109b58b828c016108cf565b999c989b5096995094979396929594505050565b7fffffffff00000000000000000000000000000000000000000000000000000000811681146108cc57600080fd5b600060208284031215610a0957600080fd5b8135610486816109c9565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff81118282101715610a8a57610a8a610a14565b604052919050565b600082601f830112610aa357600080fd5b813567ffffffffffffffff811115610abd57610abd610a14565b610aee60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601610a43565b818152846020838601011115610b0357600080fd5b816020850160208301376000918101602001919091529392505050565b600060208284031215610b3257600080fd5b813567ffffffffffffffff811115610b4957600080fd5b610b5584828501610a92565b949350505050565b600080600080600060808688031215610b7557600080fd5b8535610b80816108aa565b94506020860135610b90816108aa565b935060408601359250606086013567ffffffffffffffff811115610bb357600080fd5b610bbf888289016108cf565b969995985093965092949392505050565b600080600060408486031215610be557600080fd5b83359250602084013567ffffffffffffffff811115610c0357600080fd5b610c0f868287016108cf565b9497909650939450505050565b60008060408385031215610c2f57600080fd5b823567ffffffffffffffff80821115610c4757600080fd5b610c5386838701610a92565b93506020850135915080821115610c6957600080fd5b50610c7685828601610a92565b9150509250929050565b60008060408385031215610c9357600080fd5b8235610c9e816108aa565b9150602083013567ffffffffffffffff811115610cba57600080fd5b610c7685828601610a92565b6020808252825182820181905260009190848201906040850190845b81811015610d1457835173ffffffffffffffffffffffffffffffffffffffff1683529284019291840191600101610ce2565b50909695505050505050565b60008083601f840112610d3257600080fd5b50813567ffffffffffffffff811115610d4a57600080fd5b6020830191508360208260051b850101111561091157600080fd5b60008060008060008060008060a0898b031215610d8157600080fd5b8835610d8c816108aa565b97506020890135610d9c816108aa565b9650604089013567ffffffffffffffff80821115610db957600080fd5b610dc58c838d01610d20565b909850965060608b0135915080821115610dde57600080fd5b610dea8c838d01610d20565b909650945060808b01359150808211156109a857600080fd5b600080600060408486031215610e1857600080fd5b8335610e23816108aa565b9250602084013567ffffffffffffffff811115610c0357600080fd5b6000815180845260005b81811015610e6557602081850181015186830182015201610e49565b81811115610e77576000602083870101525b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006104866020830184610e3f565b60008060008060008060a08789031215610ed657600080fd5b8635610ee1816108aa565b95506020870135610ef1816108aa565b94506040870135935060608701359250608087013567ffffffffffffffff811115610f1b57600080fd5b610f2789828a016108cf565b979a9699509497509295939492505050565b604081526000610f4c6040830186610e3f565b82810360208401528381528385602083013760006020858301015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f860116820101915050949350505050565b600060208284031215610faf57600080fd5b8151610486816109c9565b600060208284031215610fcc57600080fd5b5051919050565b838152606060208201526000610fec6060830185610e3f565b8281036040840152610ffe8185610e3f565b9695505050505050565b8051611013816108aa565b919050565b6000806040838503121561102b57600080fd5b825167ffffffffffffffff8082111561104357600080fd5b818501915085601f83011261105757600080fd5b815160208282111561106b5761106b610a14565b8160051b925061107c818401610a43565b828152928401810192818101908985111561109657600080fd5b948201945b848610156110c057855193506110b0846108aa565b838252948201949082019061109b565b96506110cf9050878201611008565b945050505050925092905056fea164736f6c634300080f000a",
    "sourceMap": "329:4952:281:-:0;;;;;1572:26:1;;;1594:4;-1:-1:-1;;1572:26:1;;;;;;;;3161:44:5;;;;;;;;;;;18222:16:301;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;18190:48:301;;;-1:-1:-1;;;;;;18190:48:301;-1:-1:-1;;;;;18190:48:301;;;;;;;;;;18291:28;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;18244:75:301;;;-1:-1:-1;;;;;;18244:75:301;-1:-1:-1;;;;;18244:75:301;;;;;;;;;;18373:34;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;18325:82:301;;;-1:-1:-1;;;;;;18325:82:301;-1:-1:-1;;;;;18325:82:301;;;;;;;;;;329:4952:281;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;;:::o;:::-;;;;;;;",
    "linkReferences": {
      "test/safe-tools/SafeTestTools.sol": {
        "Sort": [
          {
            "start": 11438,
            "length": 20
          }
        ]
      }
    }
  },
  "deployedBytecode": {
    "object": "$dfdc500774783d96746216ea464aa94b2d$__9063128424a790612b849085906004016140da565b600060405180830381865af4158015612ba1573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201604052612be79190810190614134565b91506000805b8351811015612d0c576000848281518110612c0a57612c0a613adc565b602002602001015190506000805b8551811015612cd7578273ffffffffffffffffffffffffffffffffffffffff16868281518110612c4a57612c4a613adc565b6020026020010151600060028110612c6457612c64613adc565b602002015173ffffffffffffffffffffffffffffffffffffffff1603612cc557858181518110612c9657612c96613adc565b6020026020010151600160028110612cb057612cb0613adc565b6020020151915084612cc181613b3a565b9550505b80612ccf81613b3a565b915050612c18565b5080878481518110612ceb57612ceb613adc565b60200260200101818152505050508080612d0490613b3a565b915050612bed565b508551811015612dc4576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604d60248201527f5341464554455354544f4f4c533a20697373756520776974682070726976617460448201527f65206b657920736f7274696e672c20706c65617365206f70656e20612074696360648201527f6b6574206f6e2067697468756200000000000000000000000000000000000000608482015260a4016116a1565b5091949350505050565b600081831115612e60576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603e60248201527f5374645574696c7320626f756e642875696e743235362c75696e743235362c7560448201527f696e74323536293a204d6178206973206c657373207468616e206d696e2e000060648201526084016116a1565b828410158015612e705750818411155b15612e7c575082610332565b6000612e8884846141ce565b612e939060016141e5565b905060038511158015612ea557508481115b15612ebc57612eb485856141e5565b915050610332565b612ee760037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6141ce565b8510158015612f1e5750612f1b857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6141ce565b81115b15612f5757612f4d857fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff6141ce565b612eb490846141ce565b82851115612fad576000612f6b84876141ce565b90506000612f798383613f14565b905080600003612f8e57849350505050610332565b6001612f9a82886141e5565b612fa491906141ce565b93505050612ffe565b83851015612ffe576000612fc186866141ce565b90506000612fcf8383613f14565b905080600003612fe457859350505050610332565b612fee81866141ce565b612ff99060016141e5565b935050505b509392505050565b60006a636f6e736f6c652e6c6f6773ffffffffffffffffffffffffffffffffffffffff16838360405160240161303d9291906141fd565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fb60e72cc00000000000000000000000000000000000000000000000000000000179052516130be9190613e35565b600060405180830381855afa9150503d80600081146130f9576040519150601f19603f3d011682016040523d82523d6000602084013e6130fe565b606091505b505050505050565b737109709ecfa91a80626ff3989d68f67f5b1dd12d3b156132545760408051737109709ecfa91a80626ff3989d68f67f5b1dd12d602082018190527f6661696c656400000000000000000000000000000000000000000000000000009282019290925260016060820152600091907f70ca10bbd0dbfd9020a9f4b13402c16cb120705e0d1c0aeab10fa353ae586fc490608001604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0818403018152908290526131d59291602001613ded565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529082905261320d91613e35565b6000604051808303816000865af19150503d806000811461324a576040519150601f19603f3d011682016040523d82523d6000602084013e61324f565b606091505b505050505b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16610100179055565b8280548282559060005260206000209081019282156132bd579160200282015b828111156132bd5782518255916020019190600101906132a2565b506132c9929150613365565b5090565b8280548282559060005260206000209081019282156132bd579160200282015b828111156132bd57825182547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff9091161782556020909201916001909101906132ed565b60405180604001604052806002906020820280368337509192915050565b5b808211156132c95760008155600101613366565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610100810167ffffffffffffffff811182821017156133cd576133cd61337a565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561341a5761341a61337a565b604052919050565b600067ffffffffffffffff82111561343c5761343c61337a565b5060051b60200190565b600082601f83011261345757600080fd5b8135602061346c61346783613422565b6133d3565b82815260059290921b8401810191818101908684111561348b57600080fd5b8286015b848110156134a6578035835291830191830161348f565b509695505050505050565b600080604083850312156134c457600080fd5b823567ffffffffffffffff8111156134db57600080fd5b6134e785828601613446565b95602094909401359450505050565b600081518084526020808501945080840160005b8381101561353c57815173ffffffffffffffffffffffffffffffffffffffff168752958201959082019060010161350a565b509495945050505050565b60208082528251828201528281015160a06040840152805160c0840181905260009291820190839060e08601905b808310156135955783518252928401926001929092019190840190613575565b50604087015193507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08682030160608701526135d181856134f6565b9350505050606084015160808401526080840151612ffe60a085018273ffffffffffffffffffffffffffffffffffffffff169052565b600067ffffffffffffffff8211156136215761362161337a565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f83011261365e57600080fd5b813561366c61346782613607565b81815284602083860101111561368157600080fd5b816020850160208301376000918101602001919091529392505050565b600080604083850312156136b157600080fd5b823567ffffffffffffffff8111156136c857600080fd5b6134e78582860161364d565b60208152600061033260208301846134f6565b80151581146136f557600080fd5b50565b8035611fa4816136e7565b73ffffffffffffffffffffffffffffffffffffffff811681146136f557600080fd5b8035611fa481613703565b6000806000806080858703121561374657600080fd5b843567ffffffffffffffff8082111561375e57600080fd5b61376a88838901613446565b95506020870135945060408701359350606087013591508082111561378e57600080fd5b9086019061010082890312156137a357600080fd5b6137ab6133a9565b6137b4836136f8565b8152602083013560208201526137cc60408401613725565b60408201526060830135828111156137e357600080fd5b6137ef8a82860161364d565b6060830152506080830135608082015261380b60a08401613725565b60a082015261381c60c08401613725565b60c082015260e08301358281111561383357600080fd5b61383f8a82860161364d565b60e0830152509598949750929550505050565b60008060006060848603121561386757600080fd5b833567ffffffffffffffff81111561387e57600080fd5b61388a86828701613446565b9660208601359650604090950135949350505050565b60006020808301818452808551808352604092508286019150828160051b8701018488016000805b84811015613987578984037fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc00186528251805173ffffffffffffffffffffffffffffffffffffffff168552880151888501889052805188860181905290890190839060608701905b808310156139725783517fffffffff00000000000000000000000000000000000000000000000000000000168252928b019260019290920191908b0190613930565b50978a019795505050918701916001016138c8565b50919998505050505050505050565b60005b838110156139b1578181015183820152602001613999565b838111156139c0576000848401525b50505050565b600081518084526139de816020860160208601613996565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6000602080830181845280855180835260408601915060408160051b870101925083870160005b82811015613a83577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc0888603018452613a718583516139c6565b94509285019290850190600101613a37565b5092979650505050505050565b600060208284031215613aa257600080fd5b813561033281613703565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203613b6b57613b6b613b0b565b5060010190565b600080600060608486031215613b8757600080fd5b835160ff81168114613b9857600080fd5b602085015160409095015190969495509392505050565b60008351613bc1818460208801613996565b835190830190613bd5818360208801613996565b01949350505050565b600060ff821660ff84168060ff03821115613bfb57613bfb613b0b565b019392505050565b73ffffffffffffffffffffffffffffffffffffffff84168152606060208201526000613c3260608301856139c6565b8281036040840152613c4481856139c6565b9695505050505050565b6000817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff0483118215151615613c8657613c86613b0b565b500290565b848152608060208201526000613ca460808301866139c6565b8281036040840152613cb681866139c6565b91505082606083015295945050505050565b6000610100808352613cdc8184018c6134f6565b905089602084015273ffffffffffffffffffffffffffffffffffffffff808a1660408501528382036060850152613d13828a6139c6565b978116608085015295861660a0840152505060c081019290925290911660e090910152949350505050565b73ffffffffffffffffffffffffffffffffffffffff84168152606060208201526000613d6d60608301856139c6565b9050826040830152949350505050565b600060208284031215613d8f57600080fd5b815161033281613703565b600181811c90821680613dae57607f821691505b602082108103613de7577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7fffffffff000000000000000000000000000000000000000000000000000000008316815260008251613e27816004850160208701613996565b919091016004019392505050565b60008251613e47818460208701613996565b9190910192915050565b600060208284031215613e6357600080fd5b8151610332816136e7565b600060208284031215613e8057600080fd5b815167ffffffffffffffff811115613e9757600080fd5b8201601f81018413613ea857600080fd5b8051613eb661346782613607565b818152856020838501011115613ecb57600080fd5b613edc826020830160208601613996565b95945050505050565b73ffffffffffffffffffffffffffffffffffffffff8316815260406020820152600061148c60408301846139c6565b600082613f4a577f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b500690565b600060ff821660ff841680821015613f6957613f69613b0b565b90039392505050565b604081526000613faf60408301600a81527f2020202020204c65667400000000000000000000000000000000000000000000602082015260400190565b905082602083015292915050565b604081526000613faf60408301600a81527f2020202020526967687400000000000000000000000000000000000000000000602082015260400190565b60408152600061403760408301600a81527f2020202020204c65667400000000000000000000000000000000000000000000602082015260400190565b905073ffffffffffffffffffffffffffffffffffffffff8316602083015292915050565b60408152600061403760408301600a81527f2020202020526967687400000000000000000000000000000000000000000000602082015260400190565b80516020808301519190811015613de7577fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff60209190910360031b1b16919050565b6020808252825182820181905260009190848201906040850190845b8181101561412857835173ffffffffffffffffffffffffffffffffffffffff16835292840192918401916001016140f6565b50909695505050505050565b6000602080838503121561414757600080fd5b825167ffffffffffffffff81111561415e57600080fd5b8301601f8101851361416f57600080fd5b805161417d61346782613422565b81815260059190911b8201830190838101908783111561419c57600080fd5b928401925b828410156141c35783516141b481613703565b825292840192908401906141a1565b979650505050505050565b6000828210156141e0576141e0613b0b565b500390565b600082198211156141f8576141f8613b0b565b500190565b60408152600061421060408301856139c6565b9050826020830152939250505056fea164736f6c634300080f000a",
    "sourceMap": "329:4952:281:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21404:594:301;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1381:3898:281;;;;;;:::i;:::-;;:::i;:::-;;2161:134:8;;;:::i;:::-;;;;;;;:::i;2930:133::-;;;:::i;2631:141::-;;;:::i;18757:1964:301:-;;;;;;:::i;:::-;;:::i;20727:671::-;;;;;;:::i;:::-;;:::i;2447:178:8:-;;;:::i;:::-;;;;;;;:::i;22678:247:301:-;;;:::i;2301:140:8:-;;;:::i;:::-;;;;;;;:::i;22931:276:301:-;;;;;;:::i;:::-;;:::i;2778:146:8:-;;;:::i;22004:668:301:-;;;:::i;1866:141:8:-;;;:::i;1819:584:1:-;;;:::i;:::-;;;12013:14:302;;12006:22;11988:41;;11976:2;11961:18;1819:584:1;11848:187:302;2013:142:8;;;:::i;1572:26:1:-;;;;;;;;;21404:594:301;21486:19;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21486:19:301;21524:467;21548:8;21570:9;21593:11;21618:363;;;;;;;;21683:4;21618:363;;;;;;21746:1;21618:363;;;;21794:1;21618:363;;;;;;;;;;;;;;;;;;;;;;21871:1;21618:363;;;;21911:1;21618:363;;;;;;21963:1;21618:363;;;;;;;;;;;;;;;;;;;;;21524:10;:467::i;:::-;21517:474;21404:594;-1:-1:-1;;;21404:594:301:o;1381:3898:281:-;1513:16;;;;;;1496:14;1606:22;1612:8;1622:1;1625:2;1606:5;:22::i;:::-;1588:40;;1642:21;1667:52;;;;;;;;;;;;;;;;;;1711:7;1667:28;:52::i;:::-;1639:80;;;1734:9;1729:270;1753:4;:11;1749:1;:15;1729:270;;;1809:17;1789:16;1797:4;1802:1;1797:7;;;;;;;;:::i;:::-;;;;;;;1789;:16::i;:::-;:37;;;;;;;;:::i;:::-;;1785:204;;1876:98;1918:55;1965:4;1970:1;1965:7;;;;;;;;:::i;:::-;;;;;;;3901:13:301;;;3717:213;1918:55:281;3608:9:301;3599:19;;3425:209;1876:98:281;1846:4;1851:1;1846:7;;;;;;;;:::i;:::-;;;;;;:128;;;;;1785:204;1766:3;;;;:::i;:::-;;;;1729:270;;;;2103:32;2138:42;2163:4;2169:7;2178:1;2138:24;:42::i;:::-;2103:77;;2324:7;2341:9;2360;2379:20;2409:23;2442:20;2465:12;:21;;;2442:44;;2501:9;2496:1608;2516:3;:10;2512:1;:14;2496:1608;;;2570:12;2551:15;2559:3;2563:1;2559:6;;;;;;;;:::i;2551:15::-;:31;;;;;;;;:::i;:::-;;2547:1547;;317:28:2;309:37;;2614:7:281;;;2622:3;2626:1;2622:6;;;;;;;;:::i;:::-;;;;;;;2630;2614:23;;;;;;;;;;;;;;;12981:25:302;;;13037:2;13022:18;;13015:34;12969:2;12954:18;;12807:248;2614:23:281;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2693:25;;;;;;13641:19:302;;;13676:12;;;13669:28;;;13749:66;13735:3;13731:16;;;13727:89;13713:12;;;13706:111;2602:35:281;;-1:-1:-1;2602:35:281;;-1:-1:-1;2602:35:281;-1:-1:-1;2681:10:281;;13833:12:302;;2693:25:281;;;;;;;;;;;;;;;2668:51;;;2693:25;2668:51;;:::i;:::-;;;;;;;;;;;;;2655:64;;2547:1547;;;2763:16;2744:15;2752:3;2756:1;2752:6;;;;;;;;:::i;2744:15::-;:35;;;;;;;;:::i;:::-;;2740:1354;;317:28:2;309:37;;2811:7:281;;;2819:3;2823:1;2819:6;;;;;;;;:::i;:::-;;;;;;;2890;2837:60;;;;;;;14569:66:302;14557:79;;14661:2;14652:12;;14645:28;;;;14698:2;14689:12;;14327:380;2837:60:281;;;;;;;;;;;;;2827:71;;;;;;2811:88;;;;;;;;;;;;;;;12981:25:302;;;13037:2;13022:18;;13015:34;12969:2;12954:18;;12807:248;2811:88:281;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2799:100;;-1:-1:-1;2799:100:281;-1:-1:-1;2799:100:281;-1:-1:-1;2917:6:281;2922:1;2799:100;2917:6;:::i;:::-;2979:25;;;;;;13641:19:302;;;13676:12;;;13669:28;;;13749:66;13735:3;13731:16;;;13727:89;13713:12;;;13706:111;2917:6:281;;-1:-1:-1;2967:10:281;;13833:12:302;;2979:25:281;13460:391:302;2740:1354:281;3049:21;3030:15;3038:3;3042:1;3038:6;;;;;;;;:::i;3030:15::-;:40;;;;;;;;:::i;:::-;;3026:1068;;317:28:2;309:37;;3090:8:281;;;3099:27;3119:3;3123:1;3119:6;;;;;;;;:::i;:::-;;;;;;;3099:19;:27::i;:::-;3090:37;;;;;;;;;;15097:42:302;15085:55;;;3090:37:281;;;15067:74:302;15040:18;;3090:37:281;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;3145:17:281;;;;:37;;;;;;;;15298:25:302;;;3145:29:281;;;;;-1:-1:-1;3145:29:281;;15271:18:302;;3145:37:281;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3204:1;3200:5;;3344:27;3364:3;3368:1;3364:6;;;;;;;;:::i;3344:27::-;3430:25;;;3328:45;;;;;3430:25;;;13641:19:302;;;13676:12;;;13669:28;;;13749:66;13735:3;13731:16;;;13727:89;13713:12;;;13706:111;3328:45:281;-1:-1:-1;3418:10:281;;13833:12:302;;3430:25:281;13460:391:302;3026:1068:281;3500:17;3481:15;3489:3;3493:1;3489:6;;;;;;;;:::i;3481:15::-;:36;;;;;;;;:::i;:::-;;3477:617;;3537:14;;;;:::i;:::-;;;;3569:12;3584:54;3631:3;3635:1;3631:6;;;;;;;;:::i;3584:54::-;3748:56;;;;;;;;;;;;;;;;;;;;;;;;;;3806:31;;;;;15478:98:302;3668:22:281;;;;-1:-1:-1;3668:22:281;;-1:-1:-1;3709:11:281;;;;3668:22;;3748:56;15451:18:302;3806:31:281;;;;;;;;;;;;3709:146;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3877:1;3873:5;;3984:7;3994:2;3984:12;;;;:::i;:::-;4053:25;;;;;;13641:19:302;;;13676:12;;;13669:28;;;13735:3;13731:16;;;13749:66;13727:89;13713:12;;;13706:111;4053:25:281;;;;;;;;;13833:12:302;;;4053:25:281;;;13669:28:302;;-1:-1:-1;4028:51:281;;4041:10;;4053:25;4028:51;;;:::i;:::-;;;;;;;;;;;;;4015:64;;3519:575;3477:617;2528:3;;;;:::i;:::-;;;;2496:1608;;;;4496:9;4491:124;4515:12;4511:1;:16;4491:124;;;4586:17;;;4597:2;4586:17;;;16511:36:302;4601:1:281;16563:18:302;;;16556:45;4586:17:281;;;;;;;;;16484:18:302;;;4586:17:281;;;4561:43;;4574:10;;4561:43;;;:::i;:::-;;;;;;;;;;;;;4548:56;;4529:3;;;;;:::i;:::-;;;;4491:124;;;;4683:12;:17;;;:34;;;4718:6;4726:5;4733:10;4745:7;4683:70;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4831:27;4873:98;4909:6;4929:10;4961:7;4873:23;:98::i;:::-;4831:140;;5056:36;5065:10;:17;5084:7;5056:8;:36::i;:::-;5102:55;5111:10;:17;5130:12;:19;;;:26;5102:8;:55::i;:::-;5172:9;5167:106;5187:7;5183:1;:11;5167:106;;;5215:47;5224:12;:19;;;5244:1;5224:22;;;;;;;;:::i;:::-;;;;;;;5248:10;5259:1;5248:13;;;;;;;;:::i;:::-;;;;;;;5215:8;:47::i;:::-;5196:3;;;;:::i;:::-;;;;5167:106;;;;1486:3793;;;;;;;;;;;1381:3898;;:::o;2161:134:8:-;2208:33;2272:16;2253:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2161:134;:::o;2930:133::-;2976:33;3040:16;3021:35;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2930:133;:::o;2631:141::-;2679:35;2747:18;2726:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2631:141;:::o;18757:1964:301:-;18963:19;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;18963:19:301;18998:26;19027:46;19064:8;19027:36;:46::i;:::-;18998:75;;19083:23;19123:9;:16;19109:31;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;19109:31:301;;19083:57;;19156:9;19151:305;19171:9;:16;19167:1;:20;19151:305;;;19212:43;19242:9;19252:1;19242:12;;;;;;;;:::i;:::-;;;;;;;4155:3;4137:12;4151:19;4134:37;;4010:177;19212:43;19208:238;;;19287:60;19334:9;19344:1;19334:12;;;;;;;;:::i;19287:60::-;19275:6;19282:1;19275:9;;;;;;;;:::i;:::-;;;;;;:72;;;;;;;;;;;19208:238;;;19398:33;19418:9;19428:1;19418:12;;;;;;;;:::i;19398:33::-;19386:6;19393:1;19386:9;;;;;;;;:::i;:::-;;;;;;:45;;;;;;;;;;;19208:238;19189:3;;;;:::i;:::-;;;;19151:305;;;;19513:21;19570:1;19537:14;:23;;;:30;:34;:546;;19758:34;;;;19810:36;;;;19864:37;;19664:25;;19707:6;;19731:9;;19864:69;;19931:1;19864:69;;;19912:7;;;;19864:69;19951:14;:26;;;19995:14;:27;;;20040:14;:29;;;19624:459;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19537:546;;;19586:14;:23;;;19537:546;20149:12;;20191:9;;20213:24;;;;20149:89;;;;;19513:570;;-1:-1:-1;20094:18:301;;20149:12;;;;;:33;;:89;;20191:9;;;19513:570;;20213:24;20149:89;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;20292:289;;;;;;;;20331:9;:16;;20292:289;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20591:25;;;;;20260:29;20591:25;;;;;;;;;;;;;;;;;;;;20094:155;;-1:-1:-1;20292:289:301;;;;20591:25;;;;;;;;;;;;:::i;:::-;-1:-1:-1;20591:25:301;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;20591:25:301;;;;;;;;;;;;;;;;;;;;;;;;;;;;20627:60;;;;;19013:55:302;;;20627:60:301;;;18995:74:302;;;;19085:18;;;19078:34;;;2254:42:301;;20627:28;;18968:18:302;;20627:60:301;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;20705:9:301;;18757:1964;-1:-1:-1;;;;;;;;;;;;18757:1964:301:o;20727:671::-;20879:19;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20879:19:301;20921:470;20945:8;20967:9;20990:14;21018:363;;;;;;;;21083:4;21018:363;;;;;;21146:1;21018:363;;;;21194:1;21018:363;;;;;;;;;;;;;;;;;;;;;;21271:1;21018:363;;;;21311:1;21018:363;;;;;;21363:1;21018:363;;;;;;;;;;;;;;;;;;;;;20921:10;:470::i;:::-;20914:477;20727:671;-1:-1:-1;;;;20727:671:301:o;2447:178:8:-;2503:48;2592:26;2563:55;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2447:178;:::o;22678:247:301:-;22718:19;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22718:19:301;22753:9;:16;22773:1;22753:21;22749:141;;22790:89;;;;;19325:2:302;22790:89:301;;;19307:21:302;19364:2;19344:18;;;19337:30;19403:34;19383:18;;;19376:62;19474:34;19454:18;;;19447:62;19546:17;19525:19;;;19518:46;19581:19;;22790:89:301;;;;;;;;22749:141;22906:9;22916:1;22906:12;;;;;;;;:::i;:::-;;;;;;;;;;;22899:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;22899:19:301;;;-1:-1:-1;;22899:19:301;;;;;;;;;;;;;;;;;;;;;22678:247;-1:-1:-1;22678:247:301:o;2301:140:8:-;2349:34;2416:18;2395:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22931:276:301;22984:19;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22984:19:301;23020:9;23015:128;23035:9;:16;23031:20;;23015:128;;;23106:5;23076:35;;23084:9;23094:1;23084:12;;;;;;;;:::i;:::-;;;;;;;;;:17;:12;;;;;:17;;;;23076:35;23072:60;;23120:9;23130:1;23120:12;;;;;;;;:::i;:::-;;;;;;;;;;;23113:19;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;23113:19:301;;;-1:-1:-1;;23113:19:301;;;;;;;;;;;;;;;;;;;;;22931:276;-1:-1:-1;;;22931:276:301:o;23072:60::-;23053:3;;;:::i;:::-;;;23015:128;;;-1:-1:-1;23152:48:301;;;;;20255:2:302;23152:48:301;;;20237:21:302;20294:2;20274:18;;;20267:30;20333:34;20313:18;;;20306:62;20404:8;20384:18;;;20377:36;20430:19;;23152:48:301;20053:402:302;2778:146:8;2826:40;2899:18;2878:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22004:668:301;22042:19;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22042:19:301;22076:27;22107:42;;;;;;;;;;;;;;;;;;22147:1;22107:28;:42::i;:::-;22255:400;;;;;;;;22320:4;22255:400;;22401:18;;;;;;;;;;;22255:400;22401:18;;;;22391:29;22255:400;;;;-1:-1:-1;22255:400:301;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;22073:76;;-1:-1:-1;22167:498:301;;-1:-1:-1;22073:76:301;;22215:1;;22230:11;;22167:10;:498::i;:::-;22160:505;;;22004:668;:::o;1866:141:8:-;1915:34;1982:18;1961:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1819:584:1;1853:4;1873:7;;;;;;;1869:528;;;-1:-1:-1;1903:7:1;;;;;;;;1819:584::o;1869:528::-;1941:17;2997:42;2985:55;3066:16;1980:374;;2196:43;;;1671:64;2196:43;;;18995:74:302;;;2221:17:1;19085:18:302;;;19078:34;2196:43:1;;;;;;;;;18968:18:302;;;2196:43:1;;;-1:-1:-1;;1671:64:1;;2086:175;;2135:34;;2086:175;;;:::i;:::-;;;;;;;;;;;;;;;2047:232;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2020:259;;;2323:7;2312:27;;;;;;;;;;;;:::i;:::-;2297:42;;2002:352;1980:374;2374:12;1819:584;-1:-1:-1;1819:584:1:o;2013:142:8:-;2062:35;2130:18;2109:39;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2013:142;:::o;2815:190:13:-;2898:14;2933:19;2940:1;2943:3;2948;2933:6;:19::i;:::-;2924:28;;2962:36;;;;;;;;;;;;;;;;;;2991:6;2962:12;:36::i;2708:588:301:-;2825:22;2849:21;2907:3;2893:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2893:18:301;;2886:25;;2943:3;2929:18;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2929:18:301;;2921:26;;2962:9;2957:135;2977:3;2973:1;:7;2957:135;;;3001:11;3050:1;3033:19;;;;;;21842::302;;21886:2;21877:12;;21713:182;3033:19:301;;;;;;;;;;;;;3023:30;;;;;;3015:39;;3001:53;;3078:3;3068:4;3073:1;3068:7;;;;;;;;:::i;:::-;;;;;;;;;;:13;-1:-1:-1;2982:3:301;;;;:::i;:::-;;;;2957:135;;;;3107:9;3102:188;3122:3;3118:1;:7;3102:188;;;2254:42;3157:16;;;3174:4;3179:1;3174:7;;;;;;;;:::i;:::-;;;;;;;3157:25;;;;;;;;;;;;;15298::302;;15286:2;15271:18;;15152:177;3157:25:301;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3146:5;3152:1;3146:8;;;;;;;;:::i;:::-;;;;;;:36;;;;;;;;;;;2254:42;3196:17;;;3214:16;3222:4;3227:1;3222:7;;;;;;;;:::i;3214:16::-;3254:23;;;;;;;;15298:25:302;;;3246:6:301;;2254:42;;3254:20;;15271:18:302;;3254:23:301;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;3232:46;;;;;;;;;:::i;:::-;;;;;;;;;;;;;3196:83;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3127:3;;;;;:::i;:::-;;;;3102:188;;;;2708:588;;;;;:::o;806:142:281:-;860:17;;901:8;908:1;901:4;:8;:::i;:::-;889:20;;939:1;930:11;;;;;;;;:::i;2477:105:301:-;2555:20;;;;;;;;15298:25:302;;;2529:7:301;;2254:42;;2555:16;;15271:18:302;;2555:20:301;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2548:27;2477:105;-1:-1:-1;;2477:105:301:o;2301:1696:137:-;2470:24;2534:18;2520:33;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;2520:33:137;;2510:43;;2564:20;2594:7;2611:9;2630;2649;2668:1323;2684:18;2680:1;:22;2668:1323;;;1248:4;1244:14;;;1282:40;;1316:4;1282:40;;1276:47;1381:4;1347:40;;1341:47;1699:40;;;;1693:47;1742:4;1689:58;;-1:-1:-1;1276:47:137;;-1:-1:-1;1341:47:137;-1:-1:-1;2787:1:137;2782:6;;;2778:1164;;3007:1;2999:10;;2968:43;;2778:1164;;;3036:1;:6;;3041:1;3036:6;3032:910;;3253:1;3245:10;;3214:43;;3032:910;;;3286:2;3282:1;:6;;;3278:664;;;3618:62;;14569:66:302;3618:62:137;;;14557:79:302;14652:12;;;14645:28;;;3598:97:137;;14689:12:302;;3618:62:137;;;;;;;;;;;;3608:73;;;;;;3687:1;3683;:5;;;;:::i;:::-;3598:97;;;;;;;;;;;;24496:25:302;;;;24569:4;24557:17;;;24537:18;;;24530:45;24591:18;;;24584:34;;;24634:18;;;24627:34;;;24468:19;;3598:97:137;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3563:132;;3278:664;;;3899:28;;;;;;;;;;;;24496:25:302;;;24569:4;24557:17;;24537:18;;;24530:45;;;;24591:18;;;24584:34;;;24634:18;;;24627:34;;;3899:28:137;;24468:19:302;;3899:28:137;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3884:43;;3278:664;3968:12;3955:7;3963:1;3955:10;;;;;;;;:::i;:::-;:25;;;;:10;;;;;;;;;;;:25;2704:3;;;;:::i;:::-;;;;2668:1323;;;2500:1497;;;;;2301:1696;;;;;:::o;5209:262:1:-;5271:1;5266;:6;5262:203;;5293:41;;;;;24874:2:302;24856:21;;;24913:2;24893:18;;;24886:30;24952:34;24947:2;24932:18;;24925:62;25023:4;25018:2;25003:18;;24996:32;25060:3;25045:19;;24672:398;5293:41:1;;;;;;;;5353:31;5382:1;5353:31;;;;;;:::i;:::-;;;;;;;;5403;5432:1;5403:31;;;;;;:::i;:::-;;;;;;;;5448:6;:4;:6::i;:::-;5209:262;;:::o;3622:277::-;3690:1;3685:6;;:1;:6;;;3681:212;;3712:44;;;;;26311:2:302;26293:21;;;26350:2;26330:18;;;26323:30;26389:34;26384:2;26369:18;;26362:62;26460:7;26455:2;26440:18;;26433:35;26500:3;26485:19;;26109:401;3712:44:1;;;;;;;;3775:34;3807:1;3775:34;;;;;;:::i;:::-;;;;;;;;3828;3860:1;3828:34;;;;;;:::i;4366:1352:301:-;4446:16;4474:26;4517:4;:11;4503:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4503:26:301;;4474:55;;4540:26;4583:4;:11;4569:26;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;4569:26:301;;4540:55;;4605:28;4653:4;:11;4636:29;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;4605:60;;4681:9;4676:392;4696:4;:11;4692:1;:15;4676:392;;;4728:10;4741:4;4746:1;4741:7;;;;;;;;:::i;:::-;;;;;;;4728:20;;4762:14;4779:23;4799:2;4779:19;:23::i;:::-;4762:40;;4820:21;4838:2;4155:3;4137:12;4151:19;4134:37;;4010:177;4820:21;4816:107;;;-1:-1:-1;3901:13:301;;;4816:107;4951:6;4936:9;4946:1;4936:12;;;;;;;;:::i;:::-;:21;;;;:12;;;;;;;;;;:21;4996:18;;;;5007:6;;4996:18;15097:42:302;15085:55;;;;15067:74;;15055:2;15040:18;;14921:226;4996:18:301;;;;;;;;;;;;;4988:27;;;:::i;:::-;4971:8;4980:1;4971:11;;;;;;;;:::i;:::-;;;;;;;4983:1;4971:14;;;;;;;:::i;:::-;;;;:44;5029:11;;5054:2;;5029:8;;5038:1;;5029:11;;;;;;:::i;:::-;;;;;;;5041:1;5029:14;;;;;;;:::i;:::-;;;;:28;-1:-1:-1;4709:3:301;;-1:-1:-1;4709:3:301;;;:::i;:::-;;;;4676:392;;;-1:-1:-1;5090:20:301;;;;;:4;;:9;;:20;;5100:9;;5090:20;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;5078:32;;5121:13;5149:9;5144:395;5164:9;:16;5160:1;:20;5144:395;;;5201:14;5218:9;5228:1;5218:12;;;;;;;;:::i;:::-;;;;;;;5201:29;;5244:10;5273:9;5268:229;5288:8;:15;5284:1;:19;5268:229;;;5377:6;5332:51;;5356:8;5365:1;5356:11;;;;;;;;:::i;:::-;;;;;;;5368:1;5356:14;;;;;;;:::i;:::-;;;;;5332:51;;;5328:155;;5420:8;5429:1;5420:11;;;;;;;;:::i;:::-;;;;;;;5432:1;5420:14;;;;;;;:::i;:::-;;;;;;-1:-1:-1;5457:7:301;;;;:::i;:::-;;;;5328:155;5305:3;;;;:::i;:::-;;;;5268:229;;;;5526:2;5511:9;5521:1;5511:12;;;;;;;;:::i;:::-;;;;;;:17;;;;;5187:352;;5182:3;;;;;:::i;:::-;;;;5144:395;;;;5561:4;:11;5553:5;:19;5549:137;;;5588:87;;;;;29538:2:302;5588:87:301;;;29520:21:302;29577:2;29557:18;;;29550:30;29616:34;29596:18;;;29589:62;29687:34;29667:18;;;29660:62;29759:15;29738:19;;;29731:44;29792:19;;5588:87:301;29336:481:302;5549:137:301;-1:-1:-1;5702:9:301;;4366:1352;-1:-1:-1;;;;4366:1352:301:o;1546:1263:13:-;1630:14;1671:3;1664;:10;;1656:85;;;;;;;30024:2:302;1656:85:13;;;30006:21:302;30063:2;30043:18;;;30036:30;30102:34;30082:18;;;30075:62;30173:32;30153:18;;;30146:60;30223:19;;1656:85:13;29822:426:302;1656:85:13;1975:3;1970:1;:8;;:20;;;;;1987:3;1982:1;:8;;1970:20;1966:34;;;-1:-1:-1;1999:1:13;1992:8;;1966:34;2011:12;2026:9;2032:3;2026;:9;:::i;:::-;:13;;2038:1;2026:13;:::i;:::-;2011:28;;2234:1;2229;:6;;:18;;;;;2246:1;2239:4;:8;2229:18;2225:38;;;2256:7;2262:1;2256:3;:7;:::i;:::-;2249:14;;;;;2225:38;2282:15;2296:1;1042:78;2282:15;:::i;:::-;2277:1;:20;;:46;;;;-1:-1:-1;2308:15:13;2322:1;1042:78;2308:15;:::i;:::-;2301:4;:22;2277:46;2273:82;;;2339:15;2353:1;1042:78;2339:15;:::i;:::-;2332:23;;:3;:23;:::i;2273:82::-;2459:3;2455:1;:7;2451:352;;;2478:12;2493:7;2497:3;2493:1;:7;:::i;:::-;2478:22;-1:-1:-1;2514:11:13;2528;2535:4;2478:22;2528:11;:::i;:::-;2514:25;;2557:3;2564:1;2557:8;2553:24;;2574:3;2567:10;;;;;;;2553:24;2612:1;2600:9;2606:3;2600;:9;:::i;:::-;:13;;;;:::i;:::-;2591:22;;2464:160;;2451:352;;;2638:3;2634:1;:7;2630:173;;;2657:12;2672:7;2678:1;2672:3;:7;:::i;:::-;2657:22;-1:-1:-1;2693:11:13;2707;2714:4;2657:22;2707:11;:::i;:::-;2693:25;;2736:3;2743:1;2736:8;2732:24;;2753:3;2746:10;;;;;;;2732:24;2779:9;2785:3;2779;:9;:::i;:::-;:13;;2791:1;2779:13;:::i;:::-;2770:22;;2643:160;;2630:173;1646:1163;1546:1263;;;;;:::o;10096:207::-;10172:11;679:42;10188:36;;10272:2;10276;10225:54;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;10188:92;;;10225:54;10188:92;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;10096:207:13:o;2409:432:1:-;2997:42;2985:55;3066:16;2452:359;;2652:67;;;1671:64;2652:67;;;31014:74:302;;;2677:17:1;31104:18:302;;;31097:34;;;;2712:4:1;31147:18:302;;;31140:34;2489:11:1;;1671:64;2586:43;;30987:18:302;;2652:67:1;;;;;;;;;;;;;;2541:196;;;2652:67;2541:196;;:::i;:::-;;;;;;;;;;;;;;;2506:245;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;2452:359:1;2820:7;:14;;;;;;;;2409:432::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;14:184:302;66:77;63:1;56:88;163:4;160:1;153:15;187:4;184:1;177:15;203:255;275:2;269:9;317:6;305:19;;354:18;339:34;;375:22;;;336:62;333:88;;;401:18;;:::i;:::-;437:2;430:22;203:255;:::o;463:334::-;534:2;528:9;590:2;580:13;;595:66;576:86;564:99;;693:18;678:34;;714:22;;;675:62;672:88;;;740:18;;:::i;:::-;776:2;769:22;463:334;;-1:-1:-1;463:334:302:o;802:183::-;862:4;895:18;887:6;884:30;881:56;;;917:18;;:::i;:::-;-1:-1:-1;962:1:302;958:14;974:4;954:25;;802:183::o;990:662::-;1044:5;1097:3;1090:4;1082:6;1078:17;1074:27;1064:55;;1115:1;1112;1105:12;1064:55;1151:6;1138:20;1177:4;1201:60;1217:43;1257:2;1217:43;:::i;:::-;1201:60;:::i;:::-;1295:15;;;1381:1;1377:10;;;;1365:23;;1361:32;;;1326:12;;;;1405:15;;;1402:35;;;1433:1;1430;1423:12;1402:35;1469:2;1461:6;1457:15;1481:142;1497:6;1492:3;1489:15;1481:142;;;1563:17;;1551:30;;1601:12;;;;1514;;1481:142;;;-1:-1:-1;1641:5:302;990:662;-1:-1:-1;;;;;;990:662:302:o;1657:416::-;1750:6;1758;1811:2;1799:9;1790:7;1786:23;1782:32;1779:52;;;1827:1;1824;1817:12;1779:52;1867:9;1854:23;1900:18;1892:6;1889:30;1886:50;;;1932:1;1929;1922:12;1886:50;1955:61;2008:7;1999:6;1988:9;1984:22;1955:61;:::i;:::-;1945:71;2063:2;2048:18;;;;2035:32;;-1:-1:-1;;;;1657:416:302:o;2078:495::-;2142:3;2180:5;2174:12;2207:6;2202:3;2195:19;2233:4;2262:2;2257:3;2253:12;2246:19;;2299:2;2292:5;2288:14;2320:1;2330:218;2344:6;2341:1;2338:13;2330:218;;;2409:13;;2424:42;2405:62;2393:75;;2488:12;;;;2523:15;;;;2366:1;2359:9;2330:218;;;-1:-1:-1;2564:3:302;;2078:495;-1:-1:-1;;;;;2078:495:302:o;2724:1263::-;2909:2;2920:21;;;3019:13;;2999:18;;;2992:41;3068:15;;;3062:22;3120:4;3115:2;3100:18;;3093:32;3174:19;;2979:3;2964:19;;3202:22;;;2880:4;;2909:2;3282:21;;;2880:4;;3255:3;3240:19;;;3331:169;3345:6;3342:1;3339:13;3331:169;;;3406:13;;3394:26;;3475:15;;;;3367:1;3360:9;;;;;3440:12;;;;3331:169;;;3335:3;3549:2;3541:6;3537:15;3531:22;3509:44;;3614:66;3602:9;3597:3;3593:19;3589:92;3584:2;3573:9;3569:18;3562:120;3705:60;3761:3;3745:14;3705:60;:::i;:::-;3691:74;;;;;3820:2;3812:6;3808:15;3802:22;3796:3;3785:9;3781:19;3774:51;3874:3;3866:6;3862:16;3856:23;3888:70;3952:4;3941:9;3937:20;3921:14;2669:42;2658:54;2646:67;;2578:141;3992:245;4040:4;4073:18;4065:6;4062:30;4059:56;;;4095:18;;:::i;:::-;-1:-1:-1;4152:2:302;4140:15;4157:66;4136:88;4226:4;4132:99;;3992:245::o;4242:462::-;4284:5;4337:3;4330:4;4322:6;4318:17;4314:27;4304:55;;4355:1;4352;4345:12;4304:55;4391:6;4378:20;4422:48;4438:31;4466:2;4438:31;:::i;4422:48::-;4495:2;4486:7;4479:19;4541:3;4534:4;4529:2;4521:6;4517:15;4513:26;4510:35;4507:55;;;4558:1;4555;4548:12;4507:55;4623:2;4616:4;4608:6;4604:17;4597:4;4588:7;4584:18;4571:55;4671:1;4646:16;;;4664:4;4642:27;4635:38;;;;4650:7;4242:462;-1:-1:-1;;;4242:462:302:o;4709:388::-;4786:6;4794;4847:2;4835:9;4826:7;4822:23;4818:32;4815:52;;;4863:1;4860;4853:12;4815:52;4903:9;4890:23;4936:18;4928:6;4925:30;4922:50;;;4968:1;4965;4958:12;4922:50;4991:49;5032:7;5023:6;5012:9;5008:22;4991:49;:::i;5591:261::-;5770:2;5759:9;5752:21;5733:4;5790:56;5842:2;5831:9;5827:18;5819:6;5790:56;:::i;5857:118::-;5943:5;5936:13;5929:21;5922:5;5919:32;5909:60;;5965:1;5962;5955:12;5909:60;5857:118;:::o;5980:128::-;6045:20;;6074:28;6045:20;6074:28;:::i;6113:154::-;6199:42;6192:5;6188:54;6181:5;6178:65;6168:93;;6257:1;6254;6247:12;6272:134;6340:20;;6369:31;6340:20;6369:31;:::i;6411:1539::-;6564:6;6572;6580;6588;6641:3;6629:9;6620:7;6616:23;6612:33;6609:53;;;6658:1;6655;6648:12;6609:53;6698:9;6685:23;6727:18;6768:2;6760:6;6757:14;6754:34;;;6784:1;6781;6774:12;6754:34;6807:61;6860:7;6851:6;6840:9;6836:22;6807:61;:::i;:::-;6797:71;;6915:2;6904:9;6900:18;6887:32;6877:42;;6966:2;6955:9;6951:18;6938:32;6928:42;;7023:2;7012:9;7008:18;6995:32;6979:48;;7052:2;7042:8;7039:16;7036:36;;;7068:1;7065;7058:12;7036:36;7091:24;;;;7149:6;7131:16;;;7127:29;7124:49;;;7169:1;7166;7159:12;7124:49;7195:22;;:::i;:::-;7240:19;7256:2;7240:19;:::i;:::-;7233:5;7226:34;7313:2;7309;7305:11;7292:25;7287:2;7280:5;7276:14;7269:49;7350:31;7377:2;7373;7369:11;7350:31;:::i;:::-;7345:2;7338:5;7334:14;7327:55;7428:2;7424;7420:11;7407:25;7457:2;7447:8;7444:16;7441:36;;;7473:1;7470;7463:12;7441:36;7509:44;7545:7;7534:8;7530:2;7526:17;7509:44;:::i;:::-;7504:2;7497:5;7493:14;7486:68;;7608:3;7604:2;7600:12;7587:26;7581:3;7574:5;7570:15;7563:51;7647:32;7674:3;7670:2;7666:12;7647:32;:::i;:::-;7641:3;7634:5;7630:15;7623:57;7713:32;7740:3;7736:2;7732:12;7713:32;:::i;:::-;7707:3;7700:5;7696:15;7689:57;7792:3;7788:2;7784:12;7771:26;7822:2;7812:8;7809:16;7806:36;;;7838:1;7835;7828:12;7806:36;7875:44;7911:7;7900:8;7896:2;7892:17;7875:44;:::i;:::-;7869:3;7858:15;;7851:69;-1:-1:-1;6411:1539:302;;;;-1:-1:-1;6411:1539:302;;-1:-1:-1;;;;6411:1539:302:o;7955:484::-;8057:6;8065;8073;8126:2;8114:9;8105:7;8101:23;8097:32;8094:52;;;8142:1;8139;8132:12;8094:52;8182:9;8169:23;8215:18;8207:6;8204:30;8201:50;;;8247:1;8244;8237:12;8201:50;8270:61;8323:7;8314:6;8303:9;8299:22;8270:61;:::i;:::-;8260:71;8378:2;8363:18;;8350:32;;-1:-1:-1;8429:2:302;8414:18;;;8401:32;;7955:484;-1:-1:-1;;;;7955:484:302:o;8444:1695::-;8646:4;8675:2;8715;8704:9;8700:18;8745:2;8734:9;8727:21;8768:6;8803;8797:13;8834:6;8826;8819:22;8860:2;8850:12;;8893:2;8882:9;8878:18;8871:25;;8955:2;8945:6;8942:1;8938:14;8927:9;8923:30;8919:39;8993:2;8985:6;8981:15;9014:1;9035;9045:1065;9061:6;9056:3;9053:15;9045:1065;;;9130:22;;;9154:66;9126:95;9114:108;;9245:13;;9332:9;;9343:42;9328:58;9313:74;;9426:11;;9420:18;9458:15;;;9451:27;;;9539:19;;9285:15;;;9571:24;;;9661:21;;;;9706:1;;9629:2;9617:15;;;9720:282;9736:8;9731:3;9728:17;9720:282;;;9817:15;;9834:66;9813:88;9799:103;;9971:17;;;;9764:1;9755:11;;;;;9928:14;;;;9720:282;;;-1:-1:-1;10088:12:302;;;;10025:5;-1:-1:-1;;;10053:15:302;;;;9087:1;9078:11;9045:1065;;;-1:-1:-1;10127:6:302;;8444:1695;-1:-1:-1;;;;;;;;;8444:1695:302:o;10144:258::-;10216:1;10226:113;10240:6;10237:1;10234:13;10226:113;;;10316:11;;;10310:18;10297:11;;;10290:39;10262:2;10255:10;10226:113;;;10357:6;10354:1;10351:13;10348:48;;;10392:1;10383:6;10378:3;10374:16;10367:27;10348:48;;10144:258;;;:::o;10407:317::-;10449:3;10487:5;10481:12;10514:6;10509:3;10502:19;10530:63;10586:6;10579:4;10574:3;10570:14;10563:4;10556:5;10552:16;10530:63;:::i;:::-;10638:2;10626:15;10643:66;10622:88;10613:98;;;;10713:4;10609:109;;10407:317;-1:-1:-1;;10407:317:302:o;10729:862::-;10891:4;10920:2;10960;10949:9;10945:18;10990:2;10979:9;10972:21;11013:6;11048;11042:13;11079:6;11071;11064:22;11117:2;11106:9;11102:18;11095:25;;11179:2;11169:6;11166:1;11162:14;11151:9;11147:30;11143:39;11129:53;;11217:2;11209:6;11205:15;11238:1;11248:314;11262:6;11259:1;11256:13;11248:314;;;11351:66;11339:9;11331:6;11327:22;11323:95;11318:3;11311:108;11442:40;11475:6;11466;11460:13;11442:40;:::i;:::-;11432:50;-1:-1:-1;11540:12:302;;;;11505:15;;;;11284:1;11277:9;11248:314;;;-1:-1:-1;11579:6:302;;10729:862;-1:-1:-1;;;;;;;10729:862:302:o;11596:247::-;11655:6;11708:2;11696:9;11687:7;11683:23;11679:32;11676:52;;;11724:1;11721;11714:12;11676:52;11763:9;11750:23;11782:31;11807:5;11782:31;:::i;12040:184::-;12092:77;12089:1;12082:88;12189:4;12186:1;12179:15;12213:4;12210:1;12203:15;12229:184;12281:77;12278:1;12271:88;12378:4;12375:1;12368:15;12402:4;12399:1;12392:15;12418:184;12470:77;12467:1;12460:88;12567:4;12564:1;12557:15;12591:4;12588:1;12581:15;12607:195;12646:3;12677:66;12670:5;12667:77;12664:103;;12747:18;;:::i;:::-;-1:-1:-1;12794:1:302;12783:13;;12607:195::o;13060:395::-;13146:6;13154;13162;13215:2;13203:9;13194:7;13190:23;13186:32;13183:52;;;13231:1;13228;13221:12;13183:52;13263:9;13257:16;13313:4;13306:5;13302:16;13295:5;13292:27;13282:55;;13333:1;13330;13323:12;13282:55;13401:2;13386:18;;13380:25;13445:2;13430:18;;;13424:25;13356:5;;13380:25;;-1:-1:-1;13424:25:302;13060:395;-1:-1:-1;;;13060:395:302:o;13856:466::-;14031:3;14069:6;14063:13;14085:53;14131:6;14126:3;14119:4;14111:6;14107:17;14085:53;:::i;:::-;14201:13;;14160:16;;;;14223:57;14201:13;14160:16;14257:4;14245:17;;14223:57;:::i;:::-;14296:20;;13856:466;-1:-1:-1;;;;13856:466:302:o;14712:204::-;14750:3;14786:4;14783:1;14779:12;14818:4;14815:1;14811:12;14853:3;14847:4;14843:14;14838:3;14835:23;14832:49;;;14861:18;;:::i;:::-;14897:13;;14712:204;-1:-1:-1;;;14712:204:302:o;15587:499::-;15820:42;15812:6;15808:55;15797:9;15790:74;15900:2;15895;15884:9;15880:18;15873:30;15771:4;15926:45;15967:2;15956:9;15952:18;15944:6;15926:45;:::i;:::-;16019:9;16011:6;16007:22;16002:2;15991:9;15987:18;15980:50;16047:33;16073:6;16065;16047:33;:::i;:::-;16039:41;15587:499;-1:-1:-1;;;;;;15587:499:302:o;16091:228::-;16131:7;16257:1;16189:66;16185:74;16182:1;16179:81;16174:1;16167:9;16160:17;16156:105;16153:131;;;16264:18;;:::i;:::-;-1:-1:-1;16304:9:302;;16091:228::o;16612:523::-;16861:6;16850:9;16843:25;16904:3;16899:2;16888:9;16884:18;16877:31;16824:4;16931:46;16972:3;16961:9;16957:19;16949:6;16931:46;:::i;:::-;17025:9;17017:6;17013:22;17008:2;16997:9;16993:18;16986:50;17053:33;17079:6;17071;17053:33;:::i;:::-;17045:41;;;17122:6;17117:2;17106:9;17102:18;17095:34;16612:523;;;;;;;:::o;17140:987::-;17512:4;17541:3;17571:2;17560:9;17553:21;17597:56;17649:2;17638:9;17634:18;17626:6;17597:56;:::i;:::-;17583:70;;17689:6;17684:2;17673:9;17669:18;17662:34;17715:42;17805:2;17797:6;17793:15;17788:2;17777:9;17773:18;17766:43;17857:9;17849:6;17845:22;17840:2;17829:9;17825:18;17818:50;17885:33;17911:6;17903;17885:33;:::i;:::-;17955:15;;;17949:3;17934:19;;17927:44;18008:15;;;18002:3;17987:19;;17980:44;-1:-1:-1;;18055:3:302;18040:19;;18033:35;;;;18105:15;;;18099:3;18084:19;;;18077:44;17877:41;17140:987;-1:-1:-1;;;;17140:987:302:o;18132:409::-;18347:42;18339:6;18335:55;18324:9;18317:74;18427:2;18422;18411:9;18407:18;18400:30;18298:4;18447:45;18488:2;18477:9;18473:18;18465:6;18447:45;:::i;:::-;18439:53;;18528:6;18523:2;18512:9;18508:18;18501:34;18132:409;;;;;;:::o;18546:270::-;18635:6;18688:2;18676:9;18667:7;18663:23;18659:32;18656:52;;;18704:1;18701;18694:12;18656:52;18736:9;18730:16;18755:31;18780:5;18755:31;:::i;19611:437::-;19690:1;19686:12;;;;19733;;;19754:61;;19808:4;19800:6;19796:17;19786:27;;19754:61;19861:2;19853:6;19850:14;19830:18;19827:38;19824:218;;19898:77;19895:1;19888:88;19999:4;19996:1;19989:15;20027:4;20024:1;20017:15;19824:218;;19611:437;;;:::o;20762:417::-;20959:66;20951:6;20947:79;20942:3;20935:92;20917:3;21056:6;21050:13;21072:61;21126:6;21122:1;21117:3;21113:11;21106:4;21098:6;21094:17;21072:61;:::i;:::-;21153:16;;;;21171:1;21149:24;;20762:417;-1:-1:-1;;;20762:417:302:o;21184:274::-;21313:3;21351:6;21345:13;21367:53;21413:6;21408:3;21401:4;21393:6;21389:17;21367:53;:::i;:::-;21436:16;;;;;21184:274;-1:-1:-1;;21184:274:302:o;21463:245::-;21530:6;21583:2;21571:9;21562:7;21558:23;21554:32;21551:52;;;21599:1;21596;21589:12;21551:52;21631:9;21625:16;21650:28;21672:5;21650:28;:::i;22338:635::-;22418:6;22471:2;22459:9;22450:7;22446:23;22442:32;22439:52;;;22487:1;22484;22477:12;22439:52;22520:9;22514:16;22553:18;22545:6;22542:30;22539:50;;;22585:1;22582;22575:12;22539:50;22608:22;;22661:4;22653:13;;22649:27;-1:-1:-1;22639:55:302;;22690:1;22687;22680:12;22639:55;22719:2;22713:9;22744:48;22760:31;22788:2;22760:31;:::i;22744:48::-;22815:2;22808:5;22801:17;22855:7;22850:2;22845;22841;22837:11;22833:20;22830:33;22827:53;;;22876:1;22873;22866:12;22827:53;22889:54;22940:2;22935;22928:5;22924:14;22919:2;22915;22911:11;22889:54;:::i;:::-;22962:5;22338:635;-1:-1:-1;;;;;22338:635:302:o;23453:340::-;23642:42;23634:6;23630:55;23619:9;23612:74;23722:2;23717;23706:9;23702:18;23695:30;23593:4;23742:45;23783:2;23772:9;23768:18;23760:6;23742:45;:::i;23798:266::-;23830:1;23856;23846:189;;23891:77;23888:1;23881:88;23992:4;23989:1;23982:15;24020:4;24017:1;24010:15;23846:189;-1:-1:-1;24049:9:302;;23798:266::o;24069:195::-;24107:4;24144;24141:1;24137:12;24176:4;24173:1;24169:12;24201:3;24196;24193:12;24190:38;;;24208:18;;:::i;:::-;24245:13;;;24069:195;-1:-1:-1;;;24069:195:302:o;25239:348::-;25469:2;25458:9;25451:21;25432:4;25489:49;25534:2;25523:9;25519:18;25152:2;25140:15;;25187:12;25180:4;25171:14;;25164:36;25225:2;25216:12;;25075:159;25489:49;25481:57;;25574:6;25569:2;25558:9;25554:18;25547:34;25239:348;;;;:::o;25756:::-;25986:2;25975:9;25968:21;25949:4;26006:49;26051:2;26040:9;26036:18;25669:2;25657:15;;25704:12;25697:4;25688:14;;25681:36;25742:2;25733:12;;25592:159;26515:397;26745:2;26734:9;26727:21;26708:4;26765:49;26810:2;26799:9;26795:18;25152:2;25140:15;;25187:12;25180:4;25171:14;;25164:36;25225:2;25216:12;;25075:159;26765:49;26757:57;;26862:42;26854:6;26850:55;26845:2;26834:9;26830:18;26823:83;26515:397;;;;:::o;26917:::-;27147:2;27136:9;27129:21;27110:4;27167:49;27212:2;27201:9;27197:18;25669:2;25657:15;;25704:12;25697:4;25688:14;;25681:36;25742:2;25733:12;;25592:159;27319:357;27437:12;;27484:4;27473:16;;;27467:23;;27437:12;27502:16;;27499:171;;;27592:66;27576:4;27572:17;;;;27569:1;27565:25;27561:98;27550:110;;27319:357;-1:-1:-1;27319:357:302:o;27681:689::-;27860:2;27912:21;;;27982:13;;27885:18;;;28004:22;;;27831:4;;27860:2;28083:15;;;;28057:2;28042:18;;;27831:4;28126:218;28140:6;28137:1;28134:13;28126:218;;;28205:13;;28220:42;28201:62;28189:75;;28319:15;;;;28284:12;;;;28162:1;28155:9;28126:218;;;-1:-1:-1;28361:3:302;;27681:689;-1:-1:-1;;;;;;27681:689:302:o;28375:956::-;28470:6;28501:2;28544;28532:9;28523:7;28519:23;28515:32;28512:52;;;28560:1;28557;28550:12;28512:52;28593:9;28587:16;28626:18;28618:6;28615:30;28612:50;;;28658:1;28655;28648:12;28612:50;28681:22;;28734:4;28726:13;;28722:27;-1:-1:-1;28712:55:302;;28763:1;28760;28753:12;28712:55;28792:2;28786:9;28815:60;28831:43;28871:2;28831:43;:::i;28815:60::-;28909:15;;;28991:1;28987:10;;;;28979:19;;28975:28;;;28940:12;;;;29015:19;;;29012:39;;;29047:1;29044;29037:12;29012:39;29071:11;;;;29091:210;29107:6;29102:3;29099:15;29091:210;;;29180:3;29174:10;29197:31;29222:5;29197:31;:::i;:::-;29241:18;;29124:12;;;;29279;;;;29091:210;;;29320:5;28375:956;-1:-1:-1;;;;;;;28375:956:302:o;30253:125::-;30293:4;30321:1;30318;30315:8;30312:34;;;30326:18;;:::i;:::-;-1:-1:-1;30363:9:302;;30253:125::o;30383:128::-;30423:3;30454:1;30450:6;30447:1;30444:13;30441:39;;;30460:18;;:::i;:::-;-1:-1:-1;30496:9:302;;30383:128::o;30516:291::-;30693:2;30682:9;30675:21;30656:4;30713:45;30754:2;30743:9;30739:18;30731:6;30713:45;:::i;:::-;30705:53;;30794:6;30789:2;30778:9;30774:18;30767:34;30516:291;;;;;:::o",
    "linkReferences": {
      "test/safe-tools/SafeTestTools.sol": {
        "Sort": [
          {
            "start": 11100,
            "length": 20
          }
        ]
      }
    }
  },
  "methodIdentifiers": {
    "IS_TEST()": "fa7626d4",
    "_setupSafe()": "b38b4717",
    "_setupSafe(uint256[],uint256)": "080df7f1",
    "_setupSafe(uint256[],uint256,uint256)": "4867cf9a",
    "_setupSafe(uint256[],uint256,uint256,(bool,uint256,address,bytes,uint256,address,address,bytes))": "403b551a",
    "excludeArtifacts()": "b5508aa9",
    "excludeContracts()": "e20c9f71",
    "excludeSenders()": "1ed7831c",
    "failed()": "ba414fa6",
    "getSafe()": "68bc573e",
    "getSafe(address)": "894adc65",
    "targetArtifactSelectors()": "66d9a9a0",
    "targetArtifacts()": "85226c81",
    "targetContracts()": "3f7286f4",
    "targetSelectors()": "916a17c6",
    "targetSenders()": "3e5e3c23",
    "testDiff_getSignaturesVsCheckSignatures_succeeds(bytes,uint256)": "1778976d"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"log_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"log_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"log_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"\",\"type\":\"int256\"}],\"name\":\"log_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"val\",\"type\":\"address\"}],\"name\":\"log_named_address\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256[]\",\"name\":\"val\",\"type\":\"uint256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256[]\",\"name\":\"val\",\"type\":\"int256[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"address[]\",\"name\":\"val\",\"type\":\"address[]\"}],\"name\":\"log_named_array\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"val\",\"type\":\"bytes\"}],\"name\":\"log_named_bytes\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"val\",\"type\":\"bytes32\"}],\"name\":\"log_named_bytes32\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"decimals\",\"type\":\"uint256\"}],\"name\":\"log_named_decimal_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"int256\",\"name\":\"val\",\"type\":\"int256\"}],\"name\":\"log_named_int\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"val\",\"type\":\"string\"}],\"name\":\"log_named_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"key\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"val\",\"type\":\"uint256\"}],\"name\":\"log_named_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"name\":\"log_string\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"log_uint\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"logs\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"IS_TEST\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"ownerPKs\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"}],\"name\":\"_setupSafe\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"instanceId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"ownerPKs\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"contract DeployedSafe\",\"name\":\"safe\",\"type\":\"address\"}],\"internalType\":\"struct SafeInstance\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"ownerPKs\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialBalance\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"bool\",\"name\":\"includeFallbackHandler\",\"type\":\"bool\"},{\"internalType\":\"uint256\",\"name\":\"saltNonce\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"setupModulesCall_to\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"setupModulesCall_data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"refundAmount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"refundToken\",\"type\":\"address\"},{\"internalType\":\"address payable\",\"name\":\"refundReceiver\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"initData\",\"type\":\"bytes\"}],\"internalType\":\"struct AdvancedSafeInitParams\",\"name\":\"advancedParams\",\"type\":\"tuple\"}],\"name\":\"_setupSafe\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"instanceId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"ownerPKs\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"contract DeployedSafe\",\"name\":\"safe\",\"type\":\"address\"}],\"internalType\":\"struct SafeInstance\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"ownerPKs\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"initialBalance\",\"type\":\"uint256\"}],\"name\":\"_setupSafe\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"instanceId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"ownerPKs\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"contract DeployedSafe\",\"name\":\"safe\",\"type\":\"address\"}],\"internalType\":\"struct SafeInstance\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"_setupSafe\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"instanceId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"ownerPKs\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"contract DeployedSafe\",\"name\":\"safe\",\"type\":\"address\"}],\"internalType\":\"struct SafeInstance\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"excludedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"excludeSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"excludedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSafe\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"instanceId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"ownerPKs\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"contract DeployedSafe\",\"name\":\"safe\",\"type\":\"address\"}],\"internalType\":\"struct SafeInstance\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_safe\",\"type\":\"address\"}],\"name\":\"getSafe\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"instanceId\",\"type\":\"uint256\"},{\"internalType\":\"uint256[]\",\"name\":\"ownerPKs\",\"type\":\"uint256[]\"},{\"internalType\":\"address[]\",\"name\":\"owners\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"threshold\",\"type\":\"uint256\"},{\"internalType\":\"contract DeployedSafe\",\"name\":\"safe\",\"type\":\"address\"}],\"internalType\":\"struct SafeInstance\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifactSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedArtifactSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetArtifacts\",\"outputs\":[{\"internalType\":\"string[]\",\"name\":\"targetedArtifacts_\",\"type\":\"string[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetContracts\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedContracts_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSelectors\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"},{\"internalType\":\"bytes4[]\",\"name\":\"selectors\",\"type\":\"bytes4[]\"}],\"internalType\":\"struct StdInvariant.FuzzSelector[]\",\"name\":\"targetedSelectors_\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"targetSenders\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"targetedSenders_\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_numSigs\",\"type\":\"uint256\"}],\"name\":\"testDiff_getSignaturesVsCheckSignatures_succeeds\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"testDiff_getSignaturesVsCheckSignatures_succeeds(bytes,uint256)\":{\"details\":\"Test that for a given set of signatures:      1. safe.checkNSignatures() succeeds      2. the getSigners() method returns the expected signers      3. the expected signers are all owners of the safe.      Demonstrating these three properties is sufficient to prove that the getSigners() method      returns the same signatures as those recovered by safe.checkNSignatures().\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/SafeSigners.t.sol\":\"SafeSigners_Test\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@cwia/=lib/clones-with-immutable-args/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/solmate/\",\":clones-with-immutable-args/=lib/clones-with-immutable-args/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240\",\"dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b\",\"dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x9100bd38453711d5f5ae32d16b4aacef8d4e26abb3061fcc9920cd30cdb49315\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://114654e304083d3403510edd13d7df2223747337150ecf51dd36b441e50498f7\",\"dweb:/ipfs/QmQy6uvcVHyHzU2RbuvEo1hKiV7k81z21gR6DSj4DkCP8D\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xb58d624eb0922d4ab14856efb0ab558b0727ccfc28448c5779f1ab4d98cf3daf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1869fc58cb27a7b680428b79d0e0b6f45bd3c61fedb4b3f895e143fb899519d5\",\"dweb:/ipfs/QmcjECGVpQPjhL2bokDyQeGWdzM99qPFMhq5r7KqKLot7R\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477\",\"dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c\",\"dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5\",\"dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985\",\"dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x18ac6dcce9cdfe3bc754ce910b4b97e56963c49a92e50f57d055adb562416b86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6b29b4a814dc26c3722e994a792f4cc1be86e6b8c2b2adc352ed54fb326593d\",\"dweb:/ipfs/Qma8a7XELNmUepiitaLyxJXW66urnXsvCwx1bMLmRw2Fpn\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf\",\"dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xb5d4816a3f37977b1efa07b5e715daa917e96fd28dec1805c4189653db4ea33a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34338fa7f079f8d64f20d976f9bf908a710c8728f18c4b361b020b24fedfedf2\",\"dweb:/ipfs/QmYhwY1wi6vVLMUsJ32L3GiSR9HRaFhGL1Y3wRDjy41KXn\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"lib/safe-contracts/contracts/Safe.sol\":{\"keccak256\":\"0xfe09ad8ce3359ee997c4127c14264a94ec6f25dea38dc37997bd705e9aed9fcd\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://434e77c4ace5cefcf5a21af7eceb5b60ca45b55818e1ecf938d196345731c5e9\",\"dweb:/ipfs/QmbYFyE4okvruZZuCxeNy86Hm6W7yPR4yJWkVztbPRTosu\"]},\"lib/safe-contracts/contracts/base/Executor.sol\":{\"keccak256\":\"0xf0be832e7529e92000544170a5529d73666a9b5e836b30c6f2ed6ef7d7d8c94a\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://710022b40c9f78a5b55b97f6ce600e4834df2ddd36bf714974d953883c82d58c\",\"dweb:/ipfs/QmbdJNKH5opevm7HxQKQAe6W7dQTgSHKa4nKvbUNGRcQQp\"]},\"lib/safe-contracts/contracts/base/FallbackManager.sol\":{\"keccak256\":\"0x646b3088f15af8b4f71ac5eeffaa24ce0c1abed5f494f90368208b09e35d5165\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://7975be46d228510c70659b18076aecb3b0e7331b4d3a162444304145143bdc6e\",\"dweb:/ipfs/QmRRbZrWUnoky6pVo8zMUzCTsshR4sZ2FjR13s8vyAb8dV\"]},\"lib/safe-contracts/contracts/base/GuardManager.sol\":{\"keccak256\":\"0xedfc7c830ab35e52d1208986b253f3422c2f0ca68054c10819fb348fcc6ccf5d\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://3ff8a4194d1160d2e23142937bc9d7eac7b6b553b1ee226390a0df07ebac1b64\",\"dweb:/ipfs/QmSw8Y7z4TQrUTEosdWqcug7TUv9Tg1kxqMKHd7RuTnyzx\"]},\"lib/safe-contracts/contracts/base/ModuleManager.sol\":{\"keccak256\":\"0xd929f3cd77ab05904d7ad510d25e79a84172728c6e6f887872d7d5176ed2ada7\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://f9c3ae921990787102f8ff6e9d55b3329b6fed6b0e67ea4c8e225b53378359df\",\"dweb:/ipfs/QmbDTmeBsNLXRrM1n8jT9qEnNcNv2G3SQY7NV7kex9EtLh\"]},\"lib/safe-contracts/contracts/base/OwnerManager.sol\":{\"keccak256\":\"0xec9799093eb7a73461cd5e563198751ee222f956f754ea622a03fe953e515b2c\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://5729c58b14e7b656c71dd3377e9519c0d34ef8c04851a9a21c3d62393e4fae7a\",\"dweb:/ipfs/QmRRtfFpNqvdANny9TYBr8rA3HbT1egUCpb2uXALMHkVxK\"]},\"lib/safe-contracts/contracts/common/Enum.sol\":{\"keccak256\":\"0x4ff3008926a118e9f36e6747facc39dd13168e0d00f516888ae966ec20766453\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://385929800d1c0f92eb165fcf37a9e28b395b17d8b74f74755654d3a096a0fc34\",\"dweb:/ipfs/QmagieLuN2jrp2oJHFyZuyz65Sh1CcupnXSEKypGFS5Gvo\"]},\"lib/safe-contracts/contracts/common/NativeCurrencyPaymentFallback.sol\":{\"keccak256\":\"0x3ddcd4130c67326033dcf773d2d87d7147e3a8386993ea3ab3f1c38da406adba\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://740a729397b6a0d903f4738a50e856d4e5039555024937b148d97529525dbfa9\",\"dweb:/ipfs/QmQJuNVvHbkeJ6jjd75D8FsZBPXH6neoGBZdQgtsA82E7g\"]},\"lib/safe-contracts/contracts/common/SecuredTokenTransfer.sol\":{\"keccak256\":\"0x1eb8c3601538b73dd6a823ac4fca49bb8adc97d1302a936622156636c971eb05\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://c26495b1fe9229ea17f90b70f295030880d629b9ea3016ea20b634983865f7b3\",\"dweb:/ipfs/QmTc1UmKcynkKn8DeviLMuy6scxNvAVSdLoX4ndUtdEL9N\"]},\"lib/safe-contracts/contracts/common/SelfAuthorized.sol\":{\"keccak256\":\"0xfb0e176bb208e047a234fe757e2acd13787e27879570b8544547ac787feb5f13\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://8e9a317f0c3c02ab1d6c38039bff2b3e0c97f4dc9d229d3d9149c1af1c5023b3\",\"dweb:/ipfs/QmNcZjNChsuXF34T6f3Zu7i3tnqvKN4NyWBWZ4tXLH9kMu\"]},\"lib/safe-contracts/contracts/common/SignatureDecoder.sol\":{\"keccak256\":\"0x2a3baf0efa1585ddf2276505c6d34fa16f01cafff1288e40110d5e67fb459c7c\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://00cdded3068b9051ee0a966f40926fbc57dbe7ef8bf4285db3740f9d50468c80\",\"dweb:/ipfs/QmcP5hKmaRqBe7TpgoXtncZqsNKKdCCKxZgXoxEL4Nj5F4\"]},\"lib/safe-contracts/contracts/common/Singleton.sol\":{\"keccak256\":\"0xcab7c6e5fb6d7295a9343f72fec26a2f632ddfe220a6f267b5c5a1eb2f9bce50\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://dd1c31d5787ef590a60f6b0dbc74d09e6fe4d3ad2f0529940d662bf315521cde\",\"dweb:/ipfs/QmSAS5DYrGksJe4cPQ4wLrveXa1CjxAuEiohcLpPG5h2bo\"]},\"lib/safe-contracts/contracts/common/StorageAccessible.sol\":{\"keccak256\":\"0x2c5412a8f014db332322a6b24ee3cedce15dca17a721ae49fdef368568d4391e\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://e775f267d3e60ebe452d9533f46a0eb1f1dc4593d1bcb553e86cea205a5f361e\",\"dweb:/ipfs/QmQdYDHGQsiMx1AADWRhX7tduU9ycTzrT5q3zBWvphXzKZ\"]},\"lib/safe-contracts/contracts/external/SafeMath.sol\":{\"keccak256\":\"0x5f856674d9be11344c5899deb43364e19baa75bc881cada4c159938270b2bd89\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://351c66e5fe92c0a51f79d133521545dabdd3f756312a7b1428c1fc813c512a1c\",\"dweb:/ipfs/QmdnrRmgef8SdamEU6fVEqFD5RQwXeDFTfQuZEfX2vxC4x\"]},\"lib/safe-contracts/contracts/interfaces/ERC1155TokenReceiver.sol\":{\"keccak256\":\"0x87e62665c041cade64e753ecdccf931cb100ab6e4bcc98769c1e6474be9db493\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://59ca1157dcfe19c72b9d1244a6ae5ec70fee9793d4d8af523b70f22ae567d55c\",\"dweb:/ipfs/QmfE3kv73QuQWAWQND927LWVHVLCp19m1mLUvxVYJDEFZM\"]},\"lib/safe-contracts/contracts/interfaces/ERC721TokenReceiver.sol\":{\"keccak256\":\"0x96c4c5457fede2d4c6012011dfda36f8e8ffdb7388468f2dddb35661538bf479\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://99a54737bc23722f79ec9cf9de63ba35b556a61df453eb332f3cac783503f26c\",\"dweb:/ipfs/QmbLW5C2RhoLbwDWEPtTKpyYE5apT9B3q4U11PZG3wSM1n\"]},\"lib/safe-contracts/contracts/interfaces/ERC777TokensRecipient.sol\":{\"keccak256\":\"0x32ca7f1610659f35e52f5a989e1d844b7847ad57fab06e0cae5bc027248536ac\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://9082896ec697e320087b1a682b69a5cdf71b33a2f7a956e2fb6054f9f9d56d06\",\"dweb:/ipfs/QmUu7iNkQNvvqBPbbxuhqiQpYPYYnfsyPEsf4AMQFANXFZ\"]},\"lib/safe-contracts/contracts/interfaces/IERC165.sol\":{\"keccak256\":\"0x779ed3893a8812e383670b755f65c7727e9343dadaa4d7a4aa7f4aa35d859fdb\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://bb2039e1459ace1e68761e873632fc339866332f9f5ecb7452a0bc3a3b847e89\",\"dweb:/ipfs/QmYXvDQXJnDkXFvsvKLyZXaAv4x42qvtbtmwHftP4RKX38\"]},\"lib/safe-contracts/contracts/interfaces/ISignatureValidator.sol\":{\"keccak256\":\"0x2459cb3ed73ecb80e1e7a6508d09a58cc59570b049f77042f669dedfcc5f6457\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://3c4a1371948b11f78171bc4ae4fd169a1eec11e5c4b273eb2c54bc030a1aae25\",\"dweb:/ipfs/QmPuztatXZYVS65n8YbCyccJFZYPP6zQfBQ8tTY27pB978\"]},\"lib/safe-contracts/contracts/libraries/SafeStorage.sol\":{\"keccak256\":\"0xae0c704f3e4ec6b1436bbbd10b153feaa665ac36e556ccc4f2155e4c02f5c46a\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://f2c67b22791022356f5ca85533ecdda740aa8d5c9ed263d0c2761f2560dd1b87\",\"dweb:/ipfs/QmYf6gm89StvSTgZGR83UgSmUgJGjhGbBRRNvmxwywfiMc\"]},\"lib/safe-contracts/contracts/libraries/SignMessageLib.sol\":{\"keccak256\":\"0x012c0c71e1bd8a1f82c0668151d5ff9dae07ab37098cd4eafd2e5099764891c3\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://cdc484c399f00913f29280f8c86e2f8b886dd42de95d9ea0c572847b47a4e4dd\",\"dweb:/ipfs/QmaUDZHn56ECGbkAWiBXxsvJ2dYBZe745h34svZ7NcSssC\"]},\"lib/safe-contracts/contracts/proxies/IProxyCreationCallback.sol\":{\"keccak256\":\"0xf5410c842c1bbff96a2047b31f5437a9dc5183d004ab1fc9f952220f11379602\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://0ac1fa0c7d6fc683384a3ce0b328c66adcc53b6a3e59d3b67c62404dd57c3099\",\"dweb:/ipfs/QmcVvxtcjZqyQwQcU4cPU4SZZ2LEahsmVWgJWGh5n8EHa7\"]},\"lib/safe-contracts/contracts/proxies/SafeProxy.sol\":{\"keccak256\":\"0x5dccbe86285c1d4c4b2fed0ae8007620c3186d22411f43feecfbf8a028e5c7e2\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://a1a02d01a92895110505e141d05b0924ea457a25b89a161f0aeedf6b5cb41aec\",\"dweb:/ipfs/QmYWEsFbWwtrVvEF9MNQtf4X3Qt13dAE8o44tEyAS9jmKP\"]},\"lib/safe-contracts/contracts/proxies/SafeProxyFactory.sol\":{\"keccak256\":\"0xdc68ce6d07d02723fcdde9f115c976d78bc599667b4f9d08e6cda50f51949533\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://0389c45311e383f0a27a928594341da67f061bf88795aafdbfb5e8449416fc26\",\"dweb:/ipfs/QmZXmXReN6uro3RAbh661G6LqfMEMeaLKRVoeJr5nx1tnh\"]},\"scripts/libraries/LibSort.sol\":{\"keccak256\":\"0x2d584487cbfcbd7e97b9fc2331be46ba3af0e6a37d09b5cf8910fd167f438dab\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://661addc85111aa5a117bd994c71f3d131586f94d0d5367106633652e661d919b\",\"dweb:/ipfs/QmZxRAJ2ydNChciXD1Qji9BXVMTTeA8oKZCD3Krbrno9gB\"]},\"src/Safe/SafeSigners.sol\":{\"keccak256\":\"0xa29a86f9d932fb5368dc722deeb9f74f46c9dee3a34d1804ef2d225cc5dbbfa2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f1b7f3228af41a9abd99430971534b71ad171138d97ef861106c15978ee0d495\",\"dweb:/ipfs/QmZZZeT3u5C7YvZTVSsdUyYmALVewSd1bxj6bWeaqT4nwN\"]},\"test/SafeSigners.t.sol\":{\"keccak256\":\"0x45ef093a8f65dbadd6e2adcb5caa672318d5b81f32876681f179b3a7aff68f6a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://32a684a77f0887152994d9072d5cb91802c92b4fb58c8909d6fbcc2968a4aa63\",\"dweb:/ipfs/QmQLEtru2aw6RYUWx1qdrd7eVKdDWzfwWV9Ltf866cP28M\"]},\"test/safe-tools/CompatibilityFallbackHandler_1_3_0.sol\":{\"keccak256\":\"0x3726688848cfa05bd3e18d0c8deb20faa898f98cdd1d1d1f82bd9b20f507b853\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://5cfdcd0a7f3c2e494e17be09d6ff106d93e1ee438a9c66d1c45612d0ad545d64\",\"dweb:/ipfs/QmXtWjzejLrwmTy8PcaAvxegdXe3Kg2pFtd3eByjRKNwC9\"]},\"test/safe-tools/SafeTestTools.sol\":{\"keccak256\":\"0xa7401cfffe8d2a0a11bb3e7c400fd8c2b97e3ceaadafed4fa332553e4e3cbc29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c6db55e05efad173a1167fdbf315527320b8300e1e26225621e96b0745ecd2a4\",\"dweb:/ipfs/QmUD5nkUPWzTUT9Xb8AaKzJfzQi669WVpuvox8qjndgDni\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "int256",
              "name": "",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "val",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_address",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256[]",
              "name": "val",
              "type": "uint256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256[]",
              "name": "val",
              "type": "int256[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "address[]",
              "name": "val",
              "type": "address[]",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_array",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "val",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "val",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_bytes32",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "decimals",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_decimal_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "int256",
              "name": "val",
              "type": "int256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_int",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "string",
              "name": "val",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "key",
              "type": "string",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "val",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_named_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_string",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "log_uint",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "logs",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "IS_TEST",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "ownerPKs",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "threshold",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "_setupSafe",
          "outputs": [
            {
              "internalType": "struct SafeInstance",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "instanceId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256[]",
                  "name": "ownerPKs",
                  "type": "uint256[]"
                },
                {
                  "internalType": "address[]",
                  "name": "owners",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "threshold",
                  "type": "uint256"
                },
                {
                  "internalType": "contract DeployedSafe",
                  "name": "safe",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "ownerPKs",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "threshold",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "initialBalance",
              "type": "uint256"
            },
            {
              "internalType": "struct AdvancedSafeInitParams",
              "name": "advancedParams",
              "type": "tuple",
              "components": [
                {
                  "internalType": "bool",
                  "name": "includeFallbackHandler",
                  "type": "bool"
                },
                {
                  "internalType": "uint256",
                  "name": "saltNonce",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "setupModulesCall_to",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "setupModulesCall_data",
                  "type": "bytes"
                },
                {
                  "internalType": "uint256",
                  "name": "refundAmount",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "refundToken",
                  "type": "address"
                },
                {
                  "internalType": "address payable",
                  "name": "refundReceiver",
                  "type": "address"
                },
                {
                  "internalType": "bytes",
                  "name": "initData",
                  "type": "bytes"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "_setupSafe",
          "outputs": [
            {
              "internalType": "struct SafeInstance",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "instanceId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256[]",
                  "name": "ownerPKs",
                  "type": "uint256[]"
                },
                {
                  "internalType": "address[]",
                  "name": "owners",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "threshold",
                  "type": "uint256"
                },
                {
                  "internalType": "contract DeployedSafe",
                  "name": "safe",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "ownerPKs",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256",
              "name": "threshold",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "initialBalance",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "_setupSafe",
          "outputs": [
            {
              "internalType": "struct SafeInstance",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "instanceId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256[]",
                  "name": "ownerPKs",
                  "type": "uint256[]"
                },
                {
                  "internalType": "address[]",
                  "name": "owners",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "threshold",
                  "type": "uint256"
                },
                {
                  "internalType": "contract DeployedSafe",
                  "name": "safe",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "_setupSafe",
          "outputs": [
            {
              "internalType": "struct SafeInstance",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "instanceId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256[]",
                  "name": "ownerPKs",
                  "type": "uint256[]"
                },
                {
                  "internalType": "address[]",
                  "name": "owners",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "threshold",
                  "type": "uint256"
                },
                {
                  "internalType": "contract DeployedSafe",
                  "name": "safe",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "excludedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "excludeSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "excludedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "failed",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getSafe",
          "outputs": [
            {
              "internalType": "struct SafeInstance",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "instanceId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256[]",
                  "name": "ownerPKs",
                  "type": "uint256[]"
                },
                {
                  "internalType": "address[]",
                  "name": "owners",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "threshold",
                  "type": "uint256"
                },
                {
                  "internalType": "contract DeployedSafe",
                  "name": "safe",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_safe",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getSafe",
          "outputs": [
            {
              "internalType": "struct SafeInstance",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "instanceId",
                  "type": "uint256"
                },
                {
                  "internalType": "uint256[]",
                  "name": "ownerPKs",
                  "type": "uint256[]"
                },
                {
                  "internalType": "address[]",
                  "name": "owners",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256",
                  "name": "threshold",
                  "type": "uint256"
                },
                {
                  "internalType": "contract DeployedSafe",
                  "name": "safe",
                  "type": "address"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifactSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedArtifactSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetArtifacts",
          "outputs": [
            {
              "internalType": "string[]",
              "name": "targetedArtifacts_",
              "type": "string[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetContracts",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedContracts_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSelectors",
          "outputs": [
            {
              "internalType": "struct StdInvariant.FuzzSelector[]",
              "name": "targetedSelectors_",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "addr",
                  "type": "address"
                },
                {
                  "internalType": "bytes4[]",
                  "name": "selectors",
                  "type": "bytes4[]"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "targetSenders",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "targetedSenders_",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "_numSigs",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "testDiff_getSignaturesVsCheckSignatures_succeeds"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "testDiff_getSignaturesVsCheckSignatures_succeeds(bytes,uint256)": {
            "details": "Test that for a given set of signatures:      1. safe.checkNSignatures() succeeds      2. the getSigners() method returns the expected signers      3. the expected signers are all owners of the safe.      Demonstrating these three properties is sufficient to prove that the getSigners() method      returns the same signatures as those recovered by safe.checkNSignatures()."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@cwia/=lib/clones-with-immutable-args/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@rari-capital/solmate/=lib/solmate/",
        "clones-with-immutable-args/=lib/clones-with-immutable-args/src/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "safe-contracts/=lib/safe-contracts/contracts/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 999999
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "test/SafeSigners.t.sol": "SafeSigners_Test"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b",
        "urls": [
          "bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240",
          "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c",
        "urls": [
          "bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224",
          "dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60",
        "urls": [
          "bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b",
          "dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x9100bd38453711d5f5ae32d16b4aacef8d4e26abb3061fcc9920cd30cdb49315",
        "urls": [
          "bzz-raw://114654e304083d3403510edd13d7df2223747337150ecf51dd36b441e50498f7",
          "dweb:/ipfs/QmQy6uvcVHyHzU2RbuvEo1hKiV7k81z21gR6DSj4DkCP8D"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0xb58d624eb0922d4ab14856efb0ab558b0727ccfc28448c5779f1ab4d98cf3daf",
        "urls": [
          "bzz-raw://1869fc58cb27a7b680428b79d0e0b6f45bd3c61fedb4b3f895e143fb899519d5",
          "dweb:/ipfs/QmcjECGVpQPjhL2bokDyQeGWdzM99qPFMhq5r7KqKLot7R"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c",
        "urls": [
          "bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477",
          "dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b",
        "urls": [
          "bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c",
          "dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673",
        "urls": [
          "bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5",
          "dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337",
        "urls": [
          "bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985",
          "dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x18ac6dcce9cdfe3bc754ce910b4b97e56963c49a92e50f57d055adb562416b86",
        "urls": [
          "bzz-raw://d6b29b4a814dc26c3722e994a792f4cc1be86e6b8c2b2adc352ed54fb326593d",
          "dweb:/ipfs/Qma8a7XELNmUepiitaLyxJXW66urnXsvCwx1bMLmRw2Fpn"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945",
        "urls": [
          "bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf",
          "dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xb5d4816a3f37977b1efa07b5e715daa917e96fd28dec1805c4189653db4ea33a",
        "urls": [
          "bzz-raw://34338fa7f079f8d64f20d976f9bf908a710c8728f18c4b361b020b24fedfedf2",
          "dweb:/ipfs/QmYhwY1wi6vVLMUsJ32L3GiSR9HRaFhGL1Y3wRDjy41KXn"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea",
        "urls": [
          "bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973",
          "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "lib/safe-contracts/contracts/Safe.sol": {
        "keccak256": "0xfe09ad8ce3359ee997c4127c14264a94ec6f25dea38dc37997bd705e9aed9fcd",
        "urls": [
          "bzz-raw://434e77c4ace5cefcf5a21af7eceb5b60ca45b55818e1ecf938d196345731c5e9",
          "dweb:/ipfs/QmbYFyE4okvruZZuCxeNy86Hm6W7yPR4yJWkVztbPRTosu"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/base/Executor.sol": {
        "keccak256": "0xf0be832e7529e92000544170a5529d73666a9b5e836b30c6f2ed6ef7d7d8c94a",
        "urls": [
          "bzz-raw://710022b40c9f78a5b55b97f6ce600e4834df2ddd36bf714974d953883c82d58c",
          "dweb:/ipfs/QmbdJNKH5opevm7HxQKQAe6W7dQTgSHKa4nKvbUNGRcQQp"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/base/FallbackManager.sol": {
        "keccak256": "0x646b3088f15af8b4f71ac5eeffaa24ce0c1abed5f494f90368208b09e35d5165",
        "urls": [
          "bzz-raw://7975be46d228510c70659b18076aecb3b0e7331b4d3a162444304145143bdc6e",
          "dweb:/ipfs/QmRRbZrWUnoky6pVo8zMUzCTsshR4sZ2FjR13s8vyAb8dV"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/base/GuardManager.sol": {
        "keccak256": "0xedfc7c830ab35e52d1208986b253f3422c2f0ca68054c10819fb348fcc6ccf5d",
        "urls": [
          "bzz-raw://3ff8a4194d1160d2e23142937bc9d7eac7b6b553b1ee226390a0df07ebac1b64",
          "dweb:/ipfs/QmSw8Y7z4TQrUTEosdWqcug7TUv9Tg1kxqMKHd7RuTnyzx"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/base/ModuleManager.sol": {
        "keccak256": "0xd929f3cd77ab05904d7ad510d25e79a84172728c6e6f887872d7d5176ed2ada7",
        "urls": [
          "bzz-raw://f9c3ae921990787102f8ff6e9d55b3329b6fed6b0e67ea4c8e225b53378359df",
          "dweb:/ipfs/QmbDTmeBsNLXRrM1n8jT9qEnNcNv2G3SQY7NV7kex9EtLh"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/base/OwnerManager.sol": {
        "keccak256": "0xec9799093eb7a73461cd5e563198751ee222f956f754ea622a03fe953e515b2c",
        "urls": [
          "bzz-raw://5729c58b14e7b656c71dd3377e9519c0d34ef8c04851a9a21c3d62393e4fae7a",
          "dweb:/ipfs/QmRRtfFpNqvdANny9TYBr8rA3HbT1egUCpb2uXALMHkVxK"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/common/Enum.sol": {
        "keccak256": "0x4ff3008926a118e9f36e6747facc39dd13168e0d00f516888ae966ec20766453",
        "urls": [
          "bzz-raw://385929800d1c0f92eb165fcf37a9e28b395b17d8b74f74755654d3a096a0fc34",
          "dweb:/ipfs/QmagieLuN2jrp2oJHFyZuyz65Sh1CcupnXSEKypGFS5Gvo"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/common/NativeCurrencyPaymentFallback.sol": {
        "keccak256": "0x3ddcd4130c67326033dcf773d2d87d7147e3a8386993ea3ab3f1c38da406adba",
        "urls": [
          "bzz-raw://740a729397b6a0d903f4738a50e856d4e5039555024937b148d97529525dbfa9",
          "dweb:/ipfs/QmQJuNVvHbkeJ6jjd75D8FsZBPXH6neoGBZdQgtsA82E7g"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/common/SecuredTokenTransfer.sol": {
        "keccak256": "0x1eb8c3601538b73dd6a823ac4fca49bb8adc97d1302a936622156636c971eb05",
        "urls": [
          "bzz-raw://c26495b1fe9229ea17f90b70f295030880d629b9ea3016ea20b634983865f7b3",
          "dweb:/ipfs/QmTc1UmKcynkKn8DeviLMuy6scxNvAVSdLoX4ndUtdEL9N"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/common/SelfAuthorized.sol": {
        "keccak256": "0xfb0e176bb208e047a234fe757e2acd13787e27879570b8544547ac787feb5f13",
        "urls": [
          "bzz-raw://8e9a317f0c3c02ab1d6c38039bff2b3e0c97f4dc9d229d3d9149c1af1c5023b3",
          "dweb:/ipfs/QmNcZjNChsuXF34T6f3Zu7i3tnqvKN4NyWBWZ4tXLH9kMu"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/common/SignatureDecoder.sol": {
        "keccak256": "0x2a3baf0efa1585ddf2276505c6d34fa16f01cafff1288e40110d5e67fb459c7c",
        "urls": [
          "bzz-raw://00cdded3068b9051ee0a966f40926fbc57dbe7ef8bf4285db3740f9d50468c80",
          "dweb:/ipfs/QmcP5hKmaRqBe7TpgoXtncZqsNKKdCCKxZgXoxEL4Nj5F4"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/common/Singleton.sol": {
        "keccak256": "0xcab7c6e5fb6d7295a9343f72fec26a2f632ddfe220a6f267b5c5a1eb2f9bce50",
        "urls": [
          "bzz-raw://dd1c31d5787ef590a60f6b0dbc74d09e6fe4d3ad2f0529940d662bf315521cde",
          "dweb:/ipfs/QmSAS5DYrGksJe4cPQ4wLrveXa1CjxAuEiohcLpPG5h2bo"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/common/StorageAccessible.sol": {
        "keccak256": "0x2c5412a8f014db332322a6b24ee3cedce15dca17a721ae49fdef368568d4391e",
        "urls": [
          "bzz-raw://e775f267d3e60ebe452d9533f46a0eb1f1dc4593d1bcb553e86cea205a5f361e",
          "dweb:/ipfs/QmQdYDHGQsiMx1AADWRhX7tduU9ycTzrT5q3zBWvphXzKZ"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/external/SafeMath.sol": {
        "keccak256": "0x5f856674d9be11344c5899deb43364e19baa75bc881cada4c159938270b2bd89",
        "urls": [
          "bzz-raw://351c66e5fe92c0a51f79d133521545dabdd3f756312a7b1428c1fc813c512a1c",
          "dweb:/ipfs/QmdnrRmgef8SdamEU6fVEqFD5RQwXeDFTfQuZEfX2vxC4x"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/interfaces/ERC1155TokenReceiver.sol": {
        "keccak256": "0x87e62665c041cade64e753ecdccf931cb100ab6e4bcc98769c1e6474be9db493",
        "urls": [
          "bzz-raw://59ca1157dcfe19c72b9d1244a6ae5ec70fee9793d4d8af523b70f22ae567d55c",
          "dweb:/ipfs/QmfE3kv73QuQWAWQND927LWVHVLCp19m1mLUvxVYJDEFZM"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/interfaces/ERC721TokenReceiver.sol": {
        "keccak256": "0x96c4c5457fede2d4c6012011dfda36f8e8ffdb7388468f2dddb35661538bf479",
        "urls": [
          "bzz-raw://99a54737bc23722f79ec9cf9de63ba35b556a61df453eb332f3cac783503f26c",
          "dweb:/ipfs/QmbLW5C2RhoLbwDWEPtTKpyYE5apT9B3q4U11PZG3wSM1n"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/interfaces/ERC777TokensRecipient.sol": {
        "keccak256": "0x32ca7f1610659f35e52f5a989e1d844b7847ad57fab06e0cae5bc027248536ac",
        "urls": [
          "bzz-raw://9082896ec697e320087b1a682b69a5cdf71b33a2f7a956e2fb6054f9f9d56d06",
          "dweb:/ipfs/QmUu7iNkQNvvqBPbbxuhqiQpYPYYnfsyPEsf4AMQFANXFZ"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/interfaces/IERC165.sol": {
        "keccak256": "0x779ed3893a8812e383670b755f65c7727e9343dadaa4d7a4aa7f4aa35d859fdb",
        "urls": [
          "bzz-raw://bb2039e1459ace1e68761e873632fc339866332f9f5ecb7452a0bc3a3b847e89",
          "dweb:/ipfs/QmYXvDQXJnDkXFvsvKLyZXaAv4x42qvtbtmwHftP4RKX38"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/interfaces/ISignatureValidator.sol": {
        "keccak256": "0x2459cb3ed73ecb80e1e7a6508d09a58cc59570b049f77042f669dedfcc5f6457",
        "urls": [
          "bzz-raw://3c4a1371948b11f78171bc4ae4fd169a1eec11e5c4b273eb2c54bc030a1aae25",
          "dweb:/ipfs/QmPuztatXZYVS65n8YbCyccJFZYPP6zQfBQ8tTY27pB978"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/libraries/SafeStorage.sol": {
        "keccak256": "0xae0c704f3e4ec6b1436bbbd10b153feaa665ac36e556ccc4f2155e4c02f5c46a",
        "urls": [
          "bzz-raw://f2c67b22791022356f5ca85533ecdda740aa8d5c9ed263d0c2761f2560dd1b87",
          "dweb:/ipfs/QmYf6gm89StvSTgZGR83UgSmUgJGjhGbBRRNvmxwywfiMc"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/libraries/SignMessageLib.sol": {
        "keccak256": "0x012c0c71e1bd8a1f82c0668151d5ff9dae07ab37098cd4eafd2e5099764891c3",
        "urls": [
          "bzz-raw://cdc484c399f00913f29280f8c86e2f8b886dd42de95d9ea0c572847b47a4e4dd",
          "dweb:/ipfs/QmaUDZHn56ECGbkAWiBXxsvJ2dYBZe745h34svZ7NcSssC"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/proxies/IProxyCreationCallback.sol": {
        "keccak256": "0xf5410c842c1bbff96a2047b31f5437a9dc5183d004ab1fc9f952220f11379602",
        "urls": [
          "bzz-raw://0ac1fa0c7d6fc683384a3ce0b328c66adcc53b6a3e59d3b67c62404dd57c3099",
          "dweb:/ipfs/QmcVvxtcjZqyQwQcU4cPU4SZZ2LEahsmVWgJWGh5n8EHa7"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/proxies/SafeProxy.sol": {
        "keccak256": "0x5dccbe86285c1d4c4b2fed0ae8007620c3186d22411f43feecfbf8a028e5c7e2",
        "urls": [
          "bzz-raw://a1a02d01a92895110505e141d05b0924ea457a25b89a161f0aeedf6b5cb41aec",
          "dweb:/ipfs/QmYWEsFbWwtrVvEF9MNQtf4X3Qt13dAE8o44tEyAS9jmKP"
        ],
        "license": "LGPL-3.0-only"
      },
      "lib/safe-contracts/contracts/proxies/SafeProxyFactory.sol": {
        "keccak256": "0xdc68ce6d07d02723fcdde9f115c976d78bc599667b4f9d08e6cda50f51949533",
        "urls": [
          "bzz-raw://0389c45311e383f0a27a928594341da67f061bf88795aafdbfb5e8449416fc26",
          "dweb:/ipfs/QmZXmXReN6uro3RAbh661G6LqfMEMeaLKRVoeJr5nx1tnh"
        ],
        "license": "LGPL-3.0-only"
      },
      "scripts/libraries/LibSort.sol": {
        "keccak256": "0x2d584487cbfcbd7e97b9fc2331be46ba3af0e6a37d09b5cf8910fd167f438dab",
        "urls": [
          "bzz-raw://661addc85111aa5a117bd994c71f3d131586f94d0d5367106633652e661d919b",
          "dweb:/ipfs/QmZxRAJ2ydNChciXD1Qji9BXVMTTeA8oKZCD3Krbrno9gB"
        ],
        "license": "MIT"
      },
      "src/Safe/SafeSigners.sol": {
        "keccak256": "0xa29a86f9d932fb5368dc722deeb9f74f46c9dee3a34d1804ef2d225cc5dbbfa2",
        "urls": [
          "bzz-raw://f1b7f3228af41a9abd99430971534b71ad171138d97ef861106c15978ee0d495",
          "dweb:/ipfs/QmZZZeT3u5C7YvZTVSsdUyYmALVewSd1bxj6bWeaqT4nwN"
        ],
        "license": "MIT"
      },
      "test/SafeSigners.t.sol": {
        "keccak256": "0x45ef093a8f65dbadd6e2adcb5caa672318d5b81f32876681f179b3a7aff68f6a",
        "urls": [
          "bzz-raw://32a684a77f0887152994d9072d5cb91802c92b4fb58c8909d6fbcc2968a4aa63",
          "dweb:/ipfs/QmQLEtru2aw6RYUWx1qdrd7eVKdDWzfwWV9Ltf866cP28M"
        ],
        "license": "MIT"
      },
      "test/safe-tools/CompatibilityFallbackHandler_1_3_0.sol": {
        "keccak256": "0x3726688848cfa05bd3e18d0c8deb20faa898f98cdd1d1d1f82bd9b20f507b853",
        "urls": [
          "bzz-raw://5cfdcd0a7f3c2e494e17be09d6ff106d93e1ee438a9c66d1c45612d0ad545d64",
          "dweb:/ipfs/QmXtWjzejLrwmTy8PcaAvxegdXe3Kg2pFtd3eByjRKNwC9"
        ],
        "license": "LGPL-3.0-only"
      },
      "test/safe-tools/SafeTestTools.sol": {
        "keccak256": "0xa7401cfffe8d2a0a11bb3e7c400fd8c2b97e3ceaadafed4fa332553e4e3cbc29",
        "urls": [
          "bzz-raw://c6db55e05efad173a1167fdbf315527320b8300e1e26225621e96b0745ecd2a4",
          "dweb:/ipfs/QmUD5nkUPWzTUT9Xb8AaKzJfzQi669WVpuvox8qjndgDni"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 119,
        "contract": "test/SafeSigners.t.sol:SafeSigners_Test",
        "label": "IS_TEST",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 121,
        "contract": "test/SafeSigners.t.sol:SafeSigners_Test",
        "label": "_failed",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 3877,
        "contract": "test/SafeSigners.t.sol:SafeSigners_Test",
        "label": "stdChainsInitialized",
        "offset": 2,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 3898,
        "contract": "test/SafeSigners.t.sol:SafeSigners_Test",
        "label": "chains",
        "offset": 0,
        "slot": "1",
        "type": "t_mapping(t_string_memory_ptr,t_struct(Chain)3893_storage)"
      },
      {
        "astId": 3902,
        "contract": "test/SafeSigners.t.sol:SafeSigners_Test",
        "label": "defaultRpcUrls",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_string_memory_ptr,t_string_storage)"
      },
      {
        "astId": 3906,
        "contract": "test/SafeSigners.t.sol:SafeSigners_Test",
        "label": "idToAlias",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_uint256,t_string_storage)"
      },
      {
        "astId": 3909,
        "contract": "test/SafeSigners.t.sol:SafeSigners_Test",
        "label": "fallbackToDefaultRpcUrls",
        "offset": 0,
        "slot": "4",
        "type": "t_bool"
      },
      {
        "astId": 4575,
        "contract": "test/SafeSigners.t.sol:SafeSigners_Test",
        "label": "gasMeteringOff",
        "offset": 1,
        "slot": "4",
        "type": "t_bool"
      },
      {
        "astId": 6288,
        "contract": "test/SafeSigners.t.sol:SafeSigners_Test",
        "label": "stdstore",
        "offset": 0,
        "slot": "5",
        "type": "t_struct(StdStorage)7998_storage"
      },
      {
        "astId": 7036,
        "contract": "test/SafeSigners.t.sol:SafeSigners_Test",
        "label": "_excludedContracts",
        "offset": 0,
        "slot": "12",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 7039,
        "contract": "test/SafeSigners.t.sol:SafeSigners_Test",
        "label": "_excludedSenders",
        "offset": 0,
        "slot": "13",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 7042,
        "contract": "test/SafeSigners.t.sol:SafeSigners_Test",
        "label": "_targetedContracts",
        "offset": 0,
        "slot": "14",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 7045,
        "contract": "test/SafeSigners.t.sol:SafeSigners_Test",
        "label": "_targetedSenders",
        "offset": 0,
        "slot": "15",
        "type": "t_array(t_address)dyn_storage"
      },
      {
        "astId": 7048,
        "contract": "test/SafeSigners.t.sol:SafeSigners_Test",
        "label": "_excludedArtifacts",
        "offset": 0,
        "slot": "16",
        "type": "t_array(t_string_storage)dyn_storage"
      },
      {
        "astId": 7051,
        "contract": "test/SafeSigners.t.sol:SafeSigners_Test",
        "label": "_targetedArtifacts",
        "offset": 0,
        "slot": "17",
        "type": "t_array(t_string_storage)dyn_storage"
      },
      {
        "astId": 7055,
        "contract": "test/SafeSigners.t.sol:SafeSigners_Test",
        "label": "_targetedArtifactSelectors",
        "offset": 0,
        "slot": "18",
        "type": "t_array(t_struct(FuzzSelector)7033_storage)dyn_storage"
      },
      {
        "astId": 7059,
        "contract": "test/SafeSigners.t.sol:SafeSigners_Test",
        "label": "_targetedSelectors",
        "offset": 0,
        "slot": "19",
        "type": "t_array(t_struct(FuzzSelector)7033_storage)dyn_storage"
      },
      {
        "astId": 2384,
        "contract": "test/SafeSigners.t.sol:SafeSigners_Test",
        "label": "stdstore",
        "offset": 0,
        "slot": "20",
        "type": "t_struct(StdStorage)7998_storage"
      },
      {
        "astId": 153412,
        "contract": "test/SafeSigners.t.sol:SafeSigners_Test",
        "label": "singleton",
        "offset": 0,
        "slot": "27",
        "type": "t_contract(Safe)40986"
      },
      {
        "astId": 153419,
        "contract": "test/SafeSigners.t.sol:SafeSigners_Test",
        "label": "proxyFactory",
        "offset": 0,
        "slot": "28",
        "type": "t_contract(SafeProxyFactory)42941"
      },
      {
        "astId": 153426,
        "contract": "test/SafeSigners.t.sol:SafeSigners_Test",
        "label": "handler",
        "offset": 0,
        "slot": "29",
        "type": "t_contract(CompatibilityFallbackHandler)151969"
      },
      {
        "astId": 153430,
        "contract": "test/SafeSigners.t.sol:SafeSigners_Test",
        "label": "instances",
        "offset": 0,
        "slot": "30",
        "type": "t_array(t_struct(SafeInstance)152063_storage)dyn_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32",
        "base": "t_address"
      },
      "t_array(t_bytes32)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "bytes32[]",
        "numberOfBytes": "32",
        "base": "t_bytes32"
      },
      "t_array(t_bytes4)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "bytes4[]",
        "numberOfBytes": "32",
        "base": "t_bytes4"
      },
      "t_array(t_string_storage)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32",
        "base": "t_string_storage"
      },
      "t_array(t_struct(FuzzSelector)7033_storage)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "struct StdInvariant.FuzzSelector[]",
        "numberOfBytes": "32",
        "base": "t_struct(FuzzSelector)7033_storage"
      },
      "t_array(t_struct(SafeInstance)152063_storage)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "struct SafeInstance[]",
        "numberOfBytes": "32",
        "base": "t_struct(SafeInstance)152063_storage"
      },
      "t_array(t_uint256)dyn_storage": {
        "encoding": "dynamic_array",
        "label": "uint256[]",
        "numberOfBytes": "32",
        "base": "t_uint256"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_bytes4": {
        "encoding": "inplace",
        "label": "bytes4",
        "numberOfBytes": "4"
      },
      "t_contract(CompatibilityFallbackHandler)151969": {
        "encoding": "inplace",
        "label": "contract CompatibilityFallbackHandler",
        "numberOfBytes": "20"
      },
      "t_contract(DeployedSafe)152032": {
        "encoding": "inplace",
        "label": "contract DeployedSafe",
        "numberOfBytes": "20"
      },
      "t_contract(Safe)40986": {
        "encoding": "inplace",
        "label": "contract Safe",
        "numberOfBytes": "20"
      },
      "t_contract(SafeProxyFactory)42941": {
        "encoding": "inplace",
        "label": "contract SafeProxyFactory",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_bool)))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(bytes4 => mapping(bytes32 => bool)))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes4,t_mapping(t_bytes32,t_bool))"
      },
      "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_uint256)))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(bytes4 => mapping(bytes32 => uint256)))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes4,t_mapping(t_bytes32,t_uint256))"
      },
      "t_mapping(t_bytes32,t_bool)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_bytes32,t_uint256)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_mapping(t_bytes4,t_mapping(t_bytes32,t_bool))": {
        "encoding": "mapping",
        "key": "t_bytes4",
        "label": "mapping(bytes4 => mapping(bytes32 => bool))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes32,t_bool)"
      },
      "t_mapping(t_bytes4,t_mapping(t_bytes32,t_uint256))": {
        "encoding": "mapping",
        "key": "t_bytes4",
        "label": "mapping(bytes4 => mapping(bytes32 => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_bytes32,t_uint256)"
      },
      "t_mapping(t_string_memory_ptr,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_mapping(t_string_memory_ptr,t_struct(Chain)3893_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct StdChains.Chain)",
        "numberOfBytes": "32",
        "value": "t_struct(Chain)3893_storage"
      },
      "t_mapping(t_uint256,t_string_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => string)",
        "numberOfBytes": "32",
        "value": "t_string_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(Chain)3893_storage": {
        "encoding": "inplace",
        "label": "struct StdChains.Chain",
        "numberOfBytes": "128",
        "members": [
          {
            "astId": 3886,
            "contract": "test/SafeSigners.t.sol:SafeSigners_Test",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 3888,
            "contract": "test/SafeSigners.t.sol:SafeSigners_Test",
            "label": "chainId",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 3890,
            "contract": "test/SafeSigners.t.sol:SafeSigners_Test",
            "label": "chainAlias",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 3892,
            "contract": "test/SafeSigners.t.sol:SafeSigners_Test",
            "label": "rpcUrl",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          }
        ]
      },
      "t_struct(FuzzSelector)7033_storage": {
        "encoding": "inplace",
        "label": "struct StdInvariant.FuzzSelector",
        "numberOfBytes": "64",
        "members": [
          {
            "astId": 7029,
            "contract": "test/SafeSigners.t.sol:SafeSigners_Test",
            "label": "addr",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 7032,
            "contract": "test/SafeSigners.t.sol:SafeSigners_Test",
            "label": "selectors",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_bytes4)dyn_storage"
          }
        ]
      },
      "t_struct(SafeInstance)152063_storage": {
        "encoding": "inplace",
        "label": "struct SafeInstance",
        "numberOfBytes": "160",
        "members": [
          {
            "astId": 152051,
            "contract": "test/SafeSigners.t.sol:SafeSigners_Test",
            "label": "instanceId",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 152054,
            "contract": "test/SafeSigners.t.sol:SafeSigners_Test",
            "label": "ownerPKs",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_uint256)dyn_storage"
          },
          {
            "astId": 152057,
            "contract": "test/SafeSigners.t.sol:SafeSigners_Test",
            "label": "owners",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 152059,
            "contract": "test/SafeSigners.t.sol:SafeSigners_Test",
            "label": "threshold",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 152062,
            "contract": "test/SafeSigners.t.sol:SafeSigners_Test",
            "label": "safe",
            "offset": 0,
            "slot": "4",
            "type": "t_contract(DeployedSafe)152032"
          }
        ]
      },
      "t_struct(StdStorage)7998_storage": {
        "encoding": "inplace",
        "label": "struct StdStorage",
        "numberOfBytes": "224",
        "members": [
          {
            "astId": 7978,
            "contract": "test/SafeSigners.t.sol:SafeSigners_Test",
            "label": "slots",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_uint256)))"
          },
          {
            "astId": 7986,
            "contract": "test/SafeSigners.t.sol:SafeSigners_Test",
            "label": "finds",
            "offset": 0,
            "slot": "1",
            "type": "t_mapping(t_address,t_mapping(t_bytes4,t_mapping(t_bytes32,t_bool)))"
          },
          {
            "astId": 7989,
            "contract": "test/SafeSigners.t.sol:SafeSigners_Test",
            "label": "_keys",
            "offset": 0,
            "slot": "2",
            "type": "t_array(t_bytes32)dyn_storage"
          },
          {
            "astId": 7991,
            "contract": "test/SafeSigners.t.sol:SafeSigners_Test",
            "label": "_sig",
            "offset": 0,
            "slot": "3",
            "type": "t_bytes4"
          },
          {
            "astId": 7993,
            "contract": "test/SafeSigners.t.sol:SafeSigners_Test",
            "label": "_depth",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 7995,
            "contract": "test/SafeSigners.t.sol:SafeSigners_Test",
            "label": "_target",
            "offset": 0,
            "slot": "5",
            "type": "t_address"
          },
          {
            "astId": 7997,
            "contract": "test/SafeSigners.t.sol:SafeSigners_Test",
            "label": "_set",
            "offset": 0,
            "slot": "6",
            "type": "t_bytes32"
          }
        ]
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  },
  "userdoc": {
    "version": 1,
    "kind": "user"
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "methods": {
      "testDiff_getSignaturesVsCheckSignatures_succeeds(bytes,uint256)": {
        "details": "Test that for a given set of signatures:      1. safe.checkNSignatures() succeeds      2. the getSigners() method returns the expected signers      3. the expected signers are all owners of the safe.      Demonstrating these three properties is sufficient to prove that the getSigners() method      returns the same signatures as those recovered by safe.checkNSignatures()."
      }
    }
  },
  "ast": {
    "absolutePath": "test/SafeSigners.t.sol",
    "id": 145447,
    "exportedSymbols": {
      "AdvancedSafeInitParams": [
        152049
      ],
      "CompatibilityFallbackHandler": [
        151969
      ],
      "DSTest": [
        2322
      ],
      "DefaultCallbackHandler": [
        151735
      ],
      "DeployedSafe": [
        152032
      ],
      "ERC1155TokenReceiver": [
        42446
      ],
      "ERC721TokenReceiver": [
        42464
      ],
      "ERC777TokensRecipient": [
        42484
      ],
      "Enum": [
        42153
      ],
      "GnosisSafe": [
        40986
      ],
      "GnosisSafeProxyFactory": [
        42941
      ],
      "GuardManager": [
        41210
      ],
      "IERC165": [
        42496
      ],
      "ISignatureValidator": [
        42515
      ],
      "ISignatureValidatorConstants": [
        42502
      ],
      "LibSort": [
        56621
      ],
      "ModuleManager": [
        41633
      ],
      "OwnerManager": [
        42146
      ],
      "OwnerSimulator": [
        152026
      ],
      "SENTINEL_MODULES": [
        151741
      ],
      "Safe": [
        40986
      ],
      "SafeInstance": [
        152063
      ],
      "SafeSigners": [
        68635
      ],
      "SafeSigners_Test": [
        145446
      ],
      "SafeTestLib": [
        153400
      ],
      "SafeTestTools": [
        153826
      ],
      "SignMessageLib": [
        42632
      ],
      "SignatureDecoder": [
        42248
      ],
      "Sort": [
        152083
      ],
      "StdAssertions": [
        3852
      ],
      "StdChains": [
        4546
      ],
      "StdCheats": [
        6958
      ],
      "StdInvariant": [
        7248
      ],
      "StdStorage": [
        7998
      ],
      "StdStyle": [
        10642
      ],
      "StdUtils": [
        11490
      ],
      "Test": [
        11539
      ],
      "TestBase": [
        2388
      ],
      "Vm": [
        13045
      ],
      "console": [
        21109
      ],
      "console2": [
        29234
      ],
      "stdError": [
        7024
      ],
      "stdJson": [
        7824
      ],
      "stdMath": [
        7966
      ],
      "stdStorage": [
        9431
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:5250:281",
    "nodes": [
      {
        "id": 144978,
        "nodeType": "PragmaDirective",
        "src": "32:23:281",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 144980,
        "nodeType": "ImportDirective",
        "src": "57:42:281",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 145447,
        "sourceUnit": 11540,
        "symbolAliases": [
          {
            "foreign": {
              "id": 144979,
              "name": "Test",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 11539,
              "src": "66:4:281",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 144982,
        "nodeType": "ImportDirective",
        "src": "100:47:281",
        "nodes": [],
        "absolutePath": "lib/safe-contracts/contracts/Safe.sol",
        "file": "safe-contracts/Safe.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 145447,
        "sourceUnit": 40987,
        "symbolAliases": [
          {
            "foreign": {
              "id": 144981,
              "name": "Safe",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 40986,
              "src": "109:4:281",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 144984,
        "nodeType": "ImportDirective",
        "src": "148:55:281",
        "nodes": [],
        "absolutePath": "src/Safe/SafeSigners.sol",
        "file": "src/Safe/SafeSigners.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 145447,
        "sourceUnit": 68636,
        "symbolAliases": [
          {
            "foreign": {
              "id": 144983,
              "name": "SafeSigners",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 68635,
              "src": "157:11:281",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 144985,
        "nodeType": "ImportDirective",
        "src": "204:43:281",
        "nodes": [],
        "absolutePath": "test/safe-tools/SafeTestTools.sol",
        "file": "test/safe-tools/SafeTestTools.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 145447,
        "sourceUnit": 153827,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 144987,
        "nodeType": "ImportDirective",
        "src": "249:78:281",
        "nodes": [],
        "absolutePath": "lib/safe-contracts/contracts/common/SignatureDecoder.sol",
        "file": "safe-contracts/common/SignatureDecoder.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 145447,
        "sourceUnit": 42249,
        "symbolAliases": [
          {
            "foreign": {
              "id": 144986,
              "name": "SignatureDecoder",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 42248,
              "src": "258:16:281",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 145446,
        "nodeType": "ContractDefinition",
        "src": "329:4952:281",
        "nodes": [
          {
            "id": 144994,
            "nodeType": "VariableDeclaration",
            "src": "384:57:281",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "EIP1271_MAGIC_VALUE",
            "nameLocation": "409:19:281",
            "scope": 145446,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 144992,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "384:6:281",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "hexValue": "30783230633133623062",
              "id": 144993,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "431:10:281",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_549534475_by_1",
                "typeString": "int_const 549534475"
              },
              "value": "0x20c13b0b"
            },
            "visibility": "internal"
          },
          {
            "id": 144999,
            "nodeType": "EnumDefinition",
            "src": "448:90:281",
            "nodes": [],
            "canonicalName": "SafeSigners_Test.SigTypes",
            "members": [
              {
                "id": 144995,
                "name": "Eoa",
                "nameLocation": "472:3:281",
                "nodeType": "EnumValue",
                "src": "472:3:281"
              },
              {
                "id": 144996,
                "name": "EthSign",
                "nameLocation": "485:7:281",
                "nodeType": "EnumValue",
                "src": "485:7:281"
              },
              {
                "id": 144997,
                "name": "ApprovedHash",
                "nameLocation": "502:12:281",
                "nodeType": "EnumValue",
                "src": "502:12:281"
              },
              {
                "id": 144998,
                "name": "Contract",
                "nameLocation": "524:8:281",
                "nodeType": "EnumValue",
                "src": "524:8:281"
              }
            ],
            "name": "SigTypes",
            "nameLocation": "453:8:281"
          },
          {
            "id": 145021,
            "nodeType": "FunctionDefinition",
            "src": "806:142:281",
            "nodes": [],
            "body": {
              "id": 145020,
              "nodeType": "Block",
              "src": "879:69:281",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    145009
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 145009,
                      "mutability": "mutable",
                      "name": "t",
                      "nameLocation": "897:1:281",
                      "nodeType": "VariableDeclaration",
                      "scope": 145020,
                      "src": "889:9:281",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 145008,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "889:7:281",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 145013,
                  "initialValue": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 145012,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 145010,
                      "name": "_key",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 145002,
                      "src": "901:4:281",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "%",
                    "rightExpression": {
                      "hexValue": "34",
                      "id": 145011,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "908:1:281",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_4_by_1",
                        "typeString": "int_const 4"
                      },
                      "value": "4"
                    },
                    "src": "901:8:281",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "889:20:281"
                },
                {
                  "expression": {
                    "id": 145018,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 145014,
                      "name": "sigType_",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 145006,
                      "src": "919:8:281",
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SigTypes_$144999",
                        "typeString": "enum SafeSigners_Test.SigTypes"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 145016,
                          "name": "t",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 145009,
                          "src": "939:1:281",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 145015,
                        "name": "SigTypes",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 144999,
                        "src": "930:8:281",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_enum$_SigTypes_$144999_$",
                          "typeString": "type(enum SafeSigners_Test.SigTypes)"
                        }
                      },
                      "id": 145017,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "930:11:281",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_enum$_SigTypes_$144999",
                        "typeString": "enum SafeSigners_Test.SigTypes"
                      }
                    },
                    "src": "919:22:281",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SigTypes_$144999",
                      "typeString": "enum SafeSigners_Test.SigTypes"
                    }
                  },
                  "id": 145019,
                  "nodeType": "ExpressionStatement",
                  "src": "919:22:281"
                }
              ]
            },
            "documentation": {
              "id": 145000,
              "nodeType": "StructuredDocumentation",
              "src": "544:257:281",
              "text": "@dev Maps every key to one of the 4 signatures types.\n      This is used in the tests below as a pseudorandom mechanism for determining which\n      signature type to use for each key.\n @param _key The key to map to a signature type."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "sigType",
            "nameLocation": "815:7:281",
            "parameters": {
              "id": 145003,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 145002,
                  "mutability": "mutable",
                  "name": "_key",
                  "nameLocation": "831:4:281",
                  "nodeType": "VariableDeclaration",
                  "scope": 145021,
                  "src": "823:12:281",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 145001,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "823:7:281",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "822:14:281"
            },
            "returnParameters": {
              "id": 145007,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 145006,
                  "mutability": "mutable",
                  "name": "sigType_",
                  "nameLocation": "869:8:281",
                  "nodeType": "VariableDeclaration",
                  "scope": 145021,
                  "src": "860:17:281",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_enum$_SigTypes_$144999",
                    "typeString": "enum SafeSigners_Test.SigTypes"
                  },
                  "typeName": {
                    "id": 145005,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 145004,
                      "name": "SigTypes",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 144999,
                      "src": "860:8:281"
                    },
                    "referencedDeclaration": 144999,
                    "src": "860:8:281",
                    "typeDescriptions": {
                      "typeIdentifier": "t_enum$_SigTypes_$144999",
                      "typeString": "enum SafeSigners_Test.SigTypes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "859:19:281"
            },
            "scope": 145446,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 145445,
            "nodeType": "FunctionDefinition",
            "src": "1381:3898:281",
            "nodes": [],
            "body": {
              "id": 145444,
              "nodeType": "Block",
              "src": "1486:3793:281",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    145030
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 145030,
                      "mutability": "mutable",
                      "name": "digest",
                      "nameLocation": "1504:6:281",
                      "nodeType": "VariableDeclaration",
                      "scope": 145444,
                      "src": "1496:14:281",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 145029,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1496:7:281",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 145034,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 145032,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 145024,
                        "src": "1523:5:281",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 145031,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "1513:9:281",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 145033,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1513:16:281",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1496:33:281"
                },
                {
                  "assignments": [
                    145036
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 145036,
                      "mutability": "mutable",
                      "name": "numSigs",
                      "nameLocation": "1596:7:281",
                      "nodeType": "VariableDeclaration",
                      "scope": 145444,
                      "src": "1588:15:281",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 145035,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1588:7:281",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 145042,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 145038,
                        "name": "_numSigs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 145026,
                        "src": "1612:8:281",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "31",
                        "id": 145039,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1622:1:281",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      },
                      {
                        "hexValue": "3235",
                        "id": 145040,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1625:2:281",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_25_by_1",
                          "typeString": "int_const 25"
                        },
                        "value": "25"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        {
                          "typeIdentifier": "t_rational_25_by_1",
                          "typeString": "int_const 25"
                        }
                      ],
                      "id": 145037,
                      "name": "bound",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        10842,
                        10992
                      ],
                      "referencedDeclaration": 10842,
                      "src": "1606:5:281",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_uint256_$_t_uint256_$_t_uint256_$returns$_t_uint256_$",
                        "typeString": "function (uint256,uint256,uint256) view returns (uint256)"
                      }
                    },
                    "id": 145041,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1606:22:281",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1588:40:281"
                },
                {
                  "assignments": [
                    null,
                    145047
                  ],
                  "declarations": [
                    null,
                    {
                      "constant": false,
                      "id": 145047,
                      "mutability": "mutable",
                      "name": "keys",
                      "nameLocation": "1659:4:281",
                      "nodeType": "VariableDeclaration",
                      "scope": 145444,
                      "src": "1642:21:281",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 145045,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1642:7:281",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 145046,
                        "nodeType": "ArrayTypeName",
                        "src": "1642:9:281",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 145053,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "6765745369677354657374",
                        "id": 145050,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1696:13:281",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bd98f1bf46da3d0343b488b12a2289bdc6ddf2e2a698c015cb0a6e3a5d1e6f48",
                          "typeString": "literal_string \"getSigsTest\""
                        },
                        "value": "getSigsTest"
                      },
                      {
                        "id": 145051,
                        "name": "numSigs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 145036,
                        "src": "1711:7:281",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_bd98f1bf46da3d0343b488b12a2289bdc6ddf2e2a698c015cb0a6e3a5d1e6f48",
                          "typeString": "literal_string \"getSigsTest\""
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 145048,
                        "name": "SafeTestLib",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153400,
                        "src": "1667:11:281",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeTestLib_$153400_$",
                          "typeString": "type(library SafeTestLib)"
                        }
                      },
                      "id": 145049,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "makeAddrsAndKeys",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 152216,
                      "src": "1667:28:281",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_string_memory_ptr_$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (string memory,uint256) returns (address[] memory,uint256[] memory)"
                      }
                    },
                    "id": 145052,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1667:52:281",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_address_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                      "typeString": "tuple(address[] memory,uint256[] memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1639:80:281"
                },
                {
                  "body": {
                    "id": 145089,
                    "nodeType": "Block",
                    "src": "1771:228:281",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_SigTypes_$144999",
                            "typeString": "enum SafeSigners_Test.SigTypes"
                          },
                          "id": 145072,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 145066,
                                  "name": "keys",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 145047,
                                  "src": "1797:4:281",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 145068,
                                "indexExpression": {
                                  "id": 145067,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 145055,
                                  "src": "1802:1:281",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "1797:7:281",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 145065,
                              "name": "sigType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 145021,
                              "src": "1789:7:281",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_enum$_SigTypes_$144999_$",
                                "typeString": "function (uint256) pure returns (enum SafeSigners_Test.SigTypes)"
                              }
                            },
                            "id": 145069,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "1789:16:281",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_SigTypes_$144999",
                              "typeString": "enum SafeSigners_Test.SigTypes"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 145070,
                              "name": "SigTypes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 144999,
                              "src": "1809:8:281",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_SigTypes_$144999_$",
                                "typeString": "type(enum SafeSigners_Test.SigTypes)"
                              }
                            },
                            "id": 145071,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Contract",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 144998,
                            "src": "1809:17:281",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_SigTypes_$144999",
                              "typeString": "enum SafeSigners_Test.SigTypes"
                            }
                          },
                          "src": "1789:37:281",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 145088,
                        "nodeType": "IfStatement",
                        "src": "1785:204:281",
                        "trueBody": {
                          "id": 145087,
                          "nodeType": "Block",
                          "src": "1828:161:281",
                          "statements": [
                            {
                              "expression": {
                                "id": 145085,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 145073,
                                    "name": "keys",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 145047,
                                    "src": "1846:4:281",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 145075,
                                  "indexExpression": {
                                    "id": 145074,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 145055,
                                    "src": "1851:1:281",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "1846:7:281",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "baseExpression": {
                                            "id": 145080,
                                            "name": "keys",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 145047,
                                            "src": "1965:4:281",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                              "typeString": "uint256[] memory"
                                            }
                                          },
                                          "id": 145082,
                                          "indexExpression": {
                                            "id": 145081,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 145055,
                                            "src": "1970:1:281",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "1965:7:281",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "id": 145078,
                                          "name": "SafeTestLib",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 153400,
                                          "src": "1918:11:281",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_SafeTestLib_$153400_$",
                                            "typeString": "type(library SafeTestLib)"
                                          }
                                        },
                                        "id": 145079,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "decodeSmartContractWalletAsAddress",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 152239,
                                        "src": "1918:46:281",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_address_$",
                                          "typeString": "function (uint256) pure returns (address)"
                                        }
                                      },
                                      "id": 145083,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "1918:55:281",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    ],
                                    "expression": {
                                      "id": 145076,
                                      "name": "SafeTestLib",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 153400,
                                      "src": "1876:11:281",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_SafeTestLib_$153400_$",
                                        "typeString": "type(library SafeTestLib)"
                                      }
                                    },
                                    "id": 145077,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "encodeSmartContractWalletAsPK",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 152229,
                                    "src": "1876:41:281",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_uint256_$",
                                      "typeString": "function (address) pure returns (uint256)"
                                    }
                                  },
                                  "id": 145084,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "1876:98:281",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "1846:128:281",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 145086,
                              "nodeType": "ExpressionStatement",
                              "src": "1846:128:281"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 145061,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 145058,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 145055,
                      "src": "1749:1:281",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 145059,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 145047,
                        "src": "1753:4:281",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 145060,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "1753:11:281",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1749:15:281",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 145090,
                  "initializationExpression": {
                    "assignments": [
                      145055
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 145055,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1742:1:281",
                        "nodeType": "VariableDeclaration",
                        "scope": 145090,
                        "src": "1734:9:281",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 145054,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1734:7:281",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 145057,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 145056,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1746:1:281",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1734:13:281"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 145063,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "1766:3:281",
                      "subExpression": {
                        "id": 145062,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 145055,
                        "src": "1766:1:281",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 145064,
                    "nodeType": "ExpressionStatement",
                    "src": "1766:3:281"
                  },
                  "nodeType": "ForStatement",
                  "src": "1729:270:281"
                },
                {
                  "assignments": [
                    145093
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 145093,
                      "mutability": "mutable",
                      "name": "safeInstance",
                      "nameLocation": "2123:12:281",
                      "nodeType": "VariableDeclaration",
                      "scope": 145444,
                      "src": "2103:32:281",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SafeInstance_$152063_memory_ptr",
                        "typeString": "struct SafeInstance"
                      },
                      "typeName": {
                        "id": 145092,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 145091,
                          "name": "SafeInstance",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 152063,
                          "src": "2103:12:281"
                        },
                        "referencedDeclaration": 152063,
                        "src": "2103:12:281",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_SafeInstance_$152063_storage_ptr",
                          "typeString": "struct SafeInstance"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 145100,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 145096,
                        "name": "keys",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 145047,
                        "src": "2163:4:281",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      {
                        "id": 145097,
                        "name": "numSigs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 145036,
                        "src": "2169:7:281",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "hexValue": "30",
                        "id": 145098,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2178:1:281",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        }
                      ],
                      "expression": {
                        "id": 145094,
                        "name": "SafeTestTools",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 153826,
                        "src": "2138:13:281",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeTestTools_$153826_$",
                          "typeString": "type(contract SafeTestTools)"
                        }
                      },
                      "id": 145095,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_setupSafe",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 153671,
                      "src": "2138:24:281",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_array$_t_uint256_$dyn_memory_ptr_$_t_uint256_$_t_uint256_$returns$_t_struct$_SafeInstance_$152063_memory_ptr_$",
                        "typeString": "function (uint256[] memory,uint256,uint256) returns (struct SafeInstance memory)"
                      }
                    },
                    "id": 145099,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2138:42:281",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_SafeInstance_$152063_memory_ptr",
                      "typeString": "struct SafeInstance memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2103:77:281"
                },
                {
                  "assignments": [
                    145102
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 145102,
                      "mutability": "mutable",
                      "name": "v",
                      "nameLocation": "2330:1:281",
                      "nodeType": "VariableDeclaration",
                      "scope": 145444,
                      "src": "2324:7:281",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      },
                      "typeName": {
                        "id": 145101,
                        "name": "uint8",
                        "nodeType": "ElementaryTypeName",
                        "src": "2324:5:281",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint8",
                          "typeString": "uint8"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 145103,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2324:7:281"
                },
                {
                  "assignments": [
                    145105
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 145105,
                      "mutability": "mutable",
                      "name": "r",
                      "nameLocation": "2349:1:281",
                      "nodeType": "VariableDeclaration",
                      "scope": 145444,
                      "src": "2341:9:281",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 145104,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2341:7:281",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 145106,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2341:9:281"
                },
                {
                  "assignments": [
                    145108
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 145108,
                      "mutability": "mutable",
                      "name": "s",
                      "nameLocation": "2368:1:281",
                      "nodeType": "VariableDeclaration",
                      "scope": 145444,
                      "src": "2360:9:281",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 145107,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "2360:7:281",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 145109,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2360:9:281"
                },
                {
                  "assignments": [
                    145111
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 145111,
                      "mutability": "mutable",
                      "name": "contractSigs",
                      "nameLocation": "2387:12:281",
                      "nodeType": "VariableDeclaration",
                      "scope": 145444,
                      "src": "2379:20:281",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 145110,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "2379:7:281",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 145112,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2379:20:281"
                },
                {
                  "assignments": [
                    145114
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 145114,
                      "mutability": "mutable",
                      "name": "signatures",
                      "nameLocation": "2422:10:281",
                      "nodeType": "VariableDeclaration",
                      "scope": 145444,
                      "src": "2409:23:281",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 145113,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "2409:5:281",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 145115,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2409:23:281"
                },
                {
                  "assignments": [
                    145120
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 145120,
                      "mutability": "mutable",
                      "name": "pks",
                      "nameLocation": "2459:3:281",
                      "nodeType": "VariableDeclaration",
                      "scope": 145444,
                      "src": "2442:20:281",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 145118,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2442:7:281",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 145119,
                        "nodeType": "ArrayTypeName",
                        "src": "2442:9:281",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 145123,
                  "initialValue": {
                    "expression": {
                      "id": 145121,
                      "name": "safeInstance",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 145093,
                      "src": "2465:12:281",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_SafeInstance_$152063_memory_ptr",
                        "typeString": "struct SafeInstance memory"
                      }
                    },
                    "id": 145122,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "ownerPKs",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 152054,
                    "src": "2465:21:281",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "2442:44:281"
                },
                {
                  "body": {
                    "id": 145359,
                    "nodeType": "Block",
                    "src": "2533:1571:281",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_enum$_SigTypes_$144999",
                            "typeString": "enum SafeSigners_Test.SigTypes"
                          },
                          "id": 145141,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "arguments": [
                              {
                                "baseExpression": {
                                  "id": 145135,
                                  "name": "pks",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 145120,
                                  "src": "2559:3:281",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                    "typeString": "uint256[] memory"
                                  }
                                },
                                "id": 145137,
                                "indexExpression": {
                                  "id": 145136,
                                  "name": "i",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 145125,
                                  "src": "2563:1:281",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "2559:6:281",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "id": 145134,
                              "name": "sigType",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 145021,
                              "src": "2551:7:281",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_enum$_SigTypes_$144999_$",
                                "typeString": "function (uint256) pure returns (enum SafeSigners_Test.SigTypes)"
                              }
                            },
                            "id": 145138,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "2551:15:281",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_SigTypes_$144999",
                              "typeString": "enum SafeSigners_Test.SigTypes"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "expression": {
                              "id": 145139,
                              "name": "SigTypes",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 144999,
                              "src": "2570:8:281",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_enum$_SigTypes_$144999_$",
                                "typeString": "type(enum SafeSigners_Test.SigTypes)"
                              }
                            },
                            "id": 145140,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "Eoa",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 144995,
                            "src": "2570:12:281",
                            "typeDescriptions": {
                              "typeIdentifier": "t_enum$_SigTypes_$144999",
                              "typeString": "enum SafeSigners_Test.SigTypes"
                            }
                          },
                          "src": "2551:31:281",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "condition": {
                            "commonType": {
                              "typeIdentifier": "t_enum$_SigTypes_$144999",
                              "typeString": "enum SafeSigners_Test.SigTypes"
                            },
                            "id": 145177,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "arguments": [
                                {
                                  "baseExpression": {
                                    "id": 145171,
                                    "name": "pks",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 145120,
                                    "src": "2752:3:281",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                      "typeString": "uint256[] memory"
                                    }
                                  },
                                  "id": 145173,
                                  "indexExpression": {
                                    "id": 145172,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 145125,
                                    "src": "2756:1:281",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "2752:6:281",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 145170,
                                "name": "sigType",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 145021,
                                "src": "2744:7:281",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_enum$_SigTypes_$144999_$",
                                  "typeString": "function (uint256) pure returns (enum SafeSigners_Test.SigTypes)"
                                }
                              },
                              "id": 145174,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "2744:15:281",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_SigTypes_$144999",
                                "typeString": "enum SafeSigners_Test.SigTypes"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 145175,
                                "name": "SigTypes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 144999,
                                "src": "2763:8:281",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_enum$_SigTypes_$144999_$",
                                  "typeString": "type(enum SafeSigners_Test.SigTypes)"
                                }
                              },
                              "id": 145176,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "EthSign",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 144996,
                              "src": "2763:16:281",
                              "typeDescriptions": {
                                "typeIdentifier": "t_enum$_SigTypes_$144999",
                                "typeString": "enum SafeSigners_Test.SigTypes"
                              }
                            },
                            "src": "2744:35:281",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "falseBody": {
                            "condition": {
                              "commonType": {
                                "typeIdentifier": "t_enum$_SigTypes_$144999",
                                "typeString": "enum SafeSigners_Test.SigTypes"
                              },
                              "id": 145223,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 145217,
                                      "name": "pks",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 145120,
                                      "src": "3038:3:281",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                        "typeString": "uint256[] memory"
                                      }
                                    },
                                    "id": 145219,
                                    "indexExpression": {
                                      "id": 145218,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 145125,
                                      "src": "3042:1:281",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "3038:6:281",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 145216,
                                  "name": "sigType",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 145021,
                                  "src": "3030:7:281",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_enum$_SigTypes_$144999_$",
                                    "typeString": "function (uint256) pure returns (enum SafeSigners_Test.SigTypes)"
                                  }
                                },
                                "id": 145220,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "3030:15:281",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_SigTypes_$144999",
                                  "typeString": "enum SafeSigners_Test.SigTypes"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "id": 145221,
                                  "name": "SigTypes",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 144999,
                                  "src": "3049:8:281",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_type$_t_enum$_SigTypes_$144999_$",
                                    "typeString": "type(enum SafeSigners_Test.SigTypes)"
                                  }
                                },
                                "id": 145222,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "ApprovedHash",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 144997,
                                "src": "3049:21:281",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_enum$_SigTypes_$144999",
                                  "typeString": "enum SafeSigners_Test.SigTypes"
                                }
                              },
                              "src": "3030:40:281",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            "falseBody": {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_enum$_SigTypes_$144999",
                                  "typeString": "enum SafeSigners_Test.SigTypes"
                                },
                                "id": 145287,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "arguments": [
                                    {
                                      "baseExpression": {
                                        "id": 145281,
                                        "name": "pks",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 145120,
                                        "src": "3489:3:281",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                          "typeString": "uint256[] memory"
                                        }
                                      },
                                      "id": 145283,
                                      "indexExpression": {
                                        "id": 145282,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 145125,
                                        "src": "3493:1:281",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "3489:6:281",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    ],
                                    "id": 145280,
                                    "name": "sigType",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 145021,
                                    "src": "3481:7:281",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_enum$_SigTypes_$144999_$",
                                      "typeString": "function (uint256) pure returns (enum SafeSigners_Test.SigTypes)"
                                    }
                                  },
                                  "id": 145284,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "3481:15:281",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_SigTypes_$144999",
                                    "typeString": "enum SafeSigners_Test.SigTypes"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "expression": {
                                    "id": 145285,
                                    "name": "SigTypes",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 144999,
                                    "src": "3500:8:281",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_enum$_SigTypes_$144999_$",
                                      "typeString": "type(enum SafeSigners_Test.SigTypes)"
                                    }
                                  },
                                  "id": 145286,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "Contract",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 144998,
                                  "src": "3500:17:281",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_enum$_SigTypes_$144999",
                                    "typeString": "enum SafeSigners_Test.SigTypes"
                                  }
                                },
                                "src": "3481:36:281",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 145355,
                              "nodeType": "IfStatement",
                              "src": "3477:617:281",
                              "trueBody": {
                                "id": 145354,
                                "nodeType": "Block",
                                "src": "3519:575:281",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 145289,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "UnaryOperation",
                                      "operator": "++",
                                      "prefix": false,
                                      "src": "3537:14:281",
                                      "subExpression": {
                                        "id": 145288,
                                        "name": "contractSigs",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 145111,
                                        "src": "3537:12:281",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "id": 145290,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3537:14:281"
                                  },
                                  {
                                    "assignments": [
                                      145292
                                    ],
                                    "declarations": [
                                      {
                                        "constant": false,
                                        "id": 145292,
                                        "mutability": "mutable",
                                        "name": "addr",
                                        "nameLocation": "3577:4:281",
                                        "nodeType": "VariableDeclaration",
                                        "scope": 145354,
                                        "src": "3569:12:281",
                                        "stateVariable": false,
                                        "storageLocation": "default",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        "typeName": {
                                          "id": 145291,
                                          "name": "address",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "3569:7:281",
                                          "stateMutability": "nonpayable",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        "visibility": "internal"
                                      }
                                    ],
                                    "id": 145299,
                                    "initialValue": {
                                      "arguments": [
                                        {
                                          "baseExpression": {
                                            "id": 145295,
                                            "name": "pks",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 145120,
                                            "src": "3631:3:281",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                              "typeString": "uint256[] memory"
                                            }
                                          },
                                          "id": 145297,
                                          "indexExpression": {
                                            "id": 145296,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 145125,
                                            "src": "3635:1:281",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "3631:6:281",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "id": 145293,
                                          "name": "SafeTestLib",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 153400,
                                          "src": "3584:11:281",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_contract$_SafeTestLib_$153400_$",
                                            "typeString": "type(library SafeTestLib)"
                                          }
                                        },
                                        "id": 145294,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "decodeSmartContractWalletAsAddress",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 152239,
                                        "src": "3584:46:281",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_address_$",
                                          "typeString": "function (uint256) pure returns (address)"
                                        }
                                      },
                                      "id": 145298,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "3584:54:281",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "VariableDeclarationStatement",
                                    "src": "3569:69:281"
                                  },
                                  {
                                    "expression": {
                                      "id": 145311,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 145300,
                                        "name": "r",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 145105,
                                        "src": "3656:1:281",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "arguments": [
                                                  {
                                                    "id": 145307,
                                                    "name": "addr",
                                                    "nodeType": "Identifier",
                                                    "overloadedDeclarations": [],
                                                    "referencedDeclaration": 145292,
                                                    "src": "3684:4:281",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    }
                                                  }
                                                ],
                                                "expression": {
                                                  "argumentTypes": [
                                                    {
                                                      "typeIdentifier": "t_address",
                                                      "typeString": "address"
                                                    }
                                                  ],
                                                  "id": 145306,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": true,
                                                  "lValueRequested": false,
                                                  "nodeType": "ElementaryTypeNameExpression",
                                                  "src": "3676:7:281",
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_type$_t_uint160_$",
                                                    "typeString": "type(uint160)"
                                                  },
                                                  "typeName": {
                                                    "id": 145305,
                                                    "name": "uint160",
                                                    "nodeType": "ElementaryTypeName",
                                                    "src": "3676:7:281",
                                                    "typeDescriptions": {}
                                                  }
                                                },
                                                "id": 145308,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": false,
                                                "kind": "typeConversion",
                                                "lValueRequested": false,
                                                "names": [],
                                                "nodeType": "FunctionCall",
                                                "src": "3676:13:281",
                                                "tryCall": false,
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint160",
                                                  "typeString": "uint160"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_uint160",
                                                  "typeString": "uint160"
                                                }
                                              ],
                                              "id": 145304,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "nodeType": "ElementaryTypeNameExpression",
                                              "src": "3668:7:281",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_type$_t_uint256_$",
                                                "typeString": "type(uint256)"
                                              },
                                              "typeName": {
                                                "id": 145303,
                                                "name": "uint256",
                                                "nodeType": "ElementaryTypeName",
                                                "src": "3668:7:281",
                                                "typeDescriptions": {}
                                              }
                                            },
                                            "id": 145309,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "typeConversion",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "3668:22:281",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "id": 145302,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "3660:7:281",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_bytes32_$",
                                            "typeString": "type(bytes32)"
                                          },
                                          "typeName": {
                                            "id": 145301,
                                            "name": "bytes32",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "3660:7:281",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 145310,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3660:31:281",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      },
                                      "src": "3656:35:281",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    "id": 145312,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3656:35:281"
                                  },
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 145316,
                                          "name": "addr",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 145292,
                                          "src": "3742:4:281",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "hexValue": "697356616c69645369676e61747572652862797465732c627974657329",
                                              "id": 145319,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "string",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "3772:31:281",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_stringliteral_20c13b0bc670c284a9f19cdf7a533ca249404190f8dc132aac33e733b965269e",
                                                "typeString": "literal_string \"isValidSignature(bytes,bytes)\""
                                              },
                                              "value": "isValidSignature(bytes,bytes)"
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_stringliteral_20c13b0bc670c284a9f19cdf7a533ca249404190f8dc132aac33e733b965269e",
                                                "typeString": "literal_string \"isValidSignature(bytes,bytes)\""
                                              }
                                            ],
                                            "expression": {
                                              "id": 145317,
                                              "name": "abi",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -1,
                                              "src": "3748:3:281",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_magic_abi",
                                                "typeString": "abi"
                                              }
                                            },
                                            "id": 145318,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberName": "encodeWithSignature",
                                            "nodeType": "MemberAccess",
                                            "src": "3748:23:281",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_abiencodewithsignature_pure$_t_string_memory_ptr_$returns$_t_bytes_memory_ptr_$",
                                              "typeString": "function (string memory) pure returns (bytes memory)"
                                            }
                                          },
                                          "id": 145320,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "3748:56:281",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "id": 145323,
                                              "name": "EIP1271_MAGIC_VALUE",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 144994,
                                              "src": "3817:19:281",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes4",
                                                "typeString": "bytes4"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_bytes4",
                                                "typeString": "bytes4"
                                              }
                                            ],
                                            "expression": {
                                              "id": 145321,
                                              "name": "abi",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -1,
                                              "src": "3806:3:281",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_magic_abi",
                                                "typeString": "abi"
                                              }
                                            },
                                            "id": 145322,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberName": "encode",
                                            "nodeType": "MemberAccess",
                                            "src": "3806:10:281",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                              "typeString": "function () pure returns (bytes memory)"
                                            }
                                          },
                                          "id": 145324,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "3806:31:281",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          },
                                          {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        ],
                                        "expression": {
                                          "id": 145313,
                                          "name": "vm",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 2381,
                                          "src": "3709:2:281",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_Vm_$13045",
                                            "typeString": "contract Vm"
                                          }
                                        },
                                        "id": 145315,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "mockCall",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 12748,
                                        "src": "3709:11:281",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$returns$__$",
                                          "typeString": "function (address,bytes memory,bytes memory) external"
                                        }
                                      },
                                      "id": 145325,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "3709:146:281",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 145326,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3709:146:281"
                                  },
                                  {
                                    "expression": {
                                      "id": 145329,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 145327,
                                        "name": "v",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 145102,
                                        "src": "3873:1:281",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "hexValue": "30",
                                        "id": 145328,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "kind": "number",
                                        "lValueRequested": false,
                                        "nodeType": "Literal",
                                        "src": "3877:1:281",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_rational_0_by_1",
                                          "typeString": "int_const 0"
                                        },
                                        "value": "0"
                                      },
                                      "src": "3873:5:281",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "id": 145330,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3873:5:281"
                                  },
                                  {
                                    "expression": {
                                      "id": 145338,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 145331,
                                        "name": "s",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 145108,
                                        "src": "3972:1:281",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "arguments": [
                                          {
                                            "commonType": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            },
                                            "id": 145336,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "leftExpression": {
                                              "id": 145334,
                                              "name": "numSigs",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 145036,
                                              "src": "3984:7:281",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "nodeType": "BinaryOperation",
                                            "operator": "*",
                                            "rightExpression": {
                                              "hexValue": "3635",
                                              "id": 145335,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "kind": "number",
                                              "lValueRequested": false,
                                              "nodeType": "Literal",
                                              "src": "3994:2:281",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_rational_65_by_1",
                                                "typeString": "int_const 65"
                                              },
                                              "value": "65"
                                            },
                                            "src": "3984:12:281",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "id": 145333,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "3976:7:281",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_bytes32_$",
                                            "typeString": "type(bytes32)"
                                          },
                                          "typeName": {
                                            "id": 145332,
                                            "name": "bytes32",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "3976:7:281",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 145337,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "typeConversion",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3976:21:281",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      },
                                      "src": "3972:25:281",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    "id": 145339,
                                    "nodeType": "ExpressionStatement",
                                    "src": "3972:25:281"
                                  },
                                  {
                                    "expression": {
                                      "id": 145352,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "id": 145340,
                                        "name": "signatures",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 145114,
                                        "src": "4015:10:281",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "arguments": [
                                          {
                                            "id": 145344,
                                            "name": "signatures",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 145114,
                                            "src": "4041:10:281",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes_memory_ptr",
                                              "typeString": "bytes memory"
                                            }
                                          },
                                          {
                                            "arguments": [
                                              {
                                                "id": 145347,
                                                "name": "r",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 145105,
                                                "src": "4070:1:281",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes32",
                                                  "typeString": "bytes32"
                                                }
                                              },
                                              {
                                                "id": 145348,
                                                "name": "s",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 145108,
                                                "src": "4073:1:281",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes32",
                                                  "typeString": "bytes32"
                                                }
                                              },
                                              {
                                                "id": 145349,
                                                "name": "v",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 145102,
                                                "src": "4076:1:281",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_uint8",
                                                  "typeString": "uint8"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_bytes32",
                                                  "typeString": "bytes32"
                                                },
                                                {
                                                  "typeIdentifier": "t_bytes32",
                                                  "typeString": "bytes32"
                                                },
                                                {
                                                  "typeIdentifier": "t_uint8",
                                                  "typeString": "uint8"
                                                }
                                              ],
                                              "expression": {
                                                "id": 145345,
                                                "name": "abi",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -1,
                                                "src": "4053:3:281",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_abi",
                                                  "typeString": "abi"
                                                }
                                              },
                                              "id": 145346,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "memberName": "encodePacked",
                                              "nodeType": "MemberAccess",
                                              "src": "4053:16:281",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                                "typeString": "function () pure returns (bytes memory)"
                                              }
                                            },
                                            "id": 145350,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "4053:25:281",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes_memory_ptr",
                                              "typeString": "bytes memory"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_bytes_memory_ptr",
                                              "typeString": "bytes memory"
                                            },
                                            {
                                              "typeIdentifier": "t_bytes_memory_ptr",
                                              "typeString": "bytes memory"
                                            }
                                          ],
                                          "expression": {
                                            "id": 145342,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "4028:5:281",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                              "typeString": "type(bytes storage pointer)"
                                            },
                                            "typeName": {
                                              "id": 145341,
                                              "name": "bytes",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "4028:5:281",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 145343,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "concat",
                                          "nodeType": "MemberAccess",
                                          "src": "4028:12:281",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$",
                                            "typeString": "function () pure returns (bytes memory)"
                                          }
                                        },
                                        "id": 145351,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "4028:51:281",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      },
                                      "src": "4015:64:281",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    },
                                    "id": 145353,
                                    "nodeType": "ExpressionStatement",
                                    "src": "4015:64:281"
                                  }
                                ]
                              }
                            },
                            "id": 145356,
                            "nodeType": "IfStatement",
                            "src": "3026:1068:281",
                            "trueBody": {
                              "id": 145279,
                              "nodeType": "Block",
                              "src": "3072:399:281",
                              "statements": [
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "arguments": [
                                          {
                                            "baseExpression": {
                                              "id": 145229,
                                              "name": "pks",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 145120,
                                              "src": "3119:3:281",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                                "typeString": "uint256[] memory"
                                              }
                                            },
                                            "id": 145231,
                                            "indexExpression": {
                                              "id": 145230,
                                              "name": "i",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 145125,
                                              "src": "3123:1:281",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint256",
                                                "typeString": "uint256"
                                              }
                                            },
                                            "isConstant": false,
                                            "isLValue": true,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "nodeType": "IndexAccess",
                                            "src": "3119:6:281",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          ],
                                          "expression": {
                                            "id": 145227,
                                            "name": "SafeTestLib",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 153400,
                                            "src": "3099:11:281",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_contract$_SafeTestLib_$153400_$",
                                              "typeString": "type(library SafeTestLib)"
                                            }
                                          },
                                          "id": 145228,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "getAddr",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 152110,
                                          "src": "3099:19:281",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_address_$",
                                            "typeString": "function (uint256) pure returns (address)"
                                          }
                                        },
                                        "id": 145232,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "3099:27:281",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "expression": {
                                        "id": 145224,
                                        "name": "vm",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2381,
                                        "src": "3090:2:281",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_Vm_$13045",
                                          "typeString": "contract Vm"
                                        }
                                      },
                                      "id": 145226,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "prank",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 12658,
                                      "src": "3090:8:281",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                                        "typeString": "function (address) external"
                                      }
                                    },
                                    "id": 145233,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3090:37:281",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 145234,
                                  "nodeType": "ExpressionStatement",
                                  "src": "3090:37:281"
                                },
                                {
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 145240,
                                        "name": "digest",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 145030,
                                        "src": "3175:6:281",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      ],
                                      "expression": {
                                        "expression": {
                                          "id": 145235,
                                          "name": "safeInstance",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 145093,
                                          "src": "3145:12:281",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_SafeInstance_$152063_memory_ptr",
                                            "typeString": "struct SafeInstance memory"
                                          }
                                        },
                                        "id": 145238,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "safe",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 152062,
                                        "src": "3145:17:281",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_DeployedSafe_$152032",
                                          "typeString": "contract DeployedSafe"
                                        }
                                      },
                                      "id": 145239,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "approveHash",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 40848,
                                      "src": "3145:29:281",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_nonpayable$_t_bytes32_$returns$__$",
                                        "typeString": "function (bytes32) external"
                                      }
                                    },
                                    "id": 145241,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "3145:37:281",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$__$",
                                      "typeString": "tuple()"
                                    }
                                  },
                                  "id": 145242,
                                  "nodeType": "ExpressionStatement",
                                  "src": "3145:37:281"
                                },
                                {
                                  "expression": {
                                    "id": 145245,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 145243,
                                      "name": "v",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 145102,
                                      "src": "3200:1:281",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "hexValue": "31",
                                      "id": 145244,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "3204:1:281",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "3200:5:281",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "id": 145246,
                                  "nodeType": "ExpressionStatement",
                                  "src": "3200:5:281"
                                },
                                {
                                  "expression": {
                                    "id": 145263,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 145247,
                                      "name": "r",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 145105,
                                      "src": "3316:1:281",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "arguments": [
                                        {
                                          "arguments": [
                                            {
                                              "arguments": [
                                                {
                                                  "arguments": [
                                                    {
                                                      "baseExpression": {
                                                        "id": 145256,
                                                        "name": "pks",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 145120,
                                                        "src": "3364:3:281",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                                          "typeString": "uint256[] memory"
                                                        }
                                                      },
                                                      "id": 145258,
                                                      "indexExpression": {
                                                        "id": 145257,
                                                        "name": "i",
                                                        "nodeType": "Identifier",
                                                        "overloadedDeclarations": [],
                                                        "referencedDeclaration": 145125,
                                                        "src": "3368:1:281",
                                                        "typeDescriptions": {
                                                          "typeIdentifier": "t_uint256",
                                                          "typeString": "uint256"
                                                        }
                                                      },
                                                      "isConstant": false,
                                                      "isLValue": true,
                                                      "isPure": false,
                                                      "lValueRequested": false,
                                                      "nodeType": "IndexAccess",
                                                      "src": "3364:6:281",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    }
                                                  ],
                                                  "expression": {
                                                    "argumentTypes": [
                                                      {
                                                        "typeIdentifier": "t_uint256",
                                                        "typeString": "uint256"
                                                      }
                                                    ],
                                                    "expression": {
                                                      "id": 145254,
                                                      "name": "SafeTestLib",
                                                      "nodeType": "Identifier",
                                                      "overloadedDeclarations": [],
                                                      "referencedDeclaration": 153400,
                                                      "src": "3344:11:281",
                                                      "typeDescriptions": {
                                                        "typeIdentifier": "t_type$_t_contract$_SafeTestLib_$153400_$",
                                                        "typeString": "type(library SafeTestLib)"
                                                      }
                                                    },
                                                    "id": 145255,
                                                    "isConstant": false,
                                                    "isLValue": false,
                                                    "isPure": false,
                                                    "lValueRequested": false,
                                                    "memberName": "getAddr",
                                                    "nodeType": "MemberAccess",
                                                    "referencedDeclaration": 152110,
                                                    "src": "3344:19:281",
                                                    "typeDescriptions": {
                                                      "typeIdentifier": "t_function_internal_pure$_t_uint256_$returns$_t_address_$",
                                                      "typeString": "function (uint256) pure returns (address)"
                                                    }
                                                  },
                                                  "id": 145259,
                                                  "isConstant": false,
                                                  "isLValue": false,
                                                  "isPure": false,
                                                  "kind": "functionCall",
                                                  "lValueRequested": false,
                                                  "names": [],
                                                  "nodeType": "FunctionCall",
                                                  "src": "3344:27:281",
                                                  "tryCall": false,
                                                  "typeDescriptions": {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                }
                                              ],
                                              "expression": {
                                                "argumentTypes": [
                                                  {
                                                    "typeIdentifier": "t_address",
                                                    "typeString": "address"
                                                  }
                                                ],
                                                "id": 145253,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "lValueRequested": false,
                                                "nodeType": "ElementaryTypeNameExpression",
                                                "src": "3336:7:281",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_type$_t_uint160_$",
                                                  "typeString": "type(uint160)"
                                                },
                                                "typeName": {
                                                  "id": 145252,
                                                  "name": "uint160",
                                                  "nodeType": "ElementaryTypeName",
                                                  "src": "3336:7:281",
                                                  "typeDescriptions": {}
                                                }
                                              },
                                              "id": 145260,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": false,
                                              "kind": "typeConversion",
                                              "lValueRequested": false,
                                              "names": [],
                                              "nodeType": "FunctionCall",
                                              "src": "3336:36:281",
                                              "tryCall": false,
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint160",
                                                "typeString": "uint160"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_uint160",
                                                "typeString": "uint160"
                                              }
                                            ],
                                            "id": 145251,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "nodeType": "ElementaryTypeNameExpression",
                                            "src": "3328:7:281",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_type$_t_uint256_$",
                                              "typeString": "type(uint256)"
                                            },
                                            "typeName": {
                                              "id": 145250,
                                              "name": "uint256",
                                              "nodeType": "ElementaryTypeName",
                                              "src": "3328:7:281",
                                              "typeDescriptions": {}
                                            }
                                          },
                                          "id": 145261,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "typeConversion",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "3328:45:281",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 145249,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "3320:7:281",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_bytes32_$",
                                          "typeString": "type(bytes32)"
                                        },
                                        "typeName": {
                                          "id": 145248,
                                          "name": "bytes32",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "3320:7:281",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 145262,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "3320:54:281",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    "src": "3316:58:281",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  "id": 145264,
                                  "nodeType": "ExpressionStatement",
                                  "src": "3316:58:281"
                                },
                                {
                                  "expression": {
                                    "id": 145277,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftHandSide": {
                                      "id": 145265,
                                      "name": "signatures",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 145114,
                                      "src": "3392:10:281",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    },
                                    "nodeType": "Assignment",
                                    "operator": "=",
                                    "rightHandSide": {
                                      "arguments": [
                                        {
                                          "id": 145269,
                                          "name": "signatures",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 145114,
                                          "src": "3418:10:281",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        },
                                        {
                                          "arguments": [
                                            {
                                              "id": 145272,
                                              "name": "r",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 145105,
                                              "src": "3447:1:281",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                              }
                                            },
                                            {
                                              "id": 145273,
                                              "name": "s",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 145108,
                                              "src": "3450:1:281",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                              }
                                            },
                                            {
                                              "id": 145274,
                                              "name": "v",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 145102,
                                              "src": "3453:1:281",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                              }
                                            }
                                          ],
                                          "expression": {
                                            "argumentTypes": [
                                              {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                              },
                                              {
                                                "typeIdentifier": "t_bytes32",
                                                "typeString": "bytes32"
                                              },
                                              {
                                                "typeIdentifier": "t_uint8",
                                                "typeString": "uint8"
                                              }
                                            ],
                                            "expression": {
                                              "id": 145270,
                                              "name": "abi",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": -1,
                                              "src": "3430:3:281",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_magic_abi",
                                                "typeString": "abi"
                                              }
                                            },
                                            "id": 145271,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "lValueRequested": false,
                                            "memberName": "encodePacked",
                                            "nodeType": "MemberAccess",
                                            "src": "3430:16:281",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                              "typeString": "function () pure returns (bytes memory)"
                                            }
                                          },
                                          "id": 145275,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "kind": "functionCall",
                                          "lValueRequested": false,
                                          "names": [],
                                          "nodeType": "FunctionCall",
                                          "src": "3430:25:281",
                                          "tryCall": false,
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          },
                                          {
                                            "typeIdentifier": "t_bytes_memory_ptr",
                                            "typeString": "bytes memory"
                                          }
                                        ],
                                        "expression": {
                                          "id": 145267,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "nodeType": "ElementaryTypeNameExpression",
                                          "src": "3405:5:281",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                            "typeString": "type(bytes storage pointer)"
                                          },
                                          "typeName": {
                                            "id": 145266,
                                            "name": "bytes",
                                            "nodeType": "ElementaryTypeName",
                                            "src": "3405:5:281",
                                            "typeDescriptions": {}
                                          }
                                        },
                                        "id": 145268,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "concat",
                                        "nodeType": "MemberAccess",
                                        "src": "3405:12:281",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$",
                                          "typeString": "function () pure returns (bytes memory)"
                                        }
                                      },
                                      "id": 145276,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "3405:51:281",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    },
                                    "src": "3392:64:281",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  "id": 145278,
                                  "nodeType": "ExpressionStatement",
                                  "src": "3392:64:281"
                                }
                              ]
                            }
                          },
                          "id": 145357,
                          "nodeType": "IfStatement",
                          "src": "2740:1354:281",
                          "trueBody": {
                            "id": 145215,
                            "nodeType": "Block",
                            "src": "2781:239:281",
                            "statements": [
                              {
                                "expression": {
                                  "id": 145195,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "components": [
                                      {
                                        "id": 145178,
                                        "name": "v",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 145102,
                                        "src": "2800:1:281",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint8",
                                          "typeString": "uint8"
                                        }
                                      },
                                      {
                                        "id": 145179,
                                        "name": "r",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 145105,
                                        "src": "2803:1:281",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      },
                                      {
                                        "id": 145180,
                                        "name": "s",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 145108,
                                        "src": "2806:1:281",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      }
                                    ],
                                    "id": 145181,
                                    "isConstant": false,
                                    "isInlineArray": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": true,
                                    "nodeType": "TupleExpression",
                                    "src": "2799:9:281",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$_t_uint8_$_t_bytes32_$_t_bytes32_$",
                                      "typeString": "tuple(uint8,bytes32,bytes32)"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "arguments": [
                                      {
                                        "baseExpression": {
                                          "id": 145184,
                                          "name": "pks",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 145120,
                                          "src": "2819:3:281",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                            "typeString": "uint256[] memory"
                                          }
                                        },
                                        "id": 145186,
                                        "indexExpression": {
                                          "id": 145185,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 145125,
                                          "src": "2823:1:281",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "2819:6:281",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "arguments": [
                                              {
                                                "hexValue": "19457468657265756d205369676e6564204d6573736167653a0a3332",
                                                "id": 145190,
                                                "isConstant": false,
                                                "isLValue": false,
                                                "isPure": true,
                                                "kind": "string",
                                                "lValueRequested": false,
                                                "nodeType": "Literal",
                                                "src": "2854:34:281",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
                                                  "typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
                                                },
                                                "value": "\u0019Ethereum Signed Message:\n32"
                                              },
                                              {
                                                "id": 145191,
                                                "name": "digest",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 145030,
                                                "src": "2890:6:281",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_bytes32",
                                                  "typeString": "bytes32"
                                                }
                                              }
                                            ],
                                            "expression": {
                                              "argumentTypes": [
                                                {
                                                  "typeIdentifier": "t_stringliteral_178a2411ab6fbc1ba11064408972259c558d0e82fd48b0aba3ad81d14f065e73",
                                                  "typeString": "literal_string hex\"19457468657265756d205369676e6564204d6573736167653a0a3332\""
                                                },
                                                {
                                                  "typeIdentifier": "t_bytes32",
                                                  "typeString": "bytes32"
                                                }
                                              ],
                                              "expression": {
                                                "id": 145188,
                                                "name": "abi",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": -1,
                                                "src": "2837:3:281",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_magic_abi",
                                                  "typeString": "abi"
                                                }
                                              },
                                              "id": 145189,
                                              "isConstant": false,
                                              "isLValue": false,
                                              "isPure": true,
                                              "lValueRequested": false,
                                              "memberName": "encodePacked",
                                              "nodeType": "MemberAccess",
                                              "src": "2837:16:281",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                                "typeString": "function () pure returns (bytes memory)"
                                              }
                                            },
                                            "id": 145192,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "kind": "functionCall",
                                            "lValueRequested": false,
                                            "names": [],
                                            "nodeType": "FunctionCall",
                                            "src": "2837:60:281",
                                            "tryCall": false,
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes_memory_ptr",
                                              "typeString": "bytes memory"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_bytes_memory_ptr",
                                              "typeString": "bytes memory"
                                            }
                                          ],
                                          "id": 145187,
                                          "name": "keccak256",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -8,
                                          "src": "2827:9:281",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                            "typeString": "function (bytes memory) pure returns (bytes32)"
                                          }
                                        },
                                        "id": 145193,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2827:71:281",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      ],
                                      "expression": {
                                        "id": 145182,
                                        "name": "vm",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 2381,
                                        "src": "2811:2:281",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_Vm_$13045",
                                          "typeString": "contract Vm"
                                        }
                                      },
                                      "id": 145183,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sign",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 11603,
                                      "src": "2811:7:281",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_external_pure$_t_uint256_$_t_bytes32_$returns$_t_uint8_$_t_bytes32_$_t_bytes32_$",
                                        "typeString": "function (uint256,bytes32) pure external returns (uint8,bytes32,bytes32)"
                                      }
                                    },
                                    "id": 145194,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2811:88:281",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_tuple$_t_uint8_$_t_bytes32_$_t_bytes32_$",
                                      "typeString": "tuple(uint8,bytes32,bytes32)"
                                    }
                                  },
                                  "src": "2799:100:281",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$__$",
                                    "typeString": "tuple()"
                                  }
                                },
                                "id": 145196,
                                "nodeType": "ExpressionStatement",
                                "src": "2799:100:281"
                              },
                              {
                                "expression": {
                                  "id": 145199,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 145197,
                                    "name": "v",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 145102,
                                    "src": "2917:1:281",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint8",
                                      "typeString": "uint8"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "+=",
                                  "rightHandSide": {
                                    "hexValue": "34",
                                    "id": 145198,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "2922:1:281",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_4_by_1",
                                      "typeString": "int_const 4"
                                    },
                                    "value": "4"
                                  },
                                  "src": "2917:6:281",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint8",
                                    "typeString": "uint8"
                                  }
                                },
                                "id": 145200,
                                "nodeType": "ExpressionStatement",
                                "src": "2917:6:281"
                              },
                              {
                                "expression": {
                                  "id": 145213,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "leftHandSide": {
                                    "id": 145201,
                                    "name": "signatures",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 145114,
                                    "src": "2941:10:281",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  "nodeType": "Assignment",
                                  "operator": "=",
                                  "rightHandSide": {
                                    "arguments": [
                                      {
                                        "id": 145205,
                                        "name": "signatures",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 145114,
                                        "src": "2967:10:281",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      },
                                      {
                                        "arguments": [
                                          {
                                            "id": 145208,
                                            "name": "r",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 145105,
                                            "src": "2996:1:281",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            }
                                          },
                                          {
                                            "id": 145209,
                                            "name": "s",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 145108,
                                            "src": "2999:1:281",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            }
                                          },
                                          {
                                            "id": 145210,
                                            "name": "v",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 145102,
                                            "src": "3002:1:281",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          }
                                        ],
                                        "expression": {
                                          "argumentTypes": [
                                            {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            },
                                            {
                                              "typeIdentifier": "t_bytes32",
                                              "typeString": "bytes32"
                                            },
                                            {
                                              "typeIdentifier": "t_uint8",
                                              "typeString": "uint8"
                                            }
                                          ],
                                          "expression": {
                                            "id": 145206,
                                            "name": "abi",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -1,
                                            "src": "2979:3:281",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_abi",
                                              "typeString": "abi"
                                            }
                                          },
                                          "id": 145207,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "lValueRequested": false,
                                          "memberName": "encodePacked",
                                          "nodeType": "MemberAccess",
                                          "src": "2979:16:281",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                            "typeString": "function () pure returns (bytes memory)"
                                          }
                                        },
                                        "id": 145211,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "kind": "functionCall",
                                        "lValueRequested": false,
                                        "names": [],
                                        "nodeType": "FunctionCall",
                                        "src": "2979:25:281",
                                        "tryCall": false,
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        },
                                        {
                                          "typeIdentifier": "t_bytes_memory_ptr",
                                          "typeString": "bytes memory"
                                        }
                                      ],
                                      "expression": {
                                        "id": 145203,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "2954:5:281",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                          "typeString": "type(bytes storage pointer)"
                                        },
                                        "typeName": {
                                          "id": 145202,
                                          "name": "bytes",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "2954:5:281",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 145204,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "concat",
                                      "nodeType": "MemberAccess",
                                      "src": "2954:12:281",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 145212,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "2954:51:281",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  },
                                  "src": "2941:64:281",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "id": 145214,
                                "nodeType": "ExpressionStatement",
                                "src": "2941:64:281"
                              }
                            ]
                          }
                        },
                        "id": 145358,
                        "nodeType": "IfStatement",
                        "src": "2547:1547:281",
                        "trueBody": {
                          "id": 145169,
                          "nodeType": "Block",
                          "src": "2584:150:281",
                          "statements": [
                            {
                              "expression": {
                                "id": 145153,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "components": [
                                    {
                                      "id": 145142,
                                      "name": "v",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 145102,
                                      "src": "2603:1:281",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint8",
                                        "typeString": "uint8"
                                      }
                                    },
                                    {
                                      "id": 145143,
                                      "name": "r",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 145105,
                                      "src": "2606:1:281",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    },
                                    {
                                      "id": 145144,
                                      "name": "s",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 145108,
                                      "src": "2609:1:281",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    }
                                  ],
                                  "id": 145145,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "TupleExpression",
                                  "src": "2602:9:281",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_uint8_$_t_bytes32_$_t_bytes32_$",
                                    "typeString": "tuple(uint8,bytes32,bytes32)"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "baseExpression": {
                                        "id": 145148,
                                        "name": "pks",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 145120,
                                        "src": "2622:3:281",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                          "typeString": "uint256[] memory"
                                        }
                                      },
                                      "id": 145150,
                                      "indexExpression": {
                                        "id": 145149,
                                        "name": "i",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 145125,
                                        "src": "2626:1:281",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "nodeType": "IndexAccess",
                                      "src": "2622:6:281",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    {
                                      "id": 145151,
                                      "name": "digest",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 145030,
                                      "src": "2630:6:281",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      {
                                        "typeIdentifier": "t_bytes32",
                                        "typeString": "bytes32"
                                      }
                                    ],
                                    "expression": {
                                      "id": 145146,
                                      "name": "vm",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 2381,
                                      "src": "2614:2:281",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_Vm_$13045",
                                        "typeString": "contract Vm"
                                      }
                                    },
                                    "id": 145147,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sign",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 11603,
                                    "src": "2614:7:281",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_external_pure$_t_uint256_$_t_bytes32_$returns$_t_uint8_$_t_bytes32_$_t_bytes32_$",
                                      "typeString": "function (uint256,bytes32) pure external returns (uint8,bytes32,bytes32)"
                                    }
                                  },
                                  "id": 145152,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2614:23:281",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_tuple$_t_uint8_$_t_bytes32_$_t_bytes32_$",
                                    "typeString": "tuple(uint8,bytes32,bytes32)"
                                  }
                                },
                                "src": "2602:35:281",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 145154,
                              "nodeType": "ExpressionStatement",
                              "src": "2602:35:281"
                            },
                            {
                              "expression": {
                                "id": 145167,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 145155,
                                  "name": "signatures",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 145114,
                                  "src": "2655:10:281",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "arguments": [
                                    {
                                      "id": 145159,
                                      "name": "signatures",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 145114,
                                      "src": "2681:10:281",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    },
                                    {
                                      "arguments": [
                                        {
                                          "id": 145162,
                                          "name": "r",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 145105,
                                          "src": "2710:1:281",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        },
                                        {
                                          "id": 145163,
                                          "name": "s",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 145108,
                                          "src": "2713:1:281",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          }
                                        },
                                        {
                                          "id": 145164,
                                          "name": "v",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 145102,
                                          "src": "2716:1:281",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          },
                                          {
                                            "typeIdentifier": "t_bytes32",
                                            "typeString": "bytes32"
                                          },
                                          {
                                            "typeIdentifier": "t_uint8",
                                            "typeString": "uint8"
                                          }
                                        ],
                                        "expression": {
                                          "id": 145160,
                                          "name": "abi",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": -1,
                                          "src": "2693:3:281",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_magic_abi",
                                            "typeString": "abi"
                                          }
                                        },
                                        "id": 145161,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "memberName": "encodePacked",
                                        "nodeType": "MemberAccess",
                                        "src": "2693:16:281",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                          "typeString": "function () pure returns (bytes memory)"
                                        }
                                      },
                                      "id": 145165,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "2693:25:281",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      },
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "expression": {
                                      "id": 145157,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "nodeType": "ElementaryTypeNameExpression",
                                      "src": "2668:5:281",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                        "typeString": "type(bytes storage pointer)"
                                      },
                                      "typeName": {
                                        "id": 145156,
                                        "name": "bytes",
                                        "nodeType": "ElementaryTypeName",
                                        "src": "2668:5:281",
                                        "typeDescriptions": {}
                                      }
                                    },
                                    "id": 145158,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "concat",
                                    "nodeType": "MemberAccess",
                                    "src": "2668:12:281",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$",
                                      "typeString": "function () pure returns (bytes memory)"
                                    }
                                  },
                                  "id": 145166,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "2668:51:281",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                },
                                "src": "2655:64:281",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              "id": 145168,
                              "nodeType": "ExpressionStatement",
                              "src": "2655:64:281"
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 145130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 145127,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 145125,
                      "src": "2512:1:281",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 145128,
                        "name": "pks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 145120,
                        "src": "2516:3:281",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 145129,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "2516:10:281",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "2512:14:281",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 145360,
                  "initializationExpression": {
                    "assignments": [
                      145125
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 145125,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "2509:1:281",
                        "nodeType": "VariableDeclaration",
                        "scope": 145360,
                        "src": "2501:9:281",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 145124,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "2501:7:281",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 145126,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "2501:9:281"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 145132,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "2528:3:281",
                      "subExpression": {
                        "id": 145131,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 145125,
                        "src": "2528:1:281",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 145133,
                    "nodeType": "ExpressionStatement",
                    "src": "2528:3:281"
                  },
                  "nodeType": "ForStatement",
                  "src": "2496:1608:281"
                },
                {
                  "body": {
                    "id": 145384,
                    "nodeType": "Block",
                    "src": "4534:81:281",
                    "statements": [
                      {
                        "expression": {
                          "id": 145382,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 145371,
                            "name": "signatures",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 145114,
                            "src": "4548:10:281",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "id": 145375,
                                "name": "signatures",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 145114,
                                "src": "4574:10:281",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              },
                              {
                                "arguments": [
                                  {
                                    "hexValue": "3332",
                                    "id": 145378,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4597:2:281",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_32_by_1",
                                      "typeString": "int_const 32"
                                    },
                                    "value": "32"
                                  },
                                  {
                                    "hexValue": "31",
                                    "id": 145379,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "number",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "4601:1:281",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    },
                                    "value": "1"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_32_by_1",
                                      "typeString": "int_const 32"
                                    },
                                    {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    }
                                  ],
                                  "expression": {
                                    "id": 145376,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "4586:3:281",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 145377,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encode",
                                  "nodeType": "MemberAccess",
                                  "src": "4586:10:281",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 145380,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "4586:17:281",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                },
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "expression": {
                                "id": 145373,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "4561:5:281",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                  "typeString": "type(bytes storage pointer)"
                                },
                                "typeName": {
                                  "id": 145372,
                                  "name": "bytes",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "4561:5:281",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 145374,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "concat",
                              "nodeType": "MemberAccess",
                              "src": "4561:12:281",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_bytesconcat_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 145381,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4561:43:281",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          },
                          "src": "4548:56:281",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        },
                        "id": 145383,
                        "nodeType": "ExpressionStatement",
                        "src": "4548:56:281"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 145367,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 145365,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 145362,
                      "src": "4511:1:281",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 145366,
                      "name": "contractSigs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 145111,
                      "src": "4515:12:281",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "4511:16:281",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 145385,
                  "initializationExpression": {
                    "assignments": [
                      145362
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 145362,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "4504:1:281",
                        "nodeType": "VariableDeclaration",
                        "scope": 145385,
                        "src": "4496:9:281",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 145361,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "4496:7:281",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 145364,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 145363,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "4508:1:281",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "4496:13:281"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 145369,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "4529:3:281",
                      "subExpression": {
                        "id": 145368,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 145362,
                        "src": "4529:1:281",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 145370,
                    "nodeType": "ExpressionStatement",
                    "src": "4529:3:281"
                  },
                  "nodeType": "ForStatement",
                  "src": "4491:124:281"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 145391,
                        "name": "digest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 145030,
                        "src": "4718:6:281",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 145392,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 145024,
                        "src": "4726:5:281",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 145393,
                        "name": "signatures",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 145114,
                        "src": "4733:10:281",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 145394,
                        "name": "numSigs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 145036,
                        "src": "4745:7:281",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "expression": {
                          "id": 145386,
                          "name": "safeInstance",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 145093,
                          "src": "4683:12:281",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_SafeInstance_$152063_memory_ptr",
                            "typeString": "struct SafeInstance memory"
                          }
                        },
                        "id": 145389,
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "safe",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 152062,
                        "src": "4683:17:281",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_DeployedSafe_$152032",
                          "typeString": "contract DeployedSafe"
                        }
                      },
                      "id": 145390,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "checkNSignatures",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 40813,
                      "src": "4683:34:281",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_uint256_$returns$__$",
                        "typeString": "function (bytes32,bytes memory,bytes memory,uint256) view external"
                      }
                    },
                    "id": 145395,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4683:70:281",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 145396,
                  "nodeType": "ExpressionStatement",
                  "src": "4683:70:281"
                },
                {
                  "assignments": [
                    145401
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 145401,
                      "mutability": "mutable",
                      "name": "gotSigners",
                      "nameLocation": "4848:10:281",
                      "nodeType": "VariableDeclaration",
                      "scope": 145444,
                      "src": "4831:27:281",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                        "typeString": "address[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 145399,
                          "name": "address",
                          "nodeType": "ElementaryTypeName",
                          "src": "4831:7:281",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "id": 145400,
                        "nodeType": "ArrayTypeName",
                        "src": "4831:9:281",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_address_$dyn_storage_ptr",
                          "typeString": "address[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 145408,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 145404,
                        "name": "digest",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 145030,
                        "src": "4909:6:281",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 145405,
                        "name": "signatures",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 145114,
                        "src": "4929:10:281",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 145406,
                        "name": "numSigs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 145036,
                        "src": "4961:7:281",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 145402,
                        "name": "SafeSigners",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 68635,
                        "src": "4873:11:281",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_SafeSigners_$68635_$",
                          "typeString": "type(library SafeSigners)"
                        }
                      },
                      "id": 145403,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "getNSigners",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 68634,
                      "src": "4873:23:281",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$_t_uint256_$returns$_t_array$_t_address_$dyn_memory_ptr_$",
                        "typeString": "function (bytes32,bytes memory,uint256) pure returns (address[] memory)"
                      }
                    },
                    "id": 145407,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [
                      "dataHash",
                      "signatures",
                      "requiredSignatures"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "4873:98:281",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                      "typeString": "address[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "4831:140:281"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 145410,
                          "name": "gotSigners",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 145401,
                          "src": "5065:10:281",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 145411,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "5065:17:281",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 145412,
                        "name": "numSigs",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 145036,
                        "src": "5084:7:281",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 145409,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2553,
                        2578,
                        2591,
                        2607,
                        2649,
                        2691,
                        2733,
                        2770,
                        2807,
                        2844,
                        351,
                        376,
                        406,
                        431,
                        490,
                        515,
                        545,
                        570,
                        2043,
                        2078
                      ],
                      "referencedDeclaration": 545,
                      "src": "5056:8:281",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 145413,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5056:36:281",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 145414,
                  "nodeType": "ExpressionStatement",
                  "src": "5056:36:281"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 145416,
                          "name": "gotSigners",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 145401,
                          "src": "5111:10:281",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 145417,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "5111:17:281",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 145418,
                            "name": "safeInstance",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 145093,
                            "src": "5130:12:281",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_SafeInstance_$152063_memory_ptr",
                              "typeString": "struct SafeInstance memory"
                            }
                          },
                          "id": 145419,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "owners",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 152057,
                          "src": "5130:19:281",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                            "typeString": "address[] memory"
                          }
                        },
                        "id": 145420,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "5130:26:281",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 145415,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2553,
                        2578,
                        2591,
                        2607,
                        2649,
                        2691,
                        2733,
                        2770,
                        2807,
                        2844,
                        351,
                        376,
                        406,
                        431,
                        490,
                        515,
                        545,
                        570,
                        2043,
                        2078
                      ],
                      "referencedDeclaration": 545,
                      "src": "5102:8:281",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 145421,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5102:55:281",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 145422,
                  "nodeType": "ExpressionStatement",
                  "src": "5102:55:281"
                },
                {
                  "body": {
                    "id": 145442,
                    "nodeType": "Block",
                    "src": "5201:72:281",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "expression": {
                                  "id": 145433,
                                  "name": "safeInstance",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 145093,
                                  "src": "5224:12:281",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_SafeInstance_$152063_memory_ptr",
                                    "typeString": "struct SafeInstance memory"
                                  }
                                },
                                "id": 145434,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "owners",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 152057,
                                "src": "5224:19:281",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 145436,
                              "indexExpression": {
                                "id": 145435,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 145424,
                                "src": "5244:1:281",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5224:22:281",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 145437,
                                "name": "gotSigners",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 145401,
                                "src": "5248:10:281",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_address_$dyn_memory_ptr",
                                  "typeString": "address[] memory"
                                }
                              },
                              "id": 145439,
                              "indexExpression": {
                                "id": 145438,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 145424,
                                "src": "5259:1:281",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "5248:13:281",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 145432,
                            "name": "assertEq",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              2553,
                              2578,
                              2591,
                              2607,
                              2649,
                              2691,
                              2733,
                              2770,
                              2807,
                              2844,
                              351,
                              376,
                              406,
                              431,
                              490,
                              515,
                              545,
                              570,
                              2043,
                              2078
                            ],
                            "referencedDeclaration": 351,
                            "src": "5215:8:281",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$returns$__$",
                              "typeString": "function (address,address)"
                            }
                          },
                          "id": 145440,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5215:47:281",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 145441,
                        "nodeType": "ExpressionStatement",
                        "src": "5215:47:281"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 145428,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 145426,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 145424,
                      "src": "5183:1:281",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 145427,
                      "name": "numSigs",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 145036,
                      "src": "5187:7:281",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5183:11:281",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 145443,
                  "initializationExpression": {
                    "assignments": [
                      145424
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 145424,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "5180:1:281",
                        "nodeType": "VariableDeclaration",
                        "scope": 145443,
                        "src": "5172:9:281",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 145423,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "5172:7:281",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 145425,
                    "nodeType": "VariableDeclarationStatement",
                    "src": "5172:9:281"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 145430,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "5196:3:281",
                      "subExpression": {
                        "id": 145429,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 145424,
                        "src": "5196:1:281",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 145431,
                    "nodeType": "ExpressionStatement",
                    "src": "5196:3:281"
                  },
                  "nodeType": "ForStatement",
                  "src": "5167:106:281"
                }
              ]
            },
            "documentation": {
              "id": 145022,
              "nodeType": "StructuredDocumentation",
              "src": "954:422:281",
              "text": "@dev Test that for a given set of signatures:\n      1. safe.checkNSignatures() succeeds\n      2. the getSigners() method returns the expected signers\n      3. the expected signers are all owners of the safe.\n      Demonstrating these three properties is sufficient to prove that the getSigners() method\n      returns the same signatures as those recovered by safe.checkNSignatures()."
            },
            "functionSelector": "1778976d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "testDiff_getSignaturesVsCheckSignatures_succeeds",
            "nameLocation": "1390:48:281",
            "parameters": {
              "id": 145027,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 145024,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "1452:5:281",
                  "nodeType": "VariableDeclaration",
                  "scope": 145445,
                  "src": "1439:18:281",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 145023,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "1439:5:281",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 145026,
                  "mutability": "mutable",
                  "name": "_numSigs",
                  "nameLocation": "1467:8:281",
                  "nodeType": "VariableDeclaration",
                  "scope": 145445,
                  "src": "1459:16:281",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 145025,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1459:7:281",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1438:38:281"
            },
            "returnParameters": {
              "id": 145028,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1486:0:281"
            },
            "scope": 145446,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 144988,
              "name": "Test",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11539,
              "src": "358:4:281"
            },
            "id": 144989,
            "nodeType": "InheritanceSpecifier",
            "src": "358:4:281"
          },
          {
            "baseName": {
              "id": 144990,
              "name": "SafeTestTools",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 153826,
              "src": "364:13:281"
            },
            "id": 144991,
            "nodeType": "InheritanceSpecifier",
            "src": "364:13:281"
          }
        ],
        "canonicalName": "SafeSigners_Test",
        "contractDependencies": [
          40986,
          42941,
          151969
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          145446,
          153826,
          11539,
          2388,
          2385,
          11490,
          7248,
          6958,
          6279,
          4546,
          3852,
          2322
        ],
        "name": "SafeSigners_Test",
        "nameLocation": "338:16:281",
        "scope": 145447,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 281
}