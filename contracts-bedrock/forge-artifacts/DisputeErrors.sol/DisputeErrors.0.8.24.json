{
  "abi": [],
  "bytecode": {
    "object": "0x",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "linkReferences": {}
  },
  "ast": {
    "absolutePath": "src/libraries/DisputeErrors.sol",
    "id": 40584,
    "exportedSymbols": {
      "AlreadyChallenged": [
        40574
      ],
      "BlockHashNotPresent": [
        40583
      ],
      "BlockNumberOOB": [
        40580
      ],
      "BondAmount": [
        40617
      ],
      "BondTooLow": [
        40526
      ],
      "CannotDefendRootClaim": [
        40529
      ],
      "Claim": [
        40613
      ],
      "ClaimAlreadyExists": [
        40532
      ],
      "ClaimAlreadyResolved": [
        40568
      ],
      "ClaimHash": [
        40615
      ],
      "Clock": [
        40625
      ],
      "ClockNotExpired": [
        40544
      ],
      "ClockTimeExceeded": [
        40541
      ],
      "Duration": [
        40621
      ],
      "GameAlreadyExists": [
        40517
      ],
      "GameDepthExceeded": [
        40547
      ],
      "GameId": [
        40623
      ],
      "GameNotInProgress": [
        40538
      ],
      "GameStatus": [
        40636
      ],
      "GameType": [
        40629
      ],
      "GameTypes": [
        40662
      ],
      "Hash": [
        40611
      ],
      "InvalidClaim": [
        40535
      ],
      "InvalidLocalIdent": [
        40562
      ],
      "InvalidParent": [
        40550
      ],
      "InvalidPrestate": [
        40553
      ],
      "InvalidSignature": [
        40571
      ],
      "L1HeadTooOld": [
        40559
      ],
      "LibClock": [
        40019
      ],
      "LibGameId": [
        40061
      ],
      "LibHashing": [
        40083
      ],
      "LibPosition": [
        40241
      ],
      "NoImplementation": [
        40511
      ],
      "NotOwner": [
        40577
      ],
      "OutOfOrderResolution": [
        40565
      ],
      "Position": [
        40627
      ],
      "Timestamp": [
        40619
      ],
      "UnexpectedRootClaim": [
        40523
      ],
      "VMStatus": [
        40631
      ],
      "VMStatuses": [
        40696
      ],
      "ValidStep": [
        40556
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:4049:81",
    "nodes": [
      {
        "id": 40504,
        "nodeType": "PragmaDirective",
        "src": "32:24:81",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 40505,
        "nodeType": "ImportDirective",
        "src": "58:28:81",
        "nodes": [],
        "absolutePath": "src/libraries/DisputeTypes.sol",
        "file": "./DisputeTypes.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 40584,
        "sourceUnit": 40697,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 40511,
        "nodeType": "ErrorDefinition",
        "src": "428:42:81",
        "nodes": [],
        "documentation": {
          "id": 40506,
          "nodeType": "StructuredDocumentation",
          "src": "284:144:81",
          "text": "@notice Thrown when a dispute game is attempted to be created with an unsupported game type.\n @param gameType The unsupported game type."
        },
        "errorSelector": "44265d6f",
        "name": "NoImplementation",
        "nameLocation": "434:16:81",
        "parameters": {
          "id": 40510,
          "nodeType": "ParameterList",
          "parameters": [
            {
              "constant": false,
              "id": 40509,
              "mutability": "mutable",
              "name": "gameType",
              "nameLocation": "460:8:81",
              "nodeType": "VariableDeclaration",
              "scope": 40511,
              "src": "451:17:81",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_userDefinedValueType$_GameType_$40629",
                "typeString": "GameType"
              },
              "typeName": {
                "id": 40508,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 40507,
                  "name": "GameType",
                  "nameLocations": [
                    "451:8:81"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40629,
                  "src": "451:8:81"
                },
                "referencedDeclaration": 40629,
                "src": "451:8:81",
                "typeDescriptions": {
                  "typeIdentifier": "t_userDefinedValueType$_GameType_$40629",
                  "typeString": "GameType"
                }
              },
              "visibility": "internal"
            }
          ],
          "src": "450:19:81"
        }
      },
      {
        "id": 40517,
        "nodeType": "ErrorDefinition",
        "src": "625:35:81",
        "nodes": [],
        "documentation": {
          "id": 40512,
          "nodeType": "StructuredDocumentation",
          "src": "472:153:81",
          "text": "@notice Thrown when a dispute game that already exists is attempted to be created.\n @param uuid The UUID of the dispute game that already exists."
        },
        "errorSelector": "014f6fe5",
        "name": "GameAlreadyExists",
        "nameLocation": "631:17:81",
        "parameters": {
          "id": 40516,
          "nodeType": "ParameterList",
          "parameters": [
            {
              "constant": false,
              "id": 40515,
              "mutability": "mutable",
              "name": "uuid",
              "nameLocation": "654:4:81",
              "nodeType": "VariableDeclaration",
              "scope": 40517,
              "src": "649:9:81",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_userDefinedValueType$_Hash_$40611",
                "typeString": "Hash"
              },
              "typeName": {
                "id": 40514,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 40513,
                  "name": "Hash",
                  "nameLocations": [
                    "649:4:81"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40611,
                  "src": "649:4:81"
                },
                "referencedDeclaration": 40611,
                "src": "649:4:81",
                "typeDescriptions": {
                  "typeIdentifier": "t_userDefinedValueType$_Hash_$40611",
                  "typeString": "Hash"
                }
              },
              "visibility": "internal"
            }
          ],
          "src": "648:11:81"
        }
      },
      {
        "id": 40523,
        "nodeType": "ErrorDefinition",
        "src": "865:43:81",
        "nodes": [],
        "documentation": {
          "id": 40518,
          "nodeType": "StructuredDocumentation",
          "src": "662:203:81",
          "text": "@notice Thrown when the root claim has an unexpected VM status.\n         Some games can only start with a root-claim with a specific status.\n @param rootClaim is the claim that was unexpected."
        },
        "errorSelector": "f40239db",
        "name": "UnexpectedRootClaim",
        "nameLocation": "871:19:81",
        "parameters": {
          "id": 40522,
          "nodeType": "ParameterList",
          "parameters": [
            {
              "constant": false,
              "id": 40521,
              "mutability": "mutable",
              "name": "rootClaim",
              "nameLocation": "897:9:81",
              "nodeType": "VariableDeclaration",
              "scope": 40523,
              "src": "891:15:81",
              "stateVariable": false,
              "storageLocation": "default",
              "typeDescriptions": {
                "typeIdentifier": "t_userDefinedValueType$_Claim_$40613",
                "typeString": "Claim"
              },
              "typeName": {
                "id": 40520,
                "nodeType": "UserDefinedTypeName",
                "pathNode": {
                  "id": 40519,
                  "name": "Claim",
                  "nameLocations": [
                    "891:5:81"
                  ],
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40613,
                  "src": "891:5:81"
                },
                "referencedDeclaration": 40613,
                "src": "891:5:81",
                "typeDescriptions": {
                  "typeIdentifier": "t_userDefinedValueType$_Claim_$40613",
                  "typeString": "Claim"
                }
              },
              "visibility": "internal"
            }
          ],
          "src": "890:17:81"
        }
      },
      {
        "id": 40526,
        "nodeType": "ErrorDefinition",
        "src": "1223:19:81",
        "nodes": [],
        "documentation": {
          "id": 40524,
          "nodeType": "StructuredDocumentation",
          "src": "1106:117:81",
          "text": "@notice Thrown when a supplied bond is too low to cover the\n         cost of the next possible counter claim."
        },
        "errorSelector": "6e360f94",
        "name": "BondTooLow",
        "nameLocation": "1229:10:81",
        "parameters": {
          "id": 40525,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "1239:2:81"
        }
      },
      {
        "id": 40529,
        "nodeType": "ErrorDefinition",
        "src": "1315:30:81",
        "nodes": [],
        "documentation": {
          "id": 40527,
          "nodeType": "StructuredDocumentation",
          "src": "1244:71:81",
          "text": "@notice Thrown when a defense against the root claim is attempted."
        },
        "errorSelector": "a42637bc",
        "name": "CannotDefendRootClaim",
        "nameLocation": "1321:21:81",
        "parameters": {
          "id": 40528,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "1342:2:81"
        }
      },
      {
        "id": 40532,
        "nodeType": "ErrorDefinition",
        "src": "1425:27:81",
        "nodes": [],
        "documentation": {
          "id": 40530,
          "nodeType": "StructuredDocumentation",
          "src": "1347:78:81",
          "text": "@notice Thrown when a claim is attempting to be made that already exists."
        },
        "errorSelector": "80497e3b",
        "name": "ClaimAlreadyExists",
        "nameLocation": "1431:18:81",
        "parameters": {
          "id": 40531,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "1449:2:81"
        }
      },
      {
        "id": 40535,
        "nodeType": "ErrorDefinition",
        "src": "1508:21:81",
        "nodes": [],
        "documentation": {
          "id": 40533,
          "nodeType": "StructuredDocumentation",
          "src": "1454:54:81",
          "text": "@notice Thrown when a given claim is invalid (0)."
        },
        "errorSelector": "ed3c247c",
        "name": "InvalidClaim",
        "nameLocation": "1514:12:81",
        "parameters": {
          "id": 40534,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "1526:2:81"
        }
      },
      {
        "id": 40538,
        "nodeType": "ErrorDefinition",
        "src": "1665:26:81",
        "nodes": [],
        "documentation": {
          "id": 40536,
          "nodeType": "StructuredDocumentation",
          "src": "1531:134:81",
          "text": "@notice Thrown when an action that requires the game to be `IN_PROGRESS` is invoked when\n         the game is not in progress."
        },
        "errorSelector": "67fe1950",
        "name": "GameNotInProgress",
        "nameLocation": "1671:17:81",
        "parameters": {
          "id": 40537,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "1688:2:81"
        }
      },
      {
        "id": 40541,
        "nodeType": "ErrorDefinition",
        "src": "1779:26:81",
        "nodes": [],
        "documentation": {
          "id": 40539,
          "nodeType": "StructuredDocumentation",
          "src": "1693:86:81",
          "text": "@notice Thrown when a move is attempted to be made after the clock has timed out."
        },
        "errorSelector": "3381d114",
        "name": "ClockTimeExceeded",
        "nameLocation": "1785:17:81",
        "parameters": {
          "id": 40540,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "1802:2:81"
        }
      },
      {
        "id": 40544,
        "nodeType": "ErrorDefinition",
        "src": "1879:24:81",
        "nodes": [],
        "documentation": {
          "id": 40542,
          "nodeType": "StructuredDocumentation",
          "src": "1807:72:81",
          "text": "@notice Thrown when the game is attempted to be resolved too early."
        },
        "errorSelector": "f2440b53",
        "name": "ClockNotExpired",
        "nameLocation": "1885:15:81",
        "parameters": {
          "id": 40543,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "1900:2:81"
        }
      },
      {
        "id": 40547,
        "nodeType": "ErrorDefinition",
        "src": "2006:26:81",
        "nodes": [],
        "documentation": {
          "id": 40545,
          "nodeType": "StructuredDocumentation",
          "src": "1905:101:81",
          "text": "@notice Thrown when a move is attempted to be made at or greater than the max depth of the game."
        },
        "errorSelector": "56f57b2b",
        "name": "GameDepthExceeded",
        "nameLocation": "2012:17:81",
        "parameters": {
          "id": 40546,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "2029:2:81"
        }
      },
      {
        "id": 40550,
        "nodeType": "ErrorDefinition",
        "src": "2108:22:81",
        "nodes": [],
        "documentation": {
          "id": 40548,
          "nodeType": "StructuredDocumentation",
          "src": "2034:74:81",
          "text": "@notice Thrown when a step is attempted above the maximum game depth."
        },
        "errorSelector": "5f53dd98",
        "name": "InvalidParent",
        "nameLocation": "2114:13:81",
        "parameters": {
          "id": 40549,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "2127:2:81"
        }
      },
      {
        "id": 40553,
        "nodeType": "ErrorDefinition",
        "src": "2199:24:81",
        "nodes": [],
        "documentation": {
          "id": 40551,
          "nodeType": "StructuredDocumentation",
          "src": "2132:67:81",
          "text": "@notice Thrown when an invalid prestate is supplied to `step`."
        },
        "errorSelector": "696550ff",
        "name": "InvalidPrestate",
        "nameLocation": "2205:15:81",
        "parameters": {
          "id": 40552,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "2220:2:81"
        }
      },
      {
        "id": 40556,
        "nodeType": "ErrorDefinition",
        "src": "2313:18:81",
        "nodes": [],
        "documentation": {
          "id": 40554,
          "nodeType": "StructuredDocumentation",
          "src": "2225:88:81",
          "text": "@notice Thrown when a step is made that computes the expected post state correctly."
        },
        "errorSelector": "fb4e40dd",
        "name": "ValidStep",
        "nameLocation": "2319:9:81",
        "parameters": {
          "id": 40555,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "2328:2:81"
        }
      },
      {
        "id": 40559,
        "nodeType": "ErrorDefinition",
        "src": "2471:21:81",
        "nodes": [],
        "documentation": {
          "id": 40557,
          "nodeType": "StructuredDocumentation",
          "src": "2333:138:81",
          "text": "@notice Thrown when a game is attempted to be initialized with an L1 head that does\n         not contain the disputed output root."
        },
        "errorSelector": "13809ba5",
        "name": "L1HeadTooOld",
        "nameLocation": "2477:12:81",
        "parameters": {
          "id": 40558,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "2489:2:81"
        }
      },
      {
        "id": 40562,
        "nodeType": "ErrorDefinition",
        "src": "2588:26:81",
        "nodes": [],
        "documentation": {
          "id": 40560,
          "nodeType": "StructuredDocumentation",
          "src": "2494:94:81",
          "text": "@notice Thrown when an invalid local identifier is passed to the `addLocalData` function."
        },
        "errorSelector": "ff137e65",
        "name": "InvalidLocalIdent",
        "nameLocation": "2594:17:81",
        "parameters": {
          "id": 40561,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "2611:2:81"
        }
      },
      {
        "id": 40565,
        "nodeType": "ErrorDefinition",
        "src": "2671:29:81",
        "nodes": [],
        "documentation": {
          "id": 40563,
          "nodeType": "StructuredDocumentation",
          "src": "2616:55:81",
          "text": "@notice Thrown when resolving claims out of order."
        },
        "errorSelector": "9a076646",
        "name": "OutOfOrderResolution",
        "nameLocation": "2677:20:81",
        "parameters": {
          "id": 40564,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "2697:2:81"
        }
      },
      {
        "id": 40568,
        "nodeType": "ErrorDefinition",
        "src": "2776:29:81",
        "nodes": [],
        "documentation": {
          "id": 40566,
          "nodeType": "StructuredDocumentation",
          "src": "2702:74:81",
          "text": "@notice Thrown when resolving a claim that has already been resolved."
        },
        "errorSelector": "f1a94581",
        "name": "ClaimAlreadyResolved",
        "nameLocation": "2782:20:81",
        "parameters": {
          "id": 40567,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "2802:2:81"
        }
      },
      {
        "id": 40571,
        "nodeType": "ErrorDefinition",
        "src": "3077:25:81",
        "nodes": [],
        "documentation": {
          "id": 40569,
          "nodeType": "StructuredDocumentation",
          "src": "3003:74:81",
          "text": "@notice Thrown when an invalid signature is submitted to `challenge`."
        },
        "errorSelector": "8baa579f",
        "name": "InvalidSignature",
        "nameLocation": "3083:16:81",
        "parameters": {
          "id": 40570,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "3099:2:81"
        }
      },
      {
        "id": 40574,
        "nodeType": "ErrorDefinition",
        "src": "3235:26:81",
        "nodes": [],
        "documentation": {
          "id": 40572,
          "nodeType": "StructuredDocumentation",
          "src": "3104:131:81",
          "text": "@notice Thrown when a signature that has already been used to support the\n         `rootClaim` is submitted to `challenge`."
        },
        "errorSelector": "f1082a93",
        "name": "AlreadyChallenged",
        "nameLocation": "3241:17:81",
        "parameters": {
          "id": 40573,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "3258:2:81"
        }
      },
      {
        "id": 40577,
        "nodeType": "ErrorDefinition",
        "src": "3601:17:81",
        "nodes": [],
        "documentation": {
          "id": 40575,
          "nodeType": "StructuredDocumentation",
          "src": "3459:142:81",
          "text": "@notice Thrown when a function that is protected by the `onlyOwner` modifier\n          is called from an account other than the owner."
        },
        "errorSelector": "30cd7471",
        "name": "NotOwner",
        "nameLocation": "3607:8:81",
        "parameters": {
          "id": 40576,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "3615:2:81"
        }
      },
      {
        "id": 40580,
        "nodeType": "ErrorDefinition",
        "src": "3938:23:81",
        "nodes": [],
        "documentation": {
          "id": 40578,
          "nodeType": "StructuredDocumentation",
          "src": "3816:122:81",
          "text": "@notice Thrown when a block that is out of the range of the `BLOCKHASH` opcode\n         is attempted to be loaded."
        },
        "errorSelector": "d82756d8",
        "name": "BlockNumberOOB",
        "nameLocation": "3944:14:81",
        "parameters": {
          "id": 40579,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "3958:2:81"
        }
      },
      {
        "id": 40583,
        "nodeType": "ErrorDefinition",
        "src": "4052:28:81",
        "nodes": [],
        "documentation": {
          "id": 40581,
          "nodeType": "StructuredDocumentation",
          "src": "3963:89:81",
          "text": "@notice Thrown when a block hash is attempted to be loaded that has not been stored."
        },
        "errorSelector": "37cf2705",
        "name": "BlockHashNotPresent",
        "nameLocation": "4058:19:81",
        "parameters": {
          "id": 40582,
          "nodeType": "ParameterList",
          "parameters": [],
          "src": "4077:2:81"
        }
      }
    ],
    "license": "MIT"
  },
  "id": 81
}