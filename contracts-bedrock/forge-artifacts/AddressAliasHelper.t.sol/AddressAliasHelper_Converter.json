{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "addr",
          "type": "address"
        }
      ],
      "name": "convertRoundTrip",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "failedRoundtrip",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x608060405234801561001057600080fd5b5060af8061001f6000396000f3fe6080604052348015600f57600080fd5b506004361060325760003560e01c806351188e58146037578063c009306d146057575b600080fd5b60005460439060ff1681565b604051901515815260200160405180910390f35b606560623660046067565b50565b005b600060208284031215607857600080fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114609b57600080fd5b939250505056fea164736f6c634300080f000a",
    "sourceMap": "232:604:309:-:0;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052348015600f57600080fd5b506004361060325760003560e01c806351188e58146037578063c009306d146057575b600080fd5b60005460439060ff1681565b604051901515815260200160405180910390f35b606560623660046067565b50565b005b600060208284031215607857600080fd5b813573ffffffffffffffffffffffffffffffffffffffff81168114609b57600080fd5b939250505056fea164736f6c634300080f000a",
    "sourceMap": "232:604:309:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;276:27;;;;;;;;;;;;179:14:322;;172:22;154:41;;142:2;127:18;276:27:309;;;;;;;386:448;;;;;;:::i;:::-;;;;;206:309:322;265:6;318:2;306:9;297:7;293:23;289:32;286:52;;;334:1;331;324:12;286:52;373:9;360:23;423:42;416:5;412:54;405:5;402:65;392:93;;481:1;478;471:12;392:93;504:5;206:309;-1:-1:-1;;;206:309:322:o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "convertRoundTrip(address)": "c009306d",
    "failedRoundtrip()": "51188e58"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"addr\",\"type\":\"address\"}],\"name\":\"convertRoundTrip\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"failedRoundtrip\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"convertRoundTrip(address)\":{\"details\":\"Allows the actor to convert L1 to L2 addresses and vice versa.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/invariants/AddressAliasHelper.t.sol\":\"AddressAliasHelper_Converter\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@cwia/=lib/clones-with-immutable-args/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/solmate/\",\":clones-with-immutable-args/=lib/clones-with-immutable-args/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/forge-std/lib/ds-test/src/test.sol\":{\"keccak256\":\"0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b\",\"license\":\"GPL-3.0-or-later\",\"urls\":[\"bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240\",\"dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k\"]},\"lib/forge-std/src/Base.sol\":{\"keccak256\":\"0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224\",\"dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK\"]},\"lib/forge-std/src/StdAssertions.sol\":{\"keccak256\":\"0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b\",\"dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL\"]},\"lib/forge-std/src/StdChains.sol\":{\"keccak256\":\"0x9100bd38453711d5f5ae32d16b4aacef8d4e26abb3061fcc9920cd30cdb49315\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://114654e304083d3403510edd13d7df2223747337150ecf51dd36b441e50498f7\",\"dweb:/ipfs/QmQy6uvcVHyHzU2RbuvEo1hKiV7k81z21gR6DSj4DkCP8D\"]},\"lib/forge-std/src/StdCheats.sol\":{\"keccak256\":\"0xb58d624eb0922d4ab14856efb0ab558b0727ccfc28448c5779f1ab4d98cf3daf\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1869fc58cb27a7b680428b79d0e0b6f45bd3c61fedb4b3f895e143fb899519d5\",\"dweb:/ipfs/QmcjECGVpQPjhL2bokDyQeGWdzM99qPFMhq5r7KqKLot7R\"]},\"lib/forge-std/src/StdError.sol\":{\"keccak256\":\"0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6\",\"dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj\"]},\"lib/forge-std/src/StdInvariant.sol\":{\"keccak256\":\"0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477\",\"dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN\"]},\"lib/forge-std/src/StdJson.sol\":{\"keccak256\":\"0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c\",\"dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV\"]},\"lib/forge-std/src/StdMath.sol\":{\"keccak256\":\"0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92\",\"dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC\"]},\"lib/forge-std/src/StdStorage.sol\":{\"keccak256\":\"0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5\",\"dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9\"]},\"lib/forge-std/src/StdStyle.sol\":{\"keccak256\":\"0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985\",\"dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97\"]},\"lib/forge-std/src/StdUtils.sol\":{\"keccak256\":\"0x18ac6dcce9cdfe3bc754ce910b4b97e56963c49a92e50f57d055adb562416b86\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6b29b4a814dc26c3722e994a792f4cc1be86e6b8c2b2adc352ed54fb326593d\",\"dweb:/ipfs/Qma8a7XELNmUepiitaLyxJXW66urnXsvCwx1bMLmRw2Fpn\"]},\"lib/forge-std/src/Test.sol\":{\"keccak256\":\"0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf\",\"dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ\"]},\"lib/forge-std/src/Vm.sol\":{\"keccak256\":\"0xb5d4816a3f37977b1efa07b5e715daa917e96fd28dec1805c4189653db4ea33a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://34338fa7f079f8d64f20d976f9bf908a710c8728f18c4b361b020b24fedfedf2\",\"dweb:/ipfs/QmYhwY1wi6vVLMUsJ32L3GiSR9HRaFhGL1Y3wRDjy41KXn\"]},\"lib/forge-std/src/console.sol\":{\"keccak256\":\"0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70\",\"dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec\"]},\"lib/forge-std/src/console2.sol\":{\"keccak256\":\"0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973\",\"dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF\"]},\"lib/forge-std/src/interfaces/IMulticall3.sol\":{\"keccak256\":\"0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0\",\"dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2\"]},\"src/vendor/AddressAliasHelper.sol\":{\"keccak256\":\"0x6ecb83b4ec80fbe49c22f4f95d90482de64660ef5d422a19f4d4b04df31c1237\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1d0885be6e473962f9a0622176a22300165ac0cc1a1d7f2e22b11c3d656ace88\",\"dweb:/ipfs/QmPRa3KmRpXW5P9ykveKRDgYN5zYo4cYLAYSnoqHX3KnXR\"]},\"test/invariants/AddressAliasHelper.t.sol\":{\"keccak256\":\"0x855c4e7bf94fb373f6bc18ca7d0a63a1ab4b102fa17a67712f615f50190d350b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://157e603b916e387623dd1601218ca8a47ad94b96cf3fc0c277c5c2bc3fdad72f\",\"dweb:/ipfs/QmUZhRbU99yYiXDnBm9UkSrXRRLbhaJH4DAGtuX3u7FgbM\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "addr",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "convertRoundTrip"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "failedRoundtrip",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "convertRoundTrip(address)": {
            "details": "Allows the actor to convert L1 to L2 addresses and vice versa."
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {},
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@cwia/=lib/clones-with-immutable-args/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@rari-capital/solmate/=lib/solmate/",
        "clones-with-immutable-args/=lib/clones-with-immutable-args/src/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "safe-contracts/=lib/safe-contracts/contracts/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 999999
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "test/invariants/AddressAliasHelper.t.sol": "AddressAliasHelper_Converter"
      },
      "libraries": {}
    },
    "sources": {
      "lib/forge-std/lib/ds-test/src/test.sol": {
        "keccak256": "0x8758531bbac3972efcf1fa46383dbe1d276406fe527bc7abb2f236486278e83b",
        "urls": [
          "bzz-raw://1f64264d61506847acf8761e84aff690cebe830958eac00bac7924d8be569240",
          "dweb:/ipfs/QmSekDJvJ82MZAmr63n7YvfLzQ7gS4NLSHPmHL3GN3rw8k"
        ],
        "license": "GPL-3.0-or-later"
      },
      "lib/forge-std/src/Base.sol": {
        "keccak256": "0x4ff1a785311017d1eedb1b4737956fa383067ad34eb439abfec1d989754dde1c",
        "urls": [
          "bzz-raw://f553622969b9fdb930246704a4c10dfaee6b1a4468c142fa7eb9dc292a438224",
          "dweb:/ipfs/QmcxqHnqdQsMVtgsfH9VNLmZ3g7GhgNagfq7yvNCDcCHFK"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdAssertions.sol": {
        "keccak256": "0x1a0dee4d8b2c81e9318e87dd85ef009467ebf7dba6575530d1fce94d34dbae60",
        "urls": [
          "bzz-raw://ddd790c86ddde1013d1f7a552a80168eacf2e9244077f96799180644ad523a5b",
          "dweb:/ipfs/QmYinBFt9uEVFXP9ytT9CDoNpzWieQVgLWRFRNiypMzJaL"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdChains.sol": {
        "keccak256": "0x9100bd38453711d5f5ae32d16b4aacef8d4e26abb3061fcc9920cd30cdb49315",
        "urls": [
          "bzz-raw://114654e304083d3403510edd13d7df2223747337150ecf51dd36b441e50498f7",
          "dweb:/ipfs/QmQy6uvcVHyHzU2RbuvEo1hKiV7k81z21gR6DSj4DkCP8D"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdCheats.sol": {
        "keccak256": "0xb58d624eb0922d4ab14856efb0ab558b0727ccfc28448c5779f1ab4d98cf3daf",
        "urls": [
          "bzz-raw://1869fc58cb27a7b680428b79d0e0b6f45bd3c61fedb4b3f895e143fb899519d5",
          "dweb:/ipfs/QmcjECGVpQPjhL2bokDyQeGWdzM99qPFMhq5r7KqKLot7R"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdError.sol": {
        "keccak256": "0xbf477b11a42d7611696956546bcfaa29317d1166bf65e402344599c05943fc77",
        "urls": [
          "bzz-raw://bc2e117d1135e030862b96a6526a43feb38d396cc79857f1fb696d4eff0e5fd6",
          "dweb:/ipfs/QmdSuQ5RrQudTLsNmWXGEeVJX8gR5U9XPm6m4dwwuQnJrj"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdInvariant.sol": {
        "keccak256": "0xd855e1fea6247f1bef118e2bee9f0039832988b7173fd17766bba4014ae26a3c",
        "urls": [
          "bzz-raw://c58c0f0b66852dfd3c76fb7958d8b023489d7a874c7cb1ad4f2021f9ec8ab477",
          "dweb:/ipfs/Qmd3MX9HAkNUhPddL29ekwhqgRnjAobZ35UzchaJZNACCN"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdJson.sol": {
        "keccak256": "0x9e2a7521190c462a0667706385f1c52a816220a9813ca8ac520fba7ba45d660b",
        "urls": [
          "bzz-raw://7d23017fe6570b28130a731b86179352b93a5fb5af32f11559837afc1186293c",
          "dweb:/ipfs/QmR3p6zG5Kmcr8gKocFCSopLHfXv1AziPJbH17nKyMxwxV"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdMath.sol": {
        "keccak256": "0xd90ad4fd8aeaeb8929964e686e769fdedd5eded3fc3815df194a0ab9f91a3fb2",
        "urls": [
          "bzz-raw://7919b70f636c7b805223992f28ad1ad0145d6c1385b5931a3589aface5fe6c92",
          "dweb:/ipfs/QmY7FRaULwoGgFteF8GawjQJRfasNgpWnU2aiMsFrYpuTC"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStorage.sol": {
        "keccak256": "0xd1517df281f973dba8b7ba52c02d3df552b60d91b8f47e4669049da648778673",
        "urls": [
          "bzz-raw://52e43264f58a5dcfd985f3c99aa81064805aa8f1c2b4c6521fd63d45cdbba8d5",
          "dweb:/ipfs/QmUMTF6cRjt5tCQrrgQDXVRmHQLjevNsTvLFdaA1m9TBj9"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdStyle.sol": {
        "keccak256": "0x2882555b0f58e48144e46e9aa5118a506b31ad7485327d54e8f681e8b414c337",
        "urls": [
          "bzz-raw://2850bcb1322de9d9dd87ded42debbe0e8fc4048173788d4c00c98b50e5f76985",
          "dweb:/ipfs/QmUiPKnj7GZLLQbJGY7bVDu79Q9jGEYNjR5ZBgwFy8mH97"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/StdUtils.sol": {
        "keccak256": "0x18ac6dcce9cdfe3bc754ce910b4b97e56963c49a92e50f57d055adb562416b86",
        "urls": [
          "bzz-raw://d6b29b4a814dc26c3722e994a792f4cc1be86e6b8c2b2adc352ed54fb326593d",
          "dweb:/ipfs/Qma8a7XELNmUepiitaLyxJXW66urnXsvCwx1bMLmRw2Fpn"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Test.sol": {
        "keccak256": "0xddf16afce2bb7bbb69ed868d4c7ee8b4ea4ffbf8929427fe799682f107534945",
        "urls": [
          "bzz-raw://52f6ebde2a4cb9d08aea5fb3d62b2f15961bb9a29d6d9e30dd0859d0d631cabf",
          "dweb:/ipfs/QmeJ9Dp1GYUggzjGiwTZkxCfB15NfyfgcyrNZL5tyWZbVZ"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/Vm.sol": {
        "keccak256": "0xb5d4816a3f37977b1efa07b5e715daa917e96fd28dec1805c4189653db4ea33a",
        "urls": [
          "bzz-raw://34338fa7f079f8d64f20d976f9bf908a710c8728f18c4b361b020b24fedfedf2",
          "dweb:/ipfs/QmYhwY1wi6vVLMUsJ32L3GiSR9HRaFhGL1Y3wRDjy41KXn"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console.sol": {
        "keccak256": "0x91d5413c2434ca58fd278b6e1e79fd98d10c83931cc2596a6038eee4daeb34ba",
        "urls": [
          "bzz-raw://91ccea707361e48b9b7a161fe81f496b9932bc471e9c4e4e1e9c283f2453cc70",
          "dweb:/ipfs/QmcB66sZhQ6Kz7MUHcLE78YXRUZxoZnnxZjN6yATsbB2ec"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/console2.sol": {
        "keccak256": "0x954646445d1014c3cd85c7918f5e7adeeca5ee44b68c00bafa237e597a4e35ea",
        "urls": [
          "bzz-raw://516fa3be52da4763147175bfba4be0aa011fadbb0c1afb01f97265bd4cee7973",
          "dweb:/ipfs/QmdixAyMJefx7qePChgdxcBH5MxhmN7vsqPuPLx3CgrVmF"
        ],
        "license": "MIT"
      },
      "lib/forge-std/src/interfaces/IMulticall3.sol": {
        "keccak256": "0x7aac1389150499a922d1f9ef5749c908cef127cb2075b92fa17e9cb611263d0a",
        "urls": [
          "bzz-raw://d95ebb7c7c463e08ebc12dab639945752fb2480acfc6e86da32f72732a7fd0c0",
          "dweb:/ipfs/QmNXK8P8oPWwajsQHvAHw3JPyQidPLCGQN3hWu1Lk6PBL2"
        ],
        "license": "MIT"
      },
      "src/vendor/AddressAliasHelper.sol": {
        "keccak256": "0x6ecb83b4ec80fbe49c22f4f95d90482de64660ef5d422a19f4d4b04df31c1237",
        "urls": [
          "bzz-raw://1d0885be6e473962f9a0622176a22300165ac0cc1a1d7f2e22b11c3d656ace88",
          "dweb:/ipfs/QmPRa3KmRpXW5P9ykveKRDgYN5zYo4cYLAYSnoqHX3KnXR"
        ],
        "license": "Apache-2.0"
      },
      "test/invariants/AddressAliasHelper.t.sol": {
        "keccak256": "0x855c4e7bf94fb373f6bc18ca7d0a63a1ab4b102fa17a67712f615f50190d350b",
        "urls": [
          "bzz-raw://157e603b916e387623dd1601218ca8a47ad94b96cf3fc0c277c5c2bc3fdad72f",
          "dweb:/ipfs/QmUZhRbU99yYiXDnBm9UkSrXRRLbhaJH4DAGtuX3u7FgbM"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 150704,
        "contract": "test/invariants/AddressAliasHelper.t.sol:AddressAliasHelper_Converter",
        "label": "failedRoundtrip",
        "offset": 0,
        "slot": "0",
        "type": "t_bool"
      }
    ],
    "types": {
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      }
    }
  },
  "userdoc": {
    "version": 1,
    "kind": "user"
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "methods": {
      "convertRoundTrip(address)": {
        "details": "Allows the actor to convert L1 to L2 addresses and vice versa."
      }
    }
  },
  "ast": {
    "absolutePath": "test/invariants/AddressAliasHelper.t.sol",
    "id": 150808,
    "exportedSymbols": {
      "AddressAliasHelper": [
        85856
      ],
      "AddressAliasHelper_AddressAliasing_Invariant": [
        150807
      ],
      "AddressAliasHelper_Converter": [
        150735
      ],
      "StdInvariant": [
        7248
      ],
      "Test": [
        11539
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:1828:309",
    "nodes": [
      {
        "id": 150696,
        "nodeType": "PragmaDirective",
        "src": "32:23:309",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 150698,
        "nodeType": "ImportDirective",
        "src": "57:42:309",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/Test.sol",
        "file": "forge-std/Test.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 150808,
        "sourceUnit": 11540,
        "symbolAliases": [
          {
            "foreign": {
              "id": 150697,
              "name": "Test",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 11539,
              "src": "66:4:309",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 150700,
        "nodeType": "ImportDirective",
        "src": "100:58:309",
        "nodes": [],
        "absolutePath": "lib/forge-std/src/StdInvariant.sol",
        "file": "forge-std/StdInvariant.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 150808,
        "sourceUnit": 7249,
        "symbolAliases": [
          {
            "foreign": {
              "id": 150699,
              "name": "StdInvariant",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 7248,
              "src": "109:12:309",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 150702,
        "nodeType": "ImportDirective",
        "src": "159:71:309",
        "nodes": [],
        "absolutePath": "src/vendor/AddressAliasHelper.sol",
        "file": "src/vendor/AddressAliasHelper.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 150808,
        "sourceUnit": 85857,
        "symbolAliases": [
          {
            "foreign": {
              "id": 150701,
              "name": "AddressAliasHelper",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 85856,
              "src": "168:18:309",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 150735,
        "nodeType": "ContractDefinition",
        "src": "232:604:309",
        "nodes": [
          {
            "id": 150704,
            "nodeType": "VariableDeclaration",
            "src": "276:27:309",
            "nodes": [],
            "constant": false,
            "functionSelector": "51188e58",
            "mutability": "mutable",
            "name": "failedRoundtrip",
            "nameLocation": "288:15:309",
            "scope": 150735,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 150703,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "276:4:309",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "public"
          },
          {
            "id": 150734,
            "nodeType": "FunctionDefinition",
            "src": "386:448:309",
            "nodes": [],
            "body": {
              "id": 150733,
              "nodeType": "Block",
              "src": "435:399:309",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    150711
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 150711,
                      "mutability": "mutable",
                      "name": "aliasedAddr",
                      "nameLocation": "482:11:309",
                      "nodeType": "VariableDeclaration",
                      "scope": 150733,
                      "src": "474:19:309",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 150710,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "474:7:309",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 150716,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 150714,
                        "name": "addr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 150707,
                        "src": "532:4:309",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 150712,
                        "name": "AddressAliasHelper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85856,
                        "src": "496:18:309",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AddressAliasHelper_$85856_$",
                          "typeString": "type(library AddressAliasHelper)"
                        }
                      },
                      "id": 150713,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "applyL1ToL2Alias",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 85833,
                      "src": "496:35:309",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_address_$",
                        "typeString": "function (address) pure returns (address)"
                      }
                    },
                    "id": 150715,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "496:41:309",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "474:63:309"
                },
                {
                  "assignments": [
                    150718
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 150718,
                      "mutability": "mutable",
                      "name": "undoneAliasAddr",
                      "nameLocation": "587:15:309",
                      "nodeType": "VariableDeclaration",
                      "scope": 150733,
                      "src": "579:23:309",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 150717,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "579:7:309",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 150723,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 150721,
                        "name": "aliasedAddr",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 150711,
                        "src": "640:11:309",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 150719,
                        "name": "AddressAliasHelper",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 85856,
                        "src": "605:18:309",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_AddressAliasHelper_$85856_$",
                          "typeString": "type(library AddressAliasHelper)"
                        }
                      },
                      "id": 150720,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "undoL1ToL2Alias",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 85855,
                      "src": "605:34:309",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_address_$returns$_t_address_$",
                        "typeString": "function (address) pure returns (address)"
                      }
                    },
                    "id": 150722,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "605:47:309",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "579:73:309"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 150726,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 150724,
                      "name": "addr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 150707,
                      "src": "756:4:309",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 150725,
                      "name": "undoneAliasAddr",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 150718,
                      "src": "764:15:309",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "756:23:309",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 150732,
                  "nodeType": "IfStatement",
                  "src": "752:76:309",
                  "trueBody": {
                    "id": 150731,
                    "nodeType": "Block",
                    "src": "781:47:309",
                    "statements": [
                      {
                        "expression": {
                          "id": 150729,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 150727,
                            "name": "failedRoundtrip",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 150704,
                            "src": "795:15:309",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "hexValue": "74727565",
                            "id": 150728,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "bool",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "813:4:309",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            },
                            "value": "true"
                          },
                          "src": "795:22:309",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 150730,
                        "nodeType": "ExpressionStatement",
                        "src": "795:22:309"
                      }
                    ]
                  }
                }
              ]
            },
            "documentation": {
              "id": 150705,
              "nodeType": "StructuredDocumentation",
              "src": "310:71:309",
              "text": "@dev Allows the actor to convert L1 to L2 addresses and vice versa."
            },
            "functionSelector": "c009306d",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "convertRoundTrip",
            "nameLocation": "395:16:309",
            "parameters": {
              "id": 150708,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 150707,
                  "mutability": "mutable",
                  "name": "addr",
                  "nameLocation": "420:4:309",
                  "nodeType": "VariableDeclaration",
                  "scope": 150734,
                  "src": "412:12:309",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 150706,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "412:7:309",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "411:14:309"
            },
            "returnParameters": {
              "id": 150709,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "435:0:309"
            },
            "scope": 150735,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "AddressAliasHelper_Converter",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          150735
        ],
        "name": "AddressAliasHelper_Converter",
        "nameLocation": "241:28:309",
        "scope": 150808,
        "usedErrors": []
      },
      {
        "id": 150807,
        "nodeType": "ContractDefinition",
        "src": "838:1021:309",
        "nodes": [
          {
            "id": 150742,
            "nodeType": "VariableDeclaration",
            "src": "920:43:309",
            "nodes": [],
            "constant": false,
            "mutability": "mutable",
            "name": "actor",
            "nameLocation": "958:5:309",
            "scope": 150807,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_AddressAliasHelper_Converter_$150735",
              "typeString": "contract AddressAliasHelper_Converter"
            },
            "typeName": {
              "id": 150741,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 150740,
                "name": "AddressAliasHelper_Converter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 150735,
                "src": "920:28:309"
              },
              "referencedDeclaration": 150735,
              "src": "920:28:309",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_AddressAliasHelper_Converter_$150735",
                "typeString": "contract AddressAliasHelper_Converter"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 150794,
            "nodeType": "FunctionDefinition",
            "src": "970:406:309",
            "nodes": [],
            "body": {
              "id": 150793,
              "nodeType": "Block",
              "src": "994:382:309",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 150750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 150745,
                      "name": "actor",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 150742,
                      "src": "1041:5:309",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AddressAliasHelper_Converter_$150735",
                        "typeString": "contract AddressAliasHelper_Converter"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 150748,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "NewExpression",
                        "src": "1049:32:309",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_creation_nonpayable$__$returns$_t_contract$_AddressAliasHelper_Converter_$150735_$",
                          "typeString": "function () returns (contract AddressAliasHelper_Converter)"
                        },
                        "typeName": {
                          "id": 150747,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 150746,
                            "name": "AddressAliasHelper_Converter",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 150735,
                            "src": "1053:28:309"
                          },
                          "referencedDeclaration": 150735,
                          "src": "1053:28:309",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AddressAliasHelper_Converter_$150735",
                            "typeString": "contract AddressAliasHelper_Converter"
                          }
                        }
                      },
                      "id": 150749,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1049:34:309",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_AddressAliasHelper_Converter_$150735",
                        "typeString": "contract AddressAliasHelper_Converter"
                      }
                    },
                    "src": "1041:42:309",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_AddressAliasHelper_Converter_$150735",
                      "typeString": "contract AddressAliasHelper_Converter"
                    }
                  },
                  "id": 150751,
                  "nodeType": "ExpressionStatement",
                  "src": "1041:42:309"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 150755,
                            "name": "actor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 150742,
                            "src": "1117:5:309",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AddressAliasHelper_Converter_$150735",
                              "typeString": "contract AddressAliasHelper_Converter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AddressAliasHelper_Converter_$150735",
                              "typeString": "contract AddressAliasHelper_Converter"
                            }
                          ],
                          "id": 150754,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1109:7:309",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 150753,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1109:7:309",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 150756,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1109:14:309",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 150752,
                      "name": "targetContract",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7132,
                      "src": "1094:14:309",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 150757,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1094:30:309",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 150758,
                  "nodeType": "ExpressionStatement",
                  "src": "1094:30:309"
                },
                {
                  "assignments": [
                    150763
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 150763,
                      "mutability": "mutable",
                      "name": "selectors",
                      "nameLocation": "1151:9:309",
                      "nodeType": "VariableDeclaration",
                      "scope": 150793,
                      "src": "1135:25:309",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                        "typeString": "bytes4[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 150761,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "1135:6:309",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 150762,
                        "nodeType": "ArrayTypeName",
                        "src": "1135:8:309",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
                          "typeString": "bytes4[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 150769,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 150767,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1176:1:309",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 150766,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "1163:12:309",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_bytes4_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (bytes4[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 150764,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "1167:6:309",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes4",
                            "typeString": "bytes4"
                          }
                        },
                        "id": 150765,
                        "nodeType": "ArrayTypeName",
                        "src": "1167:8:309",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_storage_ptr",
                          "typeString": "bytes4[]"
                        }
                      }
                    },
                    "id": 150768,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1163:15:309",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                      "typeString": "bytes4[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1135:43:309"
                },
                {
                  "expression": {
                    "id": 150776,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 150770,
                        "name": "selectors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 150763,
                        "src": "1188:9:309",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[] memory"
                        }
                      },
                      "id": 150772,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 150771,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1198:1:309",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1188:12:309",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "expression": {
                          "id": 150773,
                          "name": "actor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 150742,
                          "src": "1203:5:309",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_AddressAliasHelper_Converter_$150735",
                            "typeString": "contract AddressAliasHelper_Converter"
                          }
                        },
                        "id": 150774,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "convertRoundTrip",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 150734,
                        "src": "1203:22:309",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                          "typeString": "function (address) external"
                        }
                      },
                      "id": 150775,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "src": "1203:31:309",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "src": "1188:46:309",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "id": 150777,
                  "nodeType": "ExpressionStatement",
                  "src": "1188:46:309"
                },
                {
                  "assignments": [
                    150780
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 150780,
                      "mutability": "mutable",
                      "name": "selector",
                      "nameLocation": "1264:8:309",
                      "nodeType": "VariableDeclaration",
                      "scope": 150793,
                      "src": "1244:28:309",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_FuzzSelector_$7033_memory_ptr",
                        "typeString": "struct StdInvariant.FuzzSelector"
                      },
                      "typeName": {
                        "id": 150779,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 150778,
                          "name": "FuzzSelector",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 7033,
                          "src": "1244:12:309"
                        },
                        "referencedDeclaration": 7033,
                        "src": "1244:12:309",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FuzzSelector_$7033_storage_ptr",
                          "typeString": "struct StdInvariant.FuzzSelector"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 150788,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 150784,
                            "name": "actor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 150742,
                            "src": "1304:5:309",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AddressAliasHelper_Converter_$150735",
                              "typeString": "contract AddressAliasHelper_Converter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_AddressAliasHelper_Converter_$150735",
                              "typeString": "contract AddressAliasHelper_Converter"
                            }
                          ],
                          "id": 150783,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "1296:7:309",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 150782,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "1296:7:309",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 150785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1296:14:309",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 150786,
                        "name": "selectors",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 150763,
                        "src": "1323:9:309",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_bytes4_$dyn_memory_ptr",
                          "typeString": "bytes4[] memory"
                        }
                      ],
                      "id": 150781,
                      "name": "FuzzSelector",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7033,
                      "src": "1275:12:309",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_FuzzSelector_$7033_storage_ptr_$",
                        "typeString": "type(struct StdInvariant.FuzzSelector storage pointer)"
                      }
                    },
                    "id": 150787,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [
                      "addr",
                      "selectors"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "1275:60:309",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_FuzzSelector_$7033_memory_ptr",
                      "typeString": "struct StdInvariant.FuzzSelector memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1244:91:309"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 150790,
                        "name": "selector",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 150780,
                        "src": "1360:8:309",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_FuzzSelector_$7033_memory_ptr",
                          "typeString": "struct StdInvariant.FuzzSelector memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_FuzzSelector_$7033_memory_ptr",
                          "typeString": "struct StdInvariant.FuzzSelector memory"
                        }
                      ],
                      "id": 150789,
                      "name": "targetSelector",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7145,
                      "src": "1345:14:309",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_FuzzSelector_$7033_memory_ptr_$returns$__$",
                        "typeString": "function (struct StdInvariant.FuzzSelector memory)"
                      }
                    },
                    "id": 150791,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1345:24:309",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 150792,
                  "nodeType": "ExpressionStatement",
                  "src": "1345:24:309"
                }
              ]
            },
            "functionSelector": "0a9254e4",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "setUp",
            "nameLocation": "979:5:309",
            "parameters": {
              "id": 150743,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "984:2:309"
            },
            "returnParameters": {
              "id": 150744,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "994:0:309"
            },
            "scope": 150807,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 150806,
            "nodeType": "FunctionDefinition",
            "src": "1658:199:309",
            "nodes": [],
            "body": {
              "id": 150805,
              "nodeType": "Block",
              "src": "1708:149:309",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "expression": {
                            "id": 150799,
                            "name": "actor",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 150742,
                            "src": "1819:5:309",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_AddressAliasHelper_Converter_$150735",
                              "typeString": "contract AddressAliasHelper_Converter"
                            }
                          },
                          "id": 150800,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "failedRoundtrip",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 150704,
                          "src": "1819:21:309",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$__$returns$_t_bool_$",
                            "typeString": "function () view external returns (bool)"
                          }
                        },
                        "id": 150801,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "1819:23:309",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "66616c7365",
                        "id": 150802,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "bool",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1844:5:309",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "value": "false"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 150798,
                      "name": "assertEq",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        2553,
                        2578,
                        2591,
                        2607,
                        2649,
                        2691,
                        2733,
                        2770,
                        2807,
                        2844,
                        351,
                        376,
                        406,
                        431,
                        490,
                        515,
                        545,
                        570,
                        2043,
                        2078
                      ],
                      "referencedDeclaration": 2553,
                      "src": "1810:8:309",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bool_$_t_bool_$returns$__$",
                        "typeString": "function (bool,bool)"
                      }
                    },
                    "id": 150803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1810:40:309",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 150804,
                  "nodeType": "ExpressionStatement",
                  "src": "1810:40:309"
                }
              ]
            },
            "documentation": {
              "id": 150795,
              "nodeType": "StructuredDocumentation",
              "src": "1382:271:309",
              "text": "@custom:invariant Address aliases are always able to be undone.\n                   Asserts that an address that has been aliased with\n                   `applyL1ToL2Alias` can always be unaliased with\n                   `undoL1ToL2Alias`."
            },
            "functionSelector": "0e80eba6",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "invariant_round_trip_aliasing",
            "nameLocation": "1667:29:309",
            "parameters": {
              "id": 150796,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1696:2:309"
            },
            "returnParameters": {
              "id": 150797,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1708:0:309"
            },
            "scope": 150807,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 150736,
              "name": "StdInvariant",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 7248,
              "src": "895:12:309"
            },
            "id": 150737,
            "nodeType": "InheritanceSpecifier",
            "src": "895:12:309"
          },
          {
            "baseName": {
              "id": 150738,
              "name": "Test",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11539,
              "src": "909:4:309"
            },
            "id": 150739,
            "nodeType": "InheritanceSpecifier",
            "src": "909:4:309"
          }
        ],
        "canonicalName": "AddressAliasHelper_AddressAliasing_Invariant",
        "contractDependencies": [
          150735
        ],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          150807,
          11539,
          2388,
          2385,
          11490,
          7248,
          6958,
          6279,
          4546,
          3852,
          2322
        ],
        "name": "AddressAliasHelper_AddressAliasing_Invariant",
        "nameLocation": "847:44:309",
        "scope": 150808,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 309
}