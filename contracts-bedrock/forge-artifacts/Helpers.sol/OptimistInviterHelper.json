{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract OptimistInviter",
          "name": "_optimistInviter",
          "type": "address"
        },
        {
          "internalType": "string",
          "name": "_name",
          "type": "string"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "CLAIMABLE_INVITE_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "EIP712_DOMAIN_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "consumeNonce",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "currentNonce",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "issuer",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "nonce",
              "type": "bytes32"
            }
          ],
          "internalType": "struct OptimistInviter.ClaimableInvite",
          "name": "_claimableInvite",
          "type": "tuple"
        }
      ],
      "name": "getClaimableInviteStructHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_issuer",
          "type": "address"
        }
      ],
      "name": "getClaimableInviteWithNewNonce",
      "outputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "issuer",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "nonce",
              "type": "bytes32"
            }
          ],
          "internalType": "struct OptimistInviter.ClaimableInvite",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "issuer",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "nonce",
              "type": "bytes32"
            }
          ],
          "internalType": "struct OptimistInviter.ClaimableInvite",
          "name": "_claimableInvite",
          "type": "tuple"
        }
      ],
      "name": "getDigest",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "issuer",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "nonce",
              "type": "bytes32"
            }
          ],
          "internalType": "struct OptimistInviter.ClaimableInvite",
          "name": "_claimableInvite",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "_name",
          "type": "bytes"
        },
        {
          "internalType": "bytes",
          "name": "_version",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "_chainid",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "_verifyingContract",
          "type": "address"
        }
      ],
      "name": "getDigestWithEIP712Domain",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "optimistInviter",
      "outputs": [
        {
          "internalType": "contract OptimistInviter",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60806040523480156200001157600080fd5b5060405162000d3138038062000d3183398101604081905262000034916200007c565b600080546001600160a01b0319166001600160a01b03841617905560016200005d82826200020b565b505050620002d7565b634e487b7160e01b600052604160045260246000fd5b600080604083850312156200009057600080fd5b82516001600160a01b0381168114620000a857600080fd5b602084810151919350906001600160401b0380821115620000c857600080fd5b818601915086601f830112620000dd57600080fd5b815181811115620000f257620000f262000066565b604051601f8201601f19908116603f011681019083821181831017156200011d576200011d62000066565b8160405282815289868487010111156200013657600080fd5b600093505b828410156200015a57848401860151818501870152928501926200013b565b828411156200016c5760008684830101525b8096505050505050509250929050565b600181811c908216806200019157607f821691505b602082108103620001b257634e487b7160e01b600052602260045260246000fd5b50919050565b601f8211156200020657600081815260208120601f850160051c81016020861015620001e15750805b601f850160051c820191505b818110156200020257828155600101620001ed565b5050505b505050565b81516001600160401b0381111562000227576200022762000066565b6200023f816200023884546200017c565b84620001b8565b602080601f8311600181146200027757600084156200025e5750858301515b600019600386901b1c1916600185901b17855562000202565b600085815260208120601f198616915b82811015620002a85788860151825594840194600190910190840162000287565b5085821015620002c75787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b610a4a80620002e76000396000f3fe608060405234801561001057600080fd5b50600436106100be5760003560e01c8063adb610a311610076578063c7977be71161005b578063c7977be71461018d578063d1829907146101b4578063eb1df626146101f957600080fd5b8063adb610a31461015d578063c4fc453d1461016657600080fd5b80631c6e7f25116100a75780631c6e7f25146100fe57806334b15118146101115780638ebe24e51461011957600080fd5b8063019a4f49146100c357806306fdde03146100e9575b600080fd5b6100d66100d1366004610774565b61020c565b6040519081526020015b60405180910390f35b6100f1610315565b6040516100e09190610834565b6100d661010c366004610885565b6103a3565b6100d661050c565b61012c6101273660046108a8565b61054e565b60408051825173ffffffffffffffffffffffffffffffffffffffff16815260209283015192810192909252016100e0565b6100d660025481565b6100d67f6529fd129351e725d7bcbc468b0b0b4675477e56b58514e69ab7e66ddfd20fce81565b6100d67f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81565b6000546101d49073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100e0565b6100d66102073660046108c3565b610599565b8351602080860191909120845185830120604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f9481019490945283019190915260608201526080810183905273ffffffffffffffffffffffffffffffffffffffff821660a0820152600090819060c00160405160208183030381529060405280519060200120905061030a816102af8980360381019061020791906108c3565b6040517f19010000000000000000000000000000000000000000000000000000000000006020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b979650505050505050565b600180546103229061091a565b80601f016020809104026020016040519081016040528092919081815260200182805461034e9061091a565b801561039b5780601f106103705761010080835404028352916020019161039b565b820191906000526020600020905b81548152906001019060200180831161037e57829003601f168201915b505050505081565b600061050682600180546103b69061091a565b80601f01602080910402602001604051908101604052809291908181526020018280546103e29061091a565b801561042f5780601f106104045761010080835404028352916020019161042f565b820191906000526020600020905b81548152906001019060200180831161041257829003601f168201915b505060008054604080517feccec5a8000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff909216955063eccec5a8945060048082019450908290030181865afa1580156104a0573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526104e69190810190610967565b600054469073ffffffffffffffffffffffffffffffffffffffff1661020c565b92915050565b600280546000918261051d836109de565b9190505560405160200161053391815260200190565b60405160208183030381529060405280519060200120905090565b604080518082019091526000808252602082015260405180604001604052808373ffffffffffffffffffffffffffffffffffffffff16815260200161059161050c565b905292915050565b80516020808301516040516000936105fc937f6529fd129351e725d7bcbc468b0b0b4675477e56b58514e69ab7e66ddfd20fce9391920192835273ffffffffffffffffffffffffffffffffffffffff919091166020830152604082015260600190565b604051602081830303815290604052805190602001209050919050565b60006040828403121561062b57600080fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156106a7576106a7610631565b604052919050565b600067ffffffffffffffff8211156106c9576106c9610631565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f83011261070657600080fd5b8135610719610714826106af565b610660565b81815284602083860101111561072e57600080fd5b816020850160208301376000918101602001919091529392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461076f57600080fd5b919050565b600080600080600060c0868803121561078c57600080fd5b6107968787610619565b9450604086013567ffffffffffffffff808211156107b357600080fd5b6107bf89838a016106f5565b955060608801359150808211156107d557600080fd5b506107e2888289016106f5565b935050608086013591506107f860a0870161074b565b90509295509295909350565b60005b8381101561081f578181015183820152602001610807565b8381111561082e576000848401525b50505050565b6020815260008251806020840152610853816040850160208701610804565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b60006040828403121561089757600080fd5b6108a18383610619565b9392505050565b6000602082840312156108ba57600080fd5b6108a18261074b565b6000604082840312156108d557600080fd5b6040516040810181811067ffffffffffffffff821117156108f8576108f8610631565b6040526109048361074b565b8152602083013560208201528091505092915050565b600181811c9082168061092e57607f821691505b60208210810361062b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006020828403121561097957600080fd5b815167ffffffffffffffff81111561099057600080fd5b8201601f810184136109a157600080fd5b80516109af610714826106af565b8181528560208385010111156109c457600080fd5b6109d5826020830160208601610804565b95945050505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a36577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea164736f6c634300080f000a",
    "sourceMap": "2089:3808:245:-:0;;;2907:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;2984:15;:34;;-1:-1:-1;;;;;;2984:34:245;-1:-1:-1;;;;;2984:34:245;;;;;-1:-1:-1;3028:12:245;3035:5;-1:-1:-1;3028:12:245;:::i;:::-;;2907:140;;2089:3808;;14:127:302;75:10;70:3;66:20;63:1;56:31;106:4;103:1;96:15;130:4;127:1;120:15;146:1279;260:6;268;321:2;309:9;300:7;296:23;292:32;289:52;;;337:1;334;327:12;289:52;363:16;;-1:-1:-1;;;;;408:31:302;;398:42;;388:70;;454:1;451;444:12;388:70;501:2;532:18;;;526:25;477:5;;-1:-1:-1;501:2:302;-1:-1:-1;;;;;600:14:302;;;597:34;;;627:1;624;617:12;597:34;665:6;654:9;650:22;640:32;;710:7;703:4;699:2;695:13;691:27;681:55;;732:1;729;722:12;681:55;761:2;755:9;783:2;779;776:10;773:36;;;789:18;;:::i;:::-;864:2;858:9;832:2;918:13;;-1:-1:-1;;914:22:302;;;938:2;910:31;906:40;894:53;;;962:18;;;982:22;;;959:46;956:72;;;1008:18;;:::i;:::-;1048:10;1044:2;1037:22;1083:2;1075:6;1068:18;1123:7;1118:2;1113;1109;1105:11;1101:20;1098:33;1095:53;;;1144:1;1141;1134:12;1095:53;1166:1;1157:10;;1176:129;1190:2;1187:1;1184:9;1176:129;;;1278:10;;;1274:19;;1268:26;1247:14;;;1243:23;;1236:59;1201:10;;;;1176:129;;;1323:2;1320:1;1317:9;1314:80;;;1382:1;1377:2;1372;1364:6;1360:15;1356:24;1349:35;1314:80;1413:6;1403:16;;;;;;;;146:1279;;;;;:::o;1430:380::-;1509:1;1505:12;;;;1552;;;1573:61;;1627:4;1619:6;1615:17;1605:27;;1573:61;1680:2;1672:6;1669:14;1649:18;1646:38;1643:161;;1726:10;1721:3;1717:20;1714:1;1707:31;1761:4;1758:1;1751:15;1789:4;1786:1;1779:15;1643:161;;1430:380;;;:::o;1941:545::-;2043:2;2038:3;2035:11;2032:448;;;2079:1;2104:5;2100:2;2093:17;2149:4;2145:2;2135:19;2219:2;2207:10;2203:19;2200:1;2196:27;2190:4;2186:38;2255:4;2243:10;2240:20;2237:47;;;-1:-1:-1;2278:4:302;2237:47;2333:2;2328:3;2324:12;2321:1;2317:20;2311:4;2307:31;2297:41;;2388:82;2406:2;2399:5;2396:13;2388:82;;;2451:17;;;2432:1;2421:13;2388:82;;;2392:3;;;2032:448;1941:545;;;:::o;2662:1352::-;2782:10;;-1:-1:-1;;;;;2804:30:302;;2801:56;;;2837:18;;:::i;:::-;2866:97;2956:6;2916:38;2948:4;2942:11;2916:38;:::i;:::-;2910:4;2866:97;:::i;:::-;3018:4;;3082:2;3071:14;;3099:1;3094:663;;;;3801:1;3818:6;3815:89;;;-1:-1:-1;3870:19:302;;;3864:26;3815:89;-1:-1:-1;;2619:1:302;2615:11;;;2611:24;2607:29;2597:40;2643:1;2639:11;;;2594:57;3917:81;;3064:944;;3094:663;1888:1;1881:14;;;1925:4;1912:18;;-1:-1:-1;;3130:20:302;;;3248:236;3262:7;3259:1;3256:14;3248:236;;;3351:19;;;3345:26;3330:42;;3443:27;;;;3411:1;3399:14;;;;3278:19;;3248:236;;;3252:3;3512:6;3503:7;3500:19;3497:201;;;3573:19;;;3567:26;-1:-1:-1;;3656:1:302;3652:14;;;3668:3;3648:24;3644:37;3640:42;3625:58;3610:74;;3497:201;-1:-1:-1;;;;;3744:1:302;3728:14;;;3724:22;3711:36;;-1:-1:-1;2662:1352:302:o;:::-;2089:3808:245;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106100be5760003560e01c8063adb610a311610076578063c7977be71161005b578063c7977be71461018d578063d1829907146101b4578063eb1df626146101f957600080fd5b8063adb610a31461015d578063c4fc453d1461016657600080fd5b80631c6e7f25116100a75780631c6e7f25146100fe57806334b15118146101115780638ebe24e51461011957600080fd5b8063019a4f49146100c357806306fdde03146100e9575b600080fd5b6100d66100d1366004610774565b61020c565b6040519081526020015b60405180910390f35b6100f1610315565b6040516100e09190610834565b6100d661010c366004610885565b6103a3565b6100d661050c565b61012c6101273660046108a8565b61054e565b60408051825173ffffffffffffffffffffffffffffffffffffffff16815260209283015192810192909252016100e0565b6100d660025481565b6100d67f6529fd129351e725d7bcbc468b0b0b4675477e56b58514e69ab7e66ddfd20fce81565b6100d67f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f81565b6000546101d49073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100e0565b6100d66102073660046108c3565b610599565b8351602080860191909120845185830120604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f9481019490945283019190915260608201526080810183905273ffffffffffffffffffffffffffffffffffffffff821660a0820152600090819060c00160405160208183030381529060405280519060200120905061030a816102af8980360381019061020791906108c3565b6040517f19010000000000000000000000000000000000000000000000000000000000006020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b979650505050505050565b600180546103229061091a565b80601f016020809104026020016040519081016040528092919081815260200182805461034e9061091a565b801561039b5780601f106103705761010080835404028352916020019161039b565b820191906000526020600020905b81548152906001019060200180831161037e57829003601f168201915b505050505081565b600061050682600180546103b69061091a565b80601f01602080910402602001604051908101604052809291908181526020018280546103e29061091a565b801561042f5780601f106104045761010080835404028352916020019161042f565b820191906000526020600020905b81548152906001019060200180831161041257829003601f168201915b505060008054604080517feccec5a8000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff909216955063eccec5a8945060048082019450908290030181865afa1580156104a0573d6000803e3d6000fd5b505050506040513d6000823e601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01682016040526104e69190810190610967565b600054469073ffffffffffffffffffffffffffffffffffffffff1661020c565b92915050565b600280546000918261051d836109de565b9190505560405160200161053391815260200190565b60405160208183030381529060405280519060200120905090565b604080518082019091526000808252602082015260405180604001604052808373ffffffffffffffffffffffffffffffffffffffff16815260200161059161050c565b905292915050565b80516020808301516040516000936105fc937f6529fd129351e725d7bcbc468b0b0b4675477e56b58514e69ab7e66ddfd20fce9391920192835273ffffffffffffffffffffffffffffffffffffffff919091166020830152604082015260600190565b604051602081830303815290604052805190602001209050919050565b60006040828403121561062b57600080fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156106a7576106a7610631565b604052919050565b600067ffffffffffffffff8211156106c9576106c9610631565b50601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe01660200190565b600082601f83011261070657600080fd5b8135610719610714826106af565b610660565b81815284602083860101111561072e57600080fd5b816020850160208301376000918101602001919091529392505050565b803573ffffffffffffffffffffffffffffffffffffffff8116811461076f57600080fd5b919050565b600080600080600060c0868803121561078c57600080fd5b6107968787610619565b9450604086013567ffffffffffffffff808211156107b357600080fd5b6107bf89838a016106f5565b955060608801359150808211156107d557600080fd5b506107e2888289016106f5565b935050608086013591506107f860a0870161074b565b90509295509295909350565b60005b8381101561081f578181015183820152602001610807565b8381111561082e576000848401525b50505050565b6020815260008251806020840152610853816040850160208701610804565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169190910160400192915050565b60006040828403121561089757600080fd5b6108a18383610619565b9392505050565b6000602082840312156108ba57600080fd5b6108a18261074b565b6000604082840312156108d557600080fd5b6040516040810181811067ffffffffffffffff821117156108f8576108f8610631565b6040526109048361074b565b8152602083013560208201528091505092915050565b600181811c9082168061092e57607f821691505b60208210810361062b577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006020828403121561097957600080fd5b815167ffffffffffffffff81111561099057600080fd5b8201601f810184136109a157600080fd5b80516109af610714826106af565b8181528560208385010111156109c457600080fd5b6109d5826020830160208601610804565b95945050505050565b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff8203610a36577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b506001019056fea164736f6c634300080f000a",
    "sourceMap": "2089:3808:245:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5326:569;;;;;;:::i;:::-;;:::i;:::-;;;2606:25:302;;;2594:2;2579:18;5326:569:245;;;;;;;;2763:18;;;:::i;:::-;;;;;;;:::i;4422:340::-;;;;;;:::i;:::-;;:::i;3712:119::-;;;:::i;4040:193::-;;;;;;:::i;:::-;;:::i;:::-;;;;4039:13:302;;4054:42;4035:62;4017:81;;4154:4;4142:17;;;4136:24;4114:20;;;4107:54;;;;3990:18;4040:193:245;3803:364:302;2873:27:245;;;;;;2188:110;;2240:58;2188:110;;2406:152;;2463:95;2406:152;;2633:38;;;;;;;;;;;;4555:42:302;4543:55;;;4525:74;;4513:2;4498:18;2633:38:245;4354:251:302;3224:274:245;;;;;;:::i;:::-;;:::i;5326:569::-;5707:16;;;;;;;;;;5725:19;;;;;;5672:103;;;2463:95;5672:103;;;5393:25:302;;;;5434:18;;5427:34;;;;5477:18;;;5470:34;5520:18;;;5513:34;;;5596:42;5584:55;;5563:19;;;5556:84;5600:7:245;;;;5365:19:302;;5672:103:245;;;;;;;;;;;;5649:136;;;;;;5623:162;;5802:86;5824:15;5841:46;5870:16;5841:46;;;;;;;;;;:::i;:::-;8677:57:56;;7730:66:302;8677:57:56;;;7718:79:302;7813:11;;;7806:27;;;7849:12;;;7842:28;;;8641:7:56;;7886:12:302;;8677:57:56;;;;;;;;;;;;8667:68;;;;;;8660:75;;8548:194;;;;;5802:86:245;5795:93;5326:569;-1:-1:-1;;;;;;;5326:569:245:o;2763:18::-;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;4422:340::-;4521:7;4547:208;4586:16;4622:4;4547:208;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;4647:15:245;;;:32;;;;;;;;:15;;;;;-1:-1:-1;4647:30:245;;-1:-1:-1;4647:32:245;;;;;-1:-1:-1;4647:32:245;;;;;;:15;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4729:15;;4694:13;;4729:15;;4547:25;:208::i;:::-;4540:215;4422:340;-1:-1:-1;;4422:340:245:o;3712:119::-;3807:12;:14;;3752:7;;;3807:14;;;:::i;:::-;;;;;3796:26;;;;;;2606:25:302;;2594:2;2579:18;;2460:177;3796:26:245;;;;;;;;;;;;;3786:37;;;;;;3771:53;;3712:119;:::o;4040:193::-;-1:-1:-1;;;;;;;;;;;;;;;;;4170:56:245;;;;;;;;4202:7;4170:56;;;;;;4211:14;:12;:14::i;:::-;4170:56;;4163:63;4040:193;-1:-1:-1;;4040:193:245:o;3224:274::-;3442:23;;3467:22;;;;;3404:86;;3364:7;;3404:86;;2240:58;;3442:23;;3404:86;7289:25:302;;;7362:42;7350:55;;;;7345:2;7330:18;;7323:83;7437:2;7422:18;;7415:34;7277:2;7262:18;;7087:368;3404:86:245;;;;;;;;;;;;;3394:97;;;;;;3387:104;;3224:274;;;:::o;14:163:302:-;82:5;127:2;118:6;113:3;109:16;105:25;102:45;;;143:1;140;133:12;102:45;-1:-1:-1;165:6:302;14:163;-1:-1:-1;14:163:302:o;182:184::-;234:77;231:1;224:88;331:4;328:1;321:15;355:4;352:1;345:15;371:334;442:2;436:9;498:2;488:13;;503:66;484:86;472:99;;601:18;586:34;;622:22;;;583:62;580:88;;;648:18;;:::i;:::-;684:2;677:22;371:334;;-1:-1:-1;371:334:302:o;710:245::-;758:4;791:18;783:6;780:30;777:56;;;813:18;;:::i;:::-;-1:-1:-1;870:2:302;858:15;875:66;854:88;944:4;850:99;;710:245::o;960:462::-;1002:5;1055:3;1048:4;1040:6;1036:17;1032:27;1022:55;;1073:1;1070;1063:12;1022:55;1109:6;1096:20;1140:48;1156:31;1184:2;1156:31;:::i;:::-;1140:48;:::i;:::-;1213:2;1204:7;1197:19;1259:3;1252:4;1247:2;1239:6;1235:15;1231:26;1228:35;1225:55;;;1276:1;1273;1266:12;1225:55;1341:2;1334:4;1326:6;1322:17;1315:4;1306:7;1302:18;1289:55;1389:1;1364:16;;;1382:4;1360:27;1353:38;;;;1368:7;960:462;-1:-1:-1;;;960:462:302:o;1427:196::-;1495:20;;1555:42;1544:54;;1534:65;;1524:93;;1613:1;1610;1603:12;1524:93;1427:196;;;:::o;1628:827::-;1777:6;1785;1793;1801;1809;1862:3;1850:9;1841:7;1837:23;1833:33;1830:53;;;1879:1;1876;1869:12;1830:53;1902:62;1956:7;1945:9;1902:62;:::i;:::-;1892:72;;2015:2;2004:9;2000:18;1987:32;2038:18;2079:2;2071:6;2068:14;2065:34;;;2095:1;2092;2085:12;2065:34;2118:49;2159:7;2150:6;2139:9;2135:22;2118:49;:::i;:::-;2108:59;;2220:2;2209:9;2205:18;2192:32;2176:48;;2249:2;2239:8;2236:16;2233:36;;;2265:1;2262;2255:12;2233:36;;2288:51;2331:7;2320:8;2309:9;2305:24;2288:51;:::i;:::-;2278:61;;;2386:3;2375:9;2371:19;2358:33;2348:43;;2410:39;2444:3;2433:9;2429:19;2410:39;:::i;:::-;2400:49;;1628:827;;;;;;;;:::o;2642:258::-;2714:1;2724:113;2738:6;2735:1;2732:13;2724:113;;;2814:11;;;2808:18;2795:11;;;2788:39;2760:2;2753:10;2724:113;;;2855:6;2852:1;2849:13;2846:48;;;2890:1;2881:6;2876:3;2872:16;2865:27;2846:48;;2642:258;;;:::o;2905:442::-;3054:2;3043:9;3036:21;3017:4;3086:6;3080:13;3129:6;3124:2;3113:9;3109:18;3102:34;3145:66;3204:6;3199:2;3188:9;3184:18;3179:2;3171:6;3167:15;3145:66;:::i;:::-;3263:2;3251:15;3268:66;3247:88;3232:104;;;;3338:2;3228:113;;2905:442;-1:-1:-1;;2905:442:302:o;3352:255::-;3447:6;3500:2;3488:9;3479:7;3475:23;3471:32;3468:52;;;3516:1;3513;3506:12;3468:52;3539:62;3593:7;3582:9;3539:62;:::i;:::-;3529:72;3352:255;-1:-1:-1;;;3352:255:302:o;3612:186::-;3671:6;3724:2;3712:9;3703:7;3699:23;3695:32;3692:52;;;3740:1;3737;3730:12;3692:52;3763:29;3782:9;3763:29;:::i;4610:519::-;4703:6;4756:2;4744:9;4735:7;4731:23;4727:32;4724:52;;;4772:1;4769;4762:12;4724:52;4805:2;4799:9;4847:2;4839:6;4835:15;4916:6;4904:10;4901:22;4880:18;4868:10;4865:34;4862:62;4859:88;;;4927:18;;:::i;:::-;4963:2;4956:22;5002:29;5021:9;5002:29;:::i;:::-;4994:6;4987:45;5093:2;5082:9;5078:18;5065:32;5060:2;5052:6;5048:15;5041:57;5117:6;5107:16;;;4610:519;;;;:::o;5651:437::-;5730:1;5726:12;;;;5773;;;5794:61;;5848:4;5840:6;5836:17;5826:27;;5794:61;5901:2;5893:6;5890:14;5870:18;5867:38;5864:218;;5938:77;5935:1;5928:88;6039:4;6036:1;6029:15;6067:4;6064:1;6057:15;6093:635;6173:6;6226:2;6214:9;6205:7;6201:23;6197:32;6194:52;;;6242:1;6239;6232:12;6194:52;6275:9;6269:16;6308:18;6300:6;6297:30;6294:50;;;6340:1;6337;6330:12;6294:50;6363:22;;6416:4;6408:13;;6404:27;-1:-1:-1;6394:55:302;;6445:1;6442;6435:12;6394:55;6474:2;6468:9;6499:48;6515:31;6543:2;6515:31;:::i;6499:48::-;6570:2;6563:5;6556:17;6610:7;6605:2;6600;6596;6592:11;6588:20;6585:33;6582:53;;;6631:1;6628;6621:12;6582:53;6644:54;6695:2;6690;6683:5;6679:14;6674:2;6670;6666:11;6644:54;:::i;:::-;6717:5;6093:635;-1:-1:-1;;;;;6093:635:302:o;6733:349::-;6772:3;6803:66;6796:5;6793:77;6790:257;;6903:77;6900:1;6893:88;7004:4;7001:1;6994:15;7032:4;7029:1;7022:15;6790:257;-1:-1:-1;7074:1:302;7063:13;;6733:349::o",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "CLAIMABLE_INVITE_TYPEHASH()": "c4fc453d",
    "EIP712_DOMAIN_TYPEHASH()": "c7977be7",
    "consumeNonce()": "34b15118",
    "currentNonce()": "adb610a3",
    "getClaimableInviteStructHash((address,bytes32))": "eb1df626",
    "getClaimableInviteWithNewNonce(address)": "8ebe24e5",
    "getDigest((address,bytes32))": "1c6e7f25",
    "getDigestWithEIP712Domain((address,bytes32),bytes,bytes,uint256,address)": "019a4f49",
    "name()": "06fdde03",
    "optimistInviter()": "d1829907"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract OptimistInviter\",\"name\":\"_optimistInviter\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"CLAIMABLE_INVITE_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"EIP712_DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"consumeNonce\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"currentNonce\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"nonce\",\"type\":\"bytes32\"}],\"internalType\":\"struct OptimistInviter.ClaimableInvite\",\"name\":\"_claimableInvite\",\"type\":\"tuple\"}],\"name\":\"getClaimableInviteStructHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_issuer\",\"type\":\"address\"}],\"name\":\"getClaimableInviteWithNewNonce\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"nonce\",\"type\":\"bytes32\"}],\"internalType\":\"struct OptimistInviter.ClaimableInvite\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"nonce\",\"type\":\"bytes32\"}],\"internalType\":\"struct OptimistInviter.ClaimableInvite\",\"name\":\"_claimableInvite\",\"type\":\"tuple\"}],\"name\":\"getDigest\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"issuer\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"nonce\",\"type\":\"bytes32\"}],\"internalType\":\"struct OptimistInviter.ClaimableInvite\",\"name\":\"_claimableInvite\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_name\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_version\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_chainid\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_verifyingContract\",\"type\":\"address\"}],\"name\":\"getDigestWithEIP712Domain\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"optimistInviter\",\"outputs\":[{\"internalType\":\"contract OptimistInviter\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"consumeNonce()\":{\"returns\":{\"_0\":\"Nonce that should be used as part of ClaimableInvite.\"}},\"getClaimableInviteStructHash((address,bytes32))\":{\"params\":{\"_claimableInvite\":\"ClaimableInvite struct to hash.\"},\"returns\":{\"_0\":\"EIP-712 typed struct hash.\"}},\"getClaimableInviteWithNewNonce(address)\":{\"params\":{\"_issuer\":\"Issuer to include in the ClaimableInvite.\"},\"returns\":{\"_0\":\"ClaimableInvite that can be hashed & signed.\"}},\"getDigest((address,bytes32))\":{\"params\":{\"_claimableInvite\":\"ClaimableInvite struct to hash.\"},\"returns\":{\"_0\":\"EIP-712 compatible digest.\"}},\"getDigestWithEIP712Domain((address,bytes32),bytes,bytes,uint256,address)\":{\"params\":{\"_chainid\":\"Chain ID to use in the EIP712 domain.\",\"_claimableInvite\":\"ClaimableInvite struct to hash.\",\"_name\":\"Contract name to use in the EIP712 domain.\",\"_verifyingContract\":\"Address to use in the EIP712 domain.\",\"_version\":\"Contract version to use in the EIP712 domain.\"},\"returns\":{\"_0\":\"EIP-712 compatible digest.\"}}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"CLAIMABLE_INVITE_TYPEHASH()\":{\"notice\":\"EIP712 typehash for the ClaimableInvite type.\"},\"EIP712_DOMAIN_TYPEHASH()\":{\"notice\":\"EIP712 typehash for the EIP712Domain type that is included as part of the signature.\"},\"consumeNonce()\":{\"notice\":\"Returns a bytes32 nonce that should change everytime. In practice, people should use         pseudorandom nonces.\"},\"currentNonce()\":{\"notice\":\"Keeps track of current nonce to generate new nonces for each invite.\"},\"getClaimableInviteStructHash((address,bytes32))\":{\"notice\":\"Returns the hash of the struct ClaimableInvite.\"},\"getClaimableInviteWithNewNonce(address)\":{\"notice\":\"Returns a ClaimableInvite with the issuer and current nonce.\"},\"getDigest((address,bytes32))\":{\"notice\":\"Computes the EIP712 digest with default correct parameters.\"},\"getDigestWithEIP712Domain((address,bytes32),bytes,bytes,uint256,address)\":{\"notice\":\"Computes the EIP712 digest with the given domain parameters.         Used for testing that different domain parameters fail.\"},\"name()\":{\"notice\":\"OptimistInviter contract name. Used to construct the EIP-712 domain.\"},\"optimistInviter()\":{\"notice\":\"Address of OptimistInviter contract we are testing.\"}},\"notice\":\"Simple helper contract that helps with testing flow and signature for         OptimistInviter contract. Made this a separate contract instead of including         in OptimistInviter.t.sol for reusability.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"test/Helpers.sol\":\"OptimistInviterHelper\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@cwia/=lib/clones-with-immutable-args/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/solmate/\",\":clones-with-immutable-args/=lib/clones-with-immutable-args/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol\":{\"keccak256\":\"0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c\",\"dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/ECDSAUpgradeable.sol\":{\"keccak256\":\"0xbf5daf926894541a40a64b43c3746aa1940c5a1b3b8d14a06465eea72a9b90cc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fbdea6be4e36fc5406e81560d8f3f073a61c5d3cb5889b7c896ff5981e2128eb\",\"dweb:/ipfs/QmPpkPNkLEjDf4RZYjiypj9BrNyaXrb2U4pE9aq7sTG9km\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/draft-EIP712Upgradeable.sol\":{\"keccak256\":\"0xaf5a96100f421d61693605349511e43221d3c2e47d4b3efa87af2b936e2567fc\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://371fd95bad4416766089d3e621dee1fd86fece2b266ad3f9443fefe567e24e94\",\"dweb:/ipfs/QmNciwwtGev3Q8uVhnoE5PQUSCDpMp6KtVjiDgnGdqLmWX\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2\",\"dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e\",\"dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0xdb7f5c28fc61cda0bd8ab60ce288e206b791643bcd3ba464a70cbec18895a2f5\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://bf52bdf22a33263f5ca6227a35faeac3b81e7d2c692fbcc6a079d488710c5900\",\"dweb:/ipfs/QmcmsjkP4yq3UhiJbvyzwufaY2EKh1zhHaRK8ATag2cpD2\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/SignatureChecker.sol\":{\"keccak256\":\"0xbb5c92a62f2a917ec08667ebc024d5f4172ae3594cd5f4eaa997485ed0440d81\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://392c009a19ece7831c9851d8f47fa8a1ee7ae81eeff01040a976cc110b0b9a3b\",\"dweb:/ipfs/QmbtmS8RRPVNghAu9qWieesPkyrabQSypVpgbyhfzzubCe\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/draft-EIP712.sol\":{\"keccak256\":\"0x6688fad58b9ec0286d40fa957152e575d5d8bd4c3aa80985efdb11b44f776ae7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8bc00ab7f133cdaafd212a5cc6a16c8d37319721105d130c8e5af0c4e8f170ba\",\"dweb:/ipfs/QmVmf6LVMfFiEkvKYLzSv3bGHzymEW93AcUuFrNUdY3NtT\"]},\"lib/solmate/src/tokens/ERC20.sol\":{\"keccak256\":\"0x43aa1509bb753f053143530705d9c4eee415691d26a4779769bf028a74e6ac69\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fb440672ebad7d487c1600e406e140fd1ffc4bd7520c86b5709183ca2602da58\",\"dweb:/ipfs/QmNgZaBoAZwnwm4mTL1cUZnMtvt1iZnruMnfpJnDu6upuc\"]},\"lib/solmate/src/tokens/ERC721.sol\":{\"keccak256\":\"0xdac91feb466e74905737338d80cac5303eb7aedcbe76eda11c45eaa728451075\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fe01292f5b4d2182859cc30a773f5e9d1a91d02bd8b40fbb73a591cd67896408\",\"dweb:/ipfs/QmTUKUuFJ4QZRD8ge6eTorfni9RKhBtPo1wFVm3GFSgLW8\"]},\"src/periphery/faucet/Faucet.sol\":{\"keccak256\":\"0x82331800d9a28e4e9ea46939fded26e5d76371c9eddfffacd630313a6f8ff5bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://04490faba2d3b9a68c678536e12717339adb5c4d6947c3a2d0e881a98026f727\",\"dweb:/ipfs/Qmbi8x84Lo2Y3CE1Azjif1GifVqFYvuhEzEDc6jXrRMnrS\"]},\"src/periphery/faucet/authmodules/AdminFaucetAuthModule.sol\":{\"keccak256\":\"0x631d0642fd235744338a702d884db56a7d132d47def45059170b272b6c79677f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://e7a14b64a30e738f9f582452e1380268a6415a91d976a9febabe1cfeddc51ca3\",\"dweb:/ipfs/QmWvT3aZk2Q76URxQdxZtwcQqhqDtRh6LrBNjXwMDNEjwa\"]},\"src/periphery/faucet/authmodules/IFaucetAuthModule.sol\":{\"keccak256\":\"0x1ae04232fda8aa0ae4fced4af75032bed7020576126cf04bd53ecb329673276d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a74059bfdfb5d091d7e3966e1e4157c20f97b4dc29b62a4a66e82d433fac850\",\"dweb:/ipfs/QmetdNihkTcus9YupsexJU7U3LSDM1EUAuVoNTH1Bebsjf\"]},\"src/periphery/op-nft/AttestationStation.sol\":{\"keccak256\":\"0xab54f28712653e8926b23c501975aee5d3368dbf436a14da6ddb9dbc792de2ef\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8a6c5ad2becb79bc6bf3afaaca89dfda6d8f096d55184c0adce20efb3ff19d33\",\"dweb:/ipfs/QmP3qyEYnB195og1FdvW4su4KoBZZQ7UzC8V7CQMz7Ear9\"]},\"src/periphery/op-nft/OptimistInviter.sol\":{\"keccak256\":\"0x447dd2c65410e42a8ddfa0245bcf68ffc51b6c0988715c2978ea4ccde70b8d55\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://db15eaab1f5ff2314590e535edca99edcc4ebede0170034219228357cdf0c4c2\",\"dweb:/ipfs/QmUqoY781MTXgHx2VrUueRmZKTxuzCt1DVHjxPDFsgYMC2\"]},\"src/periphery/op-nft/libraries/OptimistConstants.sol\":{\"keccak256\":\"0x901c8a2a333a668ef2a6336a803dd06fea51d4128a38087af4565bff1ae6db8c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://87e68615dea2494b1cd8f96d7ad97ccb9556d00539526b53a7ce5314570fc268\",\"dweb:/ipfs/QmZBNNrSVMKz4GDkRJyp5jjV6V4wGN7ySAhDd1pBvbJkS2\"]},\"src/universal/Semver.sol\":{\"keccak256\":\"0x9de68ce536aee1aa616b4bf88d7ccc335460e6edd0e7170bdbf94c4fe3d41c60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5909c0b049b03a2bc24816ecf15b0aaf18c04a963174e1eba7624321bef330d\",\"dweb:/ipfs/QmeqdutwZWHqQMXauNR6WY8PrUpfsTiWTQyanbnGM9QqzT\"]},\"test/Helpers.sol\":{\"keccak256\":\"0x022e89924ead94001a5c3d775a986baf574481b48e5fe0c35bdf60433115103d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b75d63ab2d869ab4ab5dedce511be2a5c7a91dc6a75da6a698a23f77d903e03f\",\"dweb:/ipfs/QmUu7Sf9mmbEYV7FaPYQc1JgtLfjLv1D4UaEMRfanbDFDd\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract OptimistInviter",
              "name": "_optimistInviter",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "_name",
              "type": "string"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "CLAIMABLE_INVITE_TYPEHASH",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "EIP712_DOMAIN_TYPEHASH",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "consumeNonce",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "currentNonce",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OptimistInviter.ClaimableInvite",
              "name": "_claimableInvite",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "issuer",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "nonce",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "getClaimableInviteStructHash",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_issuer",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "getClaimableInviteWithNewNonce",
          "outputs": [
            {
              "internalType": "struct OptimistInviter.ClaimableInvite",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "issuer",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "nonce",
                  "type": "bytes32"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OptimistInviter.ClaimableInvite",
              "name": "_claimableInvite",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "issuer",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "nonce",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getDigest",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct OptimistInviter.ClaimableInvite",
              "name": "_claimableInvite",
              "type": "tuple",
              "components": [
                {
                  "internalType": "address",
                  "name": "issuer",
                  "type": "address"
                },
                {
                  "internalType": "bytes32",
                  "name": "nonce",
                  "type": "bytes32"
                }
              ]
            },
            {
              "internalType": "bytes",
              "name": "_name",
              "type": "bytes"
            },
            {
              "internalType": "bytes",
              "name": "_version",
              "type": "bytes"
            },
            {
              "internalType": "uint256",
              "name": "_chainid",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_verifyingContract",
              "type": "address"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "getDigestWithEIP712Domain",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "name",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "optimistInviter",
          "outputs": [
            {
              "internalType": "contract OptimistInviter",
              "name": "",
              "type": "address"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "consumeNonce()": {
            "returns": {
              "_0": "Nonce that should be used as part of ClaimableInvite."
            }
          },
          "getClaimableInviteStructHash((address,bytes32))": {
            "params": {
              "_claimableInvite": "ClaimableInvite struct to hash."
            },
            "returns": {
              "_0": "EIP-712 typed struct hash."
            }
          },
          "getClaimableInviteWithNewNonce(address)": {
            "params": {
              "_issuer": "Issuer to include in the ClaimableInvite."
            },
            "returns": {
              "_0": "ClaimableInvite that can be hashed & signed."
            }
          },
          "getDigest((address,bytes32))": {
            "params": {
              "_claimableInvite": "ClaimableInvite struct to hash."
            },
            "returns": {
              "_0": "EIP-712 compatible digest."
            }
          },
          "getDigestWithEIP712Domain((address,bytes32),bytes,bytes,uint256,address)": {
            "params": {
              "_chainid": "Chain ID to use in the EIP712 domain.",
              "_claimableInvite": "ClaimableInvite struct to hash.",
              "_name": "Contract name to use in the EIP712 domain.",
              "_verifyingContract": "Address to use in the EIP712 domain.",
              "_version": "Contract version to use in the EIP712 domain."
            },
            "returns": {
              "_0": "EIP-712 compatible digest."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "CLAIMABLE_INVITE_TYPEHASH()": {
            "notice": "EIP712 typehash for the ClaimableInvite type."
          },
          "EIP712_DOMAIN_TYPEHASH()": {
            "notice": "EIP712 typehash for the EIP712Domain type that is included as part of the signature."
          },
          "consumeNonce()": {
            "notice": "Returns a bytes32 nonce that should change everytime. In practice, people should use         pseudorandom nonces."
          },
          "currentNonce()": {
            "notice": "Keeps track of current nonce to generate new nonces for each invite."
          },
          "getClaimableInviteStructHash((address,bytes32))": {
            "notice": "Returns the hash of the struct ClaimableInvite."
          },
          "getClaimableInviteWithNewNonce(address)": {
            "notice": "Returns a ClaimableInvite with the issuer and current nonce."
          },
          "getDigest((address,bytes32))": {
            "notice": "Computes the EIP712 digest with default correct parameters."
          },
          "getDigestWithEIP712Domain((address,bytes32),bytes,bytes,uint256,address)": {
            "notice": "Computes the EIP712 digest with the given domain parameters.         Used for testing that different domain parameters fail."
          },
          "name()": {
            "notice": "OptimistInviter contract name. Used to construct the EIP-712 domain."
          },
          "optimistInviter()": {
            "notice": "Address of OptimistInviter contract we are testing."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@cwia/=lib/clones-with-immutable-args/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@rari-capital/solmate/=lib/solmate/",
        "clones-with-immutable-args/=lib/clones-with-immutable-args/src/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "safe-contracts/=lib/safe-contracts/contracts/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 999999
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "test/Helpers.sol": "OptimistInviterHelper"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
        "urls": [
          "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
          "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/StringsUpgradeable.sol": {
        "keccak256": "0xea5339a7fff0ed42b45be56a88efdd0b2ddde9fa480dc99fef9a6a4c5b776863",
        "urls": [
          "bzz-raw://841619682637df5579b4c396d281d6c55b26f1b1acce1d0ab67bead5e39cf60c",
          "dweb:/ipfs/QmNRtuKp43ZHJwswdyT3GivY4fDMvz3cxBe1FfDthG1JGj"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/ECDSAUpgradeable.sol": {
        "keccak256": "0xbf5daf926894541a40a64b43c3746aa1940c5a1b3b8d14a06465eea72a9b90cc",
        "urls": [
          "bzz-raw://fbdea6be4e36fc5406e81560d8f3f073a61c5d3cb5889b7c896ff5981e2128eb",
          "dweb:/ipfs/QmPpkPNkLEjDf4RZYjiypj9BrNyaXrb2U4pE9aq7sTG9km"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/draft-EIP712Upgradeable.sol": {
        "keccak256": "0xaf5a96100f421d61693605349511e43221d3c2e47d4b3efa87af2b936e2567fc",
        "urls": [
          "bzz-raw://371fd95bad4416766089d3e621dee1fd86fece2b266ad3f9443fefe567e24e94",
          "dweb:/ipfs/QmNciwwtGev3Q8uVhnoE5PQUSCDpMp6KtVjiDgnGdqLmWX"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673",
        "urls": [
          "bzz-raw://40fb1b5102468f783961d0af743f91b9980cf66b50d1d12009f6bb1869cea4d2",
          "dweb:/ipfs/QmYqEbJML4jB1GHbzD4cUZDtJg5wVwNm3vDJq1GbyDus8y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol": {
        "keccak256": "0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544",
        "urls": [
          "bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e",
          "dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10",
        "urls": [
          "bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487",
          "dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3",
        "urls": [
          "bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638",
          "dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0xdb7f5c28fc61cda0bd8ab60ce288e206b791643bcd3ba464a70cbec18895a2f5",
        "urls": [
          "bzz-raw://bf52bdf22a33263f5ca6227a35faeac3b81e7d2c692fbcc6a079d488710c5900",
          "dweb:/ipfs/QmcmsjkP4yq3UhiJbvyzwufaY2EKh1zhHaRK8ATag2cpD2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/SignatureChecker.sol": {
        "keccak256": "0xbb5c92a62f2a917ec08667ebc024d5f4172ae3594cd5f4eaa997485ed0440d81",
        "urls": [
          "bzz-raw://392c009a19ece7831c9851d8f47fa8a1ee7ae81eeff01040a976cc110b0b9a3b",
          "dweb:/ipfs/QmbtmS8RRPVNghAu9qWieesPkyrabQSypVpgbyhfzzubCe"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/draft-EIP712.sol": {
        "keccak256": "0x6688fad58b9ec0286d40fa957152e575d5d8bd4c3aa80985efdb11b44f776ae7",
        "urls": [
          "bzz-raw://8bc00ab7f133cdaafd212a5cc6a16c8d37319721105d130c8e5af0c4e8f170ba",
          "dweb:/ipfs/QmVmf6LVMfFiEkvKYLzSv3bGHzymEW93AcUuFrNUdY3NtT"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/tokens/ERC20.sol": {
        "keccak256": "0x43aa1509bb753f053143530705d9c4eee415691d26a4779769bf028a74e6ac69",
        "urls": [
          "bzz-raw://fb440672ebad7d487c1600e406e140fd1ffc4bd7520c86b5709183ca2602da58",
          "dweb:/ipfs/QmNgZaBoAZwnwm4mTL1cUZnMtvt1iZnruMnfpJnDu6upuc"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/tokens/ERC721.sol": {
        "keccak256": "0xdac91feb466e74905737338d80cac5303eb7aedcbe76eda11c45eaa728451075",
        "urls": [
          "bzz-raw://fe01292f5b4d2182859cc30a773f5e9d1a91d02bd8b40fbb73a591cd67896408",
          "dweb:/ipfs/QmTUKUuFJ4QZRD8ge6eTorfni9RKhBtPo1wFVm3GFSgLW8"
        ],
        "license": "MIT"
      },
      "src/periphery/faucet/Faucet.sol": {
        "keccak256": "0x82331800d9a28e4e9ea46939fded26e5d76371c9eddfffacd630313a6f8ff5bb",
        "urls": [
          "bzz-raw://04490faba2d3b9a68c678536e12717339adb5c4d6947c3a2d0e881a98026f727",
          "dweb:/ipfs/Qmbi8x84Lo2Y3CE1Azjif1GifVqFYvuhEzEDc6jXrRMnrS"
        ],
        "license": "MIT"
      },
      "src/periphery/faucet/authmodules/AdminFaucetAuthModule.sol": {
        "keccak256": "0x631d0642fd235744338a702d884db56a7d132d47def45059170b272b6c79677f",
        "urls": [
          "bzz-raw://e7a14b64a30e738f9f582452e1380268a6415a91d976a9febabe1cfeddc51ca3",
          "dweb:/ipfs/QmWvT3aZk2Q76URxQdxZtwcQqhqDtRh6LrBNjXwMDNEjwa"
        ],
        "license": "MIT"
      },
      "src/periphery/faucet/authmodules/IFaucetAuthModule.sol": {
        "keccak256": "0x1ae04232fda8aa0ae4fced4af75032bed7020576126cf04bd53ecb329673276d",
        "urls": [
          "bzz-raw://8a74059bfdfb5d091d7e3966e1e4157c20f97b4dc29b62a4a66e82d433fac850",
          "dweb:/ipfs/QmetdNihkTcus9YupsexJU7U3LSDM1EUAuVoNTH1Bebsjf"
        ],
        "license": "MIT"
      },
      "src/periphery/op-nft/AttestationStation.sol": {
        "keccak256": "0xab54f28712653e8926b23c501975aee5d3368dbf436a14da6ddb9dbc792de2ef",
        "urls": [
          "bzz-raw://8a6c5ad2becb79bc6bf3afaaca89dfda6d8f096d55184c0adce20efb3ff19d33",
          "dweb:/ipfs/QmP3qyEYnB195og1FdvW4su4KoBZZQ7UzC8V7CQMz7Ear9"
        ],
        "license": "MIT"
      },
      "src/periphery/op-nft/OptimistInviter.sol": {
        "keccak256": "0x447dd2c65410e42a8ddfa0245bcf68ffc51b6c0988715c2978ea4ccde70b8d55",
        "urls": [
          "bzz-raw://db15eaab1f5ff2314590e535edca99edcc4ebede0170034219228357cdf0c4c2",
          "dweb:/ipfs/QmUqoY781MTXgHx2VrUueRmZKTxuzCt1DVHjxPDFsgYMC2"
        ],
        "license": "MIT"
      },
      "src/periphery/op-nft/libraries/OptimistConstants.sol": {
        "keccak256": "0x901c8a2a333a668ef2a6336a803dd06fea51d4128a38087af4565bff1ae6db8c",
        "urls": [
          "bzz-raw://87e68615dea2494b1cd8f96d7ad97ccb9556d00539526b53a7ce5314570fc268",
          "dweb:/ipfs/QmZBNNrSVMKz4GDkRJyp5jjV6V4wGN7ySAhDd1pBvbJkS2"
        ],
        "license": "MIT"
      },
      "src/universal/Semver.sol": {
        "keccak256": "0x9de68ce536aee1aa616b4bf88d7ccc335460e6edd0e7170bdbf94c4fe3d41c60",
        "urls": [
          "bzz-raw://d5909c0b049b03a2bc24816ecf15b0aaf18c04a963174e1eba7624321bef330d",
          "dweb:/ipfs/QmeqdutwZWHqQMXauNR6WY8PrUpfsTiWTQyanbnGM9QqzT"
        ],
        "license": "MIT"
      },
      "test/Helpers.sol": {
        "keccak256": "0x022e89924ead94001a5c3d775a986baf574481b48e5fe0c35bdf60433115103d",
        "urls": [
          "bzz-raw://b75d63ab2d869ab4ab5dedce511be2a5c7a91dc6a75da6a698a23f77d903e03f",
          "dweb:/ipfs/QmUu7Sf9mmbEYV7FaPYQc1JgtLfjLv1D4UaEMRfanbDFDd"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 104215,
        "contract": "test/Helpers.sol:OptimistInviterHelper",
        "label": "optimistInviter",
        "offset": 0,
        "slot": "0",
        "type": "t_contract(OptimistInviter)80326"
      },
      {
        "astId": 104218,
        "contract": "test/Helpers.sol:OptimistInviterHelper",
        "label": "name",
        "offset": 0,
        "slot": "1",
        "type": "t_string_storage"
      },
      {
        "astId": 104221,
        "contract": "test/Helpers.sol:OptimistInviterHelper",
        "label": "currentNonce",
        "offset": 0,
        "slot": "2",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_contract(OptimistInviter)80326": {
        "encoding": "inplace",
        "label": "contract OptimistInviter",
        "numberOfBytes": "20"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  },
  "userdoc": {
    "version": 1,
    "kind": "user",
    "methods": {
      "CLAIMABLE_INVITE_TYPEHASH()": {
        "notice": "EIP712 typehash for the ClaimableInvite type."
      },
      "EIP712_DOMAIN_TYPEHASH()": {
        "notice": "EIP712 typehash for the EIP712Domain type that is included as part of the signature."
      },
      "consumeNonce()": {
        "notice": "Returns a bytes32 nonce that should change everytime. In practice, people should use         pseudorandom nonces."
      },
      "currentNonce()": {
        "notice": "Keeps track of current nonce to generate new nonces for each invite."
      },
      "getClaimableInviteStructHash((address,bytes32))": {
        "notice": "Returns the hash of the struct ClaimableInvite."
      },
      "getClaimableInviteWithNewNonce(address)": {
        "notice": "Returns a ClaimableInvite with the issuer and current nonce."
      },
      "getDigest((address,bytes32))": {
        "notice": "Computes the EIP712 digest with default correct parameters."
      },
      "getDigestWithEIP712Domain((address,bytes32),bytes,bytes,uint256,address)": {
        "notice": "Computes the EIP712 digest with the given domain parameters.         Used for testing that different domain parameters fail."
      },
      "name()": {
        "notice": "OptimistInviter contract name. Used to construct the EIP-712 domain."
      },
      "optimistInviter()": {
        "notice": "Address of OptimistInviter contract we are testing."
      }
    },
    "notice": "Simple helper contract that helps with testing flow and signature for         OptimistInviter contract. Made this a separate contract instead of including         in OptimistInviter.t.sol for reusability."
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "methods": {
      "consumeNonce()": {
        "returns": {
          "_0": "Nonce that should be used as part of ClaimableInvite."
        }
      },
      "getClaimableInviteStructHash((address,bytes32))": {
        "params": {
          "_claimableInvite": "ClaimableInvite struct to hash."
        },
        "returns": {
          "_0": "EIP-712 typed struct hash."
        }
      },
      "getClaimableInviteWithNewNonce(address)": {
        "params": {
          "_issuer": "Issuer to include in the ClaimableInvite."
        },
        "returns": {
          "_0": "ClaimableInvite that can be hashed & signed."
        }
      },
      "getDigest((address,bytes32))": {
        "params": {
          "_claimableInvite": "ClaimableInvite struct to hash."
        },
        "returns": {
          "_0": "EIP-712 compatible digest."
        }
      },
      "getDigestWithEIP712Domain((address,bytes32),bytes,bytes,uint256,address)": {
        "params": {
          "_chainid": "Chain ID to use in the EIP712 domain.",
          "_claimableInvite": "ClaimableInvite struct to hash.",
          "_name": "Contract name to use in the EIP712 domain.",
          "_verifyingContract": "Address to use in the EIP712 domain.",
          "_version": "Contract version to use in the EIP712 domain."
        },
        "returns": {
          "_0": "EIP-712 compatible digest."
        }
      }
    }
  },
  "ast": {
    "absolutePath": "test/Helpers.sol",
    "id": 104514,
    "exportedSymbols": {
      "AdminFaucetAuthModule": [
        79415
      ],
      "CallRecorder": [
        104158
      ],
      "ECDSA": [
        36545
      ],
      "ECDSAUpgradeable": [
        31682
      ],
      "ERC20": [
        43389
      ],
      "ERC721": [
        43933
      ],
      "FaucetHelper": [
        104513
      ],
      "IERC1271": [
        32093
      ],
      "OptimistInviter": [
        80326
      ],
      "OptimistInviterHelper": [
        104368
      ],
      "Ownable": [
        32001
      ],
      "Reverter": [
        104167
      ],
      "SimpleStorage": [
        104198
      ],
      "TestERC1271Wallet": [
        104412
      ],
      "TestERC20": [
        104080
      ],
      "TestERC721": [
        104113
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:9027:245",
    "nodes": [
      {
        "id": 104039,
        "nodeType": "PragmaDirective",
        "src": "32:23:245",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 104041,
        "nodeType": "ImportDirective",
        "src": "57:67:245",
        "nodes": [],
        "absolutePath": "lib/solmate/src/tokens/ERC20.sol",
        "file": "@rari-capital/solmate/src/tokens/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 104514,
        "sourceUnit": 43390,
        "symbolAliases": [
          {
            "foreign": {
              "id": 104040,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43389,
              "src": "66:5:245",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 104043,
        "nodeType": "ImportDirective",
        "src": "125:69:245",
        "nodes": [],
        "absolutePath": "lib/solmate/src/tokens/ERC721.sol",
        "file": "@rari-capital/solmate/src/tokens/ERC721.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 104514,
        "sourceUnit": 43954,
        "symbolAliases": [
          {
            "foreign": {
              "id": 104042,
              "name": "ERC721",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 43933,
              "src": "134:6:245",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 104045,
        "nodeType": "ImportDirective",
        "src": "195:77:245",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "file": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 104514,
        "sourceUnit": 36546,
        "symbolAliases": [
          {
            "foreign": {
              "id": 104044,
              "name": "ECDSA",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 36545,
              "src": "204:5:245",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 104047,
        "nodeType": "ImportDirective",
        "src": "273:75:245",
        "nodes": [],
        "absolutePath": "src/periphery/op-nft/OptimistInviter.sol",
        "file": "src/periphery/op-nft/OptimistInviter.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 104514,
        "sourceUnit": 80327,
        "symbolAliases": [
          {
            "foreign": {
              "id": 104046,
              "name": "OptimistInviter",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 80326,
              "src": "282:15:245",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 104049,
        "nodeType": "ImportDirective",
        "src": "349:75:245",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol",
        "file": "@openzeppelin/contracts/interfaces/IERC1271.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 104514,
        "sourceUnit": 32094,
        "symbolAliases": [
          {
            "foreign": {
              "id": 104048,
              "name": "IERC1271",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 32093,
              "src": "358:8:245",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 104051,
        "nodeType": "ImportDirective",
        "src": "425:69:245",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/access/Ownable.sol",
        "file": "@openzeppelin/contracts/access/Ownable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 104514,
        "sourceUnit": 32002,
        "symbolAliases": [
          {
            "foreign": {
              "id": 104050,
              "name": "Ownable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 32001,
              "src": "434:7:245",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 104053,
        "nodeType": "ImportDirective",
        "src": "495:111:245",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/utils/cryptography/ECDSAUpgradeable.sol",
        "file": "@openzeppelin/contracts-upgradeable/utils/cryptography/ECDSAUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 104514,
        "sourceUnit": 31683,
        "symbolAliases": [
          {
            "foreign": {
              "id": 104052,
              "name": "ECDSAUpgradeable",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 31682,
              "src": "504:16:245",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 104055,
        "nodeType": "ImportDirective",
        "src": "607:99:245",
        "nodes": [],
        "absolutePath": "src/periphery/faucet/authmodules/AdminFaucetAuthModule.sol",
        "file": "src/periphery/faucet/authmodules/AdminFaucetAuthModule.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 104514,
        "sourceUnit": 79416,
        "symbolAliases": [
          {
            "foreign": {
              "id": 104054,
              "name": "AdminFaucetAuthModule",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 79415,
              "src": "616:21:245",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 104080,
        "nodeType": "ContractDefinition",
        "src": "708:165:245",
        "nodes": [
          {
            "id": 104066,
            "nodeType": "FunctionDefinition",
            "src": "742:42:245",
            "nodes": [],
            "body": {
              "id": 104065,
              "nodeType": "Block",
              "src": "781:3:245",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "54455354",
                    "id": 104060,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "762:6:245",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_852daa74cc3c31fe64542bb9b8764cfb91cc30f9acf9389071ffb44a9eefde46",
                      "typeString": "literal_string \"TEST\""
                    },
                    "value": "TEST"
                  },
                  {
                    "hexValue": "545354",
                    "id": 104061,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "770:5:245",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_20a94e575762ae205efd2d939940bb203cefdf1c455cc39ef343e287f43b70f4",
                      "typeString": "literal_string \"TST\""
                    },
                    "value": "TST"
                  },
                  {
                    "hexValue": "3138",
                    "id": 104062,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "777:2:245",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_18_by_1",
                      "typeString": "int_const 18"
                    },
                    "value": "18"
                  }
                ],
                "id": 104063,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 104059,
                  "name": "ERC20",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 43389,
                  "src": "756:5:245"
                },
                "nodeType": "ModifierInvocation",
                "src": "756:24:245"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 104058,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "753:2:245"
            },
            "returnParameters": {
              "id": 104064,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "781:0:245"
            },
            "scope": 104080,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 104079,
            "nodeType": "FunctionDefinition",
            "src": "790:81:245",
            "nodes": [],
            "body": {
              "id": 104078,
              "nodeType": "Block",
              "src": "838:33:245",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 104074,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 104068,
                        "src": "854:2:245",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 104075,
                        "name": "value",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 104070,
                        "src": "858:5:245",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 104073,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43360,
                      "src": "848:5:245",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 104076,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "848:16:245",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 104077,
                  "nodeType": "ExpressionStatement",
                  "src": "848:16:245"
                }
              ]
            },
            "functionSelector": "40c10f19",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "799:4:245",
            "parameters": {
              "id": 104071,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 104068,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "812:2:245",
                  "nodeType": "VariableDeclaration",
                  "scope": 104079,
                  "src": "804:10:245",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 104067,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "804:7:245",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 104070,
                  "mutability": "mutable",
                  "name": "value",
                  "nameLocation": "824:5:245",
                  "nodeType": "VariableDeclaration",
                  "scope": 104079,
                  "src": "816:13:245",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 104069,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "816:7:245",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "803:27:245"
            },
            "returnParameters": {
              "id": 104072,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "838:0:245"
            },
            "scope": 104080,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 104056,
              "name": "ERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 43389,
              "src": "730:5:245"
            },
            "id": 104057,
            "nodeType": "InheritanceSpecifier",
            "src": "730:5:245"
          }
        ],
        "canonicalName": "TestERC20",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          104080,
          43389
        ],
        "name": "TestERC20",
        "nameLocation": "717:9:245",
        "scope": 104514,
        "usedErrors": []
      },
      {
        "id": 104113,
        "nodeType": "ContractDefinition",
        "src": "875:257:245",
        "nodes": [
          {
            "id": 104090,
            "nodeType": "FunctionDefinition",
            "src": "911:39:245",
            "nodes": [],
            "body": {
              "id": 104089,
              "nodeType": "Block",
              "src": "947:3:245",
              "nodes": [],
              "statements": []
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "hexValue": "54455354",
                    "id": 104085,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "932:6:245",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_852daa74cc3c31fe64542bb9b8764cfb91cc30f9acf9389071ffb44a9eefde46",
                      "typeString": "literal_string \"TEST\""
                    },
                    "value": "TEST"
                  },
                  {
                    "hexValue": "545354",
                    "id": 104086,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "string",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "940:5:245",
                    "typeDescriptions": {
                      "typeIdentifier": "t_stringliteral_20a94e575762ae205efd2d939940bb203cefdf1c455cc39ef343e287f43b70f4",
                      "typeString": "literal_string \"TST\""
                    },
                    "value": "TST"
                  }
                ],
                "id": 104087,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 104084,
                  "name": "ERC721",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 43933,
                  "src": "925:6:245"
                },
                "nodeType": "ModifierInvocation",
                "src": "925:21:245"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 104083,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "922:2:245"
            },
            "returnParameters": {
              "id": 104088,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "947:0:245"
            },
            "scope": 104113,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 104103,
            "nodeType": "FunctionDefinition",
            "src": "956:85:245",
            "nodes": [],
            "body": {
              "id": 104102,
              "nodeType": "Block",
              "src": "1006:35:245",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 104098,
                        "name": "to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 104092,
                        "src": "1022:2:245",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 104099,
                        "name": "tokenId",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 104094,
                        "src": "1026:7:245",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 104097,
                      "name": "_mint",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 43803,
                      "src": "1016:5:245",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,uint256)"
                      }
                    },
                    "id": 104100,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1016:18:245",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 104101,
                  "nodeType": "ExpressionStatement",
                  "src": "1016:18:245"
                }
              ]
            },
            "functionSelector": "40c10f19",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "mint",
            "nameLocation": "965:4:245",
            "parameters": {
              "id": 104095,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 104092,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "978:2:245",
                  "nodeType": "VariableDeclaration",
                  "scope": 104103,
                  "src": "970:10:245",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 104091,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "970:7:245",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 104094,
                  "mutability": "mutable",
                  "name": "tokenId",
                  "nameLocation": "990:7:245",
                  "nodeType": "VariableDeclaration",
                  "scope": 104103,
                  "src": "982:15:245",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 104093,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "982:7:245",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "969:29:245"
            },
            "returnParameters": {
              "id": 104096,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1006:0:245"
            },
            "scope": 104113,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 104112,
            "nodeType": "FunctionDefinition",
            "src": "1047:83:245",
            "nodes": [],
            "body": {
              "id": 104111,
              "nodeType": "Block",
              "src": "1127:3:245",
              "nodes": [],
              "statements": []
            },
            "baseFunctions": [
              43427
            ],
            "functionSelector": "c87b56dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "tokenURI",
            "nameLocation": "1056:8:245",
            "overrides": {
              "id": 104107,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1094:8:245"
            },
            "parameters": {
              "id": 104106,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 104105,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 104112,
                  "src": "1065:7:245",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 104104,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1065:7:245",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1064:9:245"
            },
            "returnParameters": {
              "id": 104110,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 104109,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 104112,
                  "src": "1112:13:245",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 104108,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "1112:6:245",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1111:15:245"
            },
            "scope": 104113,
            "stateMutability": "pure",
            "virtual": true,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 104081,
              "name": "ERC721",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 43933,
              "src": "898:6:245"
            },
            "id": 104082,
            "nodeType": "InheritanceSpecifier",
            "src": "898:6:245"
          }
        ],
        "canonicalName": "TestERC721",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          104113,
          43933
        ],
        "name": "TestERC721",
        "nameLocation": "884:10:245",
        "scope": 104514,
        "usedErrors": []
      },
      {
        "id": 104158,
        "nodeType": "ContractDefinition",
        "src": "1134:360:245",
        "nodes": [
          {
            "id": 104122,
            "nodeType": "StructDefinition",
            "src": "1162:111:245",
            "nodes": [],
            "canonicalName": "CallRecorder.CallInfo",
            "members": [
              {
                "constant": false,
                "id": 104115,
                "mutability": "mutable",
                "name": "sender",
                "nameLocation": "1196:6:245",
                "nodeType": "VariableDeclaration",
                "scope": 104122,
                "src": "1188:14:245",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 104114,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "1188:7:245",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 104117,
                "mutability": "mutable",
                "name": "data",
                "nameLocation": "1218:4:245",
                "nodeType": "VariableDeclaration",
                "scope": 104122,
                "src": "1212:10:245",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes_storage_ptr",
                  "typeString": "bytes"
                },
                "typeName": {
                  "id": 104116,
                  "name": "bytes",
                  "nodeType": "ElementaryTypeName",
                  "src": "1212:5:245",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_storage_ptr",
                    "typeString": "bytes"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 104119,
                "mutability": "mutable",
                "name": "gas",
                "nameLocation": "1240:3:245",
                "nodeType": "VariableDeclaration",
                "scope": 104122,
                "src": "1232:11:245",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 104118,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1232:7:245",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 104121,
                "mutability": "mutable",
                "name": "value",
                "nameLocation": "1261:5:245",
                "nodeType": "VariableDeclaration",
                "scope": 104122,
                "src": "1253:13:245",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 104120,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1253:7:245",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "CallInfo",
            "nameLocation": "1169:8:245",
            "scope": 104158,
            "visibility": "public"
          },
          {
            "id": 104125,
            "nodeType": "VariableDeclaration",
            "src": "1279:24:245",
            "nodes": [],
            "constant": false,
            "functionSelector": "da516aa9",
            "mutability": "mutable",
            "name": "lastCall",
            "nameLocation": "1295:8:245",
            "scope": 104158,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_struct$_CallInfo_$104122_storage",
              "typeString": "struct CallRecorder.CallInfo"
            },
            "typeName": {
              "id": 104124,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 104123,
                "name": "CallInfo",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 104122,
                "src": "1279:8:245"
              },
              "referencedDeclaration": 104122,
              "src": "1279:8:245",
              "typeDescriptions": {
                "typeIdentifier": "t_struct$_CallInfo_$104122_storage_ptr",
                "typeString": "struct CallRecorder.CallInfo"
              }
            },
            "visibility": "public"
          },
          {
            "id": 104157,
            "nodeType": "FunctionDefinition",
            "src": "1310:182:245",
            "nodes": [],
            "body": {
              "id": 104156,
              "nodeType": "Block",
              "src": "1343:149:245",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 104133,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 104128,
                        "name": "lastCall",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 104125,
                        "src": "1353:8:245",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallInfo_$104122_storage",
                          "typeString": "struct CallRecorder.CallInfo storage ref"
                        }
                      },
                      "id": 104130,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 104115,
                      "src": "1353:15:245",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 104131,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1371:3:245",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 104132,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sender",
                      "nodeType": "MemberAccess",
                      "src": "1371:10:245",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1353:28:245",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 104134,
                  "nodeType": "ExpressionStatement",
                  "src": "1353:28:245"
                },
                {
                  "expression": {
                    "id": 104140,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 104135,
                        "name": "lastCall",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 104125,
                        "src": "1391:8:245",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallInfo_$104122_storage",
                          "typeString": "struct CallRecorder.CallInfo storage ref"
                        }
                      },
                      "id": 104137,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "data",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 104117,
                      "src": "1391:13:245",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_storage",
                        "typeString": "bytes storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 104138,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1407:3:245",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 104139,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "data",
                      "nodeType": "MemberAccess",
                      "src": "1407:8:245",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_calldata_ptr",
                        "typeString": "bytes calldata"
                      }
                    },
                    "src": "1391:24:245",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage",
                      "typeString": "bytes storage ref"
                    }
                  },
                  "id": 104141,
                  "nodeType": "ExpressionStatement",
                  "src": "1391:24:245"
                },
                {
                  "expression": {
                    "id": 104147,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 104142,
                        "name": "lastCall",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 104125,
                        "src": "1425:8:245",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallInfo_$104122_storage",
                          "typeString": "struct CallRecorder.CallInfo storage ref"
                        }
                      },
                      "id": 104144,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "gas",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 104119,
                      "src": "1425:12:245",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [],
                      "expression": {
                        "argumentTypes": [],
                        "id": 104145,
                        "name": "gasleft",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -7,
                        "src": "1440:7:245",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
                          "typeString": "function () view returns (uint256)"
                        }
                      },
                      "id": 104146,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1440:9:245",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1425:24:245",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 104148,
                  "nodeType": "ExpressionStatement",
                  "src": "1425:24:245"
                },
                {
                  "expression": {
                    "id": 104154,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "expression": {
                        "id": 104149,
                        "name": "lastCall",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 104125,
                        "src": "1459:8:245",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_CallInfo_$104122_storage",
                          "typeString": "struct CallRecorder.CallInfo storage ref"
                        }
                      },
                      "id": 104151,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 104121,
                      "src": "1459:14:245",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 104152,
                        "name": "msg",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -15,
                        "src": "1476:3:245",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_message",
                          "typeString": "msg"
                        }
                      },
                      "id": 104153,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "value",
                      "nodeType": "MemberAccess",
                      "src": "1476:9:245",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1459:26:245",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 104155,
                  "nodeType": "ExpressionStatement",
                  "src": "1459:26:245"
                }
              ]
            },
            "functionSelector": "266cf109",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "record",
            "nameLocation": "1319:6:245",
            "parameters": {
              "id": 104126,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1325:2:245"
            },
            "returnParameters": {
              "id": 104127,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1343:0:245"
            },
            "scope": 104158,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "CallRecorder",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          104158
        ],
        "name": "CallRecorder",
        "nameLocation": "1143:12:245",
        "scope": 104514,
        "usedErrors": []
      },
      {
        "id": 104167,
        "nodeType": "ContractDefinition",
        "src": "1496:102:245",
        "nodes": [
          {
            "id": 104166,
            "nodeType": "FunctionDefinition",
            "src": "1520:76:245",
            "nodes": [],
            "body": {
              "id": 104165,
              "nodeType": "Block",
              "src": "1552:44:245",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "hexValue": "5265766572746572207265766572746564",
                        "id": 104162,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1569:19:245",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_c3edf6a705c1ac2ccf4eb0ce9f05039f24b547c0f1460366bd5050c270cb80ba",
                          "typeString": "literal_string \"Reverter reverted\""
                        },
                        "value": "Reverter reverted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_stringliteral_c3edf6a705c1ac2ccf4eb0ce9f05039f24b547c0f1460366bd5050c270cb80ba",
                          "typeString": "literal_string \"Reverter reverted\""
                        }
                      ],
                      "id": 104161,
                      "name": "revert",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -19,
                        -19
                      ],
                      "referencedDeclaration": -19,
                      "src": "1562:6:245",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_revert_pure$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (string memory) pure"
                      }
                    },
                    "id": 104163,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1562:27:245",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 104164,
                  "nodeType": "ExpressionStatement",
                  "src": "1562:27:245"
                }
              ]
            },
            "functionSelector": "afc874d2",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "doRevert",
            "nameLocation": "1529:8:245",
            "parameters": {
              "id": 104159,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1537:2:245"
            },
            "returnParameters": {
              "id": 104160,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1552:0:245"
            },
            "scope": 104167,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Reverter",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          104167
        ],
        "name": "Reverter",
        "nameLocation": "1505:8:245",
        "scope": 104514,
        "usedErrors": []
      },
      {
        "id": 104198,
        "nodeType": "ContractDefinition",
        "src": "1600:262:245",
        "nodes": [
          {
            "id": 104171,
            "nodeType": "VariableDeclaration",
            "src": "1629:37:245",
            "nodes": [],
            "constant": false,
            "functionSelector": "ecf265bc",
            "mutability": "mutable",
            "name": "db",
            "nameLocation": "1664:2:245",
            "scope": 104198,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
              "typeString": "mapping(bytes32 => bytes32)"
            },
            "typeName": {
              "id": 104170,
              "keyType": {
                "id": 104168,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1637:7:245",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "1629:27:245",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
                "typeString": "mapping(bytes32 => bytes32)"
              },
              "valueType": {
                "id": 104169,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "1648:7:245",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              }
            },
            "visibility": "public"
          },
          {
            "id": 104185,
            "nodeType": "FunctionDefinition",
            "src": "1673:92:245",
            "nodes": [],
            "body": {
              "id": 104184,
              "nodeType": "Block",
              "src": "1731:34:245",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 104182,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 104178,
                        "name": "db",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 104171,
                        "src": "1741:2:245",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
                          "typeString": "mapping(bytes32 => bytes32)"
                        }
                      },
                      "id": 104180,
                      "indexExpression": {
                        "id": 104179,
                        "name": "_key",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 104173,
                        "src": "1744:4:245",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "1741:8:245",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 104181,
                      "name": "_value",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 104175,
                      "src": "1752:6:245",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1741:17:245",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 104183,
                  "nodeType": "ExpressionStatement",
                  "src": "1741:17:245"
                }
              ]
            },
            "functionSelector": "f71f7a25",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "set",
            "nameLocation": "1682:3:245",
            "parameters": {
              "id": 104176,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 104173,
                  "mutability": "mutable",
                  "name": "_key",
                  "nameLocation": "1694:4:245",
                  "nodeType": "VariableDeclaration",
                  "scope": 104185,
                  "src": "1686:12:245",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 104172,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1686:7:245",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 104175,
                  "mutability": "mutable",
                  "name": "_value",
                  "nameLocation": "1708:6:245",
                  "nodeType": "VariableDeclaration",
                  "scope": 104185,
                  "src": "1700:14:245",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 104174,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1700:7:245",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1685:30:245"
            },
            "returnParameters": {
              "id": 104177,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1731:0:245"
            },
            "scope": 104198,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 104197,
            "nodeType": "FunctionDefinition",
            "src": "1771:89:245",
            "nodes": [],
            "body": {
              "id": 104196,
              "nodeType": "Block",
              "src": "1828:32:245",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "baseExpression": {
                      "id": 104192,
                      "name": "db",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 104171,
                      "src": "1845:2:245",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_bytes32_$_t_bytes32_$",
                        "typeString": "mapping(bytes32 => bytes32)"
                      }
                    },
                    "id": 104194,
                    "indexExpression": {
                      "id": 104193,
                      "name": "_key",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 104187,
                      "src": "1848:4:245",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "1845:8:245",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 104191,
                  "id": 104195,
                  "nodeType": "Return",
                  "src": "1838:15:245"
                }
              ]
            },
            "functionSelector": "8eaa6ac0",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "get",
            "nameLocation": "1780:3:245",
            "parameters": {
              "id": 104188,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 104187,
                  "mutability": "mutable",
                  "name": "_key",
                  "nameLocation": "1792:4:245",
                  "nodeType": "VariableDeclaration",
                  "scope": 104197,
                  "src": "1784:12:245",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 104186,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1784:7:245",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1783:14:245"
            },
            "returnParameters": {
              "id": 104191,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 104190,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 104197,
                  "src": "1819:7:245",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 104189,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1819:7:245",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1818:9:245"
            },
            "scope": 104198,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "SimpleStorage",
        "contractDependencies": [],
        "contractKind": "contract",
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          104198
        ],
        "name": "SimpleStorage",
        "nameLocation": "1609:13:245",
        "scope": 104514,
        "usedErrors": []
      },
      {
        "id": 104368,
        "nodeType": "ContractDefinition",
        "src": "2089:3808:245",
        "nodes": [
          {
            "id": 104205,
            "nodeType": "VariableDeclaration",
            "src": "2188:110:245",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 104200,
              "nodeType": "StructuredDocumentation",
              "src": "2126:57:245",
              "text": "@notice EIP712 typehash for the ClaimableInvite type."
            },
            "functionSelector": "c4fc453d",
            "mutability": "constant",
            "name": "CLAIMABLE_INVITE_TYPEHASH",
            "nameLocation": "2212:25:245",
            "scope": 104368,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 104201,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2188:7:245",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "436c61696d61626c65496e766974652861646472657373206973737565722c62797465733332206e6f6e636529",
                  "id": 104203,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2250:47:245",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_6529fd129351e725d7bcbc468b0b0b4675477e56b58514e69ab7e66ddfd20fce",
                    "typeString": "literal_string \"ClaimableInvite(address issuer,bytes32 nonce)\""
                  },
                  "value": "ClaimableInvite(address issuer,bytes32 nonce)"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_6529fd129351e725d7bcbc468b0b0b4675477e56b58514e69ab7e66ddfd20fce",
                    "typeString": "literal_string \"ClaimableInvite(address issuer,bytes32 nonce)\""
                  }
                ],
                "id": 104202,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "2240:9:245",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 104204,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2240:58:245",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 104211,
            "nodeType": "VariableDeclaration",
            "src": "2406:152:245",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 104206,
              "nodeType": "StructuredDocumentation",
              "src": "2305:96:245",
              "text": "@notice EIP712 typehash for the EIP712Domain type that is included as part of the signature."
            },
            "functionSelector": "c7977be7",
            "mutability": "constant",
            "name": "EIP712_DOMAIN_TYPEHASH",
            "nameLocation": "2430:22:245",
            "scope": 104368,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 104207,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "2406:7:245",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
                  "id": 104209,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "2473:84:245",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
                    "typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
                  },
                  "value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
                    "typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
                  }
                ],
                "id": 104208,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "2463:9:245",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 104210,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "2463:95:245",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 104215,
            "nodeType": "VariableDeclaration",
            "src": "2633:38:245",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 104212,
              "nodeType": "StructuredDocumentation",
              "src": "2565:63:245",
              "text": "@notice Address of OptimistInviter contract we are testing."
            },
            "functionSelector": "d1829907",
            "mutability": "mutable",
            "name": "optimistInviter",
            "nameLocation": "2656:15:245",
            "scope": 104368,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_OptimistInviter_$80326",
              "typeString": "contract OptimistInviter"
            },
            "typeName": {
              "id": 104214,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 104213,
                "name": "OptimistInviter",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 80326,
                "src": "2633:15:245"
              },
              "referencedDeclaration": 80326,
              "src": "2633:15:245",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_OptimistInviter_$80326",
                "typeString": "contract OptimistInviter"
              }
            },
            "visibility": "public"
          },
          {
            "id": 104218,
            "nodeType": "VariableDeclaration",
            "src": "2763:18:245",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 104216,
              "nodeType": "StructuredDocumentation",
              "src": "2678:80:245",
              "text": "@notice OptimistInviter contract name. Used to construct the EIP-712 domain."
            },
            "functionSelector": "06fdde03",
            "mutability": "mutable",
            "name": "name",
            "nameLocation": "2777:4:245",
            "scope": 104368,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string"
            },
            "typeName": {
              "id": 104217,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "2763:6:245",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "visibility": "public"
          },
          {
            "id": 104221,
            "nodeType": "VariableDeclaration",
            "src": "2873:27:245",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 104219,
              "nodeType": "StructuredDocumentation",
              "src": "2788:80:245",
              "text": "@notice Keeps track of current nonce to generate new nonces for each invite."
            },
            "functionSelector": "adb610a3",
            "mutability": "mutable",
            "name": "currentNonce",
            "nameLocation": "2888:12:245",
            "scope": 104368,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 104220,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "2873:7:245",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 104238,
            "nodeType": "FunctionDefinition",
            "src": "2907:140:245",
            "nodes": [],
            "body": {
              "id": 104237,
              "nodeType": "Block",
              "src": "2974:73:245",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 104231,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 104229,
                      "name": "optimistInviter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 104215,
                      "src": "2984:15:245",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OptimistInviter_$80326",
                        "typeString": "contract OptimistInviter"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 104230,
                      "name": "_optimistInviter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 104224,
                      "src": "3002:16:245",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_OptimistInviter_$80326",
                        "typeString": "contract OptimistInviter"
                      }
                    },
                    "src": "2984:34:245",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OptimistInviter_$80326",
                      "typeString": "contract OptimistInviter"
                    }
                  },
                  "id": 104232,
                  "nodeType": "ExpressionStatement",
                  "src": "2984:34:245"
                },
                {
                  "expression": {
                    "id": 104235,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 104233,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 104218,
                      "src": "3028:4:245",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 104234,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 104226,
                      "src": "3035:5:245",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "3028:12:245",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 104236,
                  "nodeType": "ExpressionStatement",
                  "src": "3028:12:245"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 104227,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 104224,
                  "mutability": "mutable",
                  "name": "_optimistInviter",
                  "nameLocation": "2935:16:245",
                  "nodeType": "VariableDeclaration",
                  "scope": 104238,
                  "src": "2919:32:245",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_OptimistInviter_$80326",
                    "typeString": "contract OptimistInviter"
                  },
                  "typeName": {
                    "id": 104223,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 104222,
                      "name": "OptimistInviter",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 80326,
                      "src": "2919:15:245"
                    },
                    "referencedDeclaration": 80326,
                    "src": "2919:15:245",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_OptimistInviter_$80326",
                      "typeString": "contract OptimistInviter"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 104226,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "2967:5:245",
                  "nodeType": "VariableDeclaration",
                  "scope": 104238,
                  "src": "2953:19:245",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 104225,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "2953:6:245",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2918:55:245"
            },
            "returnParameters": {
              "id": 104228,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2974:0:245"
            },
            "scope": 104368,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 104259,
            "nodeType": "FunctionDefinition",
            "src": "3224:274:245",
            "nodes": [],
            "body": {
              "id": 104258,
              "nodeType": "Block",
              "src": "3377:121:245",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 104250,
                            "name": "CLAIMABLE_INVITE_TYPEHASH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 104205,
                            "src": "3415:25:245",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 104251,
                              "name": "_claimableInvite",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 104242,
                              "src": "3442:16:245",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ClaimableInvite_$80044_memory_ptr",
                                "typeString": "struct OptimistInviter.ClaimableInvite memory"
                              }
                            },
                            "id": 104252,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "issuer",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 80041,
                            "src": "3442:23:245",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 104253,
                              "name": "_claimableInvite",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 104242,
                              "src": "3467:16:245",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_ClaimableInvite_$80044_memory_ptr",
                                "typeString": "struct OptimistInviter.ClaimableInvite memory"
                              }
                            },
                            "id": 104254,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "nonce",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 80043,
                            "src": "3467:22:245",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 104248,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "3404:3:245",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 104249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "3404:10:245",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 104255,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3404:86:245",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 104247,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "3394:9:245",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 104256,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3394:97:245",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 104246,
                  "id": 104257,
                  "nodeType": "Return",
                  "src": "3387:104:245"
                }
              ]
            },
            "documentation": {
              "id": 104239,
              "nodeType": "StructuredDocumentation",
              "src": "3053:166:245",
              "text": "@notice Returns the hash of the struct ClaimableInvite.\n @param _claimableInvite ClaimableInvite struct to hash.\n @return EIP-712 typed struct hash."
            },
            "functionSelector": "eb1df626",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getClaimableInviteStructHash",
            "nameLocation": "3233:28:245",
            "parameters": {
              "id": 104243,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 104242,
                  "mutability": "mutable",
                  "name": "_claimableInvite",
                  "nameLocation": "3301:16:245",
                  "nodeType": "VariableDeclaration",
                  "scope": 104259,
                  "src": "3262:55:245",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ClaimableInvite_$80044_memory_ptr",
                    "typeString": "struct OptimistInviter.ClaimableInvite"
                  },
                  "typeName": {
                    "id": 104241,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 104240,
                      "name": "OptimistInviter.ClaimableInvite",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 80044,
                      "src": "3262:31:245"
                    },
                    "referencedDeclaration": 80044,
                    "src": "3262:31:245",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ClaimableInvite_$80044_storage_ptr",
                      "typeString": "struct OptimistInviter.ClaimableInvite"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3261:57:245"
            },
            "returnParameters": {
              "id": 104246,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 104245,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 104259,
                  "src": "3364:7:245",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 104244,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3364:7:245",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3363:9:245"
            },
            "scope": 104368,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 104277,
            "nodeType": "FunctionDefinition",
            "src": "3712:119:245",
            "nodes": [],
            "body": {
              "id": 104276,
              "nodeType": "Block",
              "src": "3761:70:245",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 104271,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "3807:14:245",
                                "subExpression": {
                                  "id": 104270,
                                  "name": "currentNonce",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 104221,
                                  "src": "3807:12:245",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 104268,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "3796:3:245",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 104269,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encode",
                              "nodeType": "MemberAccess",
                              "src": "3796:10:245",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 104272,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "3796:26:245",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 104267,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "3786:9:245",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 104273,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "3786:37:245",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 104266,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "3778:7:245",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes32_$",
                        "typeString": "type(bytes32)"
                      },
                      "typeName": {
                        "id": 104265,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "3778:7:245",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 104274,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3778:46:245",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 104264,
                  "id": 104275,
                  "nodeType": "Return",
                  "src": "3771:53:245"
                }
              ]
            },
            "documentation": {
              "id": 104260,
              "nodeType": "StructuredDocumentation",
              "src": "3504:203:245",
              "text": "@notice Returns a bytes32 nonce that should change everytime. In practice, people should use\n         pseudorandom nonces.\n @return Nonce that should be used as part of ClaimableInvite."
            },
            "functionSelector": "34b15118",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "consumeNonce",
            "nameLocation": "3721:12:245",
            "parameters": {
              "id": 104261,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3733:2:245"
            },
            "returnParameters": {
              "id": 104264,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 104263,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 104277,
                  "src": "3752:7:245",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 104262,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3752:7:245",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3751:9:245"
            },
            "scope": 104368,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 104294,
            "nodeType": "FunctionDefinition",
            "src": "4040:193:245",
            "nodes": [],
            "body": {
              "id": 104293,
              "nodeType": "Block",
              "src": "4153:80:245",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 104288,
                        "name": "_issuer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 104280,
                        "src": "4202:7:245",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 104289,
                          "name": "consumeNonce",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 104277,
                          "src": "4211:12:245",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_nonpayable$__$returns$_t_bytes32_$",
                            "typeString": "function () returns (bytes32)"
                          }
                        },
                        "id": 104290,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4211:14:245",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 104286,
                        "name": "OptimistInviter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 80326,
                        "src": "4170:15:245",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_OptimistInviter_$80326_$",
                          "typeString": "type(contract OptimistInviter)"
                        }
                      },
                      "id": 104287,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "ClaimableInvite",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 80044,
                      "src": "4170:31:245",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_struct$_ClaimableInvite_$80044_storage_ptr_$",
                        "typeString": "type(struct OptimistInviter.ClaimableInvite storage pointer)"
                      }
                    },
                    "id": 104291,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "structConstructorCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4170:56:245",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ClaimableInvite_$80044_memory_ptr",
                      "typeString": "struct OptimistInviter.ClaimableInvite memory"
                    }
                  },
                  "functionReturnParameters": 104285,
                  "id": 104292,
                  "nodeType": "Return",
                  "src": "4163:63:245"
                }
              ]
            },
            "documentation": {
              "id": 104278,
              "nodeType": "StructuredDocumentation",
              "src": "3837:198:245",
              "text": "@notice Returns a ClaimableInvite with the issuer and current nonce.\n @param _issuer Issuer to include in the ClaimableInvite.\n @return ClaimableInvite that can be hashed & signed."
            },
            "functionSelector": "8ebe24e5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getClaimableInviteWithNewNonce",
            "nameLocation": "4049:30:245",
            "parameters": {
              "id": 104281,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 104280,
                  "mutability": "mutable",
                  "name": "_issuer",
                  "nameLocation": "4088:7:245",
                  "nodeType": "VariableDeclaration",
                  "scope": 104294,
                  "src": "4080:15:245",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 104279,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4080:7:245",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4079:17:245"
            },
            "returnParameters": {
              "id": 104285,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 104284,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 104294,
                  "src": "4113:38:245",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ClaimableInvite_$80044_memory_ptr",
                    "typeString": "struct OptimistInviter.ClaimableInvite"
                  },
                  "typeName": {
                    "id": 104283,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 104282,
                      "name": "OptimistInviter.ClaimableInvite",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 80044,
                      "src": "4113:31:245"
                    },
                    "referencedDeclaration": 80044,
                    "src": "4113:31:245",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ClaimableInvite_$80044_storage_ptr",
                      "typeString": "struct OptimistInviter.ClaimableInvite"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4112:40:245"
            },
            "scope": 104368,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 104324,
            "nodeType": "FunctionDefinition",
            "src": "4422:340:245",
            "nodes": [],
            "body": {
              "id": 104323,
              "nodeType": "Block",
              "src": "4530:232:245",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 104304,
                        "name": "_claimableInvite",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 104298,
                        "src": "4586:16:245",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_ClaimableInvite_$80044_calldata_ptr",
                          "typeString": "struct OptimistInviter.ClaimableInvite calldata"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 104307,
                            "name": "name",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 104218,
                            "src": "4622:4:245",
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_storage",
                              "typeString": "string storage ref"
                            }
                          ],
                          "id": 104306,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4616:5:245",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 104305,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "4616:5:245",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 104308,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4616:11:245",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes storage pointer"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [],
                            "expression": {
                              "argumentTypes": [],
                              "expression": {
                                "id": 104311,
                                "name": "optimistInviter",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 104215,
                                "src": "4647:15:245",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_OptimistInviter_$80326",
                                  "typeString": "contract OptimistInviter"
                                }
                              },
                              "id": 104312,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "EIP712_VERSION",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 80015,
                              "src": "4647:30:245",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_view$__$returns$_t_string_memory_ptr_$",
                                "typeString": "function () view external returns (string memory)"
                              }
                            },
                            "id": 104313,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4647:32:245",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_string_memory_ptr",
                              "typeString": "string memory"
                            }
                          ],
                          "id": 104310,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4641:5:245",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 104309,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "4641:5:245",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 104314,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4641:39:245",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "expression": {
                          "id": 104315,
                          "name": "block",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -4,
                          "src": "4694:5:245",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_block",
                            "typeString": "block"
                          }
                        },
                        "id": 104316,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "chainid",
                        "nodeType": "MemberAccess",
                        "src": "4694:13:245",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 104319,
                            "name": "optimistInviter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 104215,
                            "src": "4729:15:245",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_OptimistInviter_$80326",
                              "typeString": "contract OptimistInviter"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_OptimistInviter_$80326",
                              "typeString": "contract OptimistInviter"
                            }
                          ],
                          "id": 104318,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4721:7:245",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 104317,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4721:7:245",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 104320,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4721:24:245",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_ClaimableInvite_$80044_calldata_ptr",
                          "typeString": "struct OptimistInviter.ClaimableInvite calldata"
                        },
                        {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes storage pointer"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 104303,
                      "name": "getDigestWithEIP712Domain",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 104367,
                      "src": "4547:25:245",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_ClaimableInvite_$80044_calldata_ptr_$_t_bytes_memory_ptr_$_t_bytes_memory_ptr_$_t_uint256_$_t_address_$returns$_t_bytes32_$",
                        "typeString": "function (struct OptimistInviter.ClaimableInvite calldata,bytes memory,bytes memory,uint256,address) pure returns (bytes32)"
                      }
                    },
                    "id": 104321,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4547:208:245",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 104302,
                  "id": 104322,
                  "nodeType": "Return",
                  "src": "4540:215:245"
                }
              ]
            },
            "documentation": {
              "id": 104295,
              "nodeType": "StructuredDocumentation",
              "src": "4239:178:245",
              "text": "@notice Computes the EIP712 digest with default correct parameters.\n @param _claimableInvite ClaimableInvite struct to hash.\n @return EIP-712 compatible digest."
            },
            "functionSelector": "1c6e7f25",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDigest",
            "nameLocation": "4431:9:245",
            "parameters": {
              "id": 104299,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 104298,
                  "mutability": "mutable",
                  "name": "_claimableInvite",
                  "nameLocation": "4482:16:245",
                  "nodeType": "VariableDeclaration",
                  "scope": 104324,
                  "src": "4441:57:245",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ClaimableInvite_$80044_calldata_ptr",
                    "typeString": "struct OptimistInviter.ClaimableInvite"
                  },
                  "typeName": {
                    "id": 104297,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 104296,
                      "name": "OptimistInviter.ClaimableInvite",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 80044,
                      "src": "4441:31:245"
                    },
                    "referencedDeclaration": 80044,
                    "src": "4441:31:245",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ClaimableInvite_$80044_storage_ptr",
                      "typeString": "struct OptimistInviter.ClaimableInvite"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4440:59:245"
            },
            "returnParameters": {
              "id": 104302,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 104301,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 104324,
                  "src": "4521:7:245",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 104300,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4521:7:245",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4520:9:245"
            },
            "scope": 104368,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 104367,
            "nodeType": "FunctionDefinition",
            "src": "5326:569:245",
            "nodes": [],
            "body": {
              "id": 104366,
              "nodeType": "Block",
              "src": "5613:282:245",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    104342
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 104342,
                      "mutability": "mutable",
                      "name": "domainSeparator",
                      "nameLocation": "5631:15:245",
                      "nodeType": "VariableDeclaration",
                      "scope": 104366,
                      "src": "5623:23:245",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 104341,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5623:7:245",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 104357,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 104346,
                            "name": "EIP712_DOMAIN_TYPEHASH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 104211,
                            "src": "5683:22:245",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 104348,
                                "name": "_name",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 104330,
                                "src": "5717:5:245",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 104347,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "5707:9:245",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 104349,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5707:16:245",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 104351,
                                "name": "_version",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 104332,
                                "src": "5735:8:245",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 104350,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "5725:9:245",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 104352,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "5725:19:245",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 104353,
                            "name": "_chainid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 104334,
                            "src": "5746:8:245",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 104354,
                            "name": "_verifyingContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 104336,
                            "src": "5756:18:245",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 104344,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "5672:3:245",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 104345,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "5672:10:245",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 104355,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5672:103:245",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 104343,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "5649:9:245",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 104356,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5649:136:245",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5623:162:245"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 104360,
                        "name": "domainSeparator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 104342,
                        "src": "5824:15:245",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 104362,
                            "name": "_claimableInvite",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 104328,
                            "src": "5870:16:245",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_ClaimableInvite_$80044_calldata_ptr",
                              "typeString": "struct OptimistInviter.ClaimableInvite calldata"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_ClaimableInvite_$80044_calldata_ptr",
                              "typeString": "struct OptimistInviter.ClaimableInvite calldata"
                            }
                          ],
                          "id": 104361,
                          "name": "getClaimableInviteStructHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 104259,
                          "src": "5841:28:245",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_ClaimableInvite_$80044_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (struct OptimistInviter.ClaimableInvite memory) pure returns (bytes32)"
                          }
                        },
                        "id": 104363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "5841:46:245",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 104358,
                        "name": "ECDSA",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 36545,
                        "src": "5802:5:245",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ECDSA_$36545_$",
                          "typeString": "type(library ECDSA)"
                        }
                      },
                      "id": 104359,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "toTypedDataHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 36544,
                      "src": "5802:21:245",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32,bytes32) pure returns (bytes32)"
                      }
                    },
                    "id": 104364,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5802:86:245",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 104340,
                  "id": 104365,
                  "nodeType": "Return",
                  "src": "5795:93:245"
                }
              ]
            },
            "documentation": {
              "id": 104325,
              "nodeType": "StructuredDocumentation",
              "src": "4768:553:245",
              "text": "@notice Computes the EIP712 digest with the given domain parameters.\n         Used for testing that different domain parameters fail.\n @param _claimableInvite   ClaimableInvite struct to hash.\n @param _name              Contract name to use in the EIP712 domain.\n @param _version           Contract version to use in the EIP712 domain.\n @param _chainid           Chain ID to use in the EIP712 domain.\n @param _verifyingContract Address to use in the EIP712 domain.\n @return EIP-712 compatible digest."
            },
            "functionSelector": "019a4f49",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDigestWithEIP712Domain",
            "nameLocation": "5335:25:245",
            "parameters": {
              "id": 104337,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 104328,
                  "mutability": "mutable",
                  "name": "_claimableInvite",
                  "nameLocation": "5411:16:245",
                  "nodeType": "VariableDeclaration",
                  "scope": 104367,
                  "src": "5370:57:245",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_ClaimableInvite_$80044_calldata_ptr",
                    "typeString": "struct OptimistInviter.ClaimableInvite"
                  },
                  "typeName": {
                    "id": 104327,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 104326,
                      "name": "OptimistInviter.ClaimableInvite",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 80044,
                      "src": "5370:31:245"
                    },
                    "referencedDeclaration": 80044,
                    "src": "5370:31:245",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_ClaimableInvite_$80044_storage_ptr",
                      "typeString": "struct OptimistInviter.ClaimableInvite"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 104330,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "5450:5:245",
                  "nodeType": "VariableDeclaration",
                  "scope": 104367,
                  "src": "5437:18:245",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 104329,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5437:5:245",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 104332,
                  "mutability": "mutable",
                  "name": "_version",
                  "nameLocation": "5478:8:245",
                  "nodeType": "VariableDeclaration",
                  "scope": 104367,
                  "src": "5465:21:245",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 104331,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5465:5:245",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 104334,
                  "mutability": "mutable",
                  "name": "_chainid",
                  "nameLocation": "5504:8:245",
                  "nodeType": "VariableDeclaration",
                  "scope": 104367,
                  "src": "5496:16:245",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 104333,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5496:7:245",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 104336,
                  "mutability": "mutable",
                  "name": "_verifyingContract",
                  "nameLocation": "5530:18:245",
                  "nodeType": "VariableDeclaration",
                  "scope": 104367,
                  "src": "5522:26:245",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 104335,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5522:7:245",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5360:194:245"
            },
            "returnParameters": {
              "id": 104340,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 104339,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 104367,
                  "src": "5600:7:245",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 104338,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5600:7:245",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5599:9:245"
            },
            "scope": 104368,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "OptimistInviterHelper",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 104199,
          "nodeType": "StructuredDocumentation",
          "src": "1864:225:245",
          "text": "@notice Simple helper contract that helps with testing flow and signature for\n         OptimistInviter contract. Made this a separate contract instead of including\n         in OptimistInviter.t.sol for reusability."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          104368
        ],
        "name": "OptimistInviterHelper",
        "nameLocation": "2098:21:245",
        "scope": 104514,
        "usedErrors": []
      },
      {
        "id": 104412,
        "nodeType": "ContractDefinition",
        "src": "6119:369:245",
        "nodes": [
          {
            "id": 104383,
            "nodeType": "FunctionDefinition",
            "src": "6173:84:245",
            "nodes": [],
            "body": {
              "id": 104382,
              "nodeType": "Block",
              "src": "6208:49:245",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 104379,
                        "name": "originalOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 104375,
                        "src": "6236:13:245",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 104378,
                      "name": "transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 31980,
                      "src": "6218:17:245",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 104380,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6218:32:245",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 104381,
                  "nodeType": "ExpressionStatement",
                  "src": "6218:32:245"
                }
              ]
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 104376,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 104375,
                  "mutability": "mutable",
                  "name": "originalOwner",
                  "nameLocation": "6193:13:245",
                  "nodeType": "VariableDeclaration",
                  "scope": 104383,
                  "src": "6185:21:245",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 104374,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6185:7:245",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6184:23:245"
            },
            "returnParameters": {
              "id": 104377,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6208:0:245"
            },
            "scope": 104412,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 104411,
            "nodeType": "FunctionDefinition",
            "src": "6263:223:245",
            "nodes": [],
            "body": {
              "id": 104410,
              "nodeType": "Block",
              "src": "6376:110:245",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "condition": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 104400,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "arguments": [
                          {
                            "id": 104395,
                            "name": "hash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 104385,
                            "src": "6407:4:245",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 104396,
                            "name": "signature",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 104387,
                            "src": "6413:9:245",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 104393,
                            "name": "ECDSA",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 36545,
                            "src": "6393:5:245",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_ECDSA_$36545_$",
                              "typeString": "type(library ECDSA)"
                            }
                          },
                          "id": 104394,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "recover",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 36294,
                          "src": "6393:13:245",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                            "typeString": "function (bytes32,bytes memory) pure returns (address)"
                          }
                        },
                        "id": 104397,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6393:30:245",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "arguments": [],
                        "expression": {
                          "argumentTypes": [],
                          "id": 104398,
                          "name": "owner",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31929,
                          "src": "6427:5:245",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_view$__$returns$_t_address_$",
                            "typeString": "function () view returns (address)"
                          }
                        },
                        "id": 104399,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "6427:7:245",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "6393:41:245",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "falseExpression": {
                      "arguments": [
                        {
                          "hexValue": "30",
                          "id": 104406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "6477:1:245",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          }
                        ],
                        "id": 104405,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "lValueRequested": false,
                        "nodeType": "ElementaryTypeNameExpression",
                        "src": "6470:6:245",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_bytes4_$",
                          "typeString": "type(bytes4)"
                        },
                        "typeName": {
                          "id": 104404,
                          "name": "bytes4",
                          "nodeType": "ElementaryTypeName",
                          "src": "6470:6:245",
                          "typeDescriptions": {}
                        }
                      },
                      "id": 104407,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "typeConversion",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6470:9:245",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "id": 104408,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "Conditional",
                    "src": "6393:86:245",
                    "trueExpression": {
                      "expression": {
                        "expression": {
                          "id": 104401,
                          "name": "this",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -28,
                          "src": "6437:4:245",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_TestERC1271Wallet_$104412",
                            "typeString": "contract TestERC1271Wallet"
                          }
                        },
                        "id": 104402,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "isValidSignature",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 104411,
                        "src": "6437:21:245",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                          "typeString": "function (bytes32,bytes memory) view external returns (bytes4)"
                        }
                      },
                      "id": 104403,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "memberName": "selector",
                      "nodeType": "MemberAccess",
                      "src": "6437:30:245",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes4",
                        "typeString": "bytes4"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "functionReturnParameters": 104392,
                  "id": 104409,
                  "nodeType": "Return",
                  "src": "6386:93:245"
                }
              ]
            },
            "baseFunctions": [
              32092
            ],
            "functionSelector": "1626ba7e",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "isValidSignature",
            "nameLocation": "6272:16:245",
            "overrides": {
              "id": 104389,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "6339:8:245"
            },
            "parameters": {
              "id": 104388,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 104385,
                  "mutability": "mutable",
                  "name": "hash",
                  "nameLocation": "6297:4:245",
                  "nodeType": "VariableDeclaration",
                  "scope": 104411,
                  "src": "6289:12:245",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 104384,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6289:7:245",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 104387,
                  "mutability": "mutable",
                  "name": "signature",
                  "nameLocation": "6316:9:245",
                  "nodeType": "VariableDeclaration",
                  "scope": 104411,
                  "src": "6303:22:245",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 104386,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6303:5:245",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6288:38:245"
            },
            "returnParameters": {
              "id": 104392,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 104391,
                  "mutability": "mutable",
                  "name": "magicValue",
                  "nameLocation": "6364:10:245",
                  "nodeType": "VariableDeclaration",
                  "scope": 104411,
                  "src": "6357:17:245",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes4",
                    "typeString": "bytes4"
                  },
                  "typeName": {
                    "id": 104390,
                    "name": "bytes4",
                    "nodeType": "ElementaryTypeName",
                    "src": "6357:6:245",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes4",
                      "typeString": "bytes4"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6356:19:245"
            },
            "scope": 104412,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 104370,
              "name": "Ownable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 32001,
              "src": "6149:7:245"
            },
            "id": 104371,
            "nodeType": "InheritanceSpecifier",
            "src": "6149:7:245"
          },
          {
            "baseName": {
              "id": 104372,
              "name": "IERC1271",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 32093,
              "src": "6158:8:245"
            },
            "id": 104373,
            "nodeType": "InheritanceSpecifier",
            "src": "6158:8:245"
          }
        ],
        "canonicalName": "TestERC1271Wallet",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 104369,
          "nodeType": "StructuredDocumentation",
          "src": "5899:220:245",
          "text": "@notice Simple ERC1271 wallet that can be used to test the ERC1271 signature checker.\n @notice https://github.com/OpenZeppelin/openzeppelin-contracts/\n         blob/master/contracts/mocks/ERC1271WalletMock.sol"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          104412,
          32093,
          32001,
          35857
        ],
        "name": "TestERC1271Wallet",
        "nameLocation": "6128:17:245",
        "scope": 104514,
        "usedErrors": []
      },
      {
        "id": 104513,
        "nodeType": "ContractDefinition",
        "src": "6570:2488:245",
        "nodes": [
          {
            "id": 104419,
            "nodeType": "VariableDeclaration",
            "src": "6650:103:245",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 104414,
              "nodeType": "StructuredDocumentation",
              "src": "6598:47:245",
              "text": "@notice EIP712 typehash for the Proof type."
            },
            "functionSelector": "8b3e3bf6",
            "mutability": "constant",
            "name": "PROOF_TYPEHASH",
            "nameLocation": "6674:14:245",
            "scope": 104513,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 104415,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "6650:7:245",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "50726f6f66286164647265737320726563697069656e742c62797465733332206e6f6e63652c6279746573333220696429",
                  "id": 104417,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "6701:51:245",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_d4283507dc7a8282faa6b4c8c18bacbb74dbbab5467342e6f581656f3577236e",
                    "typeString": "literal_string \"Proof(address recipient,bytes32 nonce,bytes32 id)\""
                  },
                  "value": "Proof(address recipient,bytes32 nonce,bytes32 id)"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_d4283507dc7a8282faa6b4c8c18bacbb74dbbab5467342e6f581656f3577236e",
                    "typeString": "literal_string \"Proof(address recipient,bytes32 nonce,bytes32 id)\""
                  }
                ],
                "id": 104416,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "6691:9:245",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 104418,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "6691:62:245",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 104425,
            "nodeType": "VariableDeclaration",
            "src": "6861:152:245",
            "nodes": [],
            "constant": true,
            "documentation": {
              "id": 104420,
              "nodeType": "StructuredDocumentation",
              "src": "6760:96:245",
              "text": "@notice EIP712 typehash for the EIP712Domain type that is included as part of the signature."
            },
            "functionSelector": "c7977be7",
            "mutability": "constant",
            "name": "EIP712_DOMAIN_TYPEHASH",
            "nameLocation": "6885:22:245",
            "scope": 104513,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 104421,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "6861:7:245",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "value": {
              "arguments": [
                {
                  "hexValue": "454950373132446f6d61696e28737472696e67206e616d652c737472696e672076657273696f6e2c75696e7432353620636861696e49642c6164647265737320766572696679696e67436f6e747261637429",
                  "id": 104423,
                  "isConstant": false,
                  "isLValue": false,
                  "isPure": true,
                  "kind": "string",
                  "lValueRequested": false,
                  "nodeType": "Literal",
                  "src": "6928:84:245",
                  "typeDescriptions": {
                    "typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
                    "typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
                  },
                  "value": "EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)"
                }
              ],
              "expression": {
                "argumentTypes": [
                  {
                    "typeIdentifier": "t_stringliteral_8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f",
                    "typeString": "literal_string \"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\""
                  }
                ],
                "id": 104422,
                "name": "keccak256",
                "nodeType": "Identifier",
                "overloadedDeclarations": [],
                "referencedDeclaration": -8,
                "src": "6918:9:245",
                "typeDescriptions": {
                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                  "typeString": "function (bytes memory) pure returns (bytes32)"
                }
              },
              "id": 104424,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "functionCall",
              "lValueRequested": false,
              "names": [],
              "nodeType": "FunctionCall",
              "src": "6918:95:245",
              "tryCall": false,
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 104428,
            "nodeType": "VariableDeclaration",
            "src": "7103:27:245",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 104426,
              "nodeType": "StructuredDocumentation",
              "src": "7020:78:245",
              "text": "@notice Keeps track of current nonce to generate new nonces for each drip."
            },
            "functionSelector": "adb610a3",
            "mutability": "mutable",
            "name": "currentNonce",
            "nameLocation": "7118:12:245",
            "scope": 104513,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 104427,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "7103:7:245",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "public"
          },
          {
            "id": 104446,
            "nodeType": "FunctionDefinition",
            "src": "7345:119:245",
            "nodes": [],
            "body": {
              "id": 104445,
              "nodeType": "Block",
              "src": "7394:70:245",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 104440,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "UnaryOperation",
                                "operator": "++",
                                "prefix": false,
                                "src": "7440:14:245",
                                "subExpression": {
                                  "id": 104439,
                                  "name": "currentNonce",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 104428,
                                  "src": "7440:12:245",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              ],
                              "expression": {
                                "id": 104437,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "7429:3:245",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 104438,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encode",
                              "nodeType": "MemberAccess",
                              "src": "7429:10:245",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 104441,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "7429:26:245",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 104436,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "7419:9:245",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 104442,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7419:37:245",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 104435,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "7411:7:245",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_bytes32_$",
                        "typeString": "type(bytes32)"
                      },
                      "typeName": {
                        "id": 104434,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "7411:7:245",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 104443,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7411:46:245",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 104433,
                  "id": 104444,
                  "nodeType": "Return",
                  "src": "7404:53:245"
                }
              ]
            },
            "documentation": {
              "id": 104429,
              "nodeType": "StructuredDocumentation",
              "src": "7137:203:245",
              "text": "@notice Returns a bytes32 nonce that should change everytime. In practice, people should use\n         pseudorandom nonces.\n @return Nonce that should be used as part of drip parameters."
            },
            "functionSelector": "34b15118",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "consumeNonce",
            "nameLocation": "7354:12:245",
            "parameters": {
              "id": 104430,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7366:2:245"
            },
            "returnParameters": {
              "id": 104433,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 104432,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 104446,
                  "src": "7385:7:245",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 104431,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7385:7:245",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7384:9:245"
            },
            "scope": 104513,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 104469,
            "nodeType": "FunctionDefinition",
            "src": "7611:205:245",
            "nodes": [],
            "body": {
              "id": 104468,
              "nodeType": "Block",
              "src": "7712:104:245",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 104458,
                            "name": "PROOF_TYPEHASH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 104419,
                            "src": "7750:14:245",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 104459,
                              "name": "_proof",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 104450,
                              "src": "7766:6:245",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proof_$79360_memory_ptr",
                                "typeString": "struct AdminFaucetAuthModule.Proof memory"
                              }
                            },
                            "id": 104460,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "recipient",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 79355,
                            "src": "7766:16:245",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 104461,
                              "name": "_proof",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 104450,
                              "src": "7784:6:245",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proof_$79360_memory_ptr",
                                "typeString": "struct AdminFaucetAuthModule.Proof memory"
                              }
                            },
                            "id": 104462,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "nonce",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 79357,
                            "src": "7784:12:245",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "expression": {
                              "id": 104463,
                              "name": "_proof",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 104450,
                              "src": "7798:6:245",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Proof_$79360_memory_ptr",
                                "typeString": "struct AdminFaucetAuthModule.Proof memory"
                              }
                            },
                            "id": 104464,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "id",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 79359,
                            "src": "7798:9:245",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          ],
                          "expression": {
                            "id": 104456,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "7739:3:245",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 104457,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "7739:10:245",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 104465,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "7739:69:245",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 104455,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "7729:9:245",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 104466,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7729:80:245",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 104454,
                  "id": 104467,
                  "nodeType": "Return",
                  "src": "7722:87:245"
                }
              ]
            },
            "documentation": {
              "id": 104447,
              "nodeType": "StructuredDocumentation",
              "src": "7470:136:245",
              "text": "@notice Returns the hash of the struct Proof.\n @param _proof Proof struct to hash.\n @return EIP-712 typed struct hash."
            },
            "functionSelector": "796dfbfa",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getProofStructHash",
            "nameLocation": "7620:18:245",
            "parameters": {
              "id": 104451,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 104450,
                  "mutability": "mutable",
                  "name": "_proof",
                  "nameLocation": "7674:6:245",
                  "nodeType": "VariableDeclaration",
                  "scope": 104469,
                  "src": "7639:41:245",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Proof_$79360_memory_ptr",
                    "typeString": "struct AdminFaucetAuthModule.Proof"
                  },
                  "typeName": {
                    "id": 104449,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 104448,
                      "name": "AdminFaucetAuthModule.Proof",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 79360,
                      "src": "7639:27:245"
                    },
                    "referencedDeclaration": 79360,
                    "src": "7639:27:245",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proof_$79360_storage_ptr",
                      "typeString": "struct AdminFaucetAuthModule.Proof"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7638:43:245"
            },
            "returnParameters": {
              "id": 104454,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 104453,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 104469,
                  "src": "7703:7:245",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 104452,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7703:7:245",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7702:9:245"
            },
            "scope": 104513,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 104512,
            "nodeType": "FunctionDefinition",
            "src": "8512:544:245",
            "nodes": [],
            "body": {
              "id": 104511,
              "nodeType": "Block",
              "src": "8783:273:245",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    104487
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 104487,
                      "mutability": "mutable",
                      "name": "domainSeparator",
                      "nameLocation": "8801:15:245",
                      "nodeType": "VariableDeclaration",
                      "scope": 104511,
                      "src": "8793:23:245",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 104486,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "8793:7:245",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 104502,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 104491,
                            "name": "EIP712_DOMAIN_TYPEHASH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 104425,
                            "src": "8853:22:245",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 104493,
                                "name": "_name",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 104475,
                                "src": "8887:5:245",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 104492,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "8877:9:245",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 104494,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8877:16:245",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "id": 104496,
                                "name": "_version",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 104477,
                                "src": "8905:8:245",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 104495,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "8895:9:245",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 104497,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "8895:19:245",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 104498,
                            "name": "_chainid",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 104479,
                            "src": "8916:8:245",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 104499,
                            "name": "_verifyingContract",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 104481,
                            "src": "8926:18:245",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 104489,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "8842:3:245",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 104490,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "8842:10:245",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 104500,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "8842:103:245",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 104488,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "8819:9:245",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 104501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8819:136:245",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8793:162:245"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 104505,
                        "name": "domainSeparator",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 104487,
                        "src": "9005:15:245",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 104507,
                            "name": "_proof",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 104473,
                            "src": "9041:6:245",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Proof_$79360_memory_ptr",
                              "typeString": "struct AdminFaucetAuthModule.Proof memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_struct$_Proof_$79360_memory_ptr",
                              "typeString": "struct AdminFaucetAuthModule.Proof memory"
                            }
                          ],
                          "id": 104506,
                          "name": "getProofStructHash",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 104469,
                          "src": "9022:18:245",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_internal_pure$_t_struct$_Proof_$79360_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (struct AdminFaucetAuthModule.Proof memory) pure returns (bytes32)"
                          }
                        },
                        "id": 104508,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "9022:26:245",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "expression": {
                        "id": 104503,
                        "name": "ECDSAUpgradeable",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 31682,
                        "src": "8972:16:245",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_ECDSAUpgradeable_$31682_$",
                          "typeString": "type(library ECDSAUpgradeable)"
                        }
                      },
                      "id": 104504,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "toTypedDataHash",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31681,
                      "src": "8972:32:245",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes32_$returns$_t_bytes32_$",
                        "typeString": "function (bytes32,bytes32) pure returns (bytes32)"
                      }
                    },
                    "id": 104509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8972:77:245",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 104485,
                  "id": 104510,
                  "nodeType": "Return",
                  "src": "8965:84:245"
                }
              ]
            },
            "documentation": {
              "id": 104470,
              "nodeType": "StructuredDocumentation",
              "src": "7822:685:245",
              "text": "@notice Computes the EIP712 digest with the given domain parameters.\n         Used for testing that different domain parameters fail.\n @param _proof             Proof struct to hash.\n @param _name              Contract name to use in the EIP712 domain.\n @param _version           Contract version to use in the EIP712 domain.\n @param _chainid           Chain ID to use in the EIP712 domain.\n @param _verifyingContract Address to use in the EIP712 domain.\n @param _verifyingContract Address to use in the EIP712 domain.\n @param _verifyingContract Address to use in the EIP712 domain.\n @return EIP-712 compatible digest."
            },
            "functionSelector": "b163a6b8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDigestWithEIP712Domain",
            "nameLocation": "8521:25:245",
            "parameters": {
              "id": 104482,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 104473,
                  "mutability": "mutable",
                  "name": "_proof",
                  "nameLocation": "8591:6:245",
                  "nodeType": "VariableDeclaration",
                  "scope": 104512,
                  "src": "8556:41:245",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Proof_$79360_memory_ptr",
                    "typeString": "struct AdminFaucetAuthModule.Proof"
                  },
                  "typeName": {
                    "id": 104472,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 104471,
                      "name": "AdminFaucetAuthModule.Proof",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 79360,
                      "src": "8556:27:245"
                    },
                    "referencedDeclaration": 79360,
                    "src": "8556:27:245",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Proof_$79360_storage_ptr",
                      "typeString": "struct AdminFaucetAuthModule.Proof"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 104475,
                  "mutability": "mutable",
                  "name": "_name",
                  "nameLocation": "8620:5:245",
                  "nodeType": "VariableDeclaration",
                  "scope": 104512,
                  "src": "8607:18:245",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 104474,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8607:5:245",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 104477,
                  "mutability": "mutable",
                  "name": "_version",
                  "nameLocation": "8648:8:245",
                  "nodeType": "VariableDeclaration",
                  "scope": 104512,
                  "src": "8635:21:245",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 104476,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8635:5:245",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 104479,
                  "mutability": "mutable",
                  "name": "_chainid",
                  "nameLocation": "8674:8:245",
                  "nodeType": "VariableDeclaration",
                  "scope": 104512,
                  "src": "8666:16:245",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 104478,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8666:7:245",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 104481,
                  "mutability": "mutable",
                  "name": "_verifyingContract",
                  "nameLocation": "8700:18:245",
                  "nodeType": "VariableDeclaration",
                  "scope": 104512,
                  "src": "8692:26:245",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 104480,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8692:7:245",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8546:178:245"
            },
            "returnParameters": {
              "id": 104485,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 104484,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 104512,
                  "src": "8770:7:245",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 104483,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8770:7:245",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8769:9:245"
            },
            "scope": 104513,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "FaucetHelper",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 104413,
          "nodeType": "StructuredDocumentation",
          "src": "6490:80:245",
          "text": "@notice Simple helper contract that helps with testing the Faucet contract."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          104513
        ],
        "name": "FaucetHelper",
        "nameLocation": "6579:12:245",
        "scope": 104514,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 245
}