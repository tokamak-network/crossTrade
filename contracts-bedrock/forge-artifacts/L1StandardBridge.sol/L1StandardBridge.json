{
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "localToken",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "remoteToken",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "extraData",
          "type": "bytes"
        }
      ],
      "name": "ERC20BridgeFinalized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "localToken",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "remoteToken",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "extraData",
          "type": "bytes"
        }
      ],
      "name": "ERC20BridgeInitiated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "l1Token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "l2Token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "extraData",
          "type": "bytes"
        }
      ],
      "name": "ERC20DepositInitiated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "l1Token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "l2Token",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "extraData",
          "type": "bytes"
        }
      ],
      "name": "ERC20WithdrawalFinalized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "extraData",
          "type": "bytes"
        }
      ],
      "name": "ETHBridgeFinalized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "extraData",
          "type": "bytes"
        }
      ],
      "name": "ETHBridgeInitiated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "extraData",
          "type": "bytes"
        }
      ],
      "name": "ETHDepositInitiated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "extraData",
          "type": "bytes"
        }
      ],
      "name": "ETHWithdrawalFinalized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "MESSENGER",
      "outputs": [
        {
          "internalType": "contract CrossDomainMessenger",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "OTHER_BRIDGE",
      "outputs": [
        {
          "internalType": "contract StandardBridge",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_localToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_remoteToken",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "_minGasLimit",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "bridgeERC20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_localToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_remoteToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "_minGasLimit",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "bridgeERC20To",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_minGasLimit",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "bridgeETH",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "_minGasLimit",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "bridgeETHTo",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "_minGasLimit",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "bridgeNativeToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "_minGasLimit",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "bridgeNativeTokenTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_l1Token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_l2Token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "_minGasLimit",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "depositERC20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_l1Token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_l2Token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "_minGasLimit",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "depositERC20To",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint32",
          "name": "_minGasLimit",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "depositETH",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint32",
          "name": "_minGasLimit",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "depositETHTo",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "_minGasLimit",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "depositNativeToken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "uint32",
          "name": "_minGasLimit",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "depositNativeTokenTo",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "deposits",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_localToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_remoteToken",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "finalizeBridgeERC20",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "finalizeBridgeETH",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_l1Token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_l2Token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "finalizeERC20Withdrawal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_from",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_to",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_extraData",
          "type": "bytes"
        }
      ],
      "name": "finalizeETHWithdrawal",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract CrossDomainMessenger",
          "name": "_messenger",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_nativeTokenAddress",
          "type": "address"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "l2TokenBridge",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "messenger",
      "outputs": [
        {
          "internalType": "contract CrossDomainMessenger",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nativeTokenAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "_amount",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "onApprove",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "otherBridge",
      "outputs": [
        {
          "internalType": "contract StandardBridge",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes4",
          "name": "interfaceId",
          "type": "bytes4"
        }
      ],
      "name": "supportsInterface",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "_data",
          "type": "bytes"
        }
      ],
      "name": "unpackOnApproveData",
      "outputs": [
        {
          "internalType": "uint32",
          "name": "_minGasLimit",
          "type": "uint32"
        },
        {
          "internalType": "bytes",
          "name": "_message",
          "type": "bytes"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "bytecode": {
    "object": "0x60a06040523480156200001157600080fd5b50734200000000000000000000000000000000000010608052620000376000806200003d565b620001d8565b600054600390610100900460ff1615801562000060575060005460ff8083169116105b620000c95760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084015b60405180910390fd5b6000805461ffff191660ff831617610100179055620000e88362000149565b603280546001600160a01b0319166001600160a01b0384161790556000805461ff001916905560405160ff821681527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050565b600054610100900460ff16620001b65760405162461bcd60e51b815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201526a6e697469616c697a696e6760a81b6064820152608401620000c0565b600380546001600160a01b0319166001600160a01b0392909216919091179055565b6080516135756200021e6000396000818161048e01528181610565015281816106b301528181610d7c01528181611a94015281816120d8015261288301526135756000f3fe6080604052600436106101bb5760003560e01c8063838b2520116100ec57806395911e5a1161008a578063b1a1a88211610064578063b1a1a88214610615578063c89701a214610556578063e11013dd14610628578063e56b44a31461043c57600080fd5b806395911e5a146104d05780639a2ac6d5146105e2578063a9f9e675146105f557600080fd5b80638f601f66116100c65780638f601f661461051057806391c49bf814610556578063927ede2d1461058957806392a162cf146105b457600080fd5b8063838b2520146104b057806386c1a9de146104d057806387087623146104f057600080fd5b8063485cc9551161015957806354fd4d501161013357806354fd4d50146103e65780635791f5c21461043c57806358a997f61461045c5780637f46ddb21461047c57600080fd5b8063485cc955146103795780634d0047ee14610399578063540abf73146103c657600080fd5b80631532ec34116101955780631532ec34146102e15780631635f5fd146102f45780633cb747bf146103075780634273ca161461035957600080fd5b80630166a07a1461027957806301ffc9a71461029957806309fc8843146102ce57600080fd5b3661027457333b15610254576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603760248201527f5374616e646172644272696467653a2066756e6374696f6e2063616e206f6e6c60448201527f792062652063616c6c65642066726f6d20616e20454f4100000000000000000060648201526084015b60405180910390fd5b610272333362030d406040518060200160405280600081525061063b565b005b600080fd5b34801561028557600080fd5b50610272610294366004612db4565b61064e565b3480156102a557600080fd5b506102b96102b4366004612e4c565b610b93565b60405190151581526020015b60405180910390f35b6102726102dc366004612ea7565b610c2c565b6102726102ef366004612efa565b610d03565b610272610302366004612efa565b610d17565b34801561031357600080fd5b506003546103349073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016102c5565b34801561036557600080fd5b506102b9610374366004612efa565b611178565b34801561038557600080fd5b50610272610394366004612f6d565b611283565b3480156103a557600080fd5b506032546103349073ffffffffffffffffffffffffffffffffffffffff1681565b3480156103d257600080fd5b506102726103e1366004612fa6565b61140e565b3480156103f257600080fd5b5061042f6040518060400160405280600581526020017f312e342e3100000000000000000000000000000000000000000000000000000081525081565b6040516102c59190613093565b34801561044857600080fd5b506102726104573660046130a6565b611453565b34801561046857600080fd5b506102726104773660046130fa565b611496565b34801561048857600080fd5b506103347f000000000000000000000000000000000000000000000000000000000000000081565b3480156104bc57600080fd5b506102726104cb366004612fa6565b611572565b3480156104dc57600080fd5b506102726104eb36600461317d565b6115b7565b3480156104fc57600080fd5b5061027261050b3660046130fa565b611689565b34801561051c57600080fd5b5061054861052b366004612f6d565b600260209081526000928352604080842090915290825290205481565b6040519081526020016102c5565b34801561056257600080fd5b507f0000000000000000000000000000000000000000000000000000000000000000610334565b34801561059557600080fd5b5060035473ffffffffffffffffffffffffffffffffffffffff16610334565b3480156105c057600080fd5b506105d46105cf366004613206565b61175d565b6040516102c59291906132d5565b6102726105f03660046132f4565b6117a6565b34801561060157600080fd5b50610272610610366004612db4565b6117e8565b610272610623366004612ea7565b6117f7565b6102726106363660046132f4565b6118c8565b610648848434858561190b565b50505050565b60035473ffffffffffffffffffffffffffffffffffffffff163314801561073d5750600354604080517f6e296e45000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000008116931691636e296e459160048083019260209291908290030181865afa158015610701573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107259190613323565b73ffffffffffffffffffffffffffffffffffffffff16145b6107ef576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604160248201527f5374616e646172644272696467653a2066756e6374696f6e2063616e206f6e6c60448201527f792062652063616c6c65642066726f6d20746865206f7468657220627269646760648201527f6500000000000000000000000000000000000000000000000000000000000000608482015260a40161024b565b6107f887611bcf565b801561081f575060325473ffffffffffffffffffffffffffffffffffffffff888116911614155b1561096d5761082e8787611c2b565b6108e0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604a60248201527f5374616e646172644272696467653a2077726f6e672072656d6f746520746f6b60448201527f656e20666f72204f7074696d69736d204d696e7461626c65204552433230206c60648201527f6f63616c20746f6b656e00000000000000000000000000000000000000000000608482015260a40161024b565b6040517f40c10f1900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152602482018590528816906340c10f1990604401600060405180830381600087803b15801561095057600080fd5b505af1158015610964573d6000803e3d6000fd5b50505050610b46565b73ffffffffffffffffffffffffffffffffffffffff87161580156109ba575073ffffffffffffffffffffffffffffffffffffffff8616734200000000000000000000000000000000000486145b15610ab35760006109dc855a8660405180602001604052806000815250611d4b565b905080610a6b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f5374616e646172644272696467653a20455448207472616e736665722066616960448201527f6c65640000000000000000000000000000000000000000000000000000000000606482015260840161024b565b610aad86868686868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611d6592505050565b50610ad4565b610ad473ffffffffffffffffffffffffffffffffffffffff88168585611dd8565b73ffffffffffffffffffffffffffffffffffffffff8088166000908152600260209081526040808320938a1683529290522054610b1290849061336f565b73ffffffffffffffffffffffffffffffffffffffff8089166000908152600260209081526040808320938b16835292905220555b610b8a878787878787878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611eac92505050565b50505050505050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f4273ca16000000000000000000000000000000000000000000000000000000001480610c2657507fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b333b15610cbb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603760248201527f5374616e646172644272696467653a2066756e6374696f6e2063616e206f6e6c60448201527f792062652063616c6c65642066726f6d20616e20454f41000000000000000000606482015260840161024b565b610cfe3333348686868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061190b92505050565b505050565b610d108585858585610d17565b5050505050565b60035473ffffffffffffffffffffffffffffffffffffffff1633148015610e065750600354604080517f6e296e45000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000008116931691636e296e459160048083019260209291908290030181865afa158015610dca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dee9190613323565b73ffffffffffffffffffffffffffffffffffffffff16145b610eb8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604160248201527f5374616e646172644272696467653a2066756e6374696f6e2063616e206f6e6c60448201527f792062652063616c6c65642066726f6d20746865206f7468657220627269646760648201527f6500000000000000000000000000000000000000000000000000000000000000608482015260a40161024b565b3415610f46576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603e60248201527f5374616e646172644272696467653a206d757374206e6f74207265636569766560448201527f204574686572206576656e20696620746869732069732070617961626c650000606482015260840161024b565b3073ffffffffffffffffffffffffffffffffffffffff851603610feb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f5374616e646172644272696467653a2063616e6e6f742073656e6420746f207360448201527f656c660000000000000000000000000000000000000000000000000000000000606482015260840161024b565b60035473ffffffffffffffffffffffffffffffffffffffff90811690851603611096576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f5374616e646172644272696467653a2063616e6e6f742073656e6420746f206d60448201527f657373656e676572000000000000000000000000000000000000000000000000606482015260840161024b565b6032546003546040517f23b872dd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9182166004820152306024820152604481018690529116906323b872dd906064016020604051808303816000875af1158015611117573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061113b9190613386565b50603254610d109073ffffffffffffffffffffffffffffffffffffffff1673deaddeaddeaddeaddeaddeaddeaddeaddead0000878787878761064e565b60325460009073ffffffffffffffffffffffffffffffffffffffff163314611222576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f6f6e6c7920616363657074206e617469766520746f6b656e20617070726f766560448201527f2063616c6c6261636b0000000000000000000000000000000000000000000000606482015260840161024b565b60008061126485858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061175d92505050565b915091506112758889888585611f3a565b506001979650505050505050565b600054600390610100900460ff161580156112a5575060005460ff8083169116105b611331576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a6564000000000000000000000000000000000000606482015260840161024b565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001660ff83161761010017905561136b836121c4565b603280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8416179055600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16905560405160ff821681527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050565b610b8a87873388888888888080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506122a292505050565b610d103386868686868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611f3a92505050565b333b15611525576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603760248201527f5374616e646172644272696467653a2066756e6374696f6e2063616e206f6e6c60448201527f792062652063616c6c65642066726f6d20616e20454f41000000000000000000606482015260840161024b565b61156a86863333888888888080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506122e592505050565b505050505050565b610b8a87873388888888888080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506122e592505050565b333b15611646576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603760248201527f5374616e646172644272696467653a2066756e6374696f6e2063616e206f6e6c60448201527f792062652063616c6c65642066726f6d20616e20454f41000000000000000000606482015260840161024b565b6106483333868686868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611f3a92505050565b333b15611718576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603760248201527f5374616e646172644272696467653a2066756e6374696f6e2063616e206f6e6c60448201527f792062652063616c6c65642066726f6d20616e20454f41000000000000000000606482015260840161024b565b61156a86863333888888888080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506122a292505050565b6000606060048351101561178257505060408051602081019091526000815262030d40905b825160208401805160e01c9350906004811461179f576004820192505b5050915091565b61064833858585858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061063b92505050565b610b8a8787878787878761064e565b333b15611886576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603760248201527f5374616e646172644272696467653a2066756e6374696f6e2063616e206f6e6c60448201527f792062652063616c6c65642066726f6d20616e20454f41000000000000000000606482015260840161024b565b610cfe33338585858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061063b92505050565b6106483385348686868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061190b92505050565b82341461199a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603e60248201527f5374616e646172644272696467653a206272696467696e6720455448206d757360448201527f7420696e636c7564652073756666696369656e74204554482076616c75650000606482015260840161024b565b7342000000000000000000000000000000000004866000527fac33ff75c19e70fe83507db0d683fd3465c996598dc972688b7ace676c89077b6020527f93848fc853fd2af31e80d9c5877c6e8e6fe1846ae85b985f9f0f735e671f910054611a039084906133a8565b7342000000000000000000000000000000000004866000527fac33ff75c19e70fe83507db0d683fd3465c996598dc972688b7ace676c89077b6020527f93848fc853fd2af31e80d9c5877c6e8e6fe1846ae85b985f9f0f735e671f910055611a6d858585846122f4565b60035460405173ffffffffffffffffffffffffffffffffffffffff90911690633dbb202b907f0000000000000000000000000000000000000000000000000000000000000000907f0166a07a0000000000000000000000000000000000000000000000000000000090611b0390734200000000000000000000000000000000000486906000908c908c908c908b906024016133c0565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009485161790525160e085901b9092168252611b969291879060040161341b565b600060405180830381600087803b158015611bb057600080fd5b505af1158015611bc4573d6000803e3d6000fd5b505050505050505050565b6000611bfb827f1d1d8b6300000000000000000000000000000000000000000000000000000000612361565b80610c265750610c26827fec4fc8e300000000000000000000000000000000000000000000000000000000612361565b6000611c57837f1d1d8b6300000000000000000000000000000000000000000000000000000000612361565b15611d00578273ffffffffffffffffffffffffffffffffffffffff1663c01e1bd66040518163ffffffff1660e01b8152600401602060405180830381865afa158015611ca7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ccb9190613323565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050610c26565b8273ffffffffffffffffffffffffffffffffffffffff1663d6c0b2c46040518163ffffffff1660e01b8152600401602060405180830381865afa158015611ca7573d6000803e3d6000fd5b600080600080845160208601878a8af19695505050505050565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f2ac69ee804d9a7a0984249f508dfab7cb2534b465b6ce1580f99a38ba9c5e6318484604051611dc4929190613460565b60405180910390a361064884848484612384565b60405173ffffffffffffffffffffffffffffffffffffffff8316602482015260448101829052610cfe9084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526123e3565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167f3ceee06c1e37648fcbb6ed52e17b3e1f275a1f8c7b22a84b2b84732431e046b3868686604051611f2493929190613479565b60405180910390a461156a8686868686866124ef565b603254611f5f9073ffffffffffffffffffffffffffffffffffffffff16863086612577565b6032546003546040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff91821660048201526024810186905291169063095ea7b3906044016020604051808303816000875af1158015611fda573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ffe9190613386565b5060325473ffffffffffffffffffffffffffffffffffffffff16600090815260026020908152604080832073deaddeaddeaddeaddeaddeaddeaddeaddead000084529091529020546120519084906133a8565b6032805473ffffffffffffffffffffffffffffffffffffffff908116600090815260026020908152604080832073deaddeaddeaddeaddeaddeaddeaddeaddead000080855292529091209390935590546120b192911690878787866125d5565b60035460405173ffffffffffffffffffffffffffffffffffffffff9091169063e0e593c5907f00000000000000000000000000000000000000000000000000000000000000009086907f1635f5fd0000000000000000000000000000000000000000000000000000000090612130908b908b9085908a906024016134b7565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009485161790525160e086901b9092168252611b969392918890600401613500565b600054610100900460ff1661225b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e67000000000000000000000000000000000000000000606482015260840161024b565b600380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60325473ffffffffffffffffffffffffffffffffffffffff8089169116036122d6576122d18585858585611f3a565b610b8a565b610b8a87878787878787612663565b610b8a878787878787876122a2565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f2849b43074093a05396b6f2a937dee8565b15a48a7b3d4bffb732a5017380af58484604051612353929190613460565b60405180910390a350505050565b600061236c836129ab565b801561237d575061237d8383612a0f565b9392505050565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f31b2166ff604fc5672ea5df08a78081d2bc6d746cadce880747f3643d819e83d8484604051612353929190613460565b6000612445826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16612ade9092919063ffffffff16565b805190915015610cfe57808060200190518101906124639190613386565b610cfe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161024b565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fd59c65b35445225835c83f50b6ede06a7be047d22e357073e250d9af537518cd86868660405161256793929190613479565b60405180910390a4505050505050565b60405173ffffffffffffffffffffffffffffffffffffffff808516602483015283166044820152606481018290526106489085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401611e2a565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167f718594027abd4eaed59f95162563e0cc6d0e8d5b86b1c7be8b1b0ac3343d039686868660405161264d93929190613479565b60405180910390a461156a868686868686612af5565b61266c87611bcf565b156127ba5761267b8787611c2b565b61272d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604a60248201527f5374616e646172644272696467653a2077726f6e672072656d6f746520746f6b60448201527f656e20666f72204f7074696d69736d204d696e7461626c65204552433230206c60648201527f6f63616c20746f6b656e00000000000000000000000000000000000000000000608482015260a40161024b565b6040517f9dc29fac00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff868116600483015260248201859052881690639dc29fac90604401600060405180830381600087803b15801561279d57600080fd5b505af11580156127b1573d6000803e3d6000fd5b5050505061284e565b6127dc73ffffffffffffffffffffffffffffffffffffffff8816863086612577565b73ffffffffffffffffffffffffffffffffffffffff8088166000908152600260209081526040808320938a168352929052205461281a9084906133a8565b73ffffffffffffffffffffffffffffffffffffffff8089166000908152600260209081526040808320938b16835292905220555b61285c8787878787866125d5565b60035460405173ffffffffffffffffffffffffffffffffffffffff90911690633dbb202b907f0000000000000000000000000000000000000000000000000000000000000000907f0166a07a00000000000000000000000000000000000000000000000000000000906128dd908b908d908c908c908c908b906024016133c0565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009485161790525160e085901b90921682526129709291879060040161341b565b600060405180830381600087803b15801561298a57600080fd5b505af115801561299e573d6000803e3d6000fd5b5050505050505050505050565b60006129d7827f01ffc9a700000000000000000000000000000000000000000000000000000000612a0f565b8015610c265750612a08827fffffffff00000000000000000000000000000000000000000000000000000000612a0f565b1592915050565b604080517fffffffff000000000000000000000000000000000000000000000000000000008316602480830191909152825180830390910181526044909101909152602080820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f01ffc9a700000000000000000000000000000000000000000000000000000000178152825160009392849283928392918391908a617530fa92503d91506000519050828015612ac7575060208210155b8015612ad35750600081115b979650505050505050565b6060612aed8484600085612b6d565b949350505050565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167f7ff126db8024424bbfd9826e8ab82ff59136289ea440b04b39a0df1b03b9cabf86868660405161256793929190613479565b606082471015612bff576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161024b565b73ffffffffffffffffffffffffffffffffffffffff85163b612c7d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161024b565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051612ca6919061354c565b60006040518083038185875af1925050503d8060008114612ce3576040519150601f19603f3d011682016040523d82523d6000602084013e612ce8565b606091505b5091509150612ad382828660608315612d0257508161237d565b825115612d125782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024b9190613093565b73ffffffffffffffffffffffffffffffffffffffff81168114612d6857600080fd5b50565b60008083601f840112612d7d57600080fd5b50813567ffffffffffffffff811115612d9557600080fd5b602083019150836020828501011115612dad57600080fd5b9250929050565b600080600080600080600060c0888a031215612dcf57600080fd5b8735612dda81612d46565b96506020880135612dea81612d46565b95506040880135612dfa81612d46565b94506060880135612e0a81612d46565b93506080880135925060a088013567ffffffffffffffff811115612e2d57600080fd5b612e398a828b01612d6b565b989b979a50959850939692959293505050565b600060208284031215612e5e57600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461237d57600080fd5b803563ffffffff81168114612ea257600080fd5b919050565b600080600060408486031215612ebc57600080fd5b612ec584612e8e565b9250602084013567ffffffffffffffff811115612ee157600080fd5b612eed86828701612d6b565b9497909650939450505050565b600080600080600060808688031215612f1257600080fd5b8535612f1d81612d46565b94506020860135612f2d81612d46565b935060408601359250606086013567ffffffffffffffff811115612f5057600080fd5b612f5c88828901612d6b565b969995985093965092949392505050565b60008060408385031215612f8057600080fd5b8235612f8b81612d46565b91506020830135612f9b81612d46565b809150509250929050565b600080600080600080600060c0888a031215612fc157600080fd5b8735612fcc81612d46565b96506020880135612fdc81612d46565b95506040880135612fec81612d46565b94506060880135935061300160808901612e8e565b925060a088013567ffffffffffffffff811115612e2d57600080fd5b60005b83811015613038578181015183820152602001613020565b838111156106485750506000910152565b6000815180845261306181602086016020860161301d565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60208152600061237d6020830184613049565b6000806000806000608086880312156130be57600080fd5b85356130c981612d46565b9450602086013593506130de60408701612e8e565b9250606086013567ffffffffffffffff811115612f5057600080fd5b60008060008060008060a0878903121561311357600080fd5b863561311e81612d46565b9550602087013561312e81612d46565b94506040870135935061314360608801612e8e565b9250608087013567ffffffffffffffff81111561315f57600080fd5b61316b89828a01612d6b565b979a9699509497509295939492505050565b6000806000806060858703121561319357600080fd5b843593506131a360208601612e8e565b9250604085013567ffffffffffffffff8111156131bf57600080fd5b6131cb87828801612d6b565b95989497509550505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006020828403121561321857600080fd5b813567ffffffffffffffff8082111561323057600080fd5b818401915084601f83011261324457600080fd5b813581811115613256576132566131d7565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190838211818310171561329c5761329c6131d7565b816040528281528760208487010111156132b557600080fd5b826020860160208301376000928101602001929092525095945050505050565b63ffffffff83168152604060208201526000612aed6040830184613049565b6000806000806060858703121561330a57600080fd5b843561331581612d46565b93506131a360208601612e8e565b60006020828403121561333557600080fd5b815161237d81612d46565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008282101561338157613381613340565b500390565b60006020828403121561339857600080fd5b8151801515811461237d57600080fd5b600082198211156133bb576133bb613340565b500190565b600073ffffffffffffffffffffffffffffffffffffffff80891683528088166020840152808716604084015280861660608401525083608083015260c060a083015261340f60c0830184613049565b98975050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8416815260606020820152600061344a6060830185613049565b905063ffffffff83166040830152949350505050565b828152604060208201526000612aed6040830184613049565b73ffffffffffffffffffffffffffffffffffffffff841681528260208201526060604082015260006134ae6060830184613049565b95945050505050565b600073ffffffffffffffffffffffffffffffffffffffff8087168352808616602084015250836040830152608060608301526134f66080830184613049565b9695505050505050565b73ffffffffffffffffffffffffffffffffffffffff851681528360208201526080604082015260006135356080830185613049565b905063ffffffff8316606083015295945050505050565b6000825161355e81846020870161301d565b919091019291505056fea164736f6c634300080f000a",
    "sourceMap": "1727:23420:75:-:0;;;4188:195;;;;;;;;;-1:-1:-1;635:42:128;5892:27:150;;4283:93:75::1;4337:1;::::0;4283:10:::1;:93::i;:::-;1727:23420:::0;;4417:284;4396:13:26;;2762:1:123;;4396:13:26;;;;;4395:14;:40;;;;-1:-1:-1;4413:12:26;;:22;;;;:12;;:22;4395:40;4387:99;;;;-1:-1:-1;;;4387:99:26;;216:2:156;4387:99:26;;;198:21:156;255:2;235:18;;;228:30;294:34;274:18;;;267:62;-1:-1:-1;;;345:18:156;;;338:44;399:19;;4387:99:26;;;;;;;;;4496:12;:22;;-1:-1:-1;;4528:20:26;4496:22;;;4528:20;4496:22;4528:20;;;4595:49:75::1;4631:10:::0;4595:21:::1;:49::i;:::-;4654:18;:40:::0;;-1:-1:-1;;;;;;4654:40:75::1;-1:-1:-1::0;;;;;4654:40:75;::::1;;::::0;;-1:-1:-1;4569:21:26;;-1:-1:-1;;4569:21:26;;;4605:20;;601:4:156;589:17;;571:36;;4605:20:26;;559:2:156;544:18;4605:20:26;;;;;;;4417:284:75;;;:::o;6091:129:150:-;4888:13:26;;;;;;;4880:69;;;;-1:-1:-1;;;4880:69:26;;820:2:156;4880:69:26;;;802:21:156;859:2;839:18;;;832:30;898:34;878:18;;;871:62;-1:-1:-1;;;949:18:156;;;942:41;1000:19;;4880:69:26;618:407:156;4880:69:26;6191:9:150::1;:22:::0;;-1:-1:-1;;;;;;6191:22:150::1;-1:-1:-1::0;;;;;6191:22:150;;;::::1;::::0;;;::::1;::::0;;6091:129::o;618:407:156:-;1727:23420:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x6080604052600436106101bb5760003560e01c8063838b2520116100ec57806395911e5a1161008a578063b1a1a88211610064578063b1a1a88214610615578063c89701a214610556578063e11013dd14610628578063e56b44a31461043c57600080fd5b806395911e5a146104d05780639a2ac6d5146105e2578063a9f9e675146105f557600080fd5b80638f601f66116100c65780638f601f661461051057806391c49bf814610556578063927ede2d1461058957806392a162cf146105b457600080fd5b8063838b2520146104b057806386c1a9de146104d057806387087623146104f057600080fd5b8063485cc9551161015957806354fd4d501161013357806354fd4d50146103e65780635791f5c21461043c57806358a997f61461045c5780637f46ddb21461047c57600080fd5b8063485cc955146103795780634d0047ee14610399578063540abf73146103c657600080fd5b80631532ec34116101955780631532ec34146102e15780631635f5fd146102f45780633cb747bf146103075780634273ca161461035957600080fd5b80630166a07a1461027957806301ffc9a71461029957806309fc8843146102ce57600080fd5b3661027457333b15610254576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603760248201527f5374616e646172644272696467653a2066756e6374696f6e2063616e206f6e6c60448201527f792062652063616c6c65642066726f6d20616e20454f4100000000000000000060648201526084015b60405180910390fd5b610272333362030d406040518060200160405280600081525061063b565b005b600080fd5b34801561028557600080fd5b50610272610294366004612db4565b61064e565b3480156102a557600080fd5b506102b96102b4366004612e4c565b610b93565b60405190151581526020015b60405180910390f35b6102726102dc366004612ea7565b610c2c565b6102726102ef366004612efa565b610d03565b610272610302366004612efa565b610d17565b34801561031357600080fd5b506003546103349073ffffffffffffffffffffffffffffffffffffffff1681565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016102c5565b34801561036557600080fd5b506102b9610374366004612efa565b611178565b34801561038557600080fd5b50610272610394366004612f6d565b611283565b3480156103a557600080fd5b506032546103349073ffffffffffffffffffffffffffffffffffffffff1681565b3480156103d257600080fd5b506102726103e1366004612fa6565b61140e565b3480156103f257600080fd5b5061042f6040518060400160405280600581526020017f312e342e3100000000000000000000000000000000000000000000000000000081525081565b6040516102c59190613093565b34801561044857600080fd5b506102726104573660046130a6565b611453565b34801561046857600080fd5b506102726104773660046130fa565b611496565b34801561048857600080fd5b506103347f000000000000000000000000000000000000000000000000000000000000000081565b3480156104bc57600080fd5b506102726104cb366004612fa6565b611572565b3480156104dc57600080fd5b506102726104eb36600461317d565b6115b7565b3480156104fc57600080fd5b5061027261050b3660046130fa565b611689565b34801561051c57600080fd5b5061054861052b366004612f6d565b600260209081526000928352604080842090915290825290205481565b6040519081526020016102c5565b34801561056257600080fd5b507f0000000000000000000000000000000000000000000000000000000000000000610334565b34801561059557600080fd5b5060035473ffffffffffffffffffffffffffffffffffffffff16610334565b3480156105c057600080fd5b506105d46105cf366004613206565b61175d565b6040516102c59291906132d5565b6102726105f03660046132f4565b6117a6565b34801561060157600080fd5b50610272610610366004612db4565b6117e8565b610272610623366004612ea7565b6117f7565b6102726106363660046132f4565b6118c8565b610648848434858561190b565b50505050565b60035473ffffffffffffffffffffffffffffffffffffffff163314801561073d5750600354604080517f6e296e45000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000008116931691636e296e459160048083019260209291908290030181865afa158015610701573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107259190613323565b73ffffffffffffffffffffffffffffffffffffffff16145b6107ef576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604160248201527f5374616e646172644272696467653a2066756e6374696f6e2063616e206f6e6c60448201527f792062652063616c6c65642066726f6d20746865206f7468657220627269646760648201527f6500000000000000000000000000000000000000000000000000000000000000608482015260a40161024b565b6107f887611bcf565b801561081f575060325473ffffffffffffffffffffffffffffffffffffffff888116911614155b1561096d5761082e8787611c2b565b6108e0576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604a60248201527f5374616e646172644272696467653a2077726f6e672072656d6f746520746f6b60448201527f656e20666f72204f7074696d69736d204d696e7461626c65204552433230206c60648201527f6f63616c20746f6b656e00000000000000000000000000000000000000000000608482015260a40161024b565b6040517f40c10f1900000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff8581166004830152602482018590528816906340c10f1990604401600060405180830381600087803b15801561095057600080fd5b505af1158015610964573d6000803e3d6000fd5b50505050610b46565b73ffffffffffffffffffffffffffffffffffffffff87161580156109ba575073ffffffffffffffffffffffffffffffffffffffff8616734200000000000000000000000000000000000486145b15610ab35760006109dc855a8660405180602001604052806000815250611d4b565b905080610a6b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f5374616e646172644272696467653a20455448207472616e736665722066616960448201527f6c65640000000000000000000000000000000000000000000000000000000000606482015260840161024b565b610aad86868686868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611d6592505050565b50610ad4565b610ad473ffffffffffffffffffffffffffffffffffffffff88168585611dd8565b73ffffffffffffffffffffffffffffffffffffffff8088166000908152600260209081526040808320938a1683529290522054610b1290849061336f565b73ffffffffffffffffffffffffffffffffffffffff8089166000908152600260209081526040808320938b16835292905220555b610b8a878787878787878080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611eac92505050565b50505050505050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f4273ca16000000000000000000000000000000000000000000000000000000001480610c2657507fffffffff0000000000000000000000000000000000000000000000000000000082167f01ffc9a700000000000000000000000000000000000000000000000000000000145b92915050565b333b15610cbb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603760248201527f5374616e646172644272696467653a2066756e6374696f6e2063616e206f6e6c60448201527f792062652063616c6c65642066726f6d20616e20454f41000000000000000000606482015260840161024b565b610cfe3333348686868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061190b92505050565b505050565b610d108585858585610d17565b5050505050565b60035473ffffffffffffffffffffffffffffffffffffffff1633148015610e065750600354604080517f6e296e45000000000000000000000000000000000000000000000000000000008152905173ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000008116931691636e296e459160048083019260209291908290030181865afa158015610dca573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610dee9190613323565b73ffffffffffffffffffffffffffffffffffffffff16145b610eb8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604160248201527f5374616e646172644272696467653a2066756e6374696f6e2063616e206f6e6c60448201527f792062652063616c6c65642066726f6d20746865206f7468657220627269646760648201527f6500000000000000000000000000000000000000000000000000000000000000608482015260a40161024b565b3415610f46576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603e60248201527f5374616e646172644272696467653a206d757374206e6f74207265636569766560448201527f204574686572206576656e20696620746869732069732070617961626c650000606482015260840161024b565b3073ffffffffffffffffffffffffffffffffffffffff851603610feb576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602360248201527f5374616e646172644272696467653a2063616e6e6f742073656e6420746f207360448201527f656c660000000000000000000000000000000000000000000000000000000000606482015260840161024b565b60035473ffffffffffffffffffffffffffffffffffffffff90811690851603611096576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602860248201527f5374616e646172644272696467653a2063616e6e6f742073656e6420746f206d60448201527f657373656e676572000000000000000000000000000000000000000000000000606482015260840161024b565b6032546003546040517f23b872dd00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff9182166004820152306024820152604481018690529116906323b872dd906064016020604051808303816000875af1158015611117573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061113b9190613386565b50603254610d109073ffffffffffffffffffffffffffffffffffffffff1673deaddeaddeaddeaddeaddeaddeaddeaddead0000878787878761064e565b60325460009073ffffffffffffffffffffffffffffffffffffffff163314611222576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602960248201527f6f6e6c7920616363657074206e617469766520746f6b656e20617070726f766560448201527f2063616c6c6261636b0000000000000000000000000000000000000000000000606482015260840161024b565b60008061126485858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061175d92505050565b915091506112758889888585611f3a565b506001979650505050505050565b600054600390610100900460ff161580156112a5575060005460ff8083169116105b611331576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201527f647920696e697469616c697a6564000000000000000000000000000000000000606482015260840161024b565b600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00001660ff83161761010017905561136b836121c4565b603280547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff8416179055600080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff00ff16905560405160ff821681527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a1505050565b610b8a87873388888888888080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506122a292505050565b610d103386868686868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611f3a92505050565b333b15611525576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603760248201527f5374616e646172644272696467653a2066756e6374696f6e2063616e206f6e6c60448201527f792062652063616c6c65642066726f6d20616e20454f41000000000000000000606482015260840161024b565b61156a86863333888888888080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506122e592505050565b505050505050565b610b8a87873388888888888080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506122e592505050565b333b15611646576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603760248201527f5374616e646172644272696467653a2066756e6374696f6e2063616e206f6e6c60448201527f792062652063616c6c65642066726f6d20616e20454f41000000000000000000606482015260840161024b565b6106483333868686868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611f3a92505050565b333b15611718576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603760248201527f5374616e646172644272696467653a2066756e6374696f6e2063616e206f6e6c60448201527f792062652063616c6c65642066726f6d20616e20454f41000000000000000000606482015260840161024b565b61156a86863333888888888080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152506122a292505050565b6000606060048351101561178257505060408051602081019091526000815262030d40905b825160208401805160e01c9350906004811461179f576004820192505b5050915091565b61064833858585858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061063b92505050565b610b8a8787878787878761064e565b333b15611886576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603760248201527f5374616e646172644272696467653a2066756e6374696f6e2063616e206f6e6c60448201527f792062652063616c6c65642066726f6d20616e20454f41000000000000000000606482015260840161024b565b610cfe33338585858080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061063b92505050565b6106483385348686868080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061190b92505050565b82341461199a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152603e60248201527f5374616e646172644272696467653a206272696467696e6720455448206d757360448201527f7420696e636c7564652073756666696369656e74204554482076616c75650000606482015260840161024b565b7342000000000000000000000000000000000004866000527fac33ff75c19e70fe83507db0d683fd3465c996598dc972688b7ace676c89077b6020527f93848fc853fd2af31e80d9c5877c6e8e6fe1846ae85b985f9f0f735e671f910054611a039084906133a8565b7342000000000000000000000000000000000004866000527fac33ff75c19e70fe83507db0d683fd3465c996598dc972688b7ace676c89077b6020527f93848fc853fd2af31e80d9c5877c6e8e6fe1846ae85b985f9f0f735e671f910055611a6d858585846122f4565b60035460405173ffffffffffffffffffffffffffffffffffffffff90911690633dbb202b907f0000000000000000000000000000000000000000000000000000000000000000907f0166a07a0000000000000000000000000000000000000000000000000000000090611b0390734200000000000000000000000000000000000486906000908c908c908c908b906024016133c0565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009485161790525160e085901b9092168252611b969291879060040161341b565b600060405180830381600087803b158015611bb057600080fd5b505af1158015611bc4573d6000803e3d6000fd5b505050505050505050565b6000611bfb827f1d1d8b6300000000000000000000000000000000000000000000000000000000612361565b80610c265750610c26827fec4fc8e300000000000000000000000000000000000000000000000000000000612361565b6000611c57837f1d1d8b6300000000000000000000000000000000000000000000000000000000612361565b15611d00578273ffffffffffffffffffffffffffffffffffffffff1663c01e1bd66040518163ffffffff1660e01b8152600401602060405180830381865afa158015611ca7573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ccb9190613323565b73ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff16149050610c26565b8273ffffffffffffffffffffffffffffffffffffffff1663d6c0b2c46040518163ffffffff1660e01b8152600401602060405180830381865afa158015611ca7573d6000803e3d6000fd5b600080600080845160208601878a8af19695505050505050565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f2ac69ee804d9a7a0984249f508dfab7cb2534b465b6ce1580f99a38ba9c5e6318484604051611dc4929190613460565b60405180910390a361064884848484612384565b60405173ffffffffffffffffffffffffffffffffffffffff8316602482015260448101829052610cfe9084907fa9059cbb00000000000000000000000000000000000000000000000000000000906064015b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff00000000000000000000000000000000000000000000000000000000909316929092179091526123e3565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167f3ceee06c1e37648fcbb6ed52e17b3e1f275a1f8c7b22a84b2b84732431e046b3868686604051611f2493929190613479565b60405180910390a461156a8686868686866124ef565b603254611f5f9073ffffffffffffffffffffffffffffffffffffffff16863086612577565b6032546003546040517f095ea7b300000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff91821660048201526024810186905291169063095ea7b3906044016020604051808303816000875af1158015611fda573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ffe9190613386565b5060325473ffffffffffffffffffffffffffffffffffffffff16600090815260026020908152604080832073deaddeaddeaddeaddeaddeaddeaddeaddead000084529091529020546120519084906133a8565b6032805473ffffffffffffffffffffffffffffffffffffffff908116600090815260026020908152604080832073deaddeaddeaddeaddeaddeaddeaddeaddead000080855292529091209390935590546120b192911690878787866125d5565b60035460405173ffffffffffffffffffffffffffffffffffffffff9091169063e0e593c5907f00000000000000000000000000000000000000000000000000000000000000009086907f1635f5fd0000000000000000000000000000000000000000000000000000000090612130908b908b9085908a906024016134b7565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009485161790525160e086901b9092168252611b969392918890600401613500565b600054610100900460ff1661225b576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602b60248201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960448201527f6e697469616c697a696e67000000000000000000000000000000000000000000606482015260840161024b565b600380547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff92909216919091179055565b60325473ffffffffffffffffffffffffffffffffffffffff8089169116036122d6576122d18585858585611f3a565b610b8a565b610b8a87878787878787612663565b610b8a878787878787876122a2565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f2849b43074093a05396b6f2a937dee8565b15a48a7b3d4bffb732a5017380af58484604051612353929190613460565b60405180910390a350505050565b600061236c836129ab565b801561237d575061237d8383612a0f565b9392505050565b8273ffffffffffffffffffffffffffffffffffffffff168473ffffffffffffffffffffffffffffffffffffffff167f31b2166ff604fc5672ea5df08a78081d2bc6d746cadce880747f3643d819e83d8484604051612353929190613460565b6000612445826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff16612ade9092919063ffffffff16565b805190915015610cfe57808060200190518101906124639190613386565b610cfe576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161024b565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167fd59c65b35445225835c83f50b6ede06a7be047d22e357073e250d9af537518cd86868660405161256793929190613479565b60405180910390a4505050505050565b60405173ffffffffffffffffffffffffffffffffffffffff808516602483015283166044820152606481018290526106489085907f23b872dd0000000000000000000000000000000000000000000000000000000090608401611e2a565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167f718594027abd4eaed59f95162563e0cc6d0e8d5b86b1c7be8b1b0ac3343d039686868660405161264d93929190613479565b60405180910390a461156a868686868686612af5565b61266c87611bcf565b156127ba5761267b8787611c2b565b61272d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152604a60248201527f5374616e646172644272696467653a2077726f6e672072656d6f746520746f6b60448201527f656e20666f72204f7074696d69736d204d696e7461626c65204552433230206c60648201527f6f63616c20746f6b656e00000000000000000000000000000000000000000000608482015260a40161024b565b6040517f9dc29fac00000000000000000000000000000000000000000000000000000000815273ffffffffffffffffffffffffffffffffffffffff868116600483015260248201859052881690639dc29fac90604401600060405180830381600087803b15801561279d57600080fd5b505af11580156127b1573d6000803e3d6000fd5b5050505061284e565b6127dc73ffffffffffffffffffffffffffffffffffffffff8816863086612577565b73ffffffffffffffffffffffffffffffffffffffff8088166000908152600260209081526040808320938a168352929052205461281a9084906133a8565b73ffffffffffffffffffffffffffffffffffffffff8089166000908152600260209081526040808320938b16835292905220555b61285c8787878787866125d5565b60035460405173ffffffffffffffffffffffffffffffffffffffff90911690633dbb202b907f0000000000000000000000000000000000000000000000000000000000000000907f0166a07a00000000000000000000000000000000000000000000000000000000906128dd908b908d908c908c908c908b906024016133c0565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529181526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167fffffffff000000000000000000000000000000000000000000000000000000009485161790525160e085901b90921682526129709291879060040161341b565b600060405180830381600087803b15801561298a57600080fd5b505af115801561299e573d6000803e3d6000fd5b5050505050505050505050565b60006129d7827f01ffc9a700000000000000000000000000000000000000000000000000000000612a0f565b8015610c265750612a08827fffffffff00000000000000000000000000000000000000000000000000000000612a0f565b1592915050565b604080517fffffffff000000000000000000000000000000000000000000000000000000008316602480830191909152825180830390910181526044909101909152602080820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f01ffc9a700000000000000000000000000000000000000000000000000000000178152825160009392849283928392918391908a617530fa92503d91506000519050828015612ac7575060208210155b8015612ad35750600081115b979650505050505050565b6060612aed8484600085612b6d565b949350505050565b8373ffffffffffffffffffffffffffffffffffffffff168573ffffffffffffffffffffffffffffffffffffffff168773ffffffffffffffffffffffffffffffffffffffff167f7ff126db8024424bbfd9826e8ab82ff59136289ea440b04b39a0df1b03b9cabf86868660405161256793929190613479565b606082471015612bff576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161024b565b73ffffffffffffffffffffffffffffffffffffffff85163b612c7d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161024b565b6000808673ffffffffffffffffffffffffffffffffffffffff168587604051612ca6919061354c565b60006040518083038185875af1925050503d8060008114612ce3576040519150601f19603f3d011682016040523d82523d6000602084013e612ce8565b606091505b5091509150612ad382828660608315612d0257508161237d565b825115612d125782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161024b9190613093565b73ffffffffffffffffffffffffffffffffffffffff81168114612d6857600080fd5b50565b60008083601f840112612d7d57600080fd5b50813567ffffffffffffffff811115612d9557600080fd5b602083019150836020828501011115612dad57600080fd5b9250929050565b600080600080600080600060c0888a031215612dcf57600080fd5b8735612dda81612d46565b96506020880135612dea81612d46565b95506040880135612dfa81612d46565b94506060880135612e0a81612d46565b93506080880135925060a088013567ffffffffffffffff811115612e2d57600080fd5b612e398a828b01612d6b565b989b979a50959850939692959293505050565b600060208284031215612e5e57600080fd5b81357fffffffff000000000000000000000000000000000000000000000000000000008116811461237d57600080fd5b803563ffffffff81168114612ea257600080fd5b919050565b600080600060408486031215612ebc57600080fd5b612ec584612e8e565b9250602084013567ffffffffffffffff811115612ee157600080fd5b612eed86828701612d6b565b9497909650939450505050565b600080600080600060808688031215612f1257600080fd5b8535612f1d81612d46565b94506020860135612f2d81612d46565b935060408601359250606086013567ffffffffffffffff811115612f5057600080fd5b612f5c88828901612d6b565b969995985093965092949392505050565b60008060408385031215612f8057600080fd5b8235612f8b81612d46565b91506020830135612f9b81612d46565b809150509250929050565b600080600080600080600060c0888a031215612fc157600080fd5b8735612fcc81612d46565b96506020880135612fdc81612d46565b95506040880135612fec81612d46565b94506060880135935061300160808901612e8e565b925060a088013567ffffffffffffffff811115612e2d57600080fd5b60005b83811015613038578181015183820152602001613020565b838111156106485750506000910152565b6000815180845261306181602086016020860161301d565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b60208152600061237d6020830184613049565b6000806000806000608086880312156130be57600080fd5b85356130c981612d46565b9450602086013593506130de60408701612e8e565b9250606086013567ffffffffffffffff811115612f5057600080fd5b60008060008060008060a0878903121561311357600080fd5b863561311e81612d46565b9550602087013561312e81612d46565b94506040870135935061314360608801612e8e565b9250608087013567ffffffffffffffff81111561315f57600080fd5b61316b89828a01612d6b565b979a9699509497509295939492505050565b6000806000806060858703121561319357600080fd5b843593506131a360208601612e8e565b9250604085013567ffffffffffffffff8111156131bf57600080fd5b6131cb87828801612d6b565b95989497509550505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b60006020828403121561321857600080fd5b813567ffffffffffffffff8082111561323057600080fd5b818401915084601f83011261324457600080fd5b813581811115613256576132566131d7565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0908116603f0116810190838211818310171561329c5761329c6131d7565b816040528281528760208487010111156132b557600080fd5b826020860160208301376000928101602001929092525095945050505050565b63ffffffff83168152604060208201526000612aed6040830184613049565b6000806000806060858703121561330a57600080fd5b843561331581612d46565b93506131a360208601612e8e565b60006020828403121561333557600080fd5b815161237d81612d46565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60008282101561338157613381613340565b500390565b60006020828403121561339857600080fd5b8151801515811461237d57600080fd5b600082198211156133bb576133bb613340565b500190565b600073ffffffffffffffffffffffffffffffffffffffff80891683528088166020840152808716604084015280861660608401525083608083015260c060a083015261340f60c0830184613049565b98975050505050505050565b73ffffffffffffffffffffffffffffffffffffffff8416815260606020820152600061344a6060830185613049565b905063ffffffff83166040830152949350505050565b828152604060208201526000612aed6040830184613049565b73ffffffffffffffffffffffffffffffffffffffff841681528260208201526060604082015260006134ae6060830184613049565b95945050505050565b600073ffffffffffffffffffffffffffffffffffffffff8087168352808616602084015250836040830152608060608301526134f66080830184613049565b9695505050505050565b73ffffffffffffffffffffffffffffffffffffffff851681528360208201526080604082015260006135356080830185613049565b905063ffffffff8316606083015295945050505050565b6000825161355e81846020870161301d565b919091019291505056fea164736f6c634300080f000a",
    "sourceMap": "1727:23420:75:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5318:10:150;1465:19:38;:23;5290:99:150;;;;;;;216:2:156;5290:99:150;;;198:21:156;255:2;235:18;;;228:30;294:34;274:18;;;267:62;365:25;345:18;;;338:53;408:19;;5290:99:150;;;;;;;;;4818:81:75::1;4838:10;4850;1343:7:150;4889:9:75;;;;;;;;;;;::::0;4818:19:::1;:81::i;:::-;1727:23420:::0;;;;;23646:1499;;;;;;;;;;-1:-1:-1;23646:1499:75;;;;;:::i;:::-;;:::i;91:198:78:-;;;;;;;;;;-1:-1:-1;91:198:78;;;;;:::i;:::-;;:::i;:::-;;;2494:14:156;;2487:22;2469:41;;2457:2;2442:18;91:198:78;;;;;;;;7214:186:150;;;;;;:::i;:::-;;:::i;14292:245:75:-;;;;;;:::i;:::-;;:::i;22782:858::-;;;;;;:::i;:::-;;:::i;2601:37:150:-;;;;;;;;;;-1:-1:-1;2601:37:150;;;;;;;;;;;4140:42:156;4128:55;;;4110:74;;4098:2;4083:18;2601:37:150;3934:256:156;5111:483:75;;;;;;;;;;-1:-1:-1;5111:483:75;;;;;:::i;:::-;;:::i;4417:284::-;;;;;;;;;;-1:-1:-1;4417:284:75;;;;;:::i;:::-;;:::i;1830:33::-;;;;;;;;;;-1:-1:-1;1830:33:75;;;;;;;;10765:349:150;;;;;;;;;;-1:-1:-1;10765:349:150;;;;;:::i;:::-;;:::i;4083:40:75:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;6836:262::-;;;;;;;;;;-1:-1:-1;6836:262:75;;;;;:::i;:::-;;:::i;12566:339::-;;;;;;;;;;-1:-1:-1;12566:339:75;;;;;:::i;:::-;;:::i;1898:44:150:-;;;;;;;;;;;;;;;13606:339:75;;;;;;;;;;-1:-1:-1;13606:339:75;;;;;:::i;:::-;;:::i;6079:212::-;;;;;;;;;;-1:-1:-1;6079:212:75;;;;;:::i;:::-;;:::i;9480:349:150:-;;;;;;;;;;-1:-1:-1;9480:349:150;;;;;:::i;:::-;;:::i;2331:63::-;;;;;;;;;;-1:-1:-1;2331:63:150;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;9511:25:156;;;9499:2;9484:18;2331:63:150;9365:177:156;15521:102:75;;;;;;;;;;-1:-1:-1;15603:12:75;15521:102;;6528:99:150;;;;;;;;;;-1:-1:-1;6611:9:150;;;;6528:99;;390:1019:78;;;;;;;;;;-1:-1:-1;390:1019:78;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;10064:179:75:-;;;;;;:::i;:::-;;:::i;15028:321::-;;;;;;;;;;-1:-1:-1;15028:321:75;;;;;:::i;:::-;;:::i;9022:179::-;;;;;;:::i;:::-;;:::i;8411:186:150:-;;;;;;:::i;:::-;;:::i;15948:196:75:-;16070:67;16089:5;16096:3;16101:9;16112:12;16126:10;16070:18;:67::i;:::-;15948:196;;;;:::o;23646:1499::-;5581:9:150;;;;5559:10;:32;:93;;;;-1:-1:-1;5595:9:150;;:32;;;;;;;;:57;5639:12;5595:57;;;:9;;:30;;:32;;;;;;;;;;;;;;:9;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:57;;;5559:93;5538:205;;;;;;;12109:2:156;5538:205:150;;;12091:21:156;12148:2;12128:18;;;12121:30;12187:34;12167:18;;;12160:62;12258:34;12238:18;;;12231:62;12330:3;12309:19;;;12302:32;12351:19;;5538:205:150;11907:469:156;5538:205:150;23918:37:75::1;23943:11;23918:24;:37::i;:::-;:74;;;;-1:-1:-1::0;23974:18:75::1;::::0;::::1;23959:33:::0;;::::1;23974:18:::0;::::1;23959:33;;23918:74;23914:949;;;24033:46;24053:11;24066:12;24033:19;:46::i;:::-;24008:179;;;::::0;::::1;::::0;;12583:2:156;24008:179:75::1;::::0;::::1;12565:21:156::0;12622:2;12602:18;;;12595:30;12661:34;12641:18;;;12634:62;12732:34;12712:18;;;12705:62;12804:12;12783:19;;;12776:41;12834:19;;24008:179:75::1;12381:478:156::0;24008:179:75::1;24201:53;::::0;;;;:39:::1;13056:55:156::0;;;24201:53:75::1;::::0;::::1;13038:74:156::0;13128:18;;;13121:34;;;24201:39:75;::::1;::::0;::::1;::::0;13011:18:156;;24201:53:75::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;23914:949;;;24370:25;::::0;::::1;::::0;:59;::::1;;;-1:-1:-1::0;24399:30:75::1;::::0;::::1;4107:42:128;24399:30:75;24370:59;24366:390;;;24449:12;24464:45;24478:3;24483:9;24494:7;24464:45;;;;;;;;;;;::::0;:13:::1;:45::i;:::-;24449:60;;24535:7;24527:55;;;::::0;::::1;::::0;;13368:2:156;24527:55:75::1;::::0;::::1;13350:21:156::0;13407:2;13387:18;;;13380:30;13446:34;13426:18;;;13419:62;13517:5;13497:18;;;13490:33;13540:19;;24527:55:75::1;13166:399:156::0;24527:55:75::1;24600:56;24624:5;24631:3;24636:7;24645:10;;24600:56;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;24600:23:75::1;::::0;-1:-1:-1;;;24600:56:75:i:1;:::-;24431:240;24366:390;;;24695:46;:32;::::0;::::1;24728:3:::0;24733:7;24695:32:::1;:46::i;:::-;24807:21;::::0;;::::1;;::::0;;;:8:::1;:21;::::0;;;;;;;:35;;::::1;::::0;;;;;;;:45:::1;::::0;24845:7;;24807:45:::1;:::i;:::-;24769:21;::::0;;::::1;;::::0;;;:8:::1;:21;::::0;;;;;;;:35;;::::1;::::0;;;;;;:83;23914:949:::1;25053:85;25079:11;25092:12;25106:5;25113:3;25118:7;25127:10;;25053:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;25053:25:75::1;::::0;-1:-1:-1;;;25053:85:75:i:1;:::-;23646:1499:::0;;;;;;;:::o;91:198:78:-;161:4;184:43;;;199:28;184:43;;:98;;-1:-1:-1;231:51:78;;;246:36;231:51;184:98;177:105;91:198;-1:-1:-1;;91:198:78:o;7214:186:150:-;5318:10;1465:19:38;:23;5290:99:150;;;;;;;216:2:156;5290:99:150;;;198:21:156;255:2;235:18;;;228:30;294:34;274:18;;;267:62;365:25;345:18;;;338:53;408:19;;5290:99:150;14:419:156;5290:99:150;7314:79:::1;7333:10;7345;7357:9;7368:12;7382:10;;7314:79;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;7314:18:150::1;::::0;-1:-1:-1;;;7314:79:150:i:1;:::-;7214:186:::0;;;:::o;14292:245:75:-;14480:50;14498:5;14505:3;14510:7;14519:10;;14480:17;:50::i;:::-;14292:245;;;;;:::o;22782:858::-;5581:9:150;;;;5559:10;:32;:93;;;;-1:-1:-1;5595:9:150;;:32;;;;;;;;:57;5639:12;5595:57;;;:9;;:30;;:32;;;;;;;;;;;;;;:9;:32;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:57;;;5559:93;5538:205;;;;;;;12109:2:156;5538:205:150;;;12091:21:156;12148:2;12128:18;;;12121:30;12187:34;12167:18;;;12160:62;12258:34;12238:18;;;12231:62;12330:3;12309:19;;;12302:32;12351:19;;5538:205:150;11907:469:156;5538:205:150;23013:9:75::1;:14:::0;23005:89:::1;;;::::0;::::1;::::0;;14091:2:156;23005:89:75::1;::::0;::::1;14073:21:156::0;14130:2;14110:18;;;14103:30;14169:34;14149:18;;;14142:62;14240:32;14220:18;;;14213:60;14290:19;;23005:89:75::1;13889:426:156::0;23005:89:75::1;23127:4;23112:20;::::0;::::1;::::0;23104:68:::1;;;::::0;::::1;::::0;;14522:2:156;23104:68:75::1;::::0;::::1;14504:21:156::0;14561:2;14541:18;;;14534:30;14600:34;14580:18;;;14573:62;14671:5;14651:18;;;14644:33;14694:19;;23104:68:75::1;14320:399:156::0;23104:68:75::1;23205:9;::::0;::::1;::::0;;::::1;23190:25:::0;;::::1;::::0;23182:78:::1;;;::::0;::::1;::::0;;14926:2:156;23182:78:75::1;::::0;::::1;14908:21:156::0;14965:2;14945:18;;;14938:30;15004:34;14984:18;;;14977:62;15075:10;15055:18;;;15048:38;15103:19;;23182:78:75::1;14724:404:156::0;23182:78:75::1;23278:18;::::0;23319:9:::1;::::0;23271:83:::1;::::0;;;;23278:18:::1;23319:9:::0;;::::1;23271:83;::::0;::::1;15396:34:156::0;23339:4:75::1;15446:18:156::0;;;15439:43;15498:18;;;15491:34;;;23278:18:75;::::1;::::0;23271:39:::1;::::0;15308:18:156;;23271:83:75::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;23552:18:75::1;::::0;23532:101:::1;::::0;23552:18:::1;;2568:42:128;23601:5:75::0;23608:3;23613:7;23622:10;;23532:19:::1;:101::i;5111:483::-:0;5333:18;;5283:4;;5333:18;;5311:10;:41;5303:95;;;;;;;16020:2:156;5303:95:75;;;16002:21:156;16059:2;16039:18;;;16032:30;16098:34;16078:18;;;16071:62;16169:11;16149:18;;;16142:39;16198:19;;5303:95:75;15818:405:156;5303:95:75;5409:19;5430:21;5455:26;5475:5;;5455:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;5455:19:75;;-1:-1:-1;;;5455:26:75:i;:::-;5408:73;;;;5491:75;5518:6;5526;5534:7;5543:12;5557:8;5491:26;:75::i;:::-;-1:-1:-1;5583:4:75;;5111:483;-1:-1:-1;;;;;;;5111:483:75:o;4417:284::-;4396:13:26;;2762:1:123;;4396:13:26;;;;;4395:14;:40;;;;-1:-1:-1;4413:12:26;;:22;;;;:12;;:22;4395:40;4387:99;;;;;;;16430:2:156;4387:99:26;;;16412:21:156;16469:2;16449:18;;;16442:30;16508:34;16488:18;;;16481:62;16579:16;16559:18;;;16552:44;16613:19;;4387:99:26;16228:410:156;4387:99:26;4496:12;:22;;4528:20;;4496:22;;;4528:20;4496:22;4528:20;;;4595:49:75::1;4631:10:::0;4595:21:::1;:49::i;:::-;4654:18;:40:::0;;;::::1;;::::0;::::1;;::::0;;-1:-1:-1;4569:21:26;;;;;;4605:20;;16815:4:156;16803:17;;16785:36;;4605:20:26;;16773:2:156;16758:18;4605:20:26;;;;;;;4417:284:75;;;:::o;10765:349:150:-;11008:99;11029:11;11042:12;11056:10;11068:3;11073:7;11082:12;11096:10;;11008:99;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;11008:20:150;;-1:-1:-1;;;11008:99:150:i;6836:262:75:-;7013:78;7040:10;7052:3;7057:7;7066:12;7080:10;;7013:78;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;7013:26:75;;-1:-1:-1;;;7013:78:75:i;12566:339::-;5318:10:150;1465:19:38;:23;5290:99:150;;;;;;;216:2:156;5290:99:150;;;198:21:156;255:2;235:18;;;228:30;294:34;274:18;;;267:62;365:25;345:18;;;338:53;408:19;;5290:99:150;14:419:156;5290:99:150;12798:100:75::1;12820:8;12830;12840:10;12852;12864:7;12873:12;12887:10;;12798:100;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;12798:21:75::1;::::0;-1:-1:-1;;;12798:100:75:i:1;:::-;12566:339:::0;;;;;;:::o;13606:::-;13845:93;13867:8;13877;13887:10;13899:3;13904:7;13913:12;13927:10;;13845:93;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;13845:21:75;;-1:-1:-1;;;13845:93:75:i;6079:212::-;5318:10:150;1465:19:38;:23;5290:99:150;;;;;;;216:2:156;5290:99:150;;;198:21:156;255:2;235:18;;;228:30;294:34;274:18;;;267:62;365:25;345:18;;;338:53;408:19;;5290:99:150;14:419:156;5290:99:150;6199:85:75::1;6226:10;6238;6250:7;6259:12;6273:10;;6199:85;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;6199:26:75::1;::::0;-1:-1:-1;;;6199:85:75:i:1;9480:349:150:-:0;5318:10;1465:19:38;:23;5290:99:150;;;;;;;216:2:156;5290:99:150;;;198:21:156;255:2;235:18;;;228:30;294:34;274:18;;;267:62;365:25;345:18;;;338:53;408:19;;5290:99:150;14:419:156;5290:99:150;9716:106:::1;9737:11;9750:12;9764:10;9776;9788:7;9797:12;9811:10;;9716:106;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;9716:20:150::1;::::0;-1:-1:-1;;;9716:106:150:i:1;390:1019:78:-:0;460:19;481:21;533:1;518:5;:12;:16;514:103;;;-1:-1:-1;;597:9:78;;;;;;;;;-1:-1:-1;597:9:78;;565:7;;514:103;919:11;;1047:2;1037:13;;1229:11;;1224:3;1220:21;;-1:-1:-1;1037:13:78;1276:1;1264:14;;1254:139;;1377:1;1371:4;1367:12;1355:24;;1254:139;;;390:1019;;;:::o;10064:179:75:-;10174:62;10194:10;10206:3;10211:12;10225:10;;10174:62;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;10174:19:75;;-1:-1:-1;;;10174:62:75:i;15028:321::-;15270:72;15290:8;15300;15310:5;15317:3;15322:7;15331:10;;15270:19;:72::i;9022:179::-;5318:10:150;1465:19:38;:23;5290:99:150;;;;;;;216:2:156;5290:99:150;;;198:21:156;255:2;235:18;;;228:30;294:34;274:18;;;267:62;365:25;345:18;;;338:53;408:19;;5290:99:150;14:419:156;5290:99:150;9125:69:75::1;9145:10;9157;9169:12;9183:10;;9125:69;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;::::0;;;;-1:-1:-1;9125:19:75::1;::::0;-1:-1:-1;;;9125:69:75:i:1;8411:186:150:-:0;8518:72;8537:10;8549:3;8554:9;8565:12;8579:10;;8518:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;8518:18:150;;-1:-1:-1;;;8518:72:150:i;10849:1072:75:-;11083:7;11070:9;:20;11062:95;;;;;;;17034:2:156;11062:95:75;;;17016:21:156;17073:2;17053:18;;;17046:30;17112:34;17092:18;;;17085:62;17183:32;17163:18;;;17156:60;17233:19;;11062:95:75;16832:426:156;11062:95:75;4107:42:128;11206:20:75;:36;:20;;:36;;;:46;;11245:7;;11206:46;:::i;:::-;4107:42:128;11167:20:75;:36;:20;;:36;;:85;11262:56;11286:5;11293:3;11298:7;11307:10;11262:23;:56::i;:::-;11329:9;;11399:479;;11329:9;;;;;:21;;11372:12;;11439:33;;11399:479;;4107:42:128;;11329:9:75;;11785:5;;11808:3;;11829:7;;11854:10;;11399:479;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;11329:585;;;;;;;;;;;;;11892:12;;11329:585;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;10849:1072;;;;;:::o;18283:279:150:-;18356:4;18379:79;18411:6;18419:38;18379:31;:79::i;:::-;:176;;;;18474:81;18506:6;18514:40;18474:31;:81::i;19009:410::-;19106:4;19126:87;19158:14;19174:38;19126:31;:87::i;:::-;19122:291;;;19272:14;19251:44;;;:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19236:61;;:11;:61;;;19229:68;;;;19122:291;19373:14;19350:50;;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1202:536:129;1305:4;1321:13;1668:1;1635;1594:9;1588:16;1554:2;1543:9;1539:18;1496:6;1454:7;1421:4;1395:302;1367:330;1202:536;-1:-1:-1;;;;;;1202:536:129:o;20529:328:75:-;20753:3;20723:55;;20746:5;20723:55;;;20758:7;20767:10;20723:55;;;;;;;:::i;:::-;;;;;;;;20788:62;20818:5;20825:3;20830:7;20839:10;20788:29;:62::i;763:205:31:-;902:58;;13068:42:156;13056:55;;902:58:31;;;13038:74:156;13128:18;;;13121:34;;;875:86:31;;895:5;;925:23;;13011:18:156;;902:58:31;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;875:19;:86::i;21771:447:75:-;22078:5;22026:84;;22064:12;22026:84;;22051:11;22026:84;;;22085:3;22090:7;22099:10;22026:84;;;;;;;;:::i;:::-;;;;;;;;22120:91;22152:11;22165:12;22179:5;22186:3;22191:7;22200:10;22120:31;:91::i;18804:895::-;19015:18;;19008:74;;19015:18;;19052:5;19067:4;19074:7;19008:43;:74::i;:::-;19099:18;;19135:9;;19092:63;;;;;19099:18;19135:9;;;19092:63;;;13038:74:156;13128:18;;;13121:34;;;19099:18:75;;;19092:34;;13011:18:156;;19092:63:75;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;19246:18:75;;;;19237:28;;;;:8;:28;;;;;;;;2568:42:128;19237:57:75;;;;;;;;:67;;19297:7;;19237:67;:::i;:::-;19174:18;;;;;;;19165:28;;;;:8;:28;;;;;;;;2568:42:128;19165:57:75;;;;;;;;:139;;;;19341:18;;19315:107;;19341:18;;;19390:5;19397:3;19402:7;19411:10;19315:25;:107::i;:::-;19464:9;;19568:88;;19464:9;;;;;19433:65;;19520:12;;19547:7;;19591:31;;19568:88;;19624:5;;19631:3;;19547:7;;19645:10;;19568:88;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;19433:259;;;;;;;;;;;;;;19670:12;;19433:259;;;:::i;6091:129:150:-;4888:13:26;;;;;;;4880:69;;;;;;;20433:2:156;4880:69:26;;;20415:21:156;20472:2;20452:18;;;20445:30;20511:34;20491:18;;;20484:62;20582:13;20562:18;;;20555:41;20613:19;;4880:69:26;20231:407:156;4880:69:26;6191:9:150::1;:22:::0;;;::::1;;::::0;;;::::1;::::0;;;::::1;::::0;;6091:129::o;17709:548:75:-;17987:18;;:33;;;;:18;;:33;17983:268;;18036:73;18063:5;18070:3;18075:7;18084:12;18098:10;18036:26;:73::i;:::-;17983:268;;;18140:100;18167:11;18180:12;18194:5;18201:3;18206:7;18215:12;18229:10;18140:26;:100::i;16670:345::-;16921:87;16942:8;16952;16962:5;16969:3;16974:7;16983:12;16997:10;16921:20;:87::i;19795:251:150:-;20014:3;19988:51;;20007:5;19988:51;;;20019:7;20028:10;19988:51;;;;;;;:::i;:::-;;;;;;;;19795:251;;;;:::o;1333:274:42:-;1420:4;1527:23;1542:7;1527:14;:23::i;:::-;:73;;;;;1554:46;1579:7;1588:11;1554:24;:46::i;:::-;1520:80;1333:274;-1:-1:-1;;;1333:274:42:o;20416:251:150:-;20635:3;20609:51;;20628:5;20609:51;;;20640:7;20649:10;20609:51;;;;;;;:::i;3747:706:31:-;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;4192:27;;;;:69;;;;;:::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:31;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;;;;20845:2:156;4351:85:31;;;20827:21:156;20884:2;20864:18;;;20857:30;20923:34;20903:18;;;20896:62;20994:12;20974:18;;;20967:40;21024:19;;4351:85:31;20643:406:156;22074:341:150;22376:5;22328:80;;22362:12;22328:80;;22349:11;22328:80;;;22383:3;22388:7;22397:10;22328:80;;;;;;;;:::i;:::-;;;;;;;;22074:341;;;;;;:::o;974:241:31:-;1139:68;;15345:42:156;15414:15;;;1139:68:31;;;15396:34:156;15466:15;;15446:18;;;15439:43;15498:18;;;15491:34;;;1112:96:31;;1132:5;;1162:27;;15308:18:156;;1139:68:31;15133:398:156;21092:444:75;21396:5;21347:81;;21382:12;21347:81;;21369:11;21347:81;;;21403:3;21408:7;21417:10;21347:81;;;;;;;;:::i;:::-;;;;;;;;21438:91;21470:11;21483:12;21497:5;21504:3;21509:7;21518:10;21438:31;:91::i;16357:1662:150:-;16634:37;16659:11;16634:24;:37::i;:::-;16630:512;;;16712:46;16732:11;16745:12;16712:19;:46::i;:::-;16687:179;;;;;;;12583:2:156;16687:179:150;;;12565:21:156;12622:2;12602:18;;;12595:30;12661:34;12641:18;;;12634:62;12732:34;12712:18;;;12705:62;12804:12;12783:19;;;12776:41;12834:19;;16687:179:150;12381:478:156;16687:179:150;16881:55;;;;;:39;13056:55:156;;;16881::150;;;13038:74:156;13128:18;;;13121:34;;;16881:39:150;;;;;13011:18:156;;16881:55:150;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16630:512;;;16967:67;:36;;;17004:5;17019:4;17026:7;16967:36;:67::i;:::-;17086:21;;;;;;;;:8;:21;;;;;;;;:35;;;;;;;;;;:45;;17124:7;;17086:45;:::i;:::-;17048:21;;;;;;;;:8;:21;;;;;;;;:35;;;;;;;;;:83;16630:512;17332:85;17358:11;17371:12;17385:5;17392:3;17397:7;17406:10;17332:25;:85::i;:::-;17428:9;;17498:478;;17428:9;;;;;:21;;17471:12;;17538:33;;17498:478;;17824:12;;17854:11;;17883:5;;17906:3;;17927:7;;17952:10;;17498:478;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;17428:584;;;;;;;;;;;;;17990:12;;17428:584;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;16357:1662;;;;;;;:::o;704:411:42:-;768:4;975:60;1000:7;1009:25;975:24;:60::i;:::-;:133;;;;-1:-1:-1;1052:56:42;1077:7;1086:21;1052:24;:56::i;:::-;1051:57;956:152;704:411;-1:-1:-1;;704:411:42:o;4223:638::-;4385:71;;;21228:66:156;21216:79;;4385:71:42;;;;21198:98:156;;;;4385:71:42;;;;;;;;;;21171:18:156;;;;4385:71:42;;;;;;;;;;;4408:34;4385:71;;;4664:20;;4316:4;;4385:71;4316:4;;;;;;4385:71;4316:4;;4664:20;4629:7;4622:5;4611:86;4600:97;;4724:16;4710:30;;4774:4;4768:11;4753:26;;4806:7;:29;;;;;4831:4;4817:10;:18;;4806:29;:48;;;;;4853:1;4839:11;:15;4806:48;4799:55;4223:638;-1:-1:-1;;;;;;;4223:638:42:o;3861:223:38:-;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;3861:223;-1:-1:-1;;;;3861:223:38:o;21200:341:150:-;21502:5;21454:80;;21488:12;21454:80;;21475:11;21454:80;;;21509:3;21514:7;21523:10;21454:80;;;;;;;;:::i;4948:499:38:-;5113:12;5170:5;5145:21;:30;;5137:81;;;;;;;21509:2:156;5137:81:38;;;21491:21:156;21548:2;21528:18;;;21521:30;21587:34;21567:18;;;21560:62;21658:8;21638:18;;;21631:36;21684:19;;5137:81:38;21307:402:156;5137:81:38;1465:19;;;;5228:60;;;;;;;21916:2:156;5228:60:38;;;21898:21:156;21955:2;21935:18;;;21928:30;21994:31;21974:18;;;21967:59;22043:18;;5228:60:38;21714:353:156;5228:60:38;5300:12;5314:23;5341:6;:11;;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;7707;7735:7;7731:566;;;-1:-1:-1;7765:10:38;7758:17;;7731:566;7876:17;;:21;7872:415;;8120:10;8114:17;8180:15;8167:10;8163:2;8159:19;8152:44;7872:415;8259:12;8252:20;;;;;;;;;;;:::i;438:154:156:-;524:42;517:5;513:54;506:5;503:65;493:93;;582:1;579;572:12;493:93;438:154;:::o;597:347::-;648:8;658:6;712:3;705:4;697:6;693:17;689:27;679:55;;730:1;727;720:12;679:55;-1:-1:-1;753:20:156;;796:18;785:30;;782:50;;;828:1;825;818:12;782:50;865:4;857:6;853:17;841:29;;917:3;910:4;901:6;893;889:19;885:30;882:39;879:59;;;934:1;931;924:12;879:59;597:347;;;;;:::o;949:1038::-;1064:6;1072;1080;1088;1096;1104;1112;1165:3;1153:9;1144:7;1140:23;1136:33;1133:53;;;1182:1;1179;1172:12;1133:53;1221:9;1208:23;1240:31;1265:5;1240:31;:::i;:::-;1290:5;-1:-1:-1;1347:2:156;1332:18;;1319:32;1360:33;1319:32;1360:33;:::i;:::-;1412:7;-1:-1:-1;1471:2:156;1456:18;;1443:32;1484:33;1443:32;1484:33;:::i;:::-;1536:7;-1:-1:-1;1595:2:156;1580:18;;1567:32;1608:33;1567:32;1608:33;:::i;:::-;1660:7;-1:-1:-1;1714:3:156;1699:19;;1686:33;;-1:-1:-1;1770:3:156;1755:19;;1742:33;1798:18;1787:30;;1784:50;;;1830:1;1827;1820:12;1784:50;1869:58;1919:7;1910:6;1899:9;1895:22;1869:58;:::i;:::-;949:1038;;;;-1:-1:-1;949:1038:156;;-1:-1:-1;949:1038:156;;;;1843:84;;-1:-1:-1;;;949:1038:156:o;1992:332::-;2050:6;2103:2;2091:9;2082:7;2078:23;2074:32;2071:52;;;2119:1;2116;2109:12;2071:52;2158:9;2145:23;2208:66;2201:5;2197:78;2190:5;2187:89;2177:117;;2290:1;2287;2280:12;2521:163;2588:20;;2648:10;2637:22;;2627:33;;2617:61;;2674:1;2671;2664:12;2617:61;2521:163;;;:::o;2689:481::-;2767:6;2775;2783;2836:2;2824:9;2815:7;2811:23;2807:32;2804:52;;;2852:1;2849;2842:12;2804:52;2875:28;2893:9;2875:28;:::i;:::-;2865:38;;2954:2;2943:9;2939:18;2926:32;2981:18;2973:6;2970:30;2967:50;;;3013:1;3010;3003:12;2967:50;3052:58;3102:7;3093:6;3082:9;3078:22;3052:58;:::i;:::-;2689:481;;3129:8;;-1:-1:-1;3026:84:156;;-1:-1:-1;;;;2689:481:156:o;3175:754::-;3272:6;3280;3288;3296;3304;3357:3;3345:9;3336:7;3332:23;3328:33;3325:53;;;3374:1;3371;3364:12;3325:53;3413:9;3400:23;3432:31;3457:5;3432:31;:::i;:::-;3482:5;-1:-1:-1;3539:2:156;3524:18;;3511:32;3552:33;3511:32;3552:33;:::i;:::-;3604:7;-1:-1:-1;3658:2:156;3643:18;;3630:32;;-1:-1:-1;3713:2:156;3698:18;;3685:32;3740:18;3729:30;;3726:50;;;3772:1;3769;3762:12;3726:50;3811:58;3861:7;3852:6;3841:9;3837:22;3811:58;:::i;:::-;3175:754;;;;-1:-1:-1;3175:754:156;;-1:-1:-1;3888:8:156;;3785:84;3175:754;-1:-1:-1;;;3175:754:156:o;4195:418::-;4293:6;4301;4354:2;4342:9;4333:7;4329:23;4325:32;4322:52;;;4370:1;4367;4360:12;4322:52;4409:9;4396:23;4428:31;4453:5;4428:31;:::i;:::-;4478:5;-1:-1:-1;4535:2:156;4520:18;;4507:32;4548:33;4507:32;4548:33;:::i;:::-;4600:7;4590:17;;;4195:418;;;;;:::o;4849:969::-;4963:6;4971;4979;4987;4995;5003;5011;5064:3;5052:9;5043:7;5039:23;5035:33;5032:53;;;5081:1;5078;5071:12;5032:53;5120:9;5107:23;5139:31;5164:5;5139:31;:::i;:::-;5189:5;-1:-1:-1;5246:2:156;5231:18;;5218:32;5259:33;5218:32;5259:33;:::i;:::-;5311:7;-1:-1:-1;5370:2:156;5355:18;;5342:32;5383:33;5342:32;5383:33;:::i;:::-;5435:7;-1:-1:-1;5489:2:156;5474:18;;5461:32;;-1:-1:-1;5512:38:156;5545:3;5530:19;;5512:38;:::i;:::-;5502:48;;5601:3;5590:9;5586:19;5573:33;5629:18;5621:6;5618:30;5615:50;;;5661:1;5658;5651:12;5823:258;5895:1;5905:113;5919:6;5916:1;5913:13;5905:113;;;5995:11;;;5989:18;5976:11;;;5969:39;5941:2;5934:10;5905:113;;;6036:6;6033:1;6030:13;6027:48;;;-1:-1:-1;;6071:1:156;6053:16;;6046:27;5823:258::o;6086:317::-;6128:3;6166:5;6160:12;6193:6;6188:3;6181:19;6209:63;6265:6;6258:4;6253:3;6249:14;6242:4;6235:5;6231:16;6209:63;:::i;:::-;6317:2;6305:15;6322:66;6301:88;6292:98;;;;6392:4;6288:109;;6086:317;-1:-1:-1;;6086:317:156:o;6408:220::-;6557:2;6546:9;6539:21;6520:4;6577:45;6618:2;6607:9;6603:18;6595:6;6577:45;:::i;6633:685::-;6729:6;6737;6745;6753;6761;6814:3;6802:9;6793:7;6789:23;6785:33;6782:53;;;6831:1;6828;6821:12;6782:53;6870:9;6857:23;6889:31;6914:5;6889:31;:::i;:::-;6939:5;-1:-1:-1;6991:2:156;6976:18;;6963:32;;-1:-1:-1;7014:37:156;7047:2;7032:18;;7014:37;:::i;:::-;7004:47;;7102:2;7091:9;7087:18;7074:32;7129:18;7121:6;7118:30;7115:50;;;7161:1;7158;7151:12;7323:827;7428:6;7436;7444;7452;7460;7468;7521:3;7509:9;7500:7;7496:23;7492:33;7489:53;;;7538:1;7535;7528:12;7489:53;7577:9;7564:23;7596:31;7621:5;7596:31;:::i;:::-;7646:5;-1:-1:-1;7703:2:156;7688:18;;7675:32;7716:33;7675:32;7716:33;:::i;:::-;7768:7;-1:-1:-1;7822:2:156;7807:18;;7794:32;;-1:-1:-1;7845:37:156;7878:2;7863:18;;7845:37;:::i;:::-;7835:47;;7933:3;7922:9;7918:19;7905:33;7961:18;7953:6;7950:30;7947:50;;;7993:1;7990;7983:12;7947:50;8032:58;8082:7;8073:6;8062:9;8058:22;8032:58;:::i;:::-;7323:827;;;;-1:-1:-1;7323:827:156;;-1:-1:-1;7323:827:156;;8109:8;;7323:827;-1:-1:-1;;;7323:827:156:o;8418:549::-;8505:6;8513;8521;8529;8582:2;8570:9;8561:7;8557:23;8553:32;8550:52;;;8598:1;8595;8588:12;8550:52;8634:9;8621:23;8611:33;;8663:37;8696:2;8685:9;8681:18;8663:37;:::i;:::-;8653:47;;8751:2;8740:9;8736:18;8723:32;8778:18;8770:6;8767:30;8764:50;;;8810:1;8807;8800:12;8764:50;8849:58;8899:7;8890:6;8879:9;8875:22;8849:58;:::i;:::-;8418:549;;;;-1:-1:-1;8926:8:156;-1:-1:-1;;;;8418:549:156:o;9547:184::-;9599:77;9596:1;9589:88;9696:4;9693:1;9686:15;9720:4;9717:1;9710:15;9736:980;9804:6;9857:2;9845:9;9836:7;9832:23;9828:32;9825:52;;;9873:1;9870;9863:12;9825:52;9913:9;9900:23;9942:18;9983:2;9975:6;9972:14;9969:34;;;9999:1;9996;9989:12;9969:34;10037:6;10026:9;10022:22;10012:32;;10082:7;10075:4;10071:2;10067:13;10063:27;10053:55;;10104:1;10101;10094:12;10053:55;10140:2;10127:16;10162:2;10158;10155:10;10152:36;;;10168:18;;:::i;:::-;10302:2;10296:9;10364:4;10356:13;;10207:66;10352:22;;;10376:2;10348:31;10344:40;10332:53;;;10400:18;;;10420:22;;;10397:46;10394:72;;;10446:18;;:::i;:::-;10486:10;10482:2;10475:22;10521:2;10513:6;10506:18;10561:7;10556:2;10551;10547;10543:11;10539:20;10536:33;10533:53;;;10582:1;10579;10572:12;10533:53;10638:2;10633;10629;10625:11;10620:2;10612:6;10608:15;10595:46;10683:1;10661:15;;;10678:2;10657:24;10650:35;;;;-1:-1:-1;10665:6:156;9736:980;-1:-1:-1;;;;;9736:980:156:o;10721:304::-;10906:10;10898:6;10894:23;10883:9;10876:42;10954:2;10949;10938:9;10934:18;10927:30;10857:4;10974:45;11015:2;11004:9;11000:18;10992:6;10974:45;:::i;11030:616::-;11117:6;11125;11133;11141;11194:2;11182:9;11173:7;11169:23;11165:32;11162:52;;;11210:1;11207;11200:12;11162:52;11249:9;11236:23;11268:31;11293:5;11268:31;:::i;:::-;11318:5;-1:-1:-1;11342:37:156;11375:2;11360:18;;11342:37;:::i;11651:251::-;11721:6;11774:2;11762:9;11753:7;11749:23;11745:32;11742:52;;;11790:1;11787;11780:12;11742:52;11822:9;11816:16;11841:31;11866:5;11841:31;:::i;13570:184::-;13622:77;13619:1;13612:88;13719:4;13716:1;13709:15;13743:4;13740:1;13733:15;13759:125;13799:4;13827:1;13824;13821:8;13818:34;;;13832:18;;:::i;:::-;-1:-1:-1;13869:9:156;;13759:125::o;15536:277::-;15603:6;15656:2;15644:9;15635:7;15631:23;15627:32;15624:52;;;15672:1;15669;15662:12;15624:52;15704:9;15698:16;15757:5;15750:13;15743:21;15736:5;15733:32;15723:60;;15779:1;15776;15769:12;17263:128;17303:3;17334:1;17330:6;17327:1;17324:13;17321:39;;;17340:18;;:::i;:::-;-1:-1:-1;17376:9:156;;17263:128::o;17396:674::-;17646:4;17675:42;17756:2;17748:6;17744:15;17733:9;17726:34;17808:2;17800:6;17796:15;17791:2;17780:9;17776:18;17769:43;17860:2;17852:6;17848:15;17843:2;17832:9;17828:18;17821:43;17912:2;17904:6;17900:15;17895:2;17884:9;17880:18;17873:43;;17953:6;17947:3;17936:9;17932:19;17925:35;17997:3;17991;17980:9;17976:19;17969:32;18018:46;18059:3;18048:9;18044:19;18036:6;18018:46;:::i;:::-;18010:54;17396:674;-1:-1:-1;;;;;;;;17396:674:156:o;18075:424::-;18288:42;18280:6;18276:55;18265:9;18258:74;18368:2;18363;18352:9;18348:18;18341:30;18239:4;18388:45;18429:2;18418:9;18414:18;18406:6;18388:45;:::i;:::-;18380:53;;18481:10;18473:6;18469:23;18464:2;18453:9;18449:18;18442:51;18075:424;;;;;;:::o;18504:289::-;18679:6;18668:9;18661:25;18722:2;18717;18706:9;18702:18;18695:30;18642:4;18742:45;18783:2;18772:9;18768:18;18760:6;18742:45;:::i;18798:409::-;19013:42;19005:6;19001:55;18990:9;18983:74;19093:6;19088:2;19077:9;19073:18;19066:34;19136:2;19131;19120:9;19116:18;19109:30;18964:4;19156:45;19197:2;19186:9;19182:18;19174:6;19156:45;:::i;:::-;19148:53;18798:409;-1:-1:-1;;;;;18798:409:156:o;19212:512::-;19406:4;19435:42;19516:2;19508:6;19504:15;19493:9;19486:34;19568:2;19560:6;19556:15;19551:2;19540:9;19536:18;19529:43;;19608:6;19603:2;19592:9;19588:18;19581:34;19651:3;19646:2;19635:9;19631:18;19624:31;19672:46;19713:3;19702:9;19698:19;19690:6;19672:46;:::i;:::-;19664:54;19212:512;-1:-1:-1;;;;;;19212:512:156:o;19729:497::-;19970:42;19962:6;19958:55;19947:9;19940:74;20050:6;20045:2;20034:9;20030:18;20023:34;20093:3;20088:2;20077:9;20073:18;20066:31;19921:4;20114:46;20155:3;20144:9;20140:19;20132:6;20114:46;:::i;:::-;20106:54;;20208:10;20200:6;20196:23;20191:2;20180:9;20176:18;20169:51;19729:497;;;;;;;:::o;22072:274::-;22201:3;22239:6;22233:13;22255:53;22301:6;22296:3;22289:4;22281:6;22277:17;22255:53;:::i;:::-;22324:16;;;;;22072:274;-1:-1:-1;;22072:274:156:o",
    "linkReferences": {},
    "immutableReferences": {
      "65601": [
        {
          "start": 1166,
          "length": 32
        },
        {
          "start": 1381,
          "length": 32
        },
        {
          "start": 1715,
          "length": 32
        },
        {
          "start": 3452,
          "length": 32
        },
        {
          "start": 6804,
          "length": 32
        },
        {
          "start": 8408,
          "length": 32
        },
        {
          "start": 10371,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "MESSENGER()": "927ede2d",
    "OTHER_BRIDGE()": "7f46ddb2",
    "bridgeERC20(address,address,uint256,uint32,bytes)": "87087623",
    "bridgeERC20To(address,address,address,uint256,uint32,bytes)": "540abf73",
    "bridgeETH(uint32,bytes)": "09fc8843",
    "bridgeETHTo(address,uint32,bytes)": "e11013dd",
    "bridgeNativeToken(uint256,uint32,bytes)": "95911e5a",
    "bridgeNativeTokenTo(address,uint256,uint32,bytes)": "e56b44a3",
    "depositERC20(address,address,uint256,uint32,bytes)": "58a997f6",
    "depositERC20To(address,address,address,uint256,uint32,bytes)": "838b2520",
    "depositETH(uint32,bytes)": "b1a1a882",
    "depositETHTo(address,uint32,bytes)": "9a2ac6d5",
    "depositNativeToken(uint256,uint32,bytes)": "86c1a9de",
    "depositNativeTokenTo(address,uint256,uint32,bytes)": "5791f5c2",
    "deposits(address,address)": "8f601f66",
    "finalizeBridgeERC20(address,address,address,address,uint256,bytes)": "0166a07a",
    "finalizeBridgeETH(address,address,uint256,bytes)": "1635f5fd",
    "finalizeERC20Withdrawal(address,address,address,address,uint256,bytes)": "a9f9e675",
    "finalizeETHWithdrawal(address,address,uint256,bytes)": "1532ec34",
    "initialize(address,address)": "485cc955",
    "l2TokenBridge()": "91c49bf8",
    "messenger()": "3cb747bf",
    "nativeTokenAddress()": "4d0047ee",
    "onApprove(address,address,uint256,bytes)": "4273ca16",
    "otherBridge()": "c89701a2",
    "supportsInterface(bytes4)": "01ffc9a7",
    "unpackOnApproveData(bytes)": "92a162cf",
    "version()": "54fd4d50"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"localToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"remoteToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"ERC20BridgeFinalized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"localToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"remoteToken\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"ERC20BridgeInitiated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"l1Token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"l2Token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"ERC20DepositInitiated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"l1Token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"l2Token\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"ERC20WithdrawalFinalized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"ETHBridgeFinalized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"ETHBridgeInitiated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"ETHDepositInitiated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"extraData\",\"type\":\"bytes\"}],\"name\":\"ETHWithdrawalFinalized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"MESSENGER\",\"outputs\":[{\"internalType\":\"contract CrossDomainMessenger\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"OTHER_BRIDGE\",\"outputs\":[{\"internalType\":\"contract StandardBridge\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_localToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_remoteToken\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_minGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"bridgeERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_localToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_remoteToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_minGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"bridgeERC20To\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_minGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"bridgeETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_minGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"bridgeETHTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_minGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"bridgeNativeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_minGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"bridgeNativeTokenTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_l1Token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_l2Token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_minGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"depositERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_l1Token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_l2Token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_minGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"depositERC20To\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint32\",\"name\":\"_minGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"depositETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint32\",\"name\":\"_minGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"depositETHTo\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_minGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"depositNativeToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint32\",\"name\":\"_minGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"depositNativeTokenTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"deposits\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_localToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_remoteToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"finalizeBridgeERC20\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"finalizeBridgeETH\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_l1Token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_l2Token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"finalizeERC20Withdrawal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"finalizeETHWithdrawal\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract CrossDomainMessenger\",\"name\":\"_messenger\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_nativeTokenAddress\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"l2TokenBridge\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"messenger\",\"outputs\":[{\"internalType\":\"contract CrossDomainMessenger\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nativeTokenAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"onApprove\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"otherBridge\",\"outputs\":[{\"internalType\":\"contract StandardBridge\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_data\",\"type\":\"bytes\"}],\"name\":\"unpackOnApproveData\",\"outputs\":[{\"internalType\":\"uint32\",\"name\":\"_minGasLimit\",\"type\":\"uint32\"},{\"internalType\":\"bytes\",\"name\":\"_message\",\"type\":\"bytes\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"custom:proxied\":\"@title L1StandardBridge\",\"events\":{\"ERC20DepositInitiated(address,address,address,address,uint256,bytes)\":{\"custom:legacy\":\"@notice Emitted whenever an ERC20 deposit is initiated.\",\"params\":{\"amount\":\"Amount of the ERC20 deposited.\",\"extraData\":\"Extra data attached to the deposit.\",\"from\":\"Address of the depositor.\",\"l1Token\":\"Address of the token on L1.\",\"l2Token\":\"Address of the corresponding token on L2.\",\"to\":\"Address of the recipient on L2.\"}},\"ERC20WithdrawalFinalized(address,address,address,address,uint256,bytes)\":{\"custom:legacy\":\"@notice Emitted whenever an ERC20 withdrawal is finalized.\",\"params\":{\"amount\":\"Amount of the ERC20 withdrawn.\",\"extraData\":\"Extra data attached to the withdrawal.\",\"from\":\"Address of the withdrawer.\",\"l1Token\":\"Address of the token on L1.\",\"l2Token\":\"Address of the corresponding token on L2.\",\"to\":\"Address of the recipient on L1.\"}},\"ETHDepositInitiated(address,address,uint256,bytes)\":{\"custom:legacy\":\"@notice Emitted whenever a deposit of ETH from L1 into L2 is initiated.\",\"params\":{\"amount\":\"Amount of ETH deposited.\",\"extraData\":\"Extra data attached to the deposit.\",\"from\":\"Address of the depositor.\",\"to\":\"Address of the recipient on L2.\"}},\"ETHWithdrawalFinalized(address,address,uint256,bytes)\":{\"custom:legacy\":\"@notice Emitted whenever a withdrawal of ETH from L2 to L1 is finalized.\",\"params\":{\"amount\":\"Amount of ETH withdrawn.\",\"extraData\":\"Extra data attached to the withdrawal.\",\"from\":\"Address of the withdrawer.\",\"to\":\"Address of the recipient on L1.\"}}},\"kind\":\"dev\",\"methods\":{\"MESSENGER()\":{\"custom:legacy\":\"@return Messenger contract on this domain.\"},\"bridgeERC20(address,address,uint256,uint32,bytes)\":{\"params\":{\"_amount\":\"Amount of local tokens to deposit.\",\"_extraData\":\"Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.\",\"_localToken\":\"Address of the ERC20 on this chain.\",\"_minGasLimit\":\"Minimum amount of gas that the bridge can be relayed with.\",\"_remoteToken\":\"Address of the corresponding token on the remote chain.\"}},\"bridgeERC20To(address,address,address,uint256,uint32,bytes)\":{\"params\":{\"_amount\":\"Amount of local tokens to deposit.\",\"_extraData\":\"Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.\",\"_localToken\":\"Address of the ERC20 on this chain.\",\"_minGasLimit\":\"Minimum amount of gas that the bridge can be relayed with.\",\"_remoteToken\":\"Address of the corresponding token on the remote chain.\",\"_to\":\"Address of the receiver.\"}},\"bridgeETH(uint32,bytes)\":{\"params\":{\"_extraData\":\"Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.\",\"_minGasLimit\":\"Minimum amount of gas that the bridge can be relayed with.\"}},\"bridgeETHTo(address,uint32,bytes)\":{\"params\":{\"_extraData\":\"Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.\",\"_minGasLimit\":\"Minimum amount of gas that the bridge can be relayed with.\",\"_to\":\"Address of the receiver.\"}},\"bridgeNativeToken(uint256,uint32,bytes)\":{\"params\":{\"_amount\":\"Amount of native being bridged.\",\"_extraData\":\"Optional data to forward to L2.                     Data supplied here will not be used to execute any code on L2 and is                     only emitted as extra data for the convenience of off-chain tooling.\",\"_minGasLimit\":\"Minimum gas limit for the deposit message on L2.\"}},\"bridgeNativeTokenTo(address,uint256,uint32,bytes)\":{\"params\":{\"_amount\":\"Amount of native being bridged.\",\"_extraData\":\"Optional data to forward to L2.                     Data supplied here will not be used to execute any code on L2 and is                     only emitted as extra data for the convenience of off-chain tooling.\",\"_minGasLimit\":\"Minimum gas limit for the deposit message on L2.\",\"_to\":\"Address of the recipient on L2.\"}},\"depositERC20(address,address,uint256,uint32,bytes)\":{\"custom:legacy\":\"@notice Deposits some amount of ERC20 tokens into the sender's account on L2.\",\"params\":{\"_amount\":\"Amount of the ERC20 to deposit.\",\"_extraData\":\"Optional data to forward to L2.                     Data supplied here will not be used to execute any code on L2 and is                     only emitted as extra data for the convenience of off-chain tooling.\",\"_l1Token\":\"Address of the L1 token being deposited.\",\"_l2Token\":\"Address of the corresponding token on L2.\",\"_minGasLimit\":\"Minimum gas limit for the deposit message on L2.\"}},\"depositERC20To(address,address,address,uint256,uint32,bytes)\":{\"custom:legacy\":\"@notice Deposits some amount of ERC20 tokens into a target account on L2.\",\"params\":{\"_amount\":\"Amount of the ERC20 to deposit.\",\"_extraData\":\"Optional data to forward to L2.                     Data supplied here will not be used to execute any code on L2 and is                     only emitted as extra data for the convenience of off-chain tooling.\",\"_l1Token\":\"Address of the L1 token being deposited.\",\"_l2Token\":\"Address of the corresponding token on L2.\",\"_minGasLimit\":\"Minimum gas limit for the deposit message on L2.\",\"_to\":\"Address of the recipient on L2.\"}},\"depositETH(uint32,bytes)\":{\"params\":{\"_extraData\":\"Optional data to forward to L2.                     Data supplied here will not be used to execute any code on L2 and is                     only emitted as extra data for the convenience of off-chain tooling.\",\"_minGasLimit\":\"Minimum gas limit for the deposit message on L2.\"}},\"depositETHTo(address,uint32,bytes)\":{\"params\":{\"_extraData\":\"Optional data to forward to L2.                     Data supplied here will not be used to execute any code on L2 and is                     only emitted as extra data for the convenience of off-chain tooling.\",\"_minGasLimit\":\"Minimum gas limit for the deposit message on L2.\",\"_to\":\"Address of the recipient on L2.\"}},\"depositNativeToken(uint256,uint32,bytes)\":{\"params\":{\"_amount\":\"Amount of native being bridged.\",\"_extraData\":\"Optional data to forward to L2.                     Data supplied here will not be used to execute any code on L2 and is                     only emitted as extra data for the convenience of off-chain tooling.\",\"_minGasLimit\":\"Minimum gas limit for the deposit message on L2.\"}},\"depositNativeTokenTo(address,uint256,uint32,bytes)\":{\"params\":{\"_amount\":\"Amount of native being bridged.\",\"_extraData\":\"Optional data to forward to L2.                     Data supplied here will not be used to execute any code on L2 and is                     only emitted as extra data for the convenience of off-chain tooling.\",\"_minGasLimit\":\"Minimum gas limit for the deposit message on L2.\",\"_to\":\"Address of the recipient on L2.\"}},\"finalizeBridgeERC20(address,address,address,address,uint256,bytes)\":{\"params\":{\"_amount\":\"Amount of the ERC20 being bridged.\",\"_extraData\":\"Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.\",\"_from\":\"Address of the sender.\",\"_localToken\":\"Address of the ERC20 on this chain.\",\"_remoteToken\":\"Address of the corresponding token on the remote chain.\",\"_to\":\"Address of the receiver.\"}},\"finalizeBridgeETH(address,address,uint256,bytes)\":{\"params\":{\"_amount\":\"Amount of ETH being bridged.\",\"_extraData\":\"Extra data to be sent with the transaction. Note that the recipient will                   not be triggered with this data, but it will be emitted and can be used                   to identify the transaction.\",\"_from\":\"Address of the sender.\",\"_to\":\"Address of the receiver.\"}},\"finalizeERC20Withdrawal(address,address,address,address,uint256,bytes)\":{\"custom:legacy\":\"@notice Finalizes a withdrawal of ERC20 tokens from L2.\",\"params\":{\"_amount\":\"Amount of the ERC20 to withdraw.\",\"_extraData\":\"Optional data forwarded from L2.\",\"_from\":\"Address of the withdrawer on L2.\",\"_l1Token\":\"Address of the token on L1. L1 must be different than l1TokenAddress\",\"_l2Token\":\"Address of the corresponding token on L2.\",\"_to\":\"Address of the recipient on L1.\"}},\"finalizeETHWithdrawal(address,address,uint256,bytes)\":{\"custom:legacy\":\"@notice Finalizes a withdrawal of ETH from L2 => receive L2's native token in L1\",\"params\":{\"_amount\":\"Amount of ETH to withdraw.\",\"_extraData\":\"Optional data forwarded from L2.\",\"_from\":\"Address of the withdrawer on L2.\",\"_to\":\"Address of the recipient on L1.\"}},\"l2TokenBridge()\":{\"custom:legacy\":\"@notice Retrieves the access of the corresponding L2 bridge contract.\",\"returns\":{\"_0\":\"Address of the corresponding L2 bridge contract.\"}},\"onApprove(address,address,uint256,bytes)\":{\"params\":{\"_amount\":\"Approved amount\",\"_data\":\"Data used in OnApprove contract\",\"_owner\":\"Account that called approveAndCall\"}},\"unpackOnApproveData(bytes)\":{\"params\":{\"_data\":\"Data used in OnApprove contract\"}}},\"stateVariables\":{\"version\":{\"custom:semver\":\"1.4.1\"}},\"version\":1},\"userdoc\":{\"events\":{\"ERC20BridgeFinalized(address,address,address,address,uint256,bytes)\":{\"notice\":\"Emitted when an ERC20 bridge is finalized on this chain.\"},\"ERC20BridgeInitiated(address,address,address,address,uint256,bytes)\":{\"notice\":\"Emitted when an ERC20 bridge is initiated to the other chain.\"},\"ETHBridgeFinalized(address,address,uint256,bytes)\":{\"notice\":\"Emitted when an ETH bridge is finalized on this chain.\"},\"ETHBridgeInitiated(address,address,uint256,bytes)\":{\"notice\":\"Emitted when an ETH bridge is initiated to the other chain.\"}},\"kind\":\"user\",\"methods\":{\"MESSENGER()\":{\"notice\":\"Getter for messenger contract.\"},\"OTHER_BRIDGE()\":{\"notice\":\"Corresponding bridge on the other domain. This public getter is deprecated         and will be removed in the future. Please use `otherBridge` instead.         This can safely be an immutable because for the L1StandardBridge, it will         be set to the L2StandardBridge address, which is the same for all OP Stack         chains. For the L2StandardBridge, there are not multiple proxies using the         same implementation.\"},\"bridgeERC20(address,address,uint256,uint32,bytes)\":{\"notice\":\"Sends ERC20 tokens to the sender's address on the other chain. Note that if the         ERC20 token on the other chain does not recognize the local token as the correct         pair token, the ERC20 bridge will fail and the tokens will be returned to sender on         this chain.\"},\"bridgeERC20To(address,address,address,uint256,uint32,bytes)\":{\"notice\":\"Sends ERC20 tokens to a receiver's address on the other chain. Note that if the         ERC20 token on the other chain does not recognize the local token as the correct         pair token, the ERC20 bridge will fail and the tokens will be returned to sender on         this chain.\"},\"bridgeETH(uint32,bytes)\":{\"notice\":\"Sends ETH to the sender's address on the other chain.\"},\"bridgeETHTo(address,uint32,bytes)\":{\"notice\":\"Sends ETH to a receiver's address on the other chain. Note that if ETH is sent to a         smart contract and the call fails, the ETH will be temporarily locked in the         StandardBridge on the other chain until the call is replayed. If the call cannot be         replayed with any amount of gas (call always reverts), then the ETH will be         permanently locked in the StandardBridge on the other chain. ETH will also         be locked if the receiver is the other bridge, because finalizeBridgeETH will revert         in that case.\"},\"bridgeNativeToken(uint256,uint32,bytes)\":{\"notice\":\"Deposits some amount of token into the sender's native's account on L2.\"},\"bridgeNativeTokenTo(address,uint256,uint32,bytes)\":{\"notice\":\"Deposits some amount of ERC20 token into a target Native's account on L2.\"},\"constructor\":{\"notice\":\"Constructs the L1StandardBridge contract.\"},\"depositETH(uint32,bytes)\":{\"notice\":\"Deposits some amount of ETH into the sender's ETH's account on L2.\"},\"depositETHTo(address,uint32,bytes)\":{\"notice\":\"Deposits some amount of ETH into a target ETH's account on L2.         Note that if ETH is sent to a contract on L2 and the call fails, then that ETH will         be locked in the L2StandardBridge. ETH may be recoverable if the call can be         successfully replayed by increasing the amount of gas supplied to the call. If the         call will fail for any amount of gas, then the ETH will be locked permanently.\"},\"depositNativeToken(uint256,uint32,bytes)\":{\"notice\":\"Deposits some amount of token into the sender's native's account on L2.\"},\"depositNativeTokenTo(address,uint256,uint32,bytes)\":{\"notice\":\"Deposits some amount of token into the sender's native's account on L2.\"},\"deposits(address,address)\":{\"notice\":\"Mapping that stores deposits for a given pair of local and remote tokens.\"},\"finalizeBridgeERC20(address,address,address,address,uint256,bytes)\":{\"notice\":\"Finalizes an ERC20 bridge on this chain. Can only be triggered by the other         StandardBridge contract on the remote chain.\"},\"finalizeBridgeETH(address,address,uint256,bytes)\":{\"notice\":\"Finalizes an ETH bridge on this chain. Can only be triggered by the other         StandardBridge contract on the remote chain.\"},\"initialize(address,address)\":{\"notice\":\"Initializer\"},\"messenger()\":{\"notice\":\"Messenger contract on this domain. This public getter is deprecated         and will be removed in the future. Please use `messenger` instead.\"},\"onApprove(address,address,uint256,bytes)\":{\"notice\":\"ERC20 onApprove callback\"},\"otherBridge()\":{\"notice\":\"Getter for the remote domain bridge contract.\"},\"unpackOnApproveData(bytes)\":{\"notice\":\"unpack onApprove data\"},\"version()\":{\"notice\":\"Semantic version.\"}},\"notice\":\"The L1StandardBridge is responsible for transfering ETH and ERC20 tokens between L1 and         L2. In the case that an ERC20 token is native to L1, it will be escrowed within this         contract. If the ERC20 token is native to L2, it will be burnt. Before Bedrock, ETH was         stored within this contract. After Bedrock, ETH is instead stored inside the         OptimismPortal contract.         NOTE: this contract is not intended to support all variations of ERC20 tokens. Examples         of some token types that may not be properly supported by this contract include, but are         not limited to: tokens with transfer fees, rebasing tokens, and tokens with blocklists.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/L1/L1StandardBridge.sol\":\"L1StandardBridge\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@cwia/=lib/clones-with-immutable-args/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/solmate/\",\":clones-with-immutable-args/=lib/clones-with-immutable-args/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x2a21b14ff90012878752f230d3ffd5c3405e5938d06c97a7d89c0a64561d0d66\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3313a8f9bb1f9476857c9050067b31982bf2140b83d84f3bc0cec1f62bbe947f\",\"dweb:/ipfs/Qma17Pk8NRe7aB4UD3jjVxk7nSFaov3eQyv86hcyqkwJRV\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6\",\"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/ERC165Checker.sol\":{\"keccak256\":\"0xc65c83c1039508fa7a42a09a3c6a32babd1c438ba4dbb23581255e784b5d5eed\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a1b3b38db0f76429db899909025e534c366415e9ea8b5ddc4c8901e6a7fc1461\",\"dweb:/ipfs/QmYv1KxyHjLEky9JWNSsSfpGJbiCxFyzVFgTwQKpiqYGUg\"]},\"lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol\":{\"keccak256\":\"0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f\",\"dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy\"]},\"lib/openzeppelin-contracts/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929\",\"dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC\"]},\"lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol\":{\"keccak256\":\"0xb3ebde1c8d27576db912d87c3560dab14adfb9cd001be95890ec4ba035e652e7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a709421c4f5d4677db8216055d2d4dac96a613efdb08178a9f7041f0c5cef689\",\"dweb:/ipfs/QmYs2rStvVLDnSJs8HgaMD1ABwoKKWdiVbQyNfLfFWTjTy\"]},\"lib/solmate/src/utils/FixedPointMathLib.sol\":{\"keccak256\":\"0x622fcd8a49e132df5ec7651cc6ae3aaf0cf59bdcd67a9a804a1b9e2485113b7d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://af77088eb606427d4c55e578984a615779c86bc30646a20f7bb27299ba390f7c\",\"dweb:/ipfs/QmZGQdhdQDtHc7gZXWrKXgA3govc74X8U63BiWhPQK3mK8\"]},\"src/L1/L1CrossDomainMessenger.sol\":{\"keccak256\":\"0x2e0934728da1a087267bf2b2a90e05b37e78235d0f9800e5e7e1b548c7a6b42b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b706a5a44ef6a9f262d115daa5ac46a144587a9f97691fd6d3ff8a24bb59ea9e\",\"dweb:/ipfs/QmeBzC8NNXXSbcjeNNGNYRDLn4EUNgLRhajpjv1vsd9xdK\"]},\"src/L1/L1StandardBridge.sol\":{\"keccak256\":\"0x8111049bb875e82f0b9567bb52209eefcc653886f94f1dca91c75cd45547e225\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5f456d4044bd3e531731a32eeae67986c68ba2bb75bbfb2bba4ae218d5a83e5c\",\"dweb:/ipfs/QmTRWpHLuLF3cYz28zptc1yweZD7KPZ4RD6i1ZXt9ES5s3\"]},\"src/L1/L2OutputOracle.sol\":{\"keccak256\":\"0x60042eb3e619518cab9a8f2480b62871c2d813716e2e60d9a5e0c5f271c58705\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08538ef2aa99c508b56a8bb9b3c7b93476cba9dbf0b47783141e5e50a02156cc\",\"dweb:/ipfs/QmdvFZ1fUaTkNdmtB66rNAo73RxY7kccsgR6Uqz7psoXGN\"]},\"src/L1/OnApprove.sol\":{\"keccak256\":\"0xe25cdee8494fdad1df7f58d4d9bdc3c86717c4a9c1284c6b7f01c24fab9f62f6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://88bcdc10a43cb49a53ab2b13e3d4b517fafc7964e302e21ca2408cc67072ce5f\",\"dweb:/ipfs/QmdkZrScguyEFndS2r1TrXY7aPsyfJp1had8VMX3S3En6C\"]},\"src/L1/OptimismPortal.sol\":{\"keccak256\":\"0x40592466b0286174c250d1cb8d25ded2d65a606a1a81850c7b2f5a6fd423680d\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3607e06fa66dbbe51c003949bbd29dc74b6ec1da9dd756f001a96596c3326c3c\",\"dweb:/ipfs/QmWxY1AGGecbM7cZLpoREJidJq371Q1HixXiyzXpwM1mQ5\"]},\"src/L1/ResourceMetering.sol\":{\"keccak256\":\"0xa4d524f2a5e91a0b63a62603e712001c51c77e8371b93cbb576bcb7d074b7588\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6d8141b6c6dc72d2e684c1ae388c005fd78c9ca7fc9c15dddebd227ca4fd730\",\"dweb:/ipfs/QmPfJrR4qssu769TDWJnxdTozqKtZUxiY8fs95bhfECTvG\"]},\"src/L1/SystemConfig.sol\":{\"keccak256\":\"0x4bbbc7868e948c44f29285a69383e93251a0c330a67929fb72def01cec060d4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1e7ea2f8b3d49bee9c753f107ede6eda93b2cc0e34d0643fa14ebbb26c19e71b\",\"dweb:/ipfs/QmRP81F8FRVXVZs6u2f2poEPDnbFZhNwNYxHgCVEhGpEmB\"]},\"src/libraries/Arithmetic.sol\":{\"keccak256\":\"0x06a5a8b00527843f0cfc1bb3c0661316966a6cc432f88be31f23cde78cd07560\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5209e78e5415c0bf8b350362a825cc56152811abd6fcf2df3d4fa47766d3dee\",\"dweb:/ipfs/Qmf43xyc4Um32NmccayDfhm8kSnS2mhHXpPZnwABJS7cWm\"]},\"src/libraries/Burn.sol\":{\"keccak256\":\"0x90a795bcea3ef06d6d5011256c4bd63d1a4271f519246dbf1ee3e8f1c0e21010\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9f60c3aa77cf0c484ddda4754157cff4dc0e2eace4bea67990daff4c0612ab5f\",\"dweb:/ipfs/QmSYGanMFve9uBC17X7hFneSFnwnJxz86Jgh6MX9BRMweb\"]},\"src/libraries/Bytes.sol\":{\"keccak256\":\"0x827f47d123b0fdf3b08816d5b33831811704dbf4e554e53f2269354f6bba8859\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://3137ac7204d30a245a8b0d67aa6da5286f1bd8c90379daab561f84963b6db782\",\"dweb:/ipfs/QmWRhisw3axJK833gUScs23ETh2MLFbVzzqzYVMKSDN3S9\"]},\"src/libraries/Constants.sol\":{\"keccak256\":\"0xe12e392f05f80d3837c9392d016471181ae1ee6b84ea91b4e125e6523e5f18a2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a3509231c228b7a4352573cd422cf0260dcbb94cfd915e5b664643db5475a5b7\",\"dweb:/ipfs/QmU2QERY4mHxqWFqSE5Exsy6Ftc5MTjTtYHC11fahLJWDC\"]},\"src/libraries/Encoding.sol\":{\"keccak256\":\"0xd5bbcb7da113e69562498d9543765e03912558ad66348682c2049c31e19f9d9b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://afc6656ea10062c0c9d0817bb8683636caebf9222c9c102f29ea54fff74a2f93\",\"dweb:/ipfs/QmTNWtMgrTRHM6XtdUmA8bMZcuFpXoFCXgXR5vRihZWLuW\"]},\"src/libraries/Hashing.sol\":{\"keccak256\":\"0x44e2b2dcfffc39c0fc95ccd3c2118c7e7585fadf3dca327877d5756c7d4b21c3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6c89e0d9cfcb08a0d3c46c85367a32bbd9703468ba4c0c5bb6e124c1d173b26b\",\"dweb:/ipfs/QmaY3nQHBBhHK1wrurVXiEeNL8hfZ1pRmhpqW44tFDJnDf\"]},\"src/libraries/Predeploys.sol\":{\"keccak256\":\"0x551ea124b7ffe63c4715e165de13709fb91044c2bac2b5a3a13397e7ed579b0f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://36fa2454dc8f597780f7caf024263a45d66c5e267ab5f3715764f0d2b8e7fb32\",\"dweb:/ipfs/QmY45MpqrJEeE3KCGdnF2WDK3Be2ddBxUHVVw97LbfK7LZ\"]},\"src/libraries/SafeCall.sol\":{\"keccak256\":\"0x0636a7abb242bb5d6f5606967c8929e6aa7e63468c1e2ce40ad4780d4c4bf94f\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a4daec2ac8f9907bbf84ef0a1c48f03bae8657619bc6f42b3a672f25c516f17a\",\"dweb:/ipfs/Qmf8gfRxBv8gEmCkP8YMPb2GGfj9QUnoNUyKE7UR2SWGnq\"]},\"src/libraries/Storage.sol\":{\"keccak256\":\"0x902a0a815272a5b76c647d9e82101aca765e9835a6624d0857088b9da0f58afd\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9c39a697aacb0a2eac0bf1fbd7790d835a685c61006f6d3464e19cbc96a24480\",\"dweb:/ipfs/QmV3T8ZTRWPB5CNuZjxwWQNoENd7W4SoBMnFG6Y6g6xYV4\"]},\"src/libraries/Types.sol\":{\"keccak256\":\"0x75900d651301940d24c00d14f0b3b6cbd6dcf379173ceaa31d9bf5be934a9aa4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://99c2632c5bf4fa3982391c32110eec9fa07917b483b2442cbaf18bdde5bdb24e\",\"dweb:/ipfs/QmSUs6Amkeootf5gKGbKi4mJpvhN2U8i1ED6ef2dskV5xc\"]},\"src/libraries/rlp/RLPReader.sol\":{\"keccak256\":\"0x9ba74a3b0a11693e622380807d213d5d1250d974e18b2cd768da9cbe719a6778\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0808d721ed9e05707526ee134faa051d707a95ee6b8bd6e0b1972275da8e5723\",\"dweb:/ipfs/QmcTTPu9xgckfWdbFUAcr2RAgk3J6vzyR4FpV798TjFMeN\"]},\"src/libraries/rlp/RLPWriter.sol\":{\"keccak256\":\"0x60ac401490f321c9c55e996a2c65151cd5e60de5f8f297e7c94d541c29820bb6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://070f5814db07e4a89173d44a36d90e4261ce530f7336034c01635347f2c2d88b\",\"dweb:/ipfs/QmXqr9yW5Kc8MYgr5wSehU5AiqS9pZ4FKxv7vwiwpZCcyV\"]},\"src/libraries/trie/MerkleTrie.sol\":{\"keccak256\":\"0xf8ba770ee6666e73ae43184c700e9c704b2c4ace71f9e3c2227ddc11a8148b4c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4702ccee1fe44aea3ee01d59e6152eb755da083f786f00947fec4437c064fe74\",\"dweb:/ipfs/QmQjFj5J7hrEM1dxJjFszzW2Cs7g7eMhYNBXonF2DXBstE\"]},\"src/libraries/trie/SecureMerkleTrie.sol\":{\"keccak256\":\"0xeaff8315cfd21197bc6bc859c2decf5d4f4838c9c357c502cdf2b1eac863d288\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://79dcdcaa560aea51d138da4f5dc553a1808b6de090b2dc1629f18375edbff681\",\"dweb:/ipfs/QmbE4pUPhf5fLKW4W6cEjhQs55gEDvHmbmoBqkW1yz3bnw\"]},\"src/universal/CrossDomainMessenger.sol\":{\"keccak256\":\"0x6876fa0706a4647f4247eea58228dc650a39ff42fb2495ac2f8a37dcc99075b6\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a61d10bd62b6f4bbc5cc2b6c765c96cfc67e132a808f691ef1d8175eaf363363\",\"dweb:/ipfs/QmdBHpzFQpxVA9L9s3jiwHpB1SDtEeN3yqDazS7wnmEpFY\"]},\"src/universal/IOptimismMintableERC20.sol\":{\"keccak256\":\"0x6f8133b39efcbcbd5088f195dfacf1bedc3146508429c3865443909af735a04c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://adc36971e2e120458769f050428d9d2b0504516660345020c2521ee46e6d8abf\",\"dweb:/ipfs/QmPbFusQkZgGKpU8Fv5JoqL4oVeJtM3yqnhRGLY9eZT5zZ\"]},\"src/universal/ISemver.sol\":{\"keccak256\":\"0xba34562a8026f59886d2e07d1d58d90b9691d00e0788c6263cef6c22740cab44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0826f998632f83c103c3085bf2e872db79a69022b6d2e0444c83a64ca5283c2a\",\"dweb:/ipfs/QmcJ7PNqkAfKqbjFGRordtAg1v9DvcBSKvdTkVvciLyvQR\"]},\"src/universal/OptimismMintableERC20.sol\":{\"keccak256\":\"0x239934f3d2f6fc94587461e080014f61c1f7f24150ef2173fd042c97eb416385\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://85a184dba76a4fead2142d6b1ea7dc89efc3046b181961f8aff5f55ea9bc057f\",\"dweb:/ipfs/QmPdmrQhh6YhdK2r3969nPdjk1UUu4p1Q1BFrXutNFUHKt\"]},\"src/universal/Semver.sol\":{\"keccak256\":\"0x9de68ce536aee1aa616b4bf88d7ccc335460e6edd0e7170bdbf94c4fe3d41c60\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d5909c0b049b03a2bc24816ecf15b0aaf18c04a963174e1eba7624321bef330d\",\"dweb:/ipfs/QmeqdutwZWHqQMXauNR6WY8PrUpfsTiWTQyanbnGM9QqzT\"]},\"src/universal/StandardBridge.sol\":{\"keccak256\":\"0x3c566019ae8102039455fe8878bf77d4ad69d7076f4b177980ea0c070125c8d8\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://102cc55a435e27b3f012ae8c3a4cd7b48535f2df7db78e7b98c793983fffe347\",\"dweb:/ipfs/QmczRvGDo9H5YwTPW9wW9dkhQSXAvtpDzrmapUPSD4Be1G\"]},\"src/vendor/AddressAliasHelper.sol\":{\"keccak256\":\"0x6ecb83b4ec80fbe49c22f4f95d90482de64660ef5d422a19f4d4b04df31c1237\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://1d0885be6e473962f9a0622176a22300165ac0cc1a1d7f2e22b11c3d656ace88\",\"dweb:/ipfs/QmPRa3KmRpXW5P9ykveKRDgYN5zYo4cYLAYSnoqHX3KnXR\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "localToken",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "remoteToken",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ERC20BridgeFinalized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "localToken",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "remoteToken",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ERC20BridgeInitiated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "l1Token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "l2Token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ERC20DepositInitiated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "l1Token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "l2Token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ERC20WithdrawalFinalized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ETHBridgeFinalized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ETHBridgeInitiated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ETHDepositInitiated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "from",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "to",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "bytes",
              "name": "extraData",
              "type": "bytes",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ETHWithdrawalFinalized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MESSENGER",
          "outputs": [
            {
              "internalType": "contract CrossDomainMessenger",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "OTHER_BRIDGE",
          "outputs": [
            {
              "internalType": "contract StandardBridge",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_localToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_remoteToken",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "_minGasLimit",
              "type": "uint32"
            },
            {
              "internalType": "bytes",
              "name": "_extraData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "bridgeERC20"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_localToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_remoteToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "_minGasLimit",
              "type": "uint32"
            },
            {
              "internalType": "bytes",
              "name": "_extraData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "bridgeERC20To"
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "_minGasLimit",
              "type": "uint32"
            },
            {
              "internalType": "bytes",
              "name": "_extraData",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "bridgeETH"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "_minGasLimit",
              "type": "uint32"
            },
            {
              "internalType": "bytes",
              "name": "_extraData",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "bridgeETHTo"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "_minGasLimit",
              "type": "uint32"
            },
            {
              "internalType": "bytes",
              "name": "_extraData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "bridgeNativeToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "_minGasLimit",
              "type": "uint32"
            },
            {
              "internalType": "bytes",
              "name": "_extraData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "bridgeNativeTokenTo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_l1Token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_l2Token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "_minGasLimit",
              "type": "uint32"
            },
            {
              "internalType": "bytes",
              "name": "_extraData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "depositERC20"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_l1Token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_l2Token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "_minGasLimit",
              "type": "uint32"
            },
            {
              "internalType": "bytes",
              "name": "_extraData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "depositERC20To"
        },
        {
          "inputs": [
            {
              "internalType": "uint32",
              "name": "_minGasLimit",
              "type": "uint32"
            },
            {
              "internalType": "bytes",
              "name": "_extraData",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "depositETH"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint32",
              "name": "_minGasLimit",
              "type": "uint32"
            },
            {
              "internalType": "bytes",
              "name": "_extraData",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "depositETHTo"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "_minGasLimit",
              "type": "uint32"
            },
            {
              "internalType": "bytes",
              "name": "_extraData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "depositNativeToken"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "uint32",
              "name": "_minGasLimit",
              "type": "uint32"
            },
            {
              "internalType": "bytes",
              "name": "_extraData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "depositNativeTokenTo"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "deposits",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_localToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_remoteToken",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_extraData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "finalizeBridgeERC20"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_extraData",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "finalizeBridgeETH"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_l1Token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_l2Token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_extraData",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "finalizeERC20Withdrawal"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_from",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_to",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_extraData",
              "type": "bytes"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "finalizeETHWithdrawal"
        },
        {
          "inputs": [
            {
              "internalType": "contract CrossDomainMessenger",
              "name": "_messenger",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_nativeTokenAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "l2TokenBridge",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "messenger",
          "outputs": [
            {
              "internalType": "contract CrossDomainMessenger",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "nativeTokenAddress",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_owner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "onApprove",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "otherBridge",
          "outputs": [
            {
              "internalType": "contract StandardBridge",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes4",
              "name": "interfaceId",
              "type": "bytes4"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "supportsInterface",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes",
              "name": "_data",
              "type": "bytes"
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "unpackOnApproveData",
          "outputs": [
            {
              "internalType": "uint32",
              "name": "_minGasLimit",
              "type": "uint32"
            },
            {
              "internalType": "bytes",
              "name": "_message",
              "type": "bytes"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "version",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "payable",
          "type": "receive"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "MESSENGER()": {
            "custom:legacy": "@return Messenger contract on this domain."
          },
          "bridgeERC20(address,address,uint256,uint32,bytes)": {
            "params": {
              "_amount": "Amount of local tokens to deposit.",
              "_extraData": "Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.",
              "_localToken": "Address of the ERC20 on this chain.",
              "_minGasLimit": "Minimum amount of gas that the bridge can be relayed with.",
              "_remoteToken": "Address of the corresponding token on the remote chain."
            }
          },
          "bridgeERC20To(address,address,address,uint256,uint32,bytes)": {
            "params": {
              "_amount": "Amount of local tokens to deposit.",
              "_extraData": "Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.",
              "_localToken": "Address of the ERC20 on this chain.",
              "_minGasLimit": "Minimum amount of gas that the bridge can be relayed with.",
              "_remoteToken": "Address of the corresponding token on the remote chain.",
              "_to": "Address of the receiver."
            }
          },
          "bridgeETH(uint32,bytes)": {
            "params": {
              "_extraData": "Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.",
              "_minGasLimit": "Minimum amount of gas that the bridge can be relayed with."
            }
          },
          "bridgeETHTo(address,uint32,bytes)": {
            "params": {
              "_extraData": "Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.",
              "_minGasLimit": "Minimum amount of gas that the bridge can be relayed with.",
              "_to": "Address of the receiver."
            }
          },
          "bridgeNativeToken(uint256,uint32,bytes)": {
            "params": {
              "_amount": "Amount of native being bridged.",
              "_extraData": "Optional data to forward to L2.                     Data supplied here will not be used to execute any code on L2 and is                     only emitted as extra data for the convenience of off-chain tooling.",
              "_minGasLimit": "Minimum gas limit for the deposit message on L2."
            }
          },
          "bridgeNativeTokenTo(address,uint256,uint32,bytes)": {
            "params": {
              "_amount": "Amount of native being bridged.",
              "_extraData": "Optional data to forward to L2.                     Data supplied here will not be used to execute any code on L2 and is                     only emitted as extra data for the convenience of off-chain tooling.",
              "_minGasLimit": "Minimum gas limit for the deposit message on L2.",
              "_to": "Address of the recipient on L2."
            }
          },
          "depositERC20(address,address,uint256,uint32,bytes)": {
            "custom:legacy": "@notice Deposits some amount of ERC20 tokens into the sender's account on L2.",
            "params": {
              "_amount": "Amount of the ERC20 to deposit.",
              "_extraData": "Optional data to forward to L2.                     Data supplied here will not be used to execute any code on L2 and is                     only emitted as extra data for the convenience of off-chain tooling.",
              "_l1Token": "Address of the L1 token being deposited.",
              "_l2Token": "Address of the corresponding token on L2.",
              "_minGasLimit": "Minimum gas limit for the deposit message on L2."
            }
          },
          "depositERC20To(address,address,address,uint256,uint32,bytes)": {
            "custom:legacy": "@notice Deposits some amount of ERC20 tokens into a target account on L2.",
            "params": {
              "_amount": "Amount of the ERC20 to deposit.",
              "_extraData": "Optional data to forward to L2.                     Data supplied here will not be used to execute any code on L2 and is                     only emitted as extra data for the convenience of off-chain tooling.",
              "_l1Token": "Address of the L1 token being deposited.",
              "_l2Token": "Address of the corresponding token on L2.",
              "_minGasLimit": "Minimum gas limit for the deposit message on L2.",
              "_to": "Address of the recipient on L2."
            }
          },
          "depositETH(uint32,bytes)": {
            "params": {
              "_extraData": "Optional data to forward to L2.                     Data supplied here will not be used to execute any code on L2 and is                     only emitted as extra data for the convenience of off-chain tooling.",
              "_minGasLimit": "Minimum gas limit for the deposit message on L2."
            }
          },
          "depositETHTo(address,uint32,bytes)": {
            "params": {
              "_extraData": "Optional data to forward to L2.                     Data supplied here will not be used to execute any code on L2 and is                     only emitted as extra data for the convenience of off-chain tooling.",
              "_minGasLimit": "Minimum gas limit for the deposit message on L2.",
              "_to": "Address of the recipient on L2."
            }
          },
          "depositNativeToken(uint256,uint32,bytes)": {
            "params": {
              "_amount": "Amount of native being bridged.",
              "_extraData": "Optional data to forward to L2.                     Data supplied here will not be used to execute any code on L2 and is                     only emitted as extra data for the convenience of off-chain tooling.",
              "_minGasLimit": "Minimum gas limit for the deposit message on L2."
            }
          },
          "depositNativeTokenTo(address,uint256,uint32,bytes)": {
            "params": {
              "_amount": "Amount of native being bridged.",
              "_extraData": "Optional data to forward to L2.                     Data supplied here will not be used to execute any code on L2 and is                     only emitted as extra data for the convenience of off-chain tooling.",
              "_minGasLimit": "Minimum gas limit for the deposit message on L2.",
              "_to": "Address of the recipient on L2."
            }
          },
          "finalizeBridgeERC20(address,address,address,address,uint256,bytes)": {
            "params": {
              "_amount": "Amount of the ERC20 being bridged.",
              "_extraData": "Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.",
              "_from": "Address of the sender.",
              "_localToken": "Address of the ERC20 on this chain.",
              "_remoteToken": "Address of the corresponding token on the remote chain.",
              "_to": "Address of the receiver."
            }
          },
          "finalizeBridgeETH(address,address,uint256,bytes)": {
            "params": {
              "_amount": "Amount of ETH being bridged.",
              "_extraData": "Extra data to be sent with the transaction. Note that the recipient will                   not be triggered with this data, but it will be emitted and can be used                   to identify the transaction.",
              "_from": "Address of the sender.",
              "_to": "Address of the receiver."
            }
          },
          "finalizeERC20Withdrawal(address,address,address,address,uint256,bytes)": {
            "custom:legacy": "@notice Finalizes a withdrawal of ERC20 tokens from L2.",
            "params": {
              "_amount": "Amount of the ERC20 to withdraw.",
              "_extraData": "Optional data forwarded from L2.",
              "_from": "Address of the withdrawer on L2.",
              "_l1Token": "Address of the token on L1. L1 must be different than l1TokenAddress",
              "_l2Token": "Address of the corresponding token on L2.",
              "_to": "Address of the recipient on L1."
            }
          },
          "finalizeETHWithdrawal(address,address,uint256,bytes)": {
            "custom:legacy": "@notice Finalizes a withdrawal of ETH from L2 => receive L2's native token in L1",
            "params": {
              "_amount": "Amount of ETH to withdraw.",
              "_extraData": "Optional data forwarded from L2.",
              "_from": "Address of the withdrawer on L2.",
              "_to": "Address of the recipient on L1."
            }
          },
          "l2TokenBridge()": {
            "custom:legacy": "@notice Retrieves the access of the corresponding L2 bridge contract.",
            "returns": {
              "_0": "Address of the corresponding L2 bridge contract."
            }
          },
          "onApprove(address,address,uint256,bytes)": {
            "params": {
              "_amount": "Approved amount",
              "_data": "Data used in OnApprove contract",
              "_owner": "Account that called approveAndCall"
            }
          },
          "unpackOnApproveData(bytes)": {
            "params": {
              "_data": "Data used in OnApprove contract"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "MESSENGER()": {
            "notice": "Getter for messenger contract."
          },
          "OTHER_BRIDGE()": {
            "notice": "Corresponding bridge on the other domain. This public getter is deprecated         and will be removed in the future. Please use `otherBridge` instead.         This can safely be an immutable because for the L1StandardBridge, it will         be set to the L2StandardBridge address, which is the same for all OP Stack         chains. For the L2StandardBridge, there are not multiple proxies using the         same implementation."
          },
          "bridgeERC20(address,address,uint256,uint32,bytes)": {
            "notice": "Sends ERC20 tokens to the sender's address on the other chain. Note that if the         ERC20 token on the other chain does not recognize the local token as the correct         pair token, the ERC20 bridge will fail and the tokens will be returned to sender on         this chain."
          },
          "bridgeERC20To(address,address,address,uint256,uint32,bytes)": {
            "notice": "Sends ERC20 tokens to a receiver's address on the other chain. Note that if the         ERC20 token on the other chain does not recognize the local token as the correct         pair token, the ERC20 bridge will fail and the tokens will be returned to sender on         this chain."
          },
          "bridgeETH(uint32,bytes)": {
            "notice": "Sends ETH to the sender's address on the other chain."
          },
          "bridgeETHTo(address,uint32,bytes)": {
            "notice": "Sends ETH to a receiver's address on the other chain. Note that if ETH is sent to a         smart contract and the call fails, the ETH will be temporarily locked in the         StandardBridge on the other chain until the call is replayed. If the call cannot be         replayed with any amount of gas (call always reverts), then the ETH will be         permanently locked in the StandardBridge on the other chain. ETH will also         be locked if the receiver is the other bridge, because finalizeBridgeETH will revert         in that case."
          },
          "bridgeNativeToken(uint256,uint32,bytes)": {
            "notice": "Deposits some amount of token into the sender's native's account on L2."
          },
          "bridgeNativeTokenTo(address,uint256,uint32,bytes)": {
            "notice": "Deposits some amount of ERC20 token into a target Native's account on L2."
          },
          "constructor": {
            "notice": "Constructs the L1StandardBridge contract."
          },
          "depositETH(uint32,bytes)": {
            "notice": "Deposits some amount of ETH into the sender's ETH's account on L2."
          },
          "depositETHTo(address,uint32,bytes)": {
            "notice": "Deposits some amount of ETH into a target ETH's account on L2.         Note that if ETH is sent to a contract on L2 and the call fails, then that ETH will         be locked in the L2StandardBridge. ETH may be recoverable if the call can be         successfully replayed by increasing the amount of gas supplied to the call. If the         call will fail for any amount of gas, then the ETH will be locked permanently."
          },
          "depositNativeToken(uint256,uint32,bytes)": {
            "notice": "Deposits some amount of token into the sender's native's account on L2."
          },
          "depositNativeTokenTo(address,uint256,uint32,bytes)": {
            "notice": "Deposits some amount of token into the sender's native's account on L2."
          },
          "deposits(address,address)": {
            "notice": "Mapping that stores deposits for a given pair of local and remote tokens."
          },
          "finalizeBridgeERC20(address,address,address,address,uint256,bytes)": {
            "notice": "Finalizes an ERC20 bridge on this chain. Can only be triggered by the other         StandardBridge contract on the remote chain."
          },
          "finalizeBridgeETH(address,address,uint256,bytes)": {
            "notice": "Finalizes an ETH bridge on this chain. Can only be triggered by the other         StandardBridge contract on the remote chain."
          },
          "initialize(address,address)": {
            "notice": "Initializer"
          },
          "messenger()": {
            "notice": "Messenger contract on this domain. This public getter is deprecated         and will be removed in the future. Please use `messenger` instead."
          },
          "onApprove(address,address,uint256,bytes)": {
            "notice": "ERC20 onApprove callback"
          },
          "otherBridge()": {
            "notice": "Getter for the remote domain bridge contract."
          },
          "unpackOnApproveData(bytes)": {
            "notice": "unpack onApprove data"
          },
          "version()": {
            "notice": "Semantic version."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@cwia/=lib/clones-with-immutable-args/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@rari-capital/solmate/=lib/solmate/",
        "clones-with-immutable-args/=lib/clones-with-immutable-args/src/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "safe-contracts/=lib/safe-contracts/contracts/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 999999
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "src/L1/L1StandardBridge.sol": "L1StandardBridge"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888",
        "urls": [
          "bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a",
          "dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
        "urls": [
          "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
          "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x2a21b14ff90012878752f230d3ffd5c3405e5938d06c97a7d89c0a64561d0d66",
        "urls": [
          "bzz-raw://3313a8f9bb1f9476857c9050067b31982bf2140b83d84f3bc0cec1f62bbe947f",
          "dweb:/ipfs/Qma17Pk8NRe7aB4UD3jjVxk7nSFaov3eQyv86hcyqkwJRV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238",
        "urls": [
          "bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0",
          "dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29",
        "urls": [
          "bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6",
          "dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10",
        "urls": [
          "bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487",
          "dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3",
        "urls": [
          "bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638",
          "dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/ERC165Checker.sol": {
        "keccak256": "0xc65c83c1039508fa7a42a09a3c6a32babd1c438ba4dbb23581255e784b5d5eed",
        "urls": [
          "bzz-raw://a1b3b38db0f76429db899909025e534c366415e9ea8b5ddc4c8901e6a7fc1461",
          "dweb:/ipfs/QmYv1KxyHjLEky9JWNSsSfpGJbiCxFyzVFgTwQKpiqYGUg"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol": {
        "keccak256": "0x447a5f3ddc18419d41ff92b3773fb86471b1db25773e07f877f548918a185bf1",
        "urls": [
          "bzz-raw://be161e54f24e5c6fae81a12db1a8ae87bc5ae1b0ddc805d82a1440a68455088f",
          "dweb:/ipfs/QmP7C3CHdY9urF4dEMb9wmsp1wMxHF6nhA2yQE5SKiPAdy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/Math.sol": {
        "keccak256": "0xd15c3e400531f00203839159b2b8e7209c5158b35618f570c695b7e47f12e9f0",
        "urls": [
          "bzz-raw://b600b852e0597aa69989cc263111f02097e2827edc1bdc70306303e3af5e9929",
          "dweb:/ipfs/QmU4WfM28A1nDqghuuGeFmN3CnVrk6opWtiF65K4vhFPeC"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/math/SignedMath.sol": {
        "keccak256": "0xb3ebde1c8d27576db912d87c3560dab14adfb9cd001be95890ec4ba035e652e7",
        "urls": [
          "bzz-raw://a709421c4f5d4677db8216055d2d4dac96a613efdb08178a9f7041f0c5cef689",
          "dweb:/ipfs/QmYs2rStvVLDnSJs8HgaMD1ABwoKKWdiVbQyNfLfFWTjTy"
        ],
        "license": "MIT"
      },
      "lib/solmate/src/utils/FixedPointMathLib.sol": {
        "keccak256": "0x622fcd8a49e132df5ec7651cc6ae3aaf0cf59bdcd67a9a804a1b9e2485113b7d",
        "urls": [
          "bzz-raw://af77088eb606427d4c55e578984a615779c86bc30646a20f7bb27299ba390f7c",
          "dweb:/ipfs/QmZGQdhdQDtHc7gZXWrKXgA3govc74X8U63BiWhPQK3mK8"
        ],
        "license": "MIT"
      },
      "src/L1/L1CrossDomainMessenger.sol": {
        "keccak256": "0x2e0934728da1a087267bf2b2a90e05b37e78235d0f9800e5e7e1b548c7a6b42b",
        "urls": [
          "bzz-raw://b706a5a44ef6a9f262d115daa5ac46a144587a9f97691fd6d3ff8a24bb59ea9e",
          "dweb:/ipfs/QmeBzC8NNXXSbcjeNNGNYRDLn4EUNgLRhajpjv1vsd9xdK"
        ],
        "license": "MIT"
      },
      "src/L1/L1StandardBridge.sol": {
        "keccak256": "0x8111049bb875e82f0b9567bb52209eefcc653886f94f1dca91c75cd45547e225",
        "urls": [
          "bzz-raw://5f456d4044bd3e531731a32eeae67986c68ba2bb75bbfb2bba4ae218d5a83e5c",
          "dweb:/ipfs/QmTRWpHLuLF3cYz28zptc1yweZD7KPZ4RD6i1ZXt9ES5s3"
        ],
        "license": "MIT"
      },
      "src/L1/L2OutputOracle.sol": {
        "keccak256": "0x60042eb3e619518cab9a8f2480b62871c2d813716e2e60d9a5e0c5f271c58705",
        "urls": [
          "bzz-raw://08538ef2aa99c508b56a8bb9b3c7b93476cba9dbf0b47783141e5e50a02156cc",
          "dweb:/ipfs/QmdvFZ1fUaTkNdmtB66rNAo73RxY7kccsgR6Uqz7psoXGN"
        ],
        "license": "MIT"
      },
      "src/L1/OnApprove.sol": {
        "keccak256": "0xe25cdee8494fdad1df7f58d4d9bdc3c86717c4a9c1284c6b7f01c24fab9f62f6",
        "urls": [
          "bzz-raw://88bcdc10a43cb49a53ab2b13e3d4b517fafc7964e302e21ca2408cc67072ce5f",
          "dweb:/ipfs/QmdkZrScguyEFndS2r1TrXY7aPsyfJp1had8VMX3S3En6C"
        ],
        "license": "MIT"
      },
      "src/L1/OptimismPortal.sol": {
        "keccak256": "0x40592466b0286174c250d1cb8d25ded2d65a606a1a81850c7b2f5a6fd423680d",
        "urls": [
          "bzz-raw://3607e06fa66dbbe51c003949bbd29dc74b6ec1da9dd756f001a96596c3326c3c",
          "dweb:/ipfs/QmWxY1AGGecbM7cZLpoREJidJq371Q1HixXiyzXpwM1mQ5"
        ],
        "license": "MIT"
      },
      "src/L1/ResourceMetering.sol": {
        "keccak256": "0xa4d524f2a5e91a0b63a62603e712001c51c77e8371b93cbb576bcb7d074b7588",
        "urls": [
          "bzz-raw://d6d8141b6c6dc72d2e684c1ae388c005fd78c9ca7fc9c15dddebd227ca4fd730",
          "dweb:/ipfs/QmPfJrR4qssu769TDWJnxdTozqKtZUxiY8fs95bhfECTvG"
        ],
        "license": "MIT"
      },
      "src/L1/SystemConfig.sol": {
        "keccak256": "0x4bbbc7868e948c44f29285a69383e93251a0c330a67929fb72def01cec060d4e",
        "urls": [
          "bzz-raw://1e7ea2f8b3d49bee9c753f107ede6eda93b2cc0e34d0643fa14ebbb26c19e71b",
          "dweb:/ipfs/QmRP81F8FRVXVZs6u2f2poEPDnbFZhNwNYxHgCVEhGpEmB"
        ],
        "license": "MIT"
      },
      "src/libraries/Arithmetic.sol": {
        "keccak256": "0x06a5a8b00527843f0cfc1bb3c0661316966a6cc432f88be31f23cde78cd07560",
        "urls": [
          "bzz-raw://d5209e78e5415c0bf8b350362a825cc56152811abd6fcf2df3d4fa47766d3dee",
          "dweb:/ipfs/Qmf43xyc4Um32NmccayDfhm8kSnS2mhHXpPZnwABJS7cWm"
        ],
        "license": "MIT"
      },
      "src/libraries/Burn.sol": {
        "keccak256": "0x90a795bcea3ef06d6d5011256c4bd63d1a4271f519246dbf1ee3e8f1c0e21010",
        "urls": [
          "bzz-raw://9f60c3aa77cf0c484ddda4754157cff4dc0e2eace4bea67990daff4c0612ab5f",
          "dweb:/ipfs/QmSYGanMFve9uBC17X7hFneSFnwnJxz86Jgh6MX9BRMweb"
        ],
        "license": "MIT"
      },
      "src/libraries/Bytes.sol": {
        "keccak256": "0x827f47d123b0fdf3b08816d5b33831811704dbf4e554e53f2269354f6bba8859",
        "urls": [
          "bzz-raw://3137ac7204d30a245a8b0d67aa6da5286f1bd8c90379daab561f84963b6db782",
          "dweb:/ipfs/QmWRhisw3axJK833gUScs23ETh2MLFbVzzqzYVMKSDN3S9"
        ],
        "license": "MIT"
      },
      "src/libraries/Constants.sol": {
        "keccak256": "0xe12e392f05f80d3837c9392d016471181ae1ee6b84ea91b4e125e6523e5f18a2",
        "urls": [
          "bzz-raw://a3509231c228b7a4352573cd422cf0260dcbb94cfd915e5b664643db5475a5b7",
          "dweb:/ipfs/QmU2QERY4mHxqWFqSE5Exsy6Ftc5MTjTtYHC11fahLJWDC"
        ],
        "license": "MIT"
      },
      "src/libraries/Encoding.sol": {
        "keccak256": "0xd5bbcb7da113e69562498d9543765e03912558ad66348682c2049c31e19f9d9b",
        "urls": [
          "bzz-raw://afc6656ea10062c0c9d0817bb8683636caebf9222c9c102f29ea54fff74a2f93",
          "dweb:/ipfs/QmTNWtMgrTRHM6XtdUmA8bMZcuFpXoFCXgXR5vRihZWLuW"
        ],
        "license": "MIT"
      },
      "src/libraries/Hashing.sol": {
        "keccak256": "0x44e2b2dcfffc39c0fc95ccd3c2118c7e7585fadf3dca327877d5756c7d4b21c3",
        "urls": [
          "bzz-raw://6c89e0d9cfcb08a0d3c46c85367a32bbd9703468ba4c0c5bb6e124c1d173b26b",
          "dweb:/ipfs/QmaY3nQHBBhHK1wrurVXiEeNL8hfZ1pRmhpqW44tFDJnDf"
        ],
        "license": "MIT"
      },
      "src/libraries/Predeploys.sol": {
        "keccak256": "0x551ea124b7ffe63c4715e165de13709fb91044c2bac2b5a3a13397e7ed579b0f",
        "urls": [
          "bzz-raw://36fa2454dc8f597780f7caf024263a45d66c5e267ab5f3715764f0d2b8e7fb32",
          "dweb:/ipfs/QmY45MpqrJEeE3KCGdnF2WDK3Be2ddBxUHVVw97LbfK7LZ"
        ],
        "license": "MIT"
      },
      "src/libraries/SafeCall.sol": {
        "keccak256": "0x0636a7abb242bb5d6f5606967c8929e6aa7e63468c1e2ce40ad4780d4c4bf94f",
        "urls": [
          "bzz-raw://a4daec2ac8f9907bbf84ef0a1c48f03bae8657619bc6f42b3a672f25c516f17a",
          "dweb:/ipfs/Qmf8gfRxBv8gEmCkP8YMPb2GGfj9QUnoNUyKE7UR2SWGnq"
        ],
        "license": "MIT"
      },
      "src/libraries/Storage.sol": {
        "keccak256": "0x902a0a815272a5b76c647d9e82101aca765e9835a6624d0857088b9da0f58afd",
        "urls": [
          "bzz-raw://9c39a697aacb0a2eac0bf1fbd7790d835a685c61006f6d3464e19cbc96a24480",
          "dweb:/ipfs/QmV3T8ZTRWPB5CNuZjxwWQNoENd7W4SoBMnFG6Y6g6xYV4"
        ],
        "license": "MIT"
      },
      "src/libraries/Types.sol": {
        "keccak256": "0x75900d651301940d24c00d14f0b3b6cbd6dcf379173ceaa31d9bf5be934a9aa4",
        "urls": [
          "bzz-raw://99c2632c5bf4fa3982391c32110eec9fa07917b483b2442cbaf18bdde5bdb24e",
          "dweb:/ipfs/QmSUs6Amkeootf5gKGbKi4mJpvhN2U8i1ED6ef2dskV5xc"
        ],
        "license": "MIT"
      },
      "src/libraries/rlp/RLPReader.sol": {
        "keccak256": "0x9ba74a3b0a11693e622380807d213d5d1250d974e18b2cd768da9cbe719a6778",
        "urls": [
          "bzz-raw://0808d721ed9e05707526ee134faa051d707a95ee6b8bd6e0b1972275da8e5723",
          "dweb:/ipfs/QmcTTPu9xgckfWdbFUAcr2RAgk3J6vzyR4FpV798TjFMeN"
        ],
        "license": "MIT"
      },
      "src/libraries/rlp/RLPWriter.sol": {
        "keccak256": "0x60ac401490f321c9c55e996a2c65151cd5e60de5f8f297e7c94d541c29820bb6",
        "urls": [
          "bzz-raw://070f5814db07e4a89173d44a36d90e4261ce530f7336034c01635347f2c2d88b",
          "dweb:/ipfs/QmXqr9yW5Kc8MYgr5wSehU5AiqS9pZ4FKxv7vwiwpZCcyV"
        ],
        "license": "MIT"
      },
      "src/libraries/trie/MerkleTrie.sol": {
        "keccak256": "0xf8ba770ee6666e73ae43184c700e9c704b2c4ace71f9e3c2227ddc11a8148b4c",
        "urls": [
          "bzz-raw://4702ccee1fe44aea3ee01d59e6152eb755da083f786f00947fec4437c064fe74",
          "dweb:/ipfs/QmQjFj5J7hrEM1dxJjFszzW2Cs7g7eMhYNBXonF2DXBstE"
        ],
        "license": "MIT"
      },
      "src/libraries/trie/SecureMerkleTrie.sol": {
        "keccak256": "0xeaff8315cfd21197bc6bc859c2decf5d4f4838c9c357c502cdf2b1eac863d288",
        "urls": [
          "bzz-raw://79dcdcaa560aea51d138da4f5dc553a1808b6de090b2dc1629f18375edbff681",
          "dweb:/ipfs/QmbE4pUPhf5fLKW4W6cEjhQs55gEDvHmbmoBqkW1yz3bnw"
        ],
        "license": "MIT"
      },
      "src/universal/CrossDomainMessenger.sol": {
        "keccak256": "0x6876fa0706a4647f4247eea58228dc650a39ff42fb2495ac2f8a37dcc99075b6",
        "urls": [
          "bzz-raw://a61d10bd62b6f4bbc5cc2b6c765c96cfc67e132a808f691ef1d8175eaf363363",
          "dweb:/ipfs/QmdBHpzFQpxVA9L9s3jiwHpB1SDtEeN3yqDazS7wnmEpFY"
        ],
        "license": "MIT"
      },
      "src/universal/IOptimismMintableERC20.sol": {
        "keccak256": "0x6f8133b39efcbcbd5088f195dfacf1bedc3146508429c3865443909af735a04c",
        "urls": [
          "bzz-raw://adc36971e2e120458769f050428d9d2b0504516660345020c2521ee46e6d8abf",
          "dweb:/ipfs/QmPbFusQkZgGKpU8Fv5JoqL4oVeJtM3yqnhRGLY9eZT5zZ"
        ],
        "license": "MIT"
      },
      "src/universal/ISemver.sol": {
        "keccak256": "0xba34562a8026f59886d2e07d1d58d90b9691d00e0788c6263cef6c22740cab44",
        "urls": [
          "bzz-raw://0826f998632f83c103c3085bf2e872db79a69022b6d2e0444c83a64ca5283c2a",
          "dweb:/ipfs/QmcJ7PNqkAfKqbjFGRordtAg1v9DvcBSKvdTkVvciLyvQR"
        ],
        "license": "MIT"
      },
      "src/universal/OptimismMintableERC20.sol": {
        "keccak256": "0x239934f3d2f6fc94587461e080014f61c1f7f24150ef2173fd042c97eb416385",
        "urls": [
          "bzz-raw://85a184dba76a4fead2142d6b1ea7dc89efc3046b181961f8aff5f55ea9bc057f",
          "dweb:/ipfs/QmPdmrQhh6YhdK2r3969nPdjk1UUu4p1Q1BFrXutNFUHKt"
        ],
        "license": "MIT"
      },
      "src/universal/Semver.sol": {
        "keccak256": "0x9de68ce536aee1aa616b4bf88d7ccc335460e6edd0e7170bdbf94c4fe3d41c60",
        "urls": [
          "bzz-raw://d5909c0b049b03a2bc24816ecf15b0aaf18c04a963174e1eba7624321bef330d",
          "dweb:/ipfs/QmeqdutwZWHqQMXauNR6WY8PrUpfsTiWTQyanbnGM9QqzT"
        ],
        "license": "MIT"
      },
      "src/universal/StandardBridge.sol": {
        "keccak256": "0x3c566019ae8102039455fe8878bf77d4ad69d7076f4b177980ea0c070125c8d8",
        "urls": [
          "bzz-raw://102cc55a435e27b3f012ae8c3a4cd7b48535f2df7db78e7b98c793983fffe347",
          "dweb:/ipfs/QmczRvGDo9H5YwTPW9wW9dkhQSXAvtpDzrmapUPSD4Be1G"
        ],
        "license": "MIT"
      },
      "src/vendor/AddressAliasHelper.sol": {
        "keccak256": "0x6ecb83b4ec80fbe49c22f4f95d90482de64660ef5d422a19f4d4b04df31c1237",
        "urls": [
          "bzz-raw://1d0885be6e473962f9a0622176a22300165ac0cc1a1d7f2e22b11c3d656ace88",
          "dweb:/ipfs/QmPRa3KmRpXW5P9ykveKRDgYN5zYo4cYLAYSnoqHX3KnXR"
        ],
        "license": "Apache-2.0"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 30478,
        "contract": "src/L1/L1StandardBridge.sol:L1StandardBridge",
        "label": "_initialized",
        "offset": 0,
        "slot": "0",
        "type": "t_uint8"
      },
      {
        "astId": 30481,
        "contract": "src/L1/L1StandardBridge.sol:L1StandardBridge",
        "label": "_initializing",
        "offset": 1,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 65604,
        "contract": "src/L1/L1StandardBridge.sol:L1StandardBridge",
        "label": "spacer_0_2_20",
        "offset": 2,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 65607,
        "contract": "src/L1/L1StandardBridge.sol:L1StandardBridge",
        "label": "spacer_1_0_20",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 65614,
        "contract": "src/L1/L1StandardBridge.sol:L1StandardBridge",
        "label": "deposits",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_address,t_mapping(t_address,t_uint256))"
      },
      {
        "astId": 65618,
        "contract": "src/L1/L1StandardBridge.sol:L1StandardBridge",
        "label": "messenger",
        "offset": 0,
        "slot": "3",
        "type": "t_contract(CrossDomainMessenger)63488"
      },
      {
        "astId": 65623,
        "contract": "src/L1/L1StandardBridge.sol:L1StandardBridge",
        "label": "__gap",
        "offset": 0,
        "slot": "4",
        "type": "t_array(t_uint256)46_storage"
      },
      {
        "astId": 46454,
        "contract": "src/L1/L1StandardBridge.sol:L1StandardBridge",
        "label": "nativeTokenAddress",
        "offset": 0,
        "slot": "50",
        "type": "t_address"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_uint256)46_storage": {
        "encoding": "inplace",
        "label": "uint256[46]",
        "numberOfBytes": "1472",
        "base": "t_uint256"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_contract(CrossDomainMessenger)63488": {
        "encoding": "inplace",
        "label": "contract CrossDomainMessenger",
        "numberOfBytes": "20"
      },
      "t_mapping(t_address,t_mapping(t_address,t_uint256))": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => mapping(address => uint256))",
        "numberOfBytes": "32",
        "value": "t_mapping(t_address,t_uint256)"
      },
      "t_mapping(t_address,t_uint256)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => uint256)",
        "numberOfBytes": "32",
        "value": "t_uint256"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      },
      "t_uint8": {
        "encoding": "inplace",
        "label": "uint8",
        "numberOfBytes": "1"
      }
    }
  },
  "userdoc": {
    "version": 1,
    "kind": "user",
    "methods": {
      "MESSENGER()": {
        "notice": "Getter for messenger contract."
      },
      "OTHER_BRIDGE()": {
        "notice": "Corresponding bridge on the other domain. This public getter is deprecated         and will be removed in the future. Please use `otherBridge` instead.         This can safely be an immutable because for the L1StandardBridge, it will         be set to the L2StandardBridge address, which is the same for all OP Stack         chains. For the L2StandardBridge, there are not multiple proxies using the         same implementation."
      },
      "bridgeERC20(address,address,uint256,uint32,bytes)": {
        "notice": "Sends ERC20 tokens to the sender's address on the other chain. Note that if the         ERC20 token on the other chain does not recognize the local token as the correct         pair token, the ERC20 bridge will fail and the tokens will be returned to sender on         this chain."
      },
      "bridgeERC20To(address,address,address,uint256,uint32,bytes)": {
        "notice": "Sends ERC20 tokens to a receiver's address on the other chain. Note that if the         ERC20 token on the other chain does not recognize the local token as the correct         pair token, the ERC20 bridge will fail and the tokens will be returned to sender on         this chain."
      },
      "bridgeETH(uint32,bytes)": {
        "notice": "Sends ETH to the sender's address on the other chain."
      },
      "bridgeETHTo(address,uint32,bytes)": {
        "notice": "Sends ETH to a receiver's address on the other chain. Note that if ETH is sent to a         smart contract and the call fails, the ETH will be temporarily locked in the         StandardBridge on the other chain until the call is replayed. If the call cannot be         replayed with any amount of gas (call always reverts), then the ETH will be         permanently locked in the StandardBridge on the other chain. ETH will also         be locked if the receiver is the other bridge, because finalizeBridgeETH will revert         in that case."
      },
      "bridgeNativeToken(uint256,uint32,bytes)": {
        "notice": "Deposits some amount of token into the sender's native's account on L2."
      },
      "bridgeNativeTokenTo(address,uint256,uint32,bytes)": {
        "notice": "Deposits some amount of ERC20 token into a target Native's account on L2."
      },
      "constructor": {
        "notice": "Constructs the L1StandardBridge contract."
      },
      "depositETH(uint32,bytes)": {
        "notice": "Deposits some amount of ETH into the sender's ETH's account on L2."
      },
      "depositETHTo(address,uint32,bytes)": {
        "notice": "Deposits some amount of ETH into a target ETH's account on L2.         Note that if ETH is sent to a contract on L2 and the call fails, then that ETH will         be locked in the L2StandardBridge. ETH may be recoverable if the call can be         successfully replayed by increasing the amount of gas supplied to the call. If the         call will fail for any amount of gas, then the ETH will be locked permanently."
      },
      "depositNativeToken(uint256,uint32,bytes)": {
        "notice": "Deposits some amount of token into the sender's native's account on L2."
      },
      "depositNativeTokenTo(address,uint256,uint32,bytes)": {
        "notice": "Deposits some amount of token into the sender's native's account on L2."
      },
      "deposits(address,address)": {
        "notice": "Mapping that stores deposits for a given pair of local and remote tokens."
      },
      "finalizeBridgeERC20(address,address,address,address,uint256,bytes)": {
        "notice": "Finalizes an ERC20 bridge on this chain. Can only be triggered by the other         StandardBridge contract on the remote chain."
      },
      "finalizeBridgeETH(address,address,uint256,bytes)": {
        "notice": "Finalizes an ETH bridge on this chain. Can only be triggered by the other         StandardBridge contract on the remote chain."
      },
      "initialize(address,address)": {
        "notice": "Initializer"
      },
      "messenger()": {
        "notice": "Messenger contract on this domain. This public getter is deprecated         and will be removed in the future. Please use `messenger` instead."
      },
      "onApprove(address,address,uint256,bytes)": {
        "notice": "ERC20 onApprove callback"
      },
      "otherBridge()": {
        "notice": "Getter for the remote domain bridge contract."
      },
      "unpackOnApproveData(bytes)": {
        "notice": "unpack onApprove data"
      },
      "version()": {
        "notice": "Semantic version."
      }
    },
    "events": {
      "ERC20BridgeFinalized(address,address,address,address,uint256,bytes)": {
        "notice": "Emitted when an ERC20 bridge is finalized on this chain."
      },
      "ERC20BridgeInitiated(address,address,address,address,uint256,bytes)": {
        "notice": "Emitted when an ERC20 bridge is initiated to the other chain."
      },
      "ETHBridgeFinalized(address,address,uint256,bytes)": {
        "notice": "Emitted when an ETH bridge is finalized on this chain."
      },
      "ETHBridgeInitiated(address,address,uint256,bytes)": {
        "notice": "Emitted when an ETH bridge is initiated to the other chain."
      }
    },
    "notice": "The L1StandardBridge is responsible for transfering ETH and ERC20 tokens between L1 and         L2. In the case that an ERC20 token is native to L1, it will be escrowed within this         contract. If the ERC20 token is native to L2, it will be burnt. Before Bedrock, ETH was         stored within this contract. After Bedrock, ETH is instead stored inside the         OptimismPortal contract.         NOTE: this contract is not intended to support all variations of ERC20 tokens. Examples         of some token types that may not be properly supported by this contract include, but are         not limited to: tokens with transfer fees, rebasing tokens, and tokens with blocklists."
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "methods": {
      "MESSENGER()": {},
      "bridgeERC20(address,address,uint256,uint32,bytes)": {
        "params": {
          "_amount": "Amount of local tokens to deposit.",
          "_extraData": "Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.",
          "_localToken": "Address of the ERC20 on this chain.",
          "_minGasLimit": "Minimum amount of gas that the bridge can be relayed with.",
          "_remoteToken": "Address of the corresponding token on the remote chain."
        }
      },
      "bridgeERC20To(address,address,address,uint256,uint32,bytes)": {
        "params": {
          "_amount": "Amount of local tokens to deposit.",
          "_extraData": "Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.",
          "_localToken": "Address of the ERC20 on this chain.",
          "_minGasLimit": "Minimum amount of gas that the bridge can be relayed with.",
          "_remoteToken": "Address of the corresponding token on the remote chain.",
          "_to": "Address of the receiver."
        }
      },
      "bridgeETH(uint32,bytes)": {
        "params": {
          "_extraData": "Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.",
          "_minGasLimit": "Minimum amount of gas that the bridge can be relayed with."
        }
      },
      "bridgeETHTo(address,uint32,bytes)": {
        "params": {
          "_extraData": "Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.",
          "_minGasLimit": "Minimum amount of gas that the bridge can be relayed with.",
          "_to": "Address of the receiver."
        }
      },
      "bridgeNativeToken(uint256,uint32,bytes)": {
        "params": {
          "_amount": "Amount of native being bridged.",
          "_extraData": "Optional data to forward to L2.                     Data supplied here will not be used to execute any code on L2 and is                     only emitted as extra data for the convenience of off-chain tooling.",
          "_minGasLimit": "Minimum gas limit for the deposit message on L2."
        }
      },
      "bridgeNativeTokenTo(address,uint256,uint32,bytes)": {
        "params": {
          "_amount": "Amount of native being bridged.",
          "_extraData": "Optional data to forward to L2.                     Data supplied here will not be used to execute any code on L2 and is                     only emitted as extra data for the convenience of off-chain tooling.",
          "_minGasLimit": "Minimum gas limit for the deposit message on L2.",
          "_to": "Address of the recipient on L2."
        }
      },
      "depositERC20(address,address,uint256,uint32,bytes)": {
        "params": {
          "_amount": "Amount of the ERC20 to deposit.",
          "_extraData": "Optional data to forward to L2.                     Data supplied here will not be used to execute any code on L2 and is                     only emitted as extra data for the convenience of off-chain tooling.",
          "_l1Token": "Address of the L1 token being deposited.",
          "_l2Token": "Address of the corresponding token on L2.",
          "_minGasLimit": "Minimum gas limit for the deposit message on L2."
        }
      },
      "depositERC20To(address,address,address,uint256,uint32,bytes)": {
        "params": {
          "_amount": "Amount of the ERC20 to deposit.",
          "_extraData": "Optional data to forward to L2.                     Data supplied here will not be used to execute any code on L2 and is                     only emitted as extra data for the convenience of off-chain tooling.",
          "_l1Token": "Address of the L1 token being deposited.",
          "_l2Token": "Address of the corresponding token on L2.",
          "_minGasLimit": "Minimum gas limit for the deposit message on L2.",
          "_to": "Address of the recipient on L2."
        }
      },
      "depositETH(uint32,bytes)": {
        "params": {
          "_extraData": "Optional data to forward to L2.                     Data supplied here will not be used to execute any code on L2 and is                     only emitted as extra data for the convenience of off-chain tooling.",
          "_minGasLimit": "Minimum gas limit for the deposit message on L2."
        }
      },
      "depositETHTo(address,uint32,bytes)": {
        "params": {
          "_extraData": "Optional data to forward to L2.                     Data supplied here will not be used to execute any code on L2 and is                     only emitted as extra data for the convenience of off-chain tooling.",
          "_minGasLimit": "Minimum gas limit for the deposit message on L2.",
          "_to": "Address of the recipient on L2."
        }
      },
      "depositNativeToken(uint256,uint32,bytes)": {
        "params": {
          "_amount": "Amount of native being bridged.",
          "_extraData": "Optional data to forward to L2.                     Data supplied here will not be used to execute any code on L2 and is                     only emitted as extra data for the convenience of off-chain tooling.",
          "_minGasLimit": "Minimum gas limit for the deposit message on L2."
        }
      },
      "depositNativeTokenTo(address,uint256,uint32,bytes)": {
        "params": {
          "_amount": "Amount of native being bridged.",
          "_extraData": "Optional data to forward to L2.                     Data supplied here will not be used to execute any code on L2 and is                     only emitted as extra data for the convenience of off-chain tooling.",
          "_minGasLimit": "Minimum gas limit for the deposit message on L2.",
          "_to": "Address of the recipient on L2."
        }
      },
      "finalizeBridgeERC20(address,address,address,address,uint256,bytes)": {
        "params": {
          "_amount": "Amount of the ERC20 being bridged.",
          "_extraData": "Extra data to be sent with the transaction. Note that the recipient will                     not be triggered with this data, but it will be emitted and can be used                     to identify the transaction.",
          "_from": "Address of the sender.",
          "_localToken": "Address of the ERC20 on this chain.",
          "_remoteToken": "Address of the corresponding token on the remote chain.",
          "_to": "Address of the receiver."
        }
      },
      "finalizeBridgeETH(address,address,uint256,bytes)": {
        "params": {
          "_amount": "Amount of ETH being bridged.",
          "_extraData": "Extra data to be sent with the transaction. Note that the recipient will                   not be triggered with this data, but it will be emitted and can be used                   to identify the transaction.",
          "_from": "Address of the sender.",
          "_to": "Address of the receiver."
        }
      },
      "finalizeERC20Withdrawal(address,address,address,address,uint256,bytes)": {
        "params": {
          "_amount": "Amount of the ERC20 to withdraw.",
          "_extraData": "Optional data forwarded from L2.",
          "_from": "Address of the withdrawer on L2.",
          "_l1Token": "Address of the token on L1. L1 must be different than l1TokenAddress",
          "_l2Token": "Address of the corresponding token on L2.",
          "_to": "Address of the recipient on L1."
        }
      },
      "finalizeETHWithdrawal(address,address,uint256,bytes)": {
        "params": {
          "_amount": "Amount of ETH to withdraw.",
          "_extraData": "Optional data forwarded from L2.",
          "_from": "Address of the withdrawer on L2.",
          "_to": "Address of the recipient on L1."
        }
      },
      "l2TokenBridge()": {
        "returns": {
          "_0": "Address of the corresponding L2 bridge contract."
        }
      },
      "onApprove(address,address,uint256,bytes)": {
        "params": {
          "_amount": "Approved amount",
          "_data": "Data used in OnApprove contract",
          "_owner": "Account that called approveAndCall"
        }
      },
      "unpackOnApproveData(bytes)": {
        "params": {
          "_data": "Data used in OnApprove contract"
        }
      }
    },
    "events": {
      "ERC20DepositInitiated(address,address,address,address,uint256,bytes)": {
        "params": {
          "amount": "Amount of the ERC20 deposited.",
          "extraData": "Extra data attached to the deposit.",
          "from": "Address of the depositor.",
          "l1Token": "Address of the token on L1.",
          "l2Token": "Address of the corresponding token on L2.",
          "to": "Address of the recipient on L2."
        }
      },
      "ERC20WithdrawalFinalized(address,address,address,address,uint256,bytes)": {
        "params": {
          "amount": "Amount of the ERC20 withdrawn.",
          "extraData": "Extra data attached to the withdrawal.",
          "from": "Address of the withdrawer.",
          "l1Token": "Address of the token on L1.",
          "l2Token": "Address of the corresponding token on L2.",
          "to": "Address of the recipient on L1."
        }
      },
      "ETHDepositInitiated(address,address,uint256,bytes)": {
        "params": {
          "amount": "Amount of ETH deposited.",
          "extraData": "Extra data attached to the deposit.",
          "from": "Address of the depositor.",
          "to": "Address of the recipient on L2."
        }
      },
      "ETHWithdrawalFinalized(address,address,uint256,bytes)": {
        "params": {
          "amount": "Amount of ETH withdrawn.",
          "extraData": "Extra data attached to the withdrawal.",
          "from": "Address of the withdrawer.",
          "to": "Address of the recipient on L1."
        }
      }
    }
  },
  "ast": {
    "absolutePath": "src/L1/L1StandardBridge.sol",
    "id": 47423,
    "exportedSymbols": {
      "Constants": [
        60086
      ],
      "CrossDomainMessenger": [
        63488
      ],
      "IERC165": [
        33798
      ],
      "IERC20": [
        31286
      ],
      "IOptimismMintableERC20": [
        63903
      ],
      "ISemver": [
        64010
      ],
      "L1CrossDomainMessenger": [
        46073
      ],
      "L1StandardBridge": [
        47422
      ],
      "OnApprove": [
        49954
      ],
      "OptimismMintableERC20": [
        64239
      ],
      "Predeploys": [
        60881
      ],
      "SafeCall": [
        60970
      ],
      "SafeERC20": [
        31628
      ],
      "StandardBridge": [
        66311
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:25116:75",
    "nodes": [
      {
        "id": 46415,
        "nodeType": "PragmaDirective",
        "src": "32:23:75",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 46417,
        "nodeType": "ImportDirective",
        "src": "57:72:75",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47423,
        "sourceUnit": 31287,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46416,
              "name": "IERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 31286,
              "src": "66:6:75",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46419,
        "nodeType": "ImportDirective",
        "src": "130:82:75",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/introspection/IERC165.sol",
        "file": "@openzeppelin/contracts/utils/introspection/IERC165.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47423,
        "sourceUnit": 33799,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46418,
              "name": "IERC165",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 33798,
              "src": "139:7:75",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46421,
        "nodeType": "ImportDirective",
        "src": "214:84:75",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47423,
        "sourceUnit": 31629,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46420,
              "name": "SafeERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 31628,
              "src": "223:9:75",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46423,
        "nodeType": "ImportDirective",
        "src": "299:82:75",
        "nodes": [],
        "absolutePath": "src/universal/IOptimismMintableERC20.sol",
        "file": "src/universal/IOptimismMintableERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47423,
        "sourceUnit": 63927,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46422,
              "name": "IOptimismMintableERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 63903,
              "src": "308:22:75",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46425,
        "nodeType": "ImportDirective",
        "src": "382:58:75",
        "nodes": [],
        "absolutePath": "src/libraries/Predeploys.sol",
        "file": "src/libraries/Predeploys.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47423,
        "sourceUnit": 60882,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46424,
              "name": "Predeploys",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 60881,
              "src": "391:10:75",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46427,
        "nodeType": "ImportDirective",
        "src": "441:66:75",
        "nodes": [],
        "absolutePath": "src/universal/StandardBridge.sol",
        "file": "src/universal/StandardBridge.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47423,
        "sourceUnit": 66312,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46426,
              "name": "StandardBridge",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 66311,
              "src": "450:14:75",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46429,
        "nodeType": "ImportDirective",
        "src": "508:52:75",
        "nodes": [],
        "absolutePath": "src/universal/ISemver.sol",
        "file": "src/universal/ISemver.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47423,
        "sourceUnit": 64011,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46428,
              "name": "ISemver",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 64010,
              "src": "517:7:75",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46431,
        "nodeType": "ImportDirective",
        "src": "561:78:75",
        "nodes": [],
        "absolutePath": "src/universal/CrossDomainMessenger.sol",
        "file": "src/universal/CrossDomainMessenger.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47423,
        "sourceUnit": 63489,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46430,
              "name": "CrossDomainMessenger",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 63488,
              "src": "570:20:75",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46433,
        "nodeType": "ImportDirective",
        "src": "640:75:75",
        "nodes": [],
        "absolutePath": "src/L1/L1CrossDomainMessenger.sol",
        "file": "src/L1/L1CrossDomainMessenger.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47423,
        "sourceUnit": 46074,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46432,
              "name": "L1CrossDomainMessenger",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 46073,
              "src": "649:22:75",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46435,
        "nodeType": "ImportDirective",
        "src": "716:56:75",
        "nodes": [],
        "absolutePath": "src/libraries/Constants.sol",
        "file": "src/libraries/Constants.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47423,
        "sourceUnit": 60087,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46434,
              "name": "Constants",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 60086,
              "src": "725:9:75",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46437,
        "nodeType": "ImportDirective",
        "src": "773:54:75",
        "nodes": [],
        "absolutePath": "src/libraries/SafeCall.sol",
        "file": "src/libraries/SafeCall.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47423,
        "sourceUnit": 60971,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46436,
              "name": "SafeCall",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 60970,
              "src": "782:8:75",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46439,
        "nodeType": "ImportDirective",
        "src": "828:80:75",
        "nodes": [],
        "absolutePath": "src/universal/OptimismMintableERC20.sol",
        "file": "src/universal/OptimismMintableERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47423,
        "sourceUnit": 64240,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46438,
              "name": "OptimismMintableERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 64239,
              "src": "837:21:75",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 46441,
        "nodeType": "ImportDirective",
        "src": "909:44:75",
        "nodes": [],
        "absolutePath": "src/L1/OnApprove.sol",
        "file": "./OnApprove.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 47423,
        "sourceUnit": 49955,
        "symbolAliases": [
          {
            "foreign": {
              "id": 46440,
              "name": "OnApprove",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 49954,
              "src": "918:9:75",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 47422,
        "nodeType": "ContractDefinition",
        "src": "1727:23420:75",
        "nodes": [
          {
            "id": 46452,
            "nodeType": "UsingForDirective",
            "src": "1797:27:75",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 46449,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 31628,
              "src": "1803:9:75"
            },
            "typeName": {
              "id": 46451,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 46450,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 31286,
                "src": "1817:6:75"
              },
              "referencedDeclaration": 31286,
              "src": "1817:6:75",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$31286",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 46454,
            "nodeType": "VariableDeclaration",
            "src": "1830:33:75",
            "nodes": [],
            "constant": false,
            "functionSelector": "4d0047ee",
            "mutability": "mutable",
            "name": "nativeTokenAddress",
            "nameLocation": "1845:18:75",
            "scope": 47422,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 46453,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1830:7:75",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 46465,
            "nodeType": "EventDefinition",
            "src": "2192:101:75",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 46455,
              "nodeType": "StructuredDocumentation",
              "src": "1870:317:75",
              "text": "@custom:legacy\n @notice Emitted whenever a deposit of ETH from L1 into L2 is initiated.\n @param from      Address of the depositor.\n @param to        Address of the recipient on L2.\n @param amount    Amount of ETH deposited.\n @param extraData Extra data attached to the deposit."
            },
            "eventSelector": "35d79ab81f2b2017e19afb5c5571778877782d7a8786f5907f93b0f4702f4f23",
            "name": "ETHDepositInitiated",
            "nameLocation": "2198:19:75",
            "parameters": {
              "id": 46464,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46457,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "2234:4:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46465,
                  "src": "2218:20:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46456,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2218:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46459,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2256:2:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46465,
                  "src": "2240:18:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46458,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2240:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46461,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2268:6:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46465,
                  "src": "2260:14:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46460,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2260:7:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46463,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "extraData",
                  "nameLocation": "2282:9:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46465,
                  "src": "2276:15:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 46462,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2276:5:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2217:75:75"
            }
          },
          {
            "id": 46476,
            "nodeType": "EventDefinition",
            "src": "2626:104:75",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 46466,
              "nodeType": "StructuredDocumentation",
              "src": "2299:322:75",
              "text": "@custom:legacy\n @notice Emitted whenever a withdrawal of ETH from L2 to L1 is finalized.\n @param from      Address of the withdrawer.\n @param to        Address of the recipient on L1.\n @param amount    Amount of ETH withdrawn.\n @param extraData Extra data attached to the withdrawal."
            },
            "eventSelector": "2ac69ee804d9a7a0984249f508dfab7cb2534b465b6ce1580f99a38ba9c5e631",
            "name": "ETHWithdrawalFinalized",
            "nameLocation": "2632:22:75",
            "parameters": {
              "id": 46475,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46468,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "2671:4:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46476,
                  "src": "2655:20:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46467,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2655:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46470,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "2693:2:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46476,
                  "src": "2677:18:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46469,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2677:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46472,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "2705:6:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46476,
                  "src": "2697:14:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46471,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2697:7:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46474,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "extraData",
                  "nameLocation": "2719:9:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46476,
                  "src": "2713:15:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 46473,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2713:5:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2654:75:75"
            }
          },
          {
            "id": 46491,
            "nodeType": "EventDefinition",
            "src": "3168:199:75",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 46477,
              "nodeType": "StructuredDocumentation",
              "src": "2736:427:75",
              "text": "@custom:legacy\n @notice Emitted whenever an ERC20 deposit is initiated.\n @param l1Token   Address of the token on L1.\n @param l2Token   Address of the corresponding token on L2.\n @param from      Address of the depositor.\n @param to        Address of the recipient on L2.\n @param amount    Amount of the ERC20 deposited.\n @param extraData Extra data attached to the deposit."
            },
            "eventSelector": "718594027abd4eaed59f95162563e0cc6d0e8d5b86b1c7be8b1b0ac3343d0396",
            "name": "ERC20DepositInitiated",
            "nameLocation": "3174:21:75",
            "parameters": {
              "id": 46490,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46479,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "l1Token",
                  "nameLocation": "3221:7:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46491,
                  "src": "3205:23:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46478,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3205:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46481,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "l2Token",
                  "nameLocation": "3254:7:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46491,
                  "src": "3238:23:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46480,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3238:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46483,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "3287:4:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46491,
                  "src": "3271:20:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46482,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3271:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46485,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3309:2:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46491,
                  "src": "3301:10:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46484,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3301:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46487,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3329:6:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46491,
                  "src": "3321:14:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46486,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3321:7:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46489,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "extraData",
                  "nameLocation": "3351:9:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46491,
                  "src": "3345:15:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 46488,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3345:5:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3195:171:75"
            }
          },
          {
            "id": 46506,
            "nodeType": "EventDefinition",
            "src": "3812:202:75",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 46492,
              "nodeType": "StructuredDocumentation",
              "src": "3373:434:75",
              "text": "@custom:legacy\n @notice Emitted whenever an ERC20 withdrawal is finalized.\n @param l1Token   Address of the token on L1.\n @param l2Token   Address of the corresponding token on L2.\n @param from      Address of the withdrawer.\n @param to        Address of the recipient on L1.\n @param amount    Amount of the ERC20 withdrawn.\n @param extraData Extra data attached to the withdrawal."
            },
            "eventSelector": "3ceee06c1e37648fcbb6ed52e17b3e1f275a1f8c7b22a84b2b84732431e046b3",
            "name": "ERC20WithdrawalFinalized",
            "nameLocation": "3818:24:75",
            "parameters": {
              "id": 46505,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46494,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "l1Token",
                  "nameLocation": "3868:7:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46506,
                  "src": "3852:23:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46493,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3852:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46496,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "l2Token",
                  "nameLocation": "3901:7:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46506,
                  "src": "3885:23:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46495,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3885:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46498,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "from",
                  "nameLocation": "3934:4:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46506,
                  "src": "3918:20:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46497,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3918:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46500,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "to",
                  "nameLocation": "3956:2:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46506,
                  "src": "3948:10:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46499,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3948:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46502,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "3976:6:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46506,
                  "src": "3968:14:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46501,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3968:7:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46504,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "extraData",
                  "nameLocation": "3998:9:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46506,
                  "src": "3992:15:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 46503,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "3992:5:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3842:171:75"
            }
          },
          {
            "id": 46510,
            "nodeType": "VariableDeclaration",
            "src": "4083:40:75",
            "nodes": [],
            "baseFunctions": [
              64009
            ],
            "constant": true,
            "documentation": {
              "id": 46507,
              "nodeType": "StructuredDocumentation",
              "src": "4020:58:75",
              "text": "@notice Semantic version.\n @custom:semver 1.4.1"
            },
            "functionSelector": "54fd4d50",
            "mutability": "constant",
            "name": "version",
            "nameLocation": "4106:7:75",
            "scope": 47422,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_memory_ptr",
              "typeString": "string"
            },
            "typeName": {
              "id": 46508,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "4083:6:75",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string"
              }
            },
            "value": {
              "hexValue": "312e342e31",
              "id": 46509,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "string",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "4116:7:75",
              "typeDescriptions": {
                "typeIdentifier": "t_stringliteral_7015c1a48403d132ad83884b326109f1b309c42f752b2abd1db79522ee074673",
                "typeString": "literal_string \"1.4.1\""
              },
              "value": "1.4.1"
            },
            "visibility": "public"
          },
          {
            "id": 46537,
            "nodeType": "FunctionDefinition",
            "src": "4188:195:75",
            "nodes": [],
            "body": {
              "id": 46536,
              "nodeType": "Block",
              "src": "4273:110:75",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 46527,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "4337:1:75",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 46526,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "4329:7:75",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 46525,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "4329:7:75",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 46528,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "4329:10:75",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 46524,
                          "name": "CrossDomainMessenger",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 63488,
                          "src": "4308:20:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_CrossDomainMessenger_$63488_$",
                            "typeString": "type(contract CrossDomainMessenger)"
                          }
                        },
                        "id": 46529,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4308:32:75",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CrossDomainMessenger_$63488",
                          "typeString": "contract CrossDomainMessenger"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "30",
                            "id": 46532,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4371:1:75",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            }
                          ],
                          "id": 46531,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4363:7:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46530,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4363:7:75",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46533,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4363:10:75",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_CrossDomainMessenger_$63488",
                          "typeString": "contract CrossDomainMessenger"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 46523,
                      "name": "initialize",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46559,
                      "src": "4283:10:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_CrossDomainMessenger_$63488_$_t_address_$returns$__$",
                        "typeString": "function (contract CrossDomainMessenger,address)"
                      }
                    },
                    "id": 46534,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [
                      "_messenger",
                      "_nativeTokenAddress"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "4283:93:75",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46535,
                  "nodeType": "ExpressionStatement",
                  "src": "4283:93:75"
                }
              ]
            },
            "documentation": {
              "id": 46511,
              "nodeType": "StructuredDocumentation",
              "src": "4130:53:75",
              "text": "@notice Constructs the L1StandardBridge contract."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 46517,
                              "name": "Predeploys",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60881,
                              "src": "4240:10:75",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Predeploys_$60881_$",
                                "typeString": "type(library Predeploys)"
                              }
                            },
                            "id": 46518,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "L2_STANDARD_BRIDGE",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 60809,
                            "src": "4240:29:75",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 46516,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4232:8:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_payable_$",
                            "typeString": "type(address payable)"
                          },
                          "typeName": {
                            "id": 46515,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "4232:8:75",
                            "stateMutability": "payable",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46519,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4232:38:75",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address_payable",
                          "typeString": "address payable"
                        }
                      ],
                      "id": 46514,
                      "name": "StandardBridge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66311,
                      "src": "4217:14:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_StandardBridge_$66311_$",
                        "typeString": "type(contract StandardBridge)"
                      }
                    },
                    "id": 46520,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4217:54:75",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_StandardBridge_$66311",
                      "typeString": "contract StandardBridge"
                    }
                  }
                ],
                "id": 46521,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 46513,
                  "name": "StandardBridge",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 66311,
                  "src": "4202:14:75"
                },
                "nodeType": "ModifierInvocation",
                "src": "4202:70:75"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 46512,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4199:2:75"
            },
            "returnParameters": {
              "id": 46522,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4273:0:75"
            },
            "scope": 47422,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 46559,
            "nodeType": "FunctionDefinition",
            "src": "4417:284:75",
            "nodes": [],
            "body": {
              "id": 46558,
              "nodeType": "Block",
              "src": "4585:116:75",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46551,
                        "name": "_messenger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46541,
                        "src": "4631:10:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CrossDomainMessenger_$63488",
                          "typeString": "contract CrossDomainMessenger"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_CrossDomainMessenger_$63488",
                          "typeString": "contract CrossDomainMessenger"
                        }
                      ],
                      "id": 46550,
                      "name": "__StandardBridge_init",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 65741,
                      "src": "4595:21:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_CrossDomainMessenger_$63488_$returns$__$",
                        "typeString": "function (contract CrossDomainMessenger)"
                      }
                    },
                    "id": 46552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [
                      "_messenger"
                    ],
                    "nodeType": "FunctionCall",
                    "src": "4595:49:75",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46553,
                  "nodeType": "ExpressionStatement",
                  "src": "4595:49:75"
                },
                {
                  "expression": {
                    "id": 46556,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 46554,
                      "name": "nativeTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46454,
                      "src": "4654:18:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 46555,
                      "name": "_nativeTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46543,
                      "src": "4675:19:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "4654:40:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 46557,
                  "nodeType": "ExpressionStatement",
                  "src": "4654:40:75"
                }
              ]
            },
            "documentation": {
              "id": 46538,
              "nodeType": "StructuredDocumentation",
              "src": "4389:23:75",
              "text": "@notice Initializer"
            },
            "functionSelector": "485cc955",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 46546,
                      "name": "Constants",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 60086,
                      "src": "4558:9:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_contract$_Constants_$60086_$",
                        "typeString": "type(library Constants)"
                      }
                    },
                    "id": 46547,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "INITIALIZER",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 60085,
                    "src": "4558:21:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 46548,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 46545,
                  "name": "reinitializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 30575,
                  "src": "4544:13:75"
                },
                "nodeType": "ModifierInvocation",
                "src": "4544:36:75"
              }
            ],
            "name": "initialize",
            "nameLocation": "4426:10:75",
            "parameters": {
              "id": 46544,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46541,
                  "mutability": "mutable",
                  "name": "_messenger",
                  "nameLocation": "4467:10:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46559,
                  "src": "4446:31:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_CrossDomainMessenger_$63488",
                    "typeString": "contract CrossDomainMessenger"
                  },
                  "typeName": {
                    "id": 46540,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 46539,
                      "name": "CrossDomainMessenger",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 63488,
                      "src": "4446:20:75"
                    },
                    "referencedDeclaration": 63488,
                    "src": "4446:20:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_CrossDomainMessenger_$63488",
                      "typeString": "contract CrossDomainMessenger"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46543,
                  "mutability": "mutable",
                  "name": "_nativeTokenAddress",
                  "nameLocation": "4495:19:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46559,
                  "src": "4487:27:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46542,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4487:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4436:84:75"
            },
            "returnParameters": {
              "id": 46549,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4585:0:75"
            },
            "scope": 47422,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 46579,
            "nodeType": "FunctionDefinition",
            "src": "4764:142:75",
            "nodes": [],
            "body": {
              "id": 46578,
              "nodeType": "Block",
              "src": "4808:98:75",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 46567,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4838:3:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 46568,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4838:10:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 46569,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "4850:3:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 46570,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "4850:10:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 46571,
                        "name": "RECEIVE_DEFAULT_GAS_LIMIT",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65597,
                        "src": "4862:25:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "hexValue": "",
                            "id": 46574,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "string",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "4895:2:75",
                            "typeDescriptions": {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            },
                            "value": ""
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                              "typeString": "literal_string \"\""
                            }
                          ],
                          "id": 46573,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "4889:5:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                            "typeString": "type(bytes storage pointer)"
                          },
                          "typeName": {
                            "id": 46572,
                            "name": "bytes",
                            "nodeType": "ElementaryTypeName",
                            "src": "4889:5:75",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46575,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4889:9:75",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 46566,
                      "name": "_initiateETHDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46969,
                      "src": "4818:19:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint32,bytes memory)"
                      }
                    },
                    "id": 46576,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4818:81:75",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46577,
                  "nodeType": "ExpressionStatement",
                  "src": "4818:81:75"
                }
              ]
            },
            "baseFunctions": [
              65745
            ],
            "documentation": {
              "id": 46560,
              "nodeType": "StructuredDocumentation",
              "src": "4707:52:75",
              "text": "@notice Deposit ETH on L1 and receive ETH on L2."
            },
            "implemented": true,
            "kind": "receive",
            "modifiers": [
              {
                "id": 46564,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 46563,
                  "name": "onlyEOA",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 65690,
                  "src": "4800:7:75"
                },
                "nodeType": "ModifierInvocation",
                "src": "4800:7:75"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "overrides": {
              "id": 46562,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "4791:8:75"
            },
            "parameters": {
              "id": 46561,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4771:2:75"
            },
            "returnParameters": {
              "id": 46565,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4808:0:75"
            },
            "scope": 47422,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 46624,
            "nodeType": "FunctionDefinition",
            "src": "5111:483:75",
            "nodes": [],
            "body": {
              "id": 46623,
              "nodeType": "Block",
              "src": "5293:301:75",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 46601,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 46595,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5311:3:75",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 46596,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5311:10:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 46599,
                              "name": "nativeTokenAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 46454,
                              "src": "5333:18:75",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 46598,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "5325:7:75",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 46597,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "5325:7:75",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 46600,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "5325:27:75",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5311:41:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "6f6e6c7920616363657074206e617469766520746f6b656e20617070726f76652063616c6c6261636b",
                        "id": 46602,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5354:43:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_f4b297da633e18be624edab084175711757920feabe27679f12a2f3de3c46fb8",
                          "typeString": "literal_string \"only accept native token approve callback\""
                        },
                        "value": "only accept native token approve callback"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_f4b297da633e18be624edab084175711757920feabe27679f12a2f3de3c46fb8",
                          "typeString": "literal_string \"only accept native token approve callback\""
                        }
                      ],
                      "id": 46594,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5303:7:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 46603,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5303:95:75",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46604,
                  "nodeType": "ExpressionStatement",
                  "src": "5303:95:75"
                },
                {
                  "assignments": [
                    46606,
                    46608
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 46606,
                      "mutability": "mutable",
                      "name": "_minGasLimit",
                      "nameLocation": "5416:12:75",
                      "nodeType": "VariableDeclaration",
                      "scope": 46623,
                      "src": "5409:19:75",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint32",
                        "typeString": "uint32"
                      },
                      "typeName": {
                        "id": 46605,
                        "name": "uint32",
                        "nodeType": "ElementaryTypeName",
                        "src": "5409:6:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      "visibility": "internal"
                    },
                    {
                      "constant": false,
                      "id": 46608,
                      "mutability": "mutable",
                      "name": "_message",
                      "nameLocation": "5443:8:75",
                      "nodeType": "VariableDeclaration",
                      "scope": 46623,
                      "src": "5430:21:75",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes_memory_ptr",
                        "typeString": "bytes"
                      },
                      "typeName": {
                        "id": 46607,
                        "name": "bytes",
                        "nodeType": "ElementaryTypeName",
                        "src": "5430:5:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_storage_ptr",
                          "typeString": "bytes"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 46612,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 46610,
                        "name": "_data",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46588,
                        "src": "5475:5:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 46609,
                      "name": "unpackOnApproveData",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 49940,
                      "src": "5455:19:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_bytes_memory_ptr_$returns$_t_uint32_$_t_bytes_memory_ptr_$",
                        "typeString": "function (bytes memory) pure returns (uint32,bytes memory)"
                      }
                    },
                    "id": 46611,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5455:26:75",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_uint32_$_t_bytes_memory_ptr_$",
                      "typeString": "tuple(uint32,bytes memory)"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "5408:73:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46614,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46582,
                        "src": "5518:6:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 46615,
                        "name": "_owner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46582,
                        "src": "5526:6:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 46616,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46586,
                        "src": "5534:7:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 46617,
                        "name": "_minGasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46606,
                        "src": "5543:12:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 46618,
                        "name": "_message",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46608,
                        "src": "5557:8:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 46613,
                      "name": "_initiateBridgeNativeToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47133,
                      "src": "5491:26:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,uint32,bytes memory)"
                      }
                    },
                    "id": 46619,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5491:75:75",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46620,
                  "nodeType": "ExpressionStatement",
                  "src": "5491:75:75"
                },
                {
                  "expression": {
                    "hexValue": "74727565",
                    "id": 46621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "5583:4:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "true"
                  },
                  "functionReturnParameters": 46593,
                  "id": 46622,
                  "nodeType": "Return",
                  "src": "5576:11:75"
                }
              ]
            },
            "baseFunctions": [
              49953
            ],
            "documentation": {
              "id": 46580,
              "nodeType": "StructuredDocumentation",
              "src": "4912:194:75",
              "text": "@notice ERC20 onApprove callback\n @param _owner    Account that called approveAndCall\n @param _amount   Approved amount\n @param _data     Data used in OnApprove contract"
            },
            "functionSelector": "4273ca16",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "onApprove",
            "nameLocation": "5120:9:75",
            "overrides": {
              "id": 46590,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "5257:8:75"
            },
            "parameters": {
              "id": 46589,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46582,
                  "mutability": "mutable",
                  "name": "_owner",
                  "nameLocation": "5147:6:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46624,
                  "src": "5139:14:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46581,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5139:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46584,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 46624,
                  "src": "5163:7:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46583,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5163:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46586,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "5188:7:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46624,
                  "src": "5180:15:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46585,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5180:7:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46588,
                  "mutability": "mutable",
                  "name": "_data",
                  "nameLocation": "5220:5:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46624,
                  "src": "5205:20:75",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 46587,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "5205:5:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5129:102:75"
            },
            "returnParameters": {
              "id": 46593,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46592,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 46624,
                  "src": "5283:4:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 46591,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "5283:4:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5282:6:75"
            },
            "scope": 47422,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 46647,
            "nodeType": "FunctionDefinition",
            "src": "6079:212:75",
            "nodes": [],
            "body": {
              "id": 46646,
              "nodeType": "Block",
              "src": "6189:102:75",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 46637,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6226:3:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 46638,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6226:10:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 46639,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "6238:3:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 46640,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "6238:10:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 46641,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46627,
                        "src": "6250:7:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 46642,
                        "name": "_minGasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46629,
                        "src": "6259:12:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 46643,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46631,
                        "src": "6273:10:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 46636,
                      "name": "_initiateBridgeNativeToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47133,
                      "src": "6199:26:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,uint32,bytes memory)"
                      }
                    },
                    "id": 46644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6199:85:75",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46645,
                  "nodeType": "ExpressionStatement",
                  "src": "6199:85:75"
                }
              ]
            },
            "documentation": {
              "id": 46625,
              "nodeType": "StructuredDocumentation",
              "src": "5600:474:75",
              "text": "@notice Deposits some amount of token into the sender's native's account on L2.\n @param _amount      Amount of native being bridged.\n @param _minGasLimit Minimum gas limit for the deposit message on L2.\n @param _extraData   Optional data to forward to L2.\n                     Data supplied here will not be used to execute any code on L2 and is\n                     only emitted as extra data for the convenience of off-chain tooling."
            },
            "functionSelector": "86c1a9de",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 46634,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 46633,
                  "name": "onlyEOA",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 65690,
                  "src": "6181:7:75"
                },
                "nodeType": "ModifierInvocation",
                "src": "6181:7:75"
              }
            ],
            "name": "depositNativeToken",
            "nameLocation": "6088:18:75",
            "parameters": {
              "id": 46632,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46627,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "6115:7:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46647,
                  "src": "6107:15:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46626,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6107:7:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46629,
                  "mutability": "mutable",
                  "name": "_minGasLimit",
                  "nameLocation": "6131:12:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46647,
                  "src": "6124:19:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 46628,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6124:6:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46631,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "6160:10:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46647,
                  "src": "6145:25:75",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 46630,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6145:5:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6106:65:75"
            },
            "returnParameters": {
              "id": 46635,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6189:0:75"
            },
            "scope": 47422,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 46669,
            "nodeType": "FunctionDefinition",
            "src": "6836:262:75",
            "nodes": [],
            "body": {
              "id": 46668,
              "nodeType": "Block",
              "src": "7003:95:75",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 46660,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7040:3:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 46661,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7040:10:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 46662,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46650,
                        "src": "7052:3:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 46663,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46652,
                        "src": "7057:7:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 46664,
                        "name": "_minGasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46654,
                        "src": "7066:12:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 46665,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46656,
                        "src": "7080:10:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 46659,
                      "name": "_initiateBridgeNativeToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47133,
                      "src": "7013:26:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,uint32,bytes memory)"
                      }
                    },
                    "id": 46666,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7013:78:75",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46667,
                  "nodeType": "ExpressionStatement",
                  "src": "7013:78:75"
                }
              ]
            },
            "documentation": {
              "id": 46648,
              "nodeType": "StructuredDocumentation",
              "src": "6297:534:75",
              "text": "@notice Deposits some amount of token into the sender's native's account on L2.\n @param _to          Address of the recipient on L2.\n @param _amount      Amount of native being bridged.\n @param _minGasLimit Minimum gas limit for the deposit message on L2.\n @param _extraData   Optional data to forward to L2.\n                     Data supplied here will not be used to execute any code on L2 and is\n                     only emitted as extra data for the convenience of off-chain tooling."
            },
            "functionSelector": "5791f5c2",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositNativeTokenTo",
            "nameLocation": "6845:20:75",
            "parameters": {
              "id": 46657,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46650,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "6883:3:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46669,
                  "src": "6875:11:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46649,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6875:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46652,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "6904:7:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46669,
                  "src": "6896:15:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46651,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6896:7:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46654,
                  "mutability": "mutable",
                  "name": "_minGasLimit",
                  "nameLocation": "6928:12:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46669,
                  "src": "6921:19:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 46653,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6921:6:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46656,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "6965:10:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46669,
                  "src": "6950:25:75",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 46655,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "6950:5:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6865:116:75"
            },
            "returnParameters": {
              "id": 46658,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7003:0:75"
            },
            "scope": 47422,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 46692,
            "nodeType": "FunctionDefinition",
            "src": "7583:211:75",
            "nodes": [],
            "body": {
              "id": 46691,
              "nodeType": "Block",
              "src": "7692:102:75",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 46682,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7729:3:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 46683,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7729:10:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 46684,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "7741:3:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 46685,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "7741:10:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 46686,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46672,
                        "src": "7753:7:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 46687,
                        "name": "_minGasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46674,
                        "src": "7762:12:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 46688,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46676,
                        "src": "7776:10:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 46681,
                      "name": "_initiateBridgeNativeToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47133,
                      "src": "7702:26:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,uint32,bytes memory)"
                      }
                    },
                    "id": 46689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7702:85:75",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46690,
                  "nodeType": "ExpressionStatement",
                  "src": "7702:85:75"
                }
              ]
            },
            "documentation": {
              "id": 46670,
              "nodeType": "StructuredDocumentation",
              "src": "7104:474:75",
              "text": "@notice Deposits some amount of token into the sender's native's account on L2.\n @param _amount      Amount of native being bridged.\n @param _minGasLimit Minimum gas limit for the deposit message on L2.\n @param _extraData   Optional data to forward to L2.\n                     Data supplied here will not be used to execute any code on L2 and is\n                     only emitted as extra data for the convenience of off-chain tooling."
            },
            "functionSelector": "95911e5a",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 46679,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 46678,
                  "name": "onlyEOA",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 65690,
                  "src": "7684:7:75"
                },
                "nodeType": "ModifierInvocation",
                "src": "7684:7:75"
              }
            ],
            "name": "bridgeNativeToken",
            "nameLocation": "7592:17:75",
            "parameters": {
              "id": 46677,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46672,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "7618:7:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46692,
                  "src": "7610:15:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46671,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7610:7:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46674,
                  "mutability": "mutable",
                  "name": "_minGasLimit",
                  "nameLocation": "7634:12:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46692,
                  "src": "7627:19:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 46673,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "7627:6:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46676,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "7663:10:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46692,
                  "src": "7648:25:75",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 46675,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "7648:5:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7609:65:75"
            },
            "returnParameters": {
              "id": 46680,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7692:0:75"
            },
            "scope": 47422,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 46714,
            "nodeType": "FunctionDefinition",
            "src": "8341:261:75",
            "nodes": [],
            "body": {
              "id": 46713,
              "nodeType": "Block",
              "src": "8507:95:75",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 46705,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "8544:3:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 46706,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "8544:10:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 46707,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46695,
                        "src": "8556:3:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 46708,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46697,
                        "src": "8561:7:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 46709,
                        "name": "_minGasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46699,
                        "src": "8570:12:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 46710,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46701,
                        "src": "8584:10:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 46704,
                      "name": "_initiateBridgeNativeToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47133,
                      "src": "8517:26:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,uint32,bytes memory)"
                      }
                    },
                    "id": 46711,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "8517:78:75",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46712,
                  "nodeType": "ExpressionStatement",
                  "src": "8517:78:75"
                }
              ]
            },
            "documentation": {
              "id": 46693,
              "nodeType": "StructuredDocumentation",
              "src": "7800:536:75",
              "text": "@notice Deposits some amount of ERC20 token into a target Native's account on L2.\n @param _to          Address of the recipient on L2.\n @param _amount      Amount of native being bridged.\n @param _minGasLimit Minimum gas limit for the deposit message on L2.\n @param _extraData   Optional data to forward to L2.\n                     Data supplied here will not be used to execute any code on L2 and is\n                     only emitted as extra data for the convenience of off-chain tooling."
            },
            "functionSelector": "e56b44a3",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "bridgeNativeTokenTo",
            "nameLocation": "8350:19:75",
            "parameters": {
              "id": 46702,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46695,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "8387:3:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46714,
                  "src": "8379:11:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46694,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8379:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46697,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "8408:7:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46714,
                  "src": "8400:15:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46696,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8400:7:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46699,
                  "mutability": "mutable",
                  "name": "_minGasLimit",
                  "nameLocation": "8432:12:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46714,
                  "src": "8425:19:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 46698,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "8425:6:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46701,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "8469:10:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46714,
                  "src": "8454:25:75",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 46700,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "8454:5:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8369:116:75"
            },
            "returnParameters": {
              "id": 46703,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8507:0:75"
            },
            "scope": 47422,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 46734,
            "nodeType": "FunctionDefinition",
            "src": "9022:179:75",
            "nodes": [],
            "body": {
              "id": 46733,
              "nodeType": "Block",
              "src": "9115:86:75",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 46725,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9145:3:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 46726,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9145:10:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 46727,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "9157:3:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 46728,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "9157:10:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 46729,
                        "name": "_minGasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46717,
                        "src": "9169:12:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 46730,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46719,
                        "src": "9183:10:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 46724,
                      "name": "_initiateETHDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46969,
                      "src": "9125:19:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint32,bytes memory)"
                      }
                    },
                    "id": 46731,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9125:69:75",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46732,
                  "nodeType": "ExpressionStatement",
                  "src": "9125:69:75"
                }
              ]
            },
            "documentation": {
              "id": 46715,
              "nodeType": "StructuredDocumentation",
              "src": "8608:409:75",
              "text": "@notice Deposits some amount of ETH into the sender's ETH's account on L2.\n @param _minGasLimit Minimum gas limit for the deposit message on L2.\n @param _extraData   Optional data to forward to L2.\n                     Data supplied here will not be used to execute any code on L2 and is\n                     only emitted as extra data for the convenience of off-chain tooling."
            },
            "functionSelector": "b1a1a882",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 46722,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 46721,
                  "name": "onlyEOA",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 65690,
                  "src": "9107:7:75"
                },
                "nodeType": "ModifierInvocation",
                "src": "9107:7:75"
              }
            ],
            "name": "depositETH",
            "nameLocation": "9031:10:75",
            "parameters": {
              "id": 46720,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46717,
                  "mutability": "mutable",
                  "name": "_minGasLimit",
                  "nameLocation": "9049:12:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46734,
                  "src": "9042:19:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 46716,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9042:6:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46719,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "9078:10:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46734,
                  "src": "9063:25:75",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 46718,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9063:5:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9041:48:75"
            },
            "returnParameters": {
              "id": 46723,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9115:0:75"
            },
            "scope": 47422,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 46753,
            "nodeType": "FunctionDefinition",
            "src": "10064:179:75",
            "nodes": [],
            "body": {
              "id": 46752,
              "nodeType": "Block",
              "src": "10164:79:75",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 46745,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "10194:3:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 46746,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "10194:10:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 46747,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46737,
                        "src": "10206:3:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 46748,
                        "name": "_minGasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46739,
                        "src": "10211:12:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 46749,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46741,
                        "src": "10225:10:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 46744,
                      "name": "_initiateETHDeposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46969,
                      "src": "10174:19:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint32,bytes memory)"
                      }
                    },
                    "id": 46750,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "10174:62:75",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46751,
                  "nodeType": "ExpressionStatement",
                  "src": "10174:62:75"
                }
              ]
            },
            "documentation": {
              "id": 46735,
              "nodeType": "StructuredDocumentation",
              "src": "9207:852:75",
              "text": "@notice Deposits some amount of ETH into a target ETH's account on L2.\n         Note that if ETH is sent to a contract on L2 and the call fails, then that ETH will\n         be locked in the L2StandardBridge. ETH may be recoverable if the call can be\n         successfully replayed by increasing the amount of gas supplied to the call. If the\n         call will fail for any amount of gas, then the ETH will be locked permanently.\n @param _to          Address of the recipient on L2.\n @param _minGasLimit Minimum gas limit for the deposit message on L2.\n @param _extraData   Optional data to forward to L2.\n                     Data supplied here will not be used to execute any code on L2 and is\n                     only emitted as extra data for the convenience of off-chain tooling."
            },
            "functionSelector": "9a2ac6d5",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositETHTo",
            "nameLocation": "10073:12:75",
            "parameters": {
              "id": 46742,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46737,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "10094:3:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46753,
                  "src": "10086:11:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46736,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10086:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46739,
                  "mutability": "mutable",
                  "name": "_minGasLimit",
                  "nameLocation": "10106:12:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46753,
                  "src": "10099:19:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 46738,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10099:6:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46741,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "10135:10:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46753,
                  "src": "10120:25:75",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 46740,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10120:5:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10085:61:75"
            },
            "returnParameters": {
              "id": 46743,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "10164:0:75"
            },
            "scope": 47422,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 46832,
            "nodeType": "FunctionDefinition",
            "src": "10849:1072:75",
            "nodes": [],
            "body": {
              "id": 46831,
              "nodeType": "Block",
              "src": "11052:869:75",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 46772,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 46769,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "11070:3:75",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 46770,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "11070:9:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 46771,
                          "name": "_amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46760,
                          "src": "11083:7:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "11070:20:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616e646172644272696467653a206272696467696e6720455448206d75737420696e636c7564652073756666696369656e74204554482076616c7565",
                        "id": 46773,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "11092:64:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_950f54835f4d06e00870356a5c9513a8179dddf76cd62de2e9f0d1ce59b30241",
                          "typeString": "literal_string \"StandardBridge: bridging ETH must include sufficient ETH value\""
                        },
                        "value": "StandardBridge: bridging ETH must include sufficient ETH value"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_950f54835f4d06e00870356a5c9513a8179dddf76cd62de2e9f0d1ce59b30241",
                          "typeString": "literal_string \"StandardBridge: bridging ETH must include sufficient ETH value\""
                        }
                      ],
                      "id": 46768,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "11062:7:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 46774,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11062:95:75",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46775,
                  "nodeType": "ExpressionStatement",
                  "src": "11062:95:75"
                },
                {
                  "expression": {
                    "id": 46796,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 46776,
                          "name": "deposits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65614,
                          "src": "11167:8:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 46783,
                        "indexExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 46779,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "11184:1:75",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 46778,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "11176:7:75",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 46777,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "11176:7:75",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 46780,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "11176:10:75",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11167:20:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 46784,
                      "indexExpression": {
                        "expression": {
                          "id": 46781,
                          "name": "Predeploys",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60881,
                          "src": "11188:10:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Predeploys_$60881_$",
                            "typeString": "type(library Predeploys)"
                          }
                        },
                        "id": 46782,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "ETH",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 60880,
                        "src": "11188:14:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "11167:36:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 46795,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 46785,
                            "name": "deposits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 65614,
                            "src": "11206:8:75",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                              "typeString": "mapping(address => mapping(address => uint256))"
                            }
                          },
                          "id": 46790,
                          "indexExpression": {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 46788,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11223:1:75",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 46787,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11215:7:75",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 46786,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11215:7:75",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 46789,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11215:10:75",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "11206:20:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 46793,
                        "indexExpression": {
                          "expression": {
                            "id": 46791,
                            "name": "Predeploys",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60881,
                            "src": "11227:10:75",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Predeploys_$60881_$",
                              "typeString": "type(library Predeploys)"
                            }
                          },
                          "id": 46792,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "ETH",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 60880,
                          "src": "11227:14:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "11206:36:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 46794,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46760,
                        "src": "11245:7:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "11206:46:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "11167:85:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 46797,
                  "nodeType": "ExpressionStatement",
                  "src": "11167:85:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46799,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46756,
                        "src": "11286:5:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 46800,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46758,
                        "src": "11293:3:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 46801,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46760,
                        "src": "11298:7:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 46802,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46764,
                        "src": "11307:10:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 46798,
                      "name": "_emitETHBridgeInitiated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 66238,
                      "src": "11262:23:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 46803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11262:56:75",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46804,
                  "nodeType": "ExpressionStatement",
                  "src": "11262:56:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 46810,
                            "name": "OTHER_BRIDGE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 65601,
                            "src": "11372:12:75",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StandardBridge_$66311",
                              "typeString": "contract StandardBridge"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StandardBridge_$66311",
                              "typeString": "contract StandardBridge"
                            }
                          ],
                          "id": 46809,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "11364:7:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 46808,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "11364:7:75",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 46811,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11364:21:75",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 46814,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "11439:4:75",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_L1StandardBridge_$47422",
                                  "typeString": "contract L1StandardBridge"
                                }
                              },
                              "id": 46815,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "finalizeBridgeERC20",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 47421,
                              "src": "11439:24:75",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                                "typeString": "function (address,address,address,address,uint256,bytes memory) external"
                              }
                            },
                            "id": 46816,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "11439:33:75",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "expression": {
                              "id": 46817,
                              "name": "Predeploys",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 60881,
                              "src": "11725:10:75",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_contract$_Predeploys_$60881_$",
                                "typeString": "type(library Predeploys)"
                              }
                            },
                            "id": 46818,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "ETH",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 60880,
                            "src": "11725:14:75",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "arguments": [
                              {
                                "hexValue": "30",
                                "id": 46821,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "11765:1:75",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                },
                                "value": "0"
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_rational_0_by_1",
                                  "typeString": "int_const 0"
                                }
                              ],
                              "id": 46820,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "11757:7:75",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 46819,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "11757:7:75",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 46822,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "11757:10:75",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 46823,
                            "name": "_from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46756,
                            "src": "11785:5:75",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 46824,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46758,
                            "src": "11808:3:75",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 46825,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46760,
                            "src": "11829:7:75",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 46826,
                            "name": "_extraData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46764,
                            "src": "11854:10:75",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 46812,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "11399:3:75",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 46813,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "11399:22:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 46827,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "11399:479:75",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 46828,
                        "name": "_minGasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46762,
                        "src": "11892:12:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "expression": {
                        "id": 46805,
                        "name": "messenger",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65618,
                        "src": "11329:9:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_CrossDomainMessenger_$63488",
                          "typeString": "contract CrossDomainMessenger"
                        }
                      },
                      "id": 46807,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sendMessage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 63170,
                      "src": "11329:21:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_payable$_t_address_$_t_bytes_memory_ptr_$_t_uint32_$returns$__$",
                        "typeString": "function (address,bytes memory,uint32) payable external"
                      }
                    },
                    "id": 46829,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "11329:585:75",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46830,
                  "nodeType": "ExpressionStatement",
                  "src": "11329:585:75"
                }
              ]
            },
            "baseFunctions": [
              66055
            ],
            "documentation": {
              "id": 46754,
              "nodeType": "StructuredDocumentation",
              "src": "10249:595:75",
              "text": "@notice Initiates a bridge of ETH through the CrossDomainMessenger. Receive ETH on L2\n @param _from        Address of the sender.\n @param _to          Address of the receiver.\n @param _amount      Amount of ETH being bridged.\n @param _minGasLimit Minimum amount of gas that the bridge can be relayed with.\n @param _extraData   Extra data to be sent with the transaction. Note that the recipient will\n                     not be triggered with this data, but it will be emitted and can be used\n                     to identify the transaction."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_initiateBridgeETH",
            "nameLocation": "10858:18:75",
            "overrides": {
              "id": 46766,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "11039:8:75"
            },
            "parameters": {
              "id": 46765,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46756,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "10894:5:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46832,
                  "src": "10886:13:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46755,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10886:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46758,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "10917:3:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46832,
                  "src": "10909:11:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46757,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10909:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46760,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "10938:7:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46832,
                  "src": "10930:15:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46759,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10930:7:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46762,
                  "mutability": "mutable",
                  "name": "_minGasLimit",
                  "nameLocation": "10962:12:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46832,
                  "src": "10955:19:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 46761,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10955:6:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46764,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "10997:10:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46832,
                  "src": "10984:23:75",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 46763,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "10984:5:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10876:137:75"
            },
            "returnParameters": {
              "id": 46767,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "11052:0:75"
            },
            "scope": 47422,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 46861,
            "nodeType": "FunctionDefinition",
            "src": "12566:339:75",
            "nodes": [],
            "body": {
              "id": 46860,
              "nodeType": "Block",
              "src": "12788:117:75",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46849,
                        "name": "_l1Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46835,
                        "src": "12820:8:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 46850,
                        "name": "_l2Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46837,
                        "src": "12830:8:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 46851,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "12840:3:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 46852,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "12840:10:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 46853,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "12852:3:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 46854,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "12852:10:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 46855,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46839,
                        "src": "12864:7:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 46856,
                        "name": "_minGasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46841,
                        "src": "12873:12:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 46857,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46843,
                        "src": "12887:10:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 46848,
                      "name": "_initiateERC20Deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46998,
                      "src": "12798:21:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,address,uint256,uint32,bytes memory)"
                      }
                    },
                    "id": 46858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12798:100:75",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46859,
                  "nodeType": "ExpressionStatement",
                  "src": "12798:100:75"
                }
              ]
            },
            "documentation": {
              "id": 46833,
              "nodeType": "StructuredDocumentation",
              "src": "11927:634:75",
              "text": "@custom:legacy\n @notice Deposits some amount of ERC20 tokens into the sender's account on L2.\n @param _l1Token     Address of the L1 token being deposited.\n @param _l2Token     Address of the corresponding token on L2.\n @param _amount      Amount of the ERC20 to deposit.\n @param _minGasLimit Minimum gas limit for the deposit message on L2.\n @param _extraData   Optional data to forward to L2.\n                     Data supplied here will not be used to execute any code on L2 and is\n                     only emitted as extra data for the convenience of off-chain tooling."
            },
            "functionSelector": "58a997f6",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 46846,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 46845,
                  "name": "onlyEOA",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 65690,
                  "src": "12776:7:75"
                },
                "nodeType": "ModifierInvocation",
                "src": "12776:7:75"
              }
            ],
            "name": "depositERC20",
            "nameLocation": "12575:12:75",
            "parameters": {
              "id": 46844,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46835,
                  "mutability": "mutable",
                  "name": "_l1Token",
                  "nameLocation": "12605:8:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46861,
                  "src": "12597:16:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46834,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12597:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46837,
                  "mutability": "mutable",
                  "name": "_l2Token",
                  "nameLocation": "12631:8:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46861,
                  "src": "12623:16:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46836,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12623:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46839,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "12657:7:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46861,
                  "src": "12649:15:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46838,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12649:7:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46841,
                  "mutability": "mutable",
                  "name": "_minGasLimit",
                  "nameLocation": "12681:12:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46861,
                  "src": "12674:19:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 46840,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "12674:6:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46843,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "12718:10:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46861,
                  "src": "12703:25:75",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 46842,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12703:5:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12587:147:75"
            },
            "returnParameters": {
              "id": 46847,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "12788:0:75"
            },
            "scope": 47422,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 46889,
            "nodeType": "FunctionDefinition",
            "src": "13606:339:75",
            "nodes": [],
            "body": {
              "id": 46888,
              "nodeType": "Block",
              "src": "13835:110:75",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46878,
                        "name": "_l1Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46864,
                        "src": "13867:8:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 46879,
                        "name": "_l2Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46866,
                        "src": "13877:8:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 46880,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "13887:3:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 46881,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "13887:10:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 46882,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46868,
                        "src": "13899:3:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 46883,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46870,
                        "src": "13904:7:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 46884,
                        "name": "_minGasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46872,
                        "src": "13913:12:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 46885,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46874,
                        "src": "13927:10:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 46877,
                      "name": "_initiateERC20Deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46998,
                      "src": "13845:21:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,address,uint256,uint32,bytes memory)"
                      }
                    },
                    "id": 46886,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13845:93:75",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46887,
                  "nodeType": "ExpressionStatement",
                  "src": "13845:93:75"
                }
              ]
            },
            "documentation": {
              "id": 46862,
              "nodeType": "StructuredDocumentation",
              "src": "12911:690:75",
              "text": "@custom:legacy\n @notice Deposits some amount of ERC20 tokens into a target account on L2.\n @param _l1Token     Address of the L1 token being deposited.\n @param _l2Token     Address of the corresponding token on L2.\n @param _to          Address of the recipient on L2.\n @param _amount      Amount of the ERC20 to deposit.\n @param _minGasLimit Minimum gas limit for the deposit message on L2.\n @param _extraData   Optional data to forward to L2.\n                     Data supplied here will not be used to execute any code on L2 and is\n                     only emitted as extra data for the convenience of off-chain tooling."
            },
            "functionSelector": "838b2520",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "depositERC20To",
            "nameLocation": "13615:14:75",
            "parameters": {
              "id": 46875,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46864,
                  "mutability": "mutable",
                  "name": "_l1Token",
                  "nameLocation": "13647:8:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46889,
                  "src": "13639:16:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46863,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13639:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46866,
                  "mutability": "mutable",
                  "name": "_l2Token",
                  "nameLocation": "13673:8:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46889,
                  "src": "13665:16:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46865,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13665:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46868,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "13699:3:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46889,
                  "src": "13691:11:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46867,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13691:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46870,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "13720:7:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46889,
                  "src": "13712:15:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46869,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "13712:7:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46872,
                  "mutability": "mutable",
                  "name": "_minGasLimit",
                  "nameLocation": "13744:12:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46889,
                  "src": "13737:19:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 46871,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "13737:6:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46874,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "13781:10:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46889,
                  "src": "13766:25:75",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 46873,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "13766:5:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13629:168:75"
            },
            "returnParameters": {
              "id": 46876,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "13835:0:75"
            },
            "scope": 47422,
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "id": 46909,
            "nodeType": "FunctionDefinition",
            "src": "14292:245:75",
            "nodes": [],
            "body": {
              "id": 46908,
              "nodeType": "Block",
              "src": "14470:67:75",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46902,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46892,
                        "src": "14498:5:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 46903,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46894,
                        "src": "14505:3:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 46904,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46896,
                        "src": "14510:7:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 46905,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46898,
                        "src": "14519:10:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 46901,
                      "name": "finalizeBridgeETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        47308
                      ],
                      "referencedDeclaration": 47308,
                      "src": "14480:17:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes calldata)"
                      }
                    },
                    "id": 46906,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14480:50:75",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46907,
                  "nodeType": "ExpressionStatement",
                  "src": "14480:50:75"
                }
              ]
            },
            "documentation": {
              "id": 46890,
              "nodeType": "StructuredDocumentation",
              "src": "13951:336:75",
              "text": "@custom:legacy\n @notice Finalizes a withdrawal of ETH from L2 => receive L2's native token in L1\n @param _from      Address of the withdrawer on L2.\n @param _to        Address of the recipient on L1.\n @param _amount    Amount of ETH to withdraw.\n @param _extraData Optional data forwarded from L2."
            },
            "functionSelector": "1532ec34",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "finalizeETHWithdrawal",
            "nameLocation": "14301:21:75",
            "parameters": {
              "id": 46899,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46892,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "14340:5:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46909,
                  "src": "14332:13:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46891,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14332:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46894,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "14363:3:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46909,
                  "src": "14355:11:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46893,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14355:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46896,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "14384:7:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46909,
                  "src": "14376:15:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46895,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14376:7:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46898,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "14416:10:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46909,
                  "src": "14401:25:75",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 46897,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "14401:5:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "14322:110:75"
            },
            "returnParameters": {
              "id": 46900,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14470:0:75"
            },
            "scope": 47422,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 46935,
            "nodeType": "FunctionDefinition",
            "src": "15028:321:75",
            "nodes": [],
            "body": {
              "id": 46934,
              "nodeType": "Block",
              "src": "15244:105:75",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46926,
                        "name": "_l1Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46912,
                        "src": "15290:8:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 46927,
                        "name": "_l2Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46914,
                        "src": "15300:8:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 46928,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46916,
                        "src": "15310:5:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 46929,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46918,
                        "src": "15317:3:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 46930,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46920,
                        "src": "15322:7:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 46931,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46922,
                        "src": "15331:10:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 46925,
                      "name": "finalizeBridgeERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        47421
                      ],
                      "referencedDeclaration": 47421,
                      "src": "15270:19:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$__$",
                        "typeString": "function (address,address,address,address,uint256,bytes calldata)"
                      }
                    },
                    "id": 46932,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15270:72:75",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46933,
                  "nodeType": "ExpressionStatement",
                  "src": "15270:72:75"
                }
              ]
            },
            "documentation": {
              "id": 46910,
              "nodeType": "StructuredDocumentation",
              "src": "14543:480:75",
              "text": "@custom:legacy\n @notice Finalizes a withdrawal of ERC20 tokens from L2.\n @param _l1Token   Address of the token on L1. L1 must be different than l1TokenAddress\n @param _l2Token   Address of the corresponding token on L2.\n @param _from      Address of the withdrawer on L2.\n @param _to        Address of the recipient on L1.\n @param _amount    Amount of the ERC20 to withdraw.\n @param _extraData Optional data forwarded from L2."
            },
            "functionSelector": "a9f9e675",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "finalizeERC20Withdrawal",
            "nameLocation": "15037:23:75",
            "parameters": {
              "id": 46923,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46912,
                  "mutability": "mutable",
                  "name": "_l1Token",
                  "nameLocation": "15078:8:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46935,
                  "src": "15070:16:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46911,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15070:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46914,
                  "mutability": "mutable",
                  "name": "_l2Token",
                  "nameLocation": "15104:8:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46935,
                  "src": "15096:16:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46913,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15096:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46916,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "15130:5:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46935,
                  "src": "15122:13:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46915,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15122:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46918,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "15153:3:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46935,
                  "src": "15145:11:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46917,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15145:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46920,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "15174:7:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46935,
                  "src": "15166:15:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46919,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "15166:7:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46922,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "15206:10:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46935,
                  "src": "15191:25:75",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 46921,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "15191:5:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15060:162:75"
            },
            "returnParameters": {
              "id": 46924,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15244:0:75"
            },
            "scope": 47422,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 46947,
            "nodeType": "FunctionDefinition",
            "src": "15521:102:75",
            "nodes": [],
            "body": {
              "id": 46946,
              "nodeType": "Block",
              "src": "15578:45:75",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46943,
                        "name": "OTHER_BRIDGE",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 65601,
                        "src": "15603:12:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_StandardBridge_$66311",
                          "typeString": "contract StandardBridge"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_StandardBridge_$66311",
                          "typeString": "contract StandardBridge"
                        }
                      ],
                      "id": 46942,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "15595:7:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_address_$",
                        "typeString": "type(address)"
                      },
                      "typeName": {
                        "id": 46941,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "15595:7:75",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 46944,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "15595:21:75",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "functionReturnParameters": 46940,
                  "id": 46945,
                  "nodeType": "Return",
                  "src": "15588:28:75"
                }
              ]
            },
            "documentation": {
              "id": 46936,
              "nodeType": "StructuredDocumentation",
              "src": "15355:161:75",
              "text": "@custom:legacy\n @notice Retrieves the access of the corresponding L2 bridge contract.\n @return Address of the corresponding L2 bridge contract."
            },
            "functionSelector": "91c49bf8",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "l2TokenBridge",
            "nameLocation": "15530:13:75",
            "parameters": {
              "id": 46937,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "15543:2:75"
            },
            "returnParameters": {
              "id": 46940,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46939,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 46947,
                  "src": "15569:7:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46938,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15569:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15568:9:75"
            },
            "scope": 47422,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 46969,
            "nodeType": "FunctionDefinition",
            "src": "15948:196:75",
            "nodes": [],
            "body": {
              "id": 46968,
              "nodeType": "Block",
              "src": "16060:84:75",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46960,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46950,
                        "src": "16089:5:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 46961,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46952,
                        "src": "16096:3:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 46962,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "16101:3:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 46963,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "value",
                        "nodeType": "MemberAccess",
                        "src": "16101:9:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 46964,
                        "name": "_minGasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46954,
                        "src": "16112:12:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 46965,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46956,
                        "src": "16126:10:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 46959,
                      "name": "_initiateBridgeETH",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        46832
                      ],
                      "referencedDeclaration": 46832,
                      "src": "16070:18:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,uint32,bytes memory)"
                      }
                    },
                    "id": 46966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16070:67:75",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46967,
                  "nodeType": "ExpressionStatement",
                  "src": "16070:67:75"
                }
              ]
            },
            "documentation": {
              "id": 46948,
              "nodeType": "StructuredDocumentation",
              "src": "15629:314:75",
              "text": "@notice Internal function for initiating an ETH deposit.\n @param _from        Address of the sender on L1.\n @param _to          Address of the recipient on L2.\n @param _minGasLimit Minimum gas limit for the deposit message on L2.\n @param _extraData   Optional data to forward to L2."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_initiateETHDeposit",
            "nameLocation": "15957:19:75",
            "parameters": {
              "id": 46957,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46950,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "15985:5:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46969,
                  "src": "15977:13:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46949,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15977:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46952,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "16000:3:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46969,
                  "src": "15992:11:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46951,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "15992:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46954,
                  "mutability": "mutable",
                  "name": "_minGasLimit",
                  "nameLocation": "16012:12:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46969,
                  "src": "16005:19:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 46953,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "16005:6:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46956,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "16039:10:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46969,
                  "src": "16026:23:75",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 46955,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "16026:5:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "15976:74:75"
            },
            "returnParameters": {
              "id": 46958,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16060:0:75"
            },
            "scope": 47422,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 46998,
            "nodeType": "FunctionDefinition",
            "src": "16670:345:75",
            "nodes": [],
            "body": {
              "id": 46997,
              "nodeType": "Block",
              "src": "16911:104:75",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 46988,
                        "name": "_l1Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46972,
                        "src": "16942:8:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 46989,
                        "name": "_l2Token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46974,
                        "src": "16952:8:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 46990,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46976,
                        "src": "16962:5:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 46991,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46978,
                        "src": "16969:3:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 46992,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46980,
                        "src": "16974:7:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 46993,
                        "name": "_minGasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46982,
                        "src": "16983:12:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      },
                      {
                        "id": 46994,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46984,
                        "src": "16997:10:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 46987,
                      "name": "_initiateBridgeERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        47044
                      ],
                      "referencedDeclaration": 47044,
                      "src": "16921:20:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint32_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,address,uint256,uint32,bytes memory)"
                      }
                    },
                    "id": 46995,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "16921:87:75",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 46996,
                  "nodeType": "ExpressionStatement",
                  "src": "16921:87:75"
                }
              ]
            },
            "documentation": {
              "id": 46970,
              "nodeType": "StructuredDocumentation",
              "src": "16150:515:75",
              "text": "@notice Internal function for initiating an ERC20 deposit.\n @param _l1Token     Address of the L1 token being deposited.\n @param _l2Token     Address of the corresponding token on L2.\n @param _from        Address of the sender on L1.\n @param _to          Address of the recipient on L2.\n @param _amount      Amount of the ERC20 to deposit.\n @param _minGasLimit Minimum gas limit for the deposit message on L2.\n @param _extraData   Optional data to forward to L2."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_initiateERC20Deposit",
            "nameLocation": "16679:21:75",
            "parameters": {
              "id": 46985,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 46972,
                  "mutability": "mutable",
                  "name": "_l1Token",
                  "nameLocation": "16718:8:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46998,
                  "src": "16710:16:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46971,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16710:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46974,
                  "mutability": "mutable",
                  "name": "_l2Token",
                  "nameLocation": "16744:8:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46998,
                  "src": "16736:16:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46973,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16736:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46976,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "16770:5:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46998,
                  "src": "16762:13:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46975,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16762:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46978,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "16793:3:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46998,
                  "src": "16785:11:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 46977,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "16785:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46980,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "16814:7:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46998,
                  "src": "16806:15:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 46979,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "16806:7:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46982,
                  "mutability": "mutable",
                  "name": "_minGasLimit",
                  "nameLocation": "16838:12:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46998,
                  "src": "16831:19:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 46981,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "16831:6:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 46984,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "16873:10:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 46998,
                  "src": "16860:23:75",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 46983,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "16860:5:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "16700:189:75"
            },
            "returnParameters": {
              "id": 46986,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "16911:0:75"
            },
            "scope": 47422,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 47044,
            "nodeType": "FunctionDefinition",
            "src": "17709:548:75",
            "nodes": [],
            "body": {
              "id": 47043,
              "nodeType": "Block",
              "src": "17973:284:75",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    },
                    "id": 47019,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 47017,
                      "name": "nativeTokenAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46454,
                      "src": "17987:18:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 47018,
                      "name": "_localToken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 47001,
                      "src": "18009:11:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "17987:33:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 47041,
                    "nodeType": "Block",
                    "src": "18126:125:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 47032,
                              "name": "_localToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47001,
                              "src": "18167:11:75",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 47033,
                              "name": "_remoteToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47003,
                              "src": "18180:12:75",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 47034,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47005,
                              "src": "18194:5:75",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 47035,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47007,
                              "src": "18201:3:75",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 47036,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47009,
                              "src": "18206:7:75",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 47037,
                              "name": "_minGasLimit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47011,
                              "src": "18215:12:75",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            {
                              "id": 47038,
                              "name": "_extraData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47013,
                              "src": "18229:10:75",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "expression": {
                              "id": 47029,
                              "name": "super",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -25,
                              "src": "18140:5:75",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_super$_L1StandardBridge_$47422_$",
                                "typeString": "type(contract super L1StandardBridge)"
                              }
                            },
                            "id": 47031,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "_initiateBridgeERC20",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 66153,
                            "src": "18140:26:75",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_uint32_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (address,address,address,address,uint256,uint32,bytes memory)"
                            }
                          },
                          "id": 47039,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18140:100:75",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 47040,
                        "nodeType": "ExpressionStatement",
                        "src": "18140:100:75"
                      }
                    ]
                  },
                  "id": 47042,
                  "nodeType": "IfStatement",
                  "src": "17983:268:75",
                  "trueBody": {
                    "id": 47028,
                    "nodeType": "Block",
                    "src": "18022:98:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 47021,
                              "name": "_from",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47005,
                              "src": "18063:5:75",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 47022,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47007,
                              "src": "18070:3:75",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 47023,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47009,
                              "src": "18075:7:75",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 47024,
                              "name": "_minGasLimit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47011,
                              "src": "18084:12:75",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            {
                              "id": 47025,
                              "name": "_extraData",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47013,
                              "src": "18098:10:75",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 47020,
                            "name": "_initiateBridgeNativeToken",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47133,
                            "src": "18036:26:75",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_uint32_$_t_bytes_memory_ptr_$returns$__$",
                              "typeString": "function (address,address,uint256,uint32,bytes memory)"
                            }
                          },
                          "id": 47026,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "18036:73:75",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 47027,
                        "nodeType": "ExpressionStatement",
                        "src": "18036:73:75"
                      }
                    ]
                  }
                }
              ]
            },
            "baseFunctions": [
              66153
            ],
            "documentation": {
              "id": 46999,
              "nodeType": "StructuredDocumentation",
              "src": "17021:683:75",
              "text": "@notice Sends ERC20 tokens to a receiver's address on the other chain.\n @param _localToken  Address of the ERC20 on this chain.\n @param _remoteToken Address of the corresponding token on the remote chain.\n @param _to          Address of the receiver.\n @param _amount      Amount of local tokens to deposit.\n @param _minGasLimit Minimum amount of gas that the bridge can be relayed with.\n @param _extraData   Extra data to be sent with the transaction. Note that the recipient will\n                     not be triggered with this data, but it will be emitted and can be used\n                     to identify the transaction."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_initiateBridgeERC20",
            "nameLocation": "17718:20:75",
            "overrides": {
              "id": 47015,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "17960:8:75"
            },
            "parameters": {
              "id": 47014,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47001,
                  "mutability": "mutable",
                  "name": "_localToken",
                  "nameLocation": "17756:11:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 47044,
                  "src": "17748:19:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47000,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17748:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47003,
                  "mutability": "mutable",
                  "name": "_remoteToken",
                  "nameLocation": "17785:12:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 47044,
                  "src": "17777:20:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47002,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17777:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47005,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "17815:5:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 47044,
                  "src": "17807:13:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47004,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17807:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47007,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "17838:3:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 47044,
                  "src": "17830:11:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47006,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17830:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47009,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "17859:7:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 47044,
                  "src": "17851:15:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47008,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "17851:7:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47011,
                  "mutability": "mutable",
                  "name": "_minGasLimit",
                  "nameLocation": "17883:12:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 47044,
                  "src": "17876:19:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 47010,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "17876:6:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47013,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "17918:10:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 47044,
                  "src": "17905:23:75",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 47012,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "17905:5:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17738:196:75"
            },
            "returnParameters": {
              "id": 47016,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "17973:0:75"
            },
            "scope": 47422,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 47133,
            "nodeType": "FunctionDefinition",
            "src": "18804:895:75",
            "nodes": [],
            "body": {
              "id": 47132,
              "nodeType": "Block",
              "src": "18998:701:75",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 47062,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47047,
                        "src": "19052:5:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 47065,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "19067:4:75",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_L1StandardBridge_$47422",
                              "typeString": "contract L1StandardBridge"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_L1StandardBridge_$47422",
                              "typeString": "contract L1StandardBridge"
                            }
                          ],
                          "id": 47064,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "19059:7:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 47063,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "19059:7:75",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 47066,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19059:13:75",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 47067,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47051,
                        "src": "19074:7:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 47059,
                            "name": "nativeTokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46454,
                            "src": "19015:18:75",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 47058,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31286,
                          "src": "19008:6:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$31286_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 47060,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19008:26:75",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$31286",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 47061,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31405,
                      "src": "19008:43:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$31286_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$31286_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 47068,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19008:74:75",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47069,
                  "nodeType": "ExpressionStatement",
                  "src": "19008:74:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 47076,
                            "name": "messenger",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 65618,
                            "src": "19135:9:75",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CrossDomainMessenger_$63488",
                              "typeString": "contract CrossDomainMessenger"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CrossDomainMessenger_$63488",
                              "typeString": "contract CrossDomainMessenger"
                            }
                          ],
                          "id": 47075,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "19127:7:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 47074,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "19127:7:75",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 47077,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19127:18:75",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 47078,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47051,
                        "src": "19147:7:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 47071,
                            "name": "nativeTokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46454,
                            "src": "19099:18:75",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 47070,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31286,
                          "src": "19092:6:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$31286_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 47072,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19092:26:75",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$31286",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 47073,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "approve",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31273,
                      "src": "19092:34:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,uint256) external returns (bool)"
                      }
                    },
                    "id": 47079,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19092:63:75",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 47080,
                  "nodeType": "ExpressionStatement",
                  "src": "19092:63:75"
                },
                {
                  "expression": {
                    "id": 47095,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 47081,
                          "name": "deposits",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 65614,
                          "src": "19165:8:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(address => uint256))"
                          }
                        },
                        "id": 47085,
                        "indexExpression": {
                          "id": 47082,
                          "name": "nativeTokenAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46454,
                          "src": "19174:18:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "19165:28:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                          "typeString": "mapping(address => uint256)"
                        }
                      },
                      "id": 47086,
                      "indexExpression": {
                        "expression": {
                          "id": 47083,
                          "name": "Predeploys",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60881,
                          "src": "19194:10:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Predeploys_$60881_$",
                            "typeString": "type(library Predeploys)"
                          }
                        },
                        "id": 47084,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "LEGACY_ERC20_ETH",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 60844,
                        "src": "19194:27:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "19165:57:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 47094,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "baseExpression": {
                          "baseExpression": {
                            "id": 47087,
                            "name": "deposits",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 65614,
                            "src": "19237:8:75",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                              "typeString": "mapping(address => mapping(address => uint256))"
                            }
                          },
                          "id": 47089,
                          "indexExpression": {
                            "id": 47088,
                            "name": "nativeTokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46454,
                            "src": "19246:18:75",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "19237:28:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 47092,
                        "indexExpression": {
                          "expression": {
                            "id": 47090,
                            "name": "Predeploys",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 60881,
                            "src": "19266:10:75",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_contract$_Predeploys_$60881_$",
                              "typeString": "type(library Predeploys)"
                            }
                          },
                          "id": 47091,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "LEGACY_ERC20_ETH",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 60844,
                          "src": "19266:27:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "19237:57:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "+",
                      "rightExpression": {
                        "id": 47093,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47051,
                        "src": "19297:7:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "src": "19237:67:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "19165:139:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 47096,
                  "nodeType": "ExpressionStatement",
                  "src": "19165:139:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 47098,
                        "name": "nativeTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46454,
                        "src": "19341:18:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 47099,
                          "name": "Predeploys",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60881,
                          "src": "19361:10:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Predeploys_$60881_$",
                            "typeString": "type(library Predeploys)"
                          }
                        },
                        "id": 47100,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "LEGACY_ERC20_ETH",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 60844,
                        "src": "19361:27:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 47101,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47047,
                        "src": "19390:5:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 47102,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47049,
                        "src": "19397:3:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 47103,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47051,
                        "src": "19402:7:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 47104,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47055,
                        "src": "19411:10:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 47097,
                      "name": "_emitERC20BridgeInitiated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        47201
                      ],
                      "referencedDeclaration": 47201,
                      "src": "19315:25:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 47105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19315:107:75",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47106,
                  "nodeType": "ExpressionStatement",
                  "src": "19315:107:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 47116,
                            "name": "OTHER_BRIDGE",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 65601,
                            "src": "19520:12:75",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_StandardBridge_$66311",
                              "typeString": "contract StandardBridge"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_StandardBridge_$66311",
                              "typeString": "contract StandardBridge"
                            }
                          ],
                          "id": 47115,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "19512:7:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 47114,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "19512:7:75",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 47117,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19512:21:75",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 47118,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47051,
                        "src": "19547:7:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "expression": {
                              "expression": {
                                "id": 47121,
                                "name": "this",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -28,
                                "src": "19591:4:75",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_L1StandardBridge_$47422",
                                  "typeString": "contract L1StandardBridge"
                                }
                              },
                              "id": 47122,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "finalizeBridgeETH",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 47308,
                              "src": "19591:22:75",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_external_payable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                                "typeString": "function (address,address,uint256,bytes memory) payable external"
                              }
                            },
                            "id": 47123,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "selector",
                            "nodeType": "MemberAccess",
                            "src": "19591:31:75",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            }
                          },
                          {
                            "id": 47124,
                            "name": "_from",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47047,
                            "src": "19624:5:75",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 47125,
                            "name": "_to",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47049,
                            "src": "19631:3:75",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 47126,
                            "name": "_amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47051,
                            "src": "19636:7:75",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 47127,
                            "name": "_extraData",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 47055,
                            "src": "19645:10:75",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes4",
                              "typeString": "bytes4"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "expression": {
                            "id": 47119,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "19568:3:75",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 47120,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encodeWithSelector",
                          "nodeType": "MemberAccess",
                          "src": "19568:22:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencodewithselector_pure$_t_bytes4_$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function (bytes4) pure returns (bytes memory)"
                          }
                        },
                        "id": 47128,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19568:88:75",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      },
                      {
                        "id": 47129,
                        "name": "_minGasLimit",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47053,
                        "src": "19670:12:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        },
                        {
                          "typeIdentifier": "t_uint32",
                          "typeString": "uint32"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "id": 47110,
                                "name": "messenger",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 65618,
                                "src": "19464:9:75",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_contract$_CrossDomainMessenger_$63488",
                                  "typeString": "contract CrossDomainMessenger"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_contract$_CrossDomainMessenger_$63488",
                                  "typeString": "contract CrossDomainMessenger"
                                }
                              ],
                              "id": 47109,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "nodeType": "ElementaryTypeNameExpression",
                              "src": "19456:7:75",
                              "typeDescriptions": {
                                "typeIdentifier": "t_type$_t_address_$",
                                "typeString": "type(address)"
                              },
                              "typeName": {
                                "id": 47108,
                                "name": "address",
                                "nodeType": "ElementaryTypeName",
                                "src": "19456:7:75",
                                "typeDescriptions": {}
                              }
                            },
                            "id": 47111,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "typeConversion",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "19456:18:75",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 47107,
                          "name": "L1CrossDomainMessenger",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 46073,
                          "src": "19433:22:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_L1CrossDomainMessenger_$46073_$",
                            "typeString": "type(contract L1CrossDomainMessenger)"
                          }
                        },
                        "id": 47112,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "19433:42:75",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_L1CrossDomainMessenger_$46073",
                          "typeString": "contract L1CrossDomainMessenger"
                        }
                      },
                      "id": 47113,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "sendNativeTokenMessage",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 45811,
                      "src": "19433:65:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$_t_uint32_$returns$__$",
                        "typeString": "function (address,uint256,bytes memory,uint32) external"
                      }
                    },
                    "id": 47130,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19433:259:75",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47131,
                  "nodeType": "ExpressionStatement",
                  "src": "19433:259:75"
                }
              ]
            },
            "documentation": {
              "id": 47045,
              "nodeType": "StructuredDocumentation",
              "src": "18263:536:75",
              "text": "@notice Sends native tokens to a receiver's address on the other chain.\n @param _to          Address of the receiver.\n @param _amount      Amount of local tokens to deposit.\n @param _minGasLimit Minimum amount of gas that the bridge can be relayed with.\n @param _extraData   Extra data to be sent with the transaction. Note that the recipient will\n                     not be triggered with this data, but it will be emitted and can be used\n                     to identify the transaction."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_initiateBridgeNativeToken",
            "nameLocation": "18813:26:75",
            "parameters": {
              "id": 47056,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47047,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "18857:5:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 47133,
                  "src": "18849:13:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47046,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18849:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47049,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "18880:3:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 47133,
                  "src": "18872:11:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47048,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "18872:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47051,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "18901:7:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 47133,
                  "src": "18893:15:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47050,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "18893:7:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47053,
                  "mutability": "mutable",
                  "name": "_minGasLimit",
                  "nameLocation": "18925:12:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 47133,
                  "src": "18918:19:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint32",
                    "typeString": "uint32"
                  },
                  "typeName": {
                    "id": 47052,
                    "name": "uint32",
                    "nodeType": "ElementaryTypeName",
                    "src": "18918:6:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint32",
                      "typeString": "uint32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47055,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "18960:10:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 47133,
                  "src": "18947:23:75",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 47054,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "18947:5:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "18839:137:75"
            },
            "returnParameters": {
              "id": 47057,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "18998:0:75"
            },
            "scope": 47422,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 47163,
            "nodeType": "FunctionDefinition",
            "src": "20529:328:75",
            "nodes": [],
            "body": {
              "id": 47162,
              "nodeType": "Block",
              "src": "20708:149:75",
              "nodes": [],
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 47147,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47136,
                        "src": "20746:5:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 47148,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47138,
                        "src": "20753:3:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 47149,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47140,
                        "src": "20758:7:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 47150,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47142,
                        "src": "20767:10:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 47146,
                      "name": "ETHWithdrawalFinalized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46476,
                      "src": "20723:22:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 47151,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20723:55:75",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47152,
                  "nodeType": "EmitStatement",
                  "src": "20718:60:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 47156,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47136,
                        "src": "20818:5:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 47157,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47138,
                        "src": "20825:3:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 47158,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47140,
                        "src": "20830:7:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 47159,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47142,
                        "src": "20839:10:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 47153,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "20788:5:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_L1StandardBridge_$47422_$",
                          "typeString": "type(contract super L1StandardBridge)"
                        }
                      },
                      "id": 47155,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_emitETHBridgeFinalized",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 66258,
                      "src": "20788:29:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 47160,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20788:62:75",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47161,
                  "nodeType": "ExpressionStatement",
                  "src": "20788:62:75"
                }
              ]
            },
            "baseFunctions": [
              66258
            ],
            "documentation": {
              "id": 47134,
              "nodeType": "StructuredDocumentation",
              "src": "20303:221:75",
              "text": "@inheritdoc StandardBridge\n @notice Emits the legacy ERC20DepositInitiated event followed by the ERC20BridgeInitiated\n         event. This is necessary for backwards compatibility with the legacy bridge."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_emitETHBridgeFinalized",
            "nameLocation": "20538:23:75",
            "overrides": {
              "id": 47144,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "20695:8:75"
            },
            "parameters": {
              "id": 47143,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47136,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "20579:5:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 47163,
                  "src": "20571:13:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47135,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20571:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47138,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "20602:3:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 47163,
                  "src": "20594:11:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47137,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "20594:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47140,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "20623:7:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 47163,
                  "src": "20615:15:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47139,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "20615:7:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47142,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "20653:10:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 47163,
                  "src": "20640:23:75",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 47141,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "20640:5:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "20561:108:75"
            },
            "returnParameters": {
              "id": 47145,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "20708:0:75"
            },
            "scope": 47422,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 47201,
            "nodeType": "FunctionDefinition",
            "src": "21092:444:75",
            "nodes": [],
            "body": {
              "id": 47200,
              "nodeType": "Block",
              "src": "21332:204:75",
              "nodes": [],
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 47181,
                        "name": "_localToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47166,
                        "src": "21369:11:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 47182,
                        "name": "_remoteToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47168,
                        "src": "21382:12:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 47183,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47170,
                        "src": "21396:5:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 47184,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47172,
                        "src": "21403:3:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 47185,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47174,
                        "src": "21408:7:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 47186,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47176,
                        "src": "21417:10:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 47180,
                      "name": "ERC20DepositInitiated",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46491,
                      "src": "21347:21:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 47187,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21347:81:75",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47188,
                  "nodeType": "EmitStatement",
                  "src": "21342:86:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 47192,
                        "name": "_localToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47166,
                        "src": "21470:11:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 47193,
                        "name": "_remoteToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47168,
                        "src": "21483:12:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 47194,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47170,
                        "src": "21497:5:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 47195,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47172,
                        "src": "21504:3:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 47196,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47174,
                        "src": "21509:7:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 47197,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47176,
                        "src": "21518:10:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 47189,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "21438:5:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_L1StandardBridge_$47422_$",
                          "typeString": "type(contract super L1StandardBridge)"
                        }
                      },
                      "id": 47191,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_emitERC20BridgeInitiated",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 66284,
                      "src": "21438:31:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 47198,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21438:91:75",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47199,
                  "nodeType": "ExpressionStatement",
                  "src": "21438:91:75"
                }
              ]
            },
            "baseFunctions": [
              66284
            ],
            "documentation": {
              "id": 47164,
              "nodeType": "StructuredDocumentation",
              "src": "20863:224:75",
              "text": "@inheritdoc StandardBridge\n @notice Emits the legacy ERC20WithdrawalFinalized event followed by the ERC20BridgeFinalized\n         event. This is necessary for backwards compatibility with the legacy bridge."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_emitERC20BridgeInitiated",
            "nameLocation": "21101:25:75",
            "overrides": {
              "id": 47178,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "21319:8:75"
            },
            "parameters": {
              "id": 47177,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47166,
                  "mutability": "mutable",
                  "name": "_localToken",
                  "nameLocation": "21144:11:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 47201,
                  "src": "21136:19:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47165,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21136:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47168,
                  "mutability": "mutable",
                  "name": "_remoteToken",
                  "nameLocation": "21173:12:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 47201,
                  "src": "21165:20:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47167,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21165:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47170,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "21203:5:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 47201,
                  "src": "21195:13:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47169,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21195:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47172,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "21226:3:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 47201,
                  "src": "21218:11:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47171,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21218:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47174,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "21247:7:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 47201,
                  "src": "21239:15:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47173,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21239:7:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47176,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "21277:10:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 47201,
                  "src": "21264:23:75",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 47175,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "21264:5:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21126:167:75"
            },
            "returnParameters": {
              "id": 47179,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "21332:0:75"
            },
            "scope": 47422,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 47239,
            "nodeType": "FunctionDefinition",
            "src": "21771:447:75",
            "nodes": [],
            "body": {
              "id": 47238,
              "nodeType": "Block",
              "src": "22011:207:75",
              "nodes": [],
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 47219,
                        "name": "_localToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47204,
                        "src": "22051:11:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 47220,
                        "name": "_remoteToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47206,
                        "src": "22064:12:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 47221,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47208,
                        "src": "22078:5:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 47222,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47210,
                        "src": "22085:3:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 47223,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47212,
                        "src": "22090:7:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 47224,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47214,
                        "src": "22099:10:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 47218,
                      "name": "ERC20WithdrawalFinalized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 46506,
                      "src": "22026:24:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 47225,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22026:84:75",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47226,
                  "nodeType": "EmitStatement",
                  "src": "22021:89:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 47230,
                        "name": "_localToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47204,
                        "src": "22152:11:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 47231,
                        "name": "_remoteToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47206,
                        "src": "22165:12:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 47232,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47208,
                        "src": "22179:5:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 47233,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47210,
                        "src": "22186:3:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 47234,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47212,
                        "src": "22191:7:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 47235,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47214,
                        "src": "22200:10:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "expression": {
                        "id": 47227,
                        "name": "super",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -25,
                        "src": "22120:5:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_super$_L1StandardBridge_$47422_$",
                          "typeString": "type(contract super L1StandardBridge)"
                        }
                      },
                      "id": 47229,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "_emitERC20BridgeFinalized",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 66310,
                      "src": "22120:31:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 47236,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22120:91:75",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47237,
                  "nodeType": "ExpressionStatement",
                  "src": "22120:91:75"
                }
              ]
            },
            "baseFunctions": [
              66310
            ],
            "documentation": {
              "id": 47202,
              "nodeType": "StructuredDocumentation",
              "src": "21542:224:75",
              "text": "@inheritdoc StandardBridge\n @notice Emits the legacy ERC20WithdrawalFinalized event followed by the ERC20BridgeFinalized\n         event. This is necessary for backwards compatibility with the legacy bridge."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_emitERC20BridgeFinalized",
            "nameLocation": "21780:25:75",
            "overrides": {
              "id": 47216,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "21998:8:75"
            },
            "parameters": {
              "id": 47215,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47204,
                  "mutability": "mutable",
                  "name": "_localToken",
                  "nameLocation": "21823:11:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 47239,
                  "src": "21815:19:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47203,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21815:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47206,
                  "mutability": "mutable",
                  "name": "_remoteToken",
                  "nameLocation": "21852:12:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 47239,
                  "src": "21844:20:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47205,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21844:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47208,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "21882:5:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 47239,
                  "src": "21874:13:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47207,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21874:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47210,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "21905:3:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 47239,
                  "src": "21897:11:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47209,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "21897:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47212,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "21926:7:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 47239,
                  "src": "21918:15:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47211,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "21918:7:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47214,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "21956:10:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 47239,
                  "src": "21943:23:75",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 47213,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "21943:5:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "21805:167:75"
            },
            "returnParameters": {
              "id": 47217,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22011:0:75"
            },
            "scope": 47422,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 47308,
            "nodeType": "FunctionDefinition",
            "src": "22782:858:75",
            "nodes": [],
            "body": {
              "id": 47307,
              "nodeType": "Block",
              "src": "22995:645:75",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 47258,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 47255,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "23013:3:75",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 47256,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "value",
                          "nodeType": "MemberAccess",
                          "src": "23013:9:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 47257,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "23026:1:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "23013:14:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616e646172644272696467653a206d757374206e6f742072656365697665204574686572206576656e20696620746869732069732070617961626c65",
                        "id": 47259,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23029:64:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ed1f198cf7ca9580214ff1dd0bc62d6c3cad70eebba5cb3e84d2517dfc1c75ac",
                          "typeString": "literal_string \"StandardBridge: must not receive Ether even if this is payable\""
                        },
                        "value": "StandardBridge: must not receive Ether even if this is payable"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ed1f198cf7ca9580214ff1dd0bc62d6c3cad70eebba5cb3e84d2517dfc1c75ac",
                          "typeString": "literal_string \"StandardBridge: must not receive Ether even if this is payable\""
                        }
                      ],
                      "id": 47254,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "23005:7:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 47260,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23005:89:75",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47261,
                  "nodeType": "ExpressionStatement",
                  "src": "23005:89:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 47268,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 47263,
                          "name": "_to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47244,
                          "src": "23112:3:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 47266,
                              "name": "this",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -28,
                              "src": "23127:4:75",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_L1StandardBridge_$47422",
                                "typeString": "contract L1StandardBridge"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_L1StandardBridge_$47422",
                                "typeString": "contract L1StandardBridge"
                              }
                            ],
                            "id": 47265,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "23119:7:75",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 47264,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "23119:7:75",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 47267,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23119:13:75",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "23112:20:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616e646172644272696467653a2063616e6e6f742073656e6420746f2073656c66",
                        "id": 47269,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23134:37:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_364ece159cd10e2597bf40a779e1ef408a544f5e6897b0ca6e317dc7bdbe0069",
                          "typeString": "literal_string \"StandardBridge: cannot send to self\""
                        },
                        "value": "StandardBridge: cannot send to self"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_364ece159cd10e2597bf40a779e1ef408a544f5e6897b0ca6e317dc7bdbe0069",
                          "typeString": "literal_string \"StandardBridge: cannot send to self\""
                        }
                      ],
                      "id": 47262,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "23104:7:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 47270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23104:68:75",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47271,
                  "nodeType": "ExpressionStatement",
                  "src": "23104:68:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 47278,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 47273,
                          "name": "_to",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47244,
                          "src": "23190:3:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "id": 47276,
                              "name": "messenger",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 65618,
                              "src": "23205:9:75",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_CrossDomainMessenger_$63488",
                                "typeString": "contract CrossDomainMessenger"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_CrossDomainMessenger_$63488",
                                "typeString": "contract CrossDomainMessenger"
                              }
                            ],
                            "id": 47275,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "23197:7:75",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 47274,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "23197:7:75",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 47277,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23197:18:75",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "23190:25:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5374616e646172644272696467653a2063616e6e6f742073656e6420746f206d657373656e676572",
                        "id": 47279,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "23217:42:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bb1651f00fbd785fb5543c143a369e5c0d2f97fa08d6d7ef9cc99912d7f788fb",
                          "typeString": "literal_string \"StandardBridge: cannot send to messenger\""
                        },
                        "value": "StandardBridge: cannot send to messenger"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bb1651f00fbd785fb5543c143a369e5c0d2f97fa08d6d7ef9cc99912d7f788fb",
                          "typeString": "literal_string \"StandardBridge: cannot send to messenger\""
                        }
                      ],
                      "id": 47272,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "23182:7:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 47280,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23182:78:75",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47281,
                  "nodeType": "ExpressionStatement",
                  "src": "23182:78:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 47288,
                            "name": "messenger",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 65618,
                            "src": "23319:9:75",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_CrossDomainMessenger_$63488",
                              "typeString": "contract CrossDomainMessenger"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_CrossDomainMessenger_$63488",
                              "typeString": "contract CrossDomainMessenger"
                            }
                          ],
                          "id": 47287,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "23311:7:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 47286,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "23311:7:75",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 47289,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23311:18:75",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 47292,
                            "name": "this",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -28,
                            "src": "23339:4:75",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_L1StandardBridge_$47422",
                              "typeString": "contract L1StandardBridge"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_L1StandardBridge_$47422",
                              "typeString": "contract L1StandardBridge"
                            }
                          ],
                          "id": 47291,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "23331:7:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 47290,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "23331:7:75",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 47293,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23331:13:75",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 47294,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47246,
                        "src": "23346:7:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "arguments": [
                          {
                            "id": 47283,
                            "name": "nativeTokenAddress",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 46454,
                            "src": "23278:18:75",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "id": 47282,
                          "name": "IERC20",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 31286,
                          "src": "23271:6:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_IERC20_$31286_$",
                            "typeString": "type(contract IERC20)"
                          }
                        },
                        "id": 47284,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "23271:26:75",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$31286",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 47285,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "transferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 31285,
                      "src": "23271:39:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$_t_bool_$",
                        "typeString": "function (address,address,uint256) external returns (bool)"
                      }
                    },
                    "id": 47295,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23271:83:75",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 47296,
                  "nodeType": "ExpressionStatement",
                  "src": "23271:83:75"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 47298,
                        "name": "nativeTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46454,
                        "src": "23552:18:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "id": 47299,
                          "name": "Predeploys",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 60881,
                          "src": "23572:10:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_contract$_Predeploys_$60881_$",
                            "typeString": "type(library Predeploys)"
                          }
                        },
                        "id": 47300,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "LEGACY_ERC20_ETH",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 60844,
                        "src": "23572:27:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 47301,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47242,
                        "src": "23601:5:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 47302,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47244,
                        "src": "23608:3:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 47303,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47246,
                        "src": "23613:7:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 47304,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47248,
                        "src": "23622:10:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 47297,
                      "name": "finalizeBridgeERC20",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        47421
                      ],
                      "referencedDeclaration": 47421,
                      "src": "23532:19:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_calldata_ptr_$returns$__$",
                        "typeString": "function (address,address,address,address,uint256,bytes calldata)"
                      }
                    },
                    "id": 47305,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "23532:101:75",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47306,
                  "nodeType": "ExpressionStatement",
                  "src": "23532:101:75"
                }
              ]
            },
            "baseFunctions": [
              65931
            ],
            "documentation": {
              "id": 47240,
              "nodeType": "StructuredDocumentation",
              "src": "22224:553:75",
              "text": "@notice Finalizes an ETH bridge on this chain. Can only be triggered by the other\n         StandardBridge contract on the remote chain.\n @param _from      Address of the sender.\n @param _to        Address of the receiver.\n @param _amount    Amount of ETH being bridged.\n @param _extraData Extra data to be sent with the transaction. Note that the recipient will\n                   not be triggered with this data, but it will be emitted and can be used\n                   to identify the transaction."
            },
            "functionSelector": "1635f5fd",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 47252,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 47251,
                  "name": "onlyOtherBridge",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 65715,
                  "src": "22975:15:75"
                },
                "nodeType": "ModifierInvocation",
                "src": "22975:15:75"
              }
            ],
            "name": "finalizeBridgeETH",
            "nameLocation": "22791:17:75",
            "overrides": {
              "id": 47250,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "22958:8:75"
            },
            "parameters": {
              "id": 47249,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47242,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "22826:5:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 47308,
                  "src": "22818:13:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47241,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22818:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47244,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "22849:3:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 47308,
                  "src": "22841:11:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47243,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "22841:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47246,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "22870:7:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 47308,
                  "src": "22862:15:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47245,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22862:7:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47248,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "22902:10:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 47308,
                  "src": "22887:25:75",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 47247,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "22887:5:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22808:110:75"
            },
            "returnParameters": {
              "id": 47253,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22995:0:75"
            },
            "scope": 47422,
            "stateMutability": "payable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 47421,
            "nodeType": "FunctionDefinition",
            "src": "23646:1499:75",
            "nodes": [],
            "body": {
              "id": 47420,
              "nodeType": "Block",
              "src": "23904:1241:75",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 47332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "arguments": [
                        {
                          "id": 47327,
                          "name": "_localToken",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 47310,
                          "src": "23943:11:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        ],
                        "id": 47326,
                        "name": "_isOptimismMintableERC20",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 66180,
                        "src": "23918:24:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                          "typeString": "function (address) view returns (bool)"
                        }
                      },
                      "id": 47328,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "23918:37:75",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "id": 47331,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "id": 47329,
                        "name": "_localToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47310,
                        "src": "23959:11:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "!=",
                      "rightExpression": {
                        "id": 47330,
                        "name": "nativeTokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 46454,
                        "src": "23974:18:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "src": "23959:33:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "23918:74:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 47409,
                    "nodeType": "Block",
                    "src": "24271:592:75",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 47360,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 47355,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 47350,
                              "name": "_localToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47310,
                              "src": "24370:11:75",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "arguments": [
                                {
                                  "hexValue": "30",
                                  "id": 47353,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "24393:1:75",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  }
                                ],
                                "id": 47352,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "24385:7:75",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 47351,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "24385:7:75",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 47354,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "24385:10:75",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "24370:25:75",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            "id": 47359,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 47356,
                              "name": "_remoteToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47312,
                              "src": "24399:12:75",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "expression": {
                                "id": 47357,
                                "name": "Predeploys",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 60881,
                                "src": "24415:10:75",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_Predeploys_$60881_$",
                                  "typeString": "type(library Predeploys)"
                                }
                              },
                              "id": 47358,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "ETH",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 60880,
                              "src": "24415:14:75",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "src": "24399:30:75",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "24370:59:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 47393,
                          "nodeType": "Block",
                          "src": "24677:79:75",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 47389,
                                    "name": "_to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 47316,
                                    "src": "24728:3:75",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 47390,
                                    "name": "_amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 47318,
                                    "src": "24733:7:75",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 47386,
                                        "name": "_localToken",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 47310,
                                        "src": "24702:11:75",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 47385,
                                      "name": "IERC20",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 31286,
                                      "src": "24695:6:75",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC20_$31286_$",
                                        "typeString": "type(contract IERC20)"
                                      }
                                    },
                                    "id": 47387,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "24695:19:75",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$31286",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  "id": 47388,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "safeTransfer",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 31379,
                                  "src": "24695:32:75",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$31286_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$31286_$",
                                    "typeString": "function (contract IERC20,address,uint256)"
                                  }
                                },
                                "id": 47391,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "24695:46:75",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 47392,
                              "nodeType": "ExpressionStatement",
                              "src": "24695:46:75"
                            }
                          ]
                        },
                        "id": 47394,
                        "nodeType": "IfStatement",
                        "src": "24366:390:75",
                        "trueBody": {
                          "id": 47384,
                          "nodeType": "Block",
                          "src": "24431:240:75",
                          "statements": [
                            {
                              "assignments": [
                                47362
                              ],
                              "declarations": [
                                {
                                  "constant": false,
                                  "id": 47362,
                                  "mutability": "mutable",
                                  "name": "success",
                                  "nameLocation": "24454:7:75",
                                  "nodeType": "VariableDeclaration",
                                  "scope": 47384,
                                  "src": "24449:12:75",
                                  "stateVariable": false,
                                  "storageLocation": "default",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "typeName": {
                                    "id": 47361,
                                    "name": "bool",
                                    "nodeType": "ElementaryTypeName",
                                    "src": "24449:4:75",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  "visibility": "internal"
                                }
                              ],
                              "id": 47371,
                              "initialValue": {
                                "arguments": [
                                  {
                                    "id": 47365,
                                    "name": "_to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 47316,
                                    "src": "24478:3:75",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "arguments": [],
                                    "expression": {
                                      "argumentTypes": [],
                                      "id": 47366,
                                      "name": "gasleft",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -7,
                                      "src": "24483:7:75",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_gasleft_view$__$returns$_t_uint256_$",
                                        "typeString": "function () view returns (uint256)"
                                      }
                                    },
                                    "id": 47367,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "24483:9:75",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 47368,
                                    "name": "_amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 47318,
                                    "src": "24494:7:75",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "hexValue": "",
                                    "id": 47369,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "hexString",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "24503:5:75",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    },
                                    "value": ""
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_c5d2460186f7233c927e7db2dcc703c0e500b653ca82273b7bfad8045d85a470",
                                      "typeString": "literal_string \"\""
                                    }
                                  ],
                                  "expression": {
                                    "id": 47363,
                                    "name": "SafeCall",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 60970,
                                    "src": "24464:8:75",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_SafeCall_$60970_$",
                                      "typeString": "type(library SafeCall)"
                                    }
                                  },
                                  "id": 47364,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "call",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 60924,
                                  "src": "24464:13:75",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_uint256_$_t_bytes_memory_ptr_$returns$_t_bool_$",
                                    "typeString": "function (address,uint256,uint256,bytes memory) returns (bool)"
                                  }
                                },
                                "id": 47370,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "24464:45:75",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "nodeType": "VariableDeclarationStatement",
                              "src": "24449:60:75"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 47373,
                                    "name": "success",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 47362,
                                    "src": "24535:7:75",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "5374616e646172644272696467653a20455448207472616e73666572206661696c6564",
                                    "id": 47374,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "24544:37:75",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_2a586f60b387cfb0a96943ab7b9fd5ab5ac1e6a8684db2528d4c0f01b4da8e10",
                                      "typeString": "literal_string \"StandardBridge: ETH transfer failed\""
                                    },
                                    "value": "StandardBridge: ETH transfer failed"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_2a586f60b387cfb0a96943ab7b9fd5ab5ac1e6a8684db2528d4c0f01b4da8e10",
                                      "typeString": "literal_string \"StandardBridge: ETH transfer failed\""
                                    }
                                  ],
                                  "id": 47372,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "24527:7:75",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 47375,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "24527:55:75",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 47376,
                              "nodeType": "ExpressionStatement",
                              "src": "24527:55:75"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 47378,
                                    "name": "_from",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 47314,
                                    "src": "24624:5:75",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 47379,
                                    "name": "_to",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 47316,
                                    "src": "24631:3:75",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 47380,
                                    "name": "_amount",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 47318,
                                    "src": "24636:7:75",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  {
                                    "id": 47381,
                                    "name": "_extraData",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 47320,
                                    "src": "24645:10:75",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_calldata_ptr",
                                      "typeString": "bytes calldata"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_calldata_ptr",
                                      "typeString": "bytes calldata"
                                    }
                                  ],
                                  "id": 47377,
                                  "name": "_emitETHBridgeFinalized",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    47163
                                  ],
                                  "referencedDeclaration": 47163,
                                  "src": "24600:23:75",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                                    "typeString": "function (address,address,uint256,bytes memory)"
                                  }
                                },
                                "id": 47382,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "24600:56:75",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 47383,
                              "nodeType": "ExpressionStatement",
                              "src": "24600:56:75"
                            }
                          ]
                        }
                      },
                      {
                        "expression": {
                          "id": 47407,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 47395,
                                "name": "deposits",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 65614,
                                "src": "24769:8:75",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(address => uint256))"
                                }
                              },
                              "id": 47398,
                              "indexExpression": {
                                "id": 47396,
                                "name": "_localToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 47310,
                                "src": "24778:11:75",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "24769:21:75",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 47399,
                            "indexExpression": {
                              "id": 47397,
                              "name": "_remoteToken",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47312,
                              "src": "24791:12:75",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "24769:35:75",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 47406,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 47400,
                                  "name": "deposits",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 65614,
                                  "src": "24807:8:75",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_address_$_t_uint256_$_$",
                                    "typeString": "mapping(address => mapping(address => uint256))"
                                  }
                                },
                                "id": 47402,
                                "indexExpression": {
                                  "id": 47401,
                                  "name": "_localToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 47310,
                                  "src": "24816:11:75",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "24807:21:75",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 47404,
                              "indexExpression": {
                                "id": 47403,
                                "name": "_remoteToken",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 47312,
                                "src": "24829:12:75",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "24807:35:75",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "-",
                            "rightExpression": {
                              "id": 47405,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47318,
                              "src": "24845:7:75",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "24807:45:75",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "24769:83:75",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 47408,
                        "nodeType": "ExpressionStatement",
                        "src": "24769:83:75"
                      }
                    ]
                  },
                  "id": 47410,
                  "nodeType": "IfStatement",
                  "src": "23914:949:75",
                  "trueBody": {
                    "id": 47349,
                    "nodeType": "Block",
                    "src": "23994:271:75",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 47335,
                                  "name": "_localToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 47310,
                                  "src": "24053:11:75",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                {
                                  "id": 47336,
                                  "name": "_remoteToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 47312,
                                  "src": "24066:12:75",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 47334,
                                "name": "_isCorrectTokenPair",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 66218,
                                "src": "24033:19:75",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_internal_view$_t_address_$_t_address_$returns$_t_bool_$",
                                  "typeString": "function (address,address) view returns (bool)"
                                }
                              },
                              "id": 47337,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "24033:46:75",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5374616e646172644272696467653a2077726f6e672072656d6f746520746f6b656e20666f72204f7074696d69736d204d696e7461626c65204552433230206c6f63616c20746f6b656e",
                              "id": 47338,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "24097:76:75",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_843f9e9cdac865c94e891377948e585b969802f0a09d901439bce110be0b2c39",
                                "typeString": "literal_string \"StandardBridge: wrong remote token for Optimism Mintable ERC20 local token\""
                              },
                              "value": "StandardBridge: wrong remote token for Optimism Mintable ERC20 local token"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_843f9e9cdac865c94e891377948e585b969802f0a09d901439bce110be0b2c39",
                                "typeString": "literal_string \"StandardBridge: wrong remote token for Optimism Mintable ERC20 local token\""
                              }
                            ],
                            "id": 47333,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "24008:7:75",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 47339,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "24008:179:75",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 47340,
                        "nodeType": "ExpressionStatement",
                        "src": "24008:179:75"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 47345,
                              "name": "_to",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47316,
                              "src": "24241:3:75",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 47346,
                              "name": "_amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 47318,
                              "src": "24246:7:75",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "arguments": [
                                {
                                  "id": 47342,
                                  "name": "_localToken",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 47310,
                                  "src": "24223:11:75",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "id": 47341,
                                "name": "OptimismMintableERC20",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 64239,
                                "src": "24201:21:75",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_contract$_OptimismMintableERC20_$64239_$",
                                  "typeString": "type(contract OptimismMintableERC20)"
                                }
                              },
                              "id": 47343,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "24201:34:75",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_OptimismMintableERC20_$64239",
                                "typeString": "contract OptimismMintableERC20"
                              }
                            },
                            "id": 47344,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "mint",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 64126,
                            "src": "24201:39:75",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint256) external"
                            }
                          },
                          "id": 47347,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "24201:53:75",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 47348,
                        "nodeType": "ExpressionStatement",
                        "src": "24201:53:75"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 47412,
                        "name": "_localToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47310,
                        "src": "25079:11:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 47413,
                        "name": "_remoteToken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47312,
                        "src": "25092:12:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 47414,
                        "name": "_from",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47314,
                        "src": "25106:5:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 47415,
                        "name": "_to",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47316,
                        "src": "25113:3:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 47416,
                        "name": "_amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47318,
                        "src": "25118:7:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 47417,
                        "name": "_extraData",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 47320,
                        "src": "25127:10:75",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bytes_calldata_ptr",
                          "typeString": "bytes calldata"
                        }
                      ],
                      "id": 47411,
                      "name": "_emitERC20BridgeFinalized",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        47239
                      ],
                      "referencedDeclaration": 47239,
                      "src": "25053:25:75",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_address_$_t_address_$_t_uint256_$_t_bytes_memory_ptr_$returns$__$",
                        "typeString": "function (address,address,address,address,uint256,bytes memory)"
                      }
                    },
                    "id": 47418,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25053:85:75",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 47419,
                  "nodeType": "ExpressionStatement",
                  "src": "25053:85:75"
                }
              ]
            },
            "baseFunctions": [
              66003
            ],
            "functionSelector": "0166a07a",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 47324,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 47323,
                  "name": "onlyOtherBridge",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 65715,
                  "src": "23884:15:75"
                },
                "nodeType": "ModifierInvocation",
                "src": "23884:15:75"
              }
            ],
            "name": "finalizeBridgeERC20",
            "nameLocation": "23655:19:75",
            "overrides": {
              "id": 47322,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "23867:8:75"
            },
            "parameters": {
              "id": 47321,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 47310,
                  "mutability": "mutable",
                  "name": "_localToken",
                  "nameLocation": "23692:11:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 47421,
                  "src": "23684:19:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47309,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23684:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47312,
                  "mutability": "mutable",
                  "name": "_remoteToken",
                  "nameLocation": "23721:12:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 47421,
                  "src": "23713:20:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47311,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23713:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47314,
                  "mutability": "mutable",
                  "name": "_from",
                  "nameLocation": "23751:5:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 47421,
                  "src": "23743:13:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47313,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23743:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47316,
                  "mutability": "mutable",
                  "name": "_to",
                  "nameLocation": "23774:3:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 47421,
                  "src": "23766:11:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 47315,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "23766:7:75",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47318,
                  "mutability": "mutable",
                  "name": "_amount",
                  "nameLocation": "23795:7:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 47421,
                  "src": "23787:15:75",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 47317,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "23787:7:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 47320,
                  "mutability": "mutable",
                  "name": "_extraData",
                  "nameLocation": "23827:10:75",
                  "nodeType": "VariableDeclaration",
                  "scope": 47421,
                  "src": "23812:25:75",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_calldata_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 47319,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "23812:5:75",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23674:169:75"
            },
            "returnParameters": {
              "id": 47325,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23904:0:75"
            },
            "scope": 47422,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 46443,
              "name": "StandardBridge",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 66311,
              "src": "1756:14:75"
            },
            "id": 46444,
            "nodeType": "InheritanceSpecifier",
            "src": "1756:14:75"
          },
          {
            "baseName": {
              "id": 46445,
              "name": "OnApprove",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 49954,
              "src": "1772:9:75"
            },
            "id": 46446,
            "nodeType": "InheritanceSpecifier",
            "src": "1772:9:75"
          },
          {
            "baseName": {
              "id": 46447,
              "name": "ISemver",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 64010,
              "src": "1783:7:75"
            },
            "id": 46448,
            "nodeType": "InheritanceSpecifier",
            "src": "1783:7:75"
          }
        ],
        "canonicalName": "L1StandardBridge",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 46442,
          "nodeType": "StructuredDocumentation",
          "src": "955:772:75",
          "text": "@custom:proxied\n @title L1StandardBridge\n @notice The L1StandardBridge is responsible for transfering ETH and ERC20 tokens between L1 and\n         L2. In the case that an ERC20 token is native to L1, it will be escrowed within this\n         contract. If the ERC20 token is native to L2, it will be burnt. Before Bedrock, ETH was\n         stored within this contract. After Bedrock, ETH is instead stored inside the\n         OptimismPortal contract.\n         NOTE: this contract is not intended to support all variations of ERC20 tokens. Examples\n         of some token types that may not be properly supported by this contract include, but are\n         not limited to: tokens with transfer fees, rebasing tokens, and tokens with blocklists."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          47422,
          64010,
          49954,
          66311,
          30622
        ],
        "name": "L1StandardBridge",
        "nameLocation": "1736:16:75",
        "scope": 47423,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 75
}