{
  "abi": [
    {
      "inputs": [],
      "name": "version",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "version()": "54fd4d50"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"name\":\"version\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"version()\":{\"returns\":{\"_0\":\"Semver contract version as a string.\"}}},\"title\":\"ISemver\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"version()\":{\"notice\":\"Getter for the semantic version of the contract. This is not         meant to be used onchain but instead meant to be used by offchain         tooling.\"}},\"notice\":\"ISemver is a simple contract for ensuring that contracts are         versioned using semantic versioning.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/universal/ISemver.sol\":\"ISemver\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@cwia/=lib/clones-with-immutable-args/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/solmate/\",\":clones-with-immutable-args/=lib/clones-with-immutable-args/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"src/universal/ISemver.sol\":{\"keccak256\":\"0xba34562a8026f59886d2e07d1d58d90b9691d00e0788c6263cef6c22740cab44\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0826f998632f83c103c3085bf2e872db79a69022b6d2e0444c83a64ca5283c2a\",\"dweb:/ipfs/QmcJ7PNqkAfKqbjFGRordtAg1v9DvcBSKvdTkVvciLyvQR\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.19+commit.7dd6d404"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "version",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "version()": {
            "returns": {
              "_0": "Semver contract version as a string."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "version()": {
            "notice": "Getter for the semantic version of the contract. This is not         meant to be used onchain but instead meant to be used by offchain         tooling."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@cwia/=lib/clones-with-immutable-args/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@rari-capital/solmate/=lib/solmate/",
        "clones-with-immutable-args/=lib/clones-with-immutable-args/src/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "safe-contracts/=lib/safe-contracts/contracts/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 999999
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "src/universal/ISemver.sol": "ISemver"
      },
      "libraries": {}
    },
    "sources": {
      "src/universal/ISemver.sol": {
        "keccak256": "0xba34562a8026f59886d2e07d1d58d90b9691d00e0788c6263cef6c22740cab44",
        "urls": [
          "bzz-raw://0826f998632f83c103c3085bf2e872db79a69022b6d2e0444c83a64ca5283c2a",
          "dweb:/ipfs/QmcJ7PNqkAfKqbjFGRordtAg1v9DvcBSKvdTkVvciLyvQR"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [],
    "types": {}
  },
  "userdoc": {
    "version": 1,
    "kind": "user",
    "methods": {
      "version()": {
        "notice": "Getter for the semantic version of the contract. This is not         meant to be used onchain but instead meant to be used by offchain         tooling."
      }
    },
    "notice": "ISemver is a simple contract for ensuring that contracts are         versioned using semantic versioning."
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "methods": {
      "version()": {
        "returns": {
          "_0": "Semver contract version as a string."
        }
      }
    },
    "title": "ISemver"
  },
  "ast": {
    "absolutePath": "src/universal/ISemver.sol",
    "id": 31674,
    "exportedSymbols": {
      "ISemver": [
        31673
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:487:32",
    "nodes": [
      {
        "id": 31665,
        "nodeType": "PragmaDirective",
        "src": "32:23:32",
        "nodes": [],
        "literals": [
          "solidity",
          "^",
          "0.8",
          ".0"
        ]
      },
      {
        "id": 31673,
        "nodeType": "ContractDefinition",
        "src": "198:320:32",
        "nodes": [
          {
            "id": 31672,
            "nodeType": "FunctionDefinition",
            "src": "459:57:32",
            "nodes": [],
            "documentation": {
              "id": 31667,
              "nodeType": "StructuredDocumentation",
              "src": "222:232:32",
              "text": "@notice Getter for the semantic version of the contract. This is not\n         meant to be used onchain but instead meant to be used by offchain\n         tooling.\n @return Semver contract version as a string."
            },
            "functionSelector": "54fd4d50",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "version",
            "nameLocation": "468:7:32",
            "parameters": {
              "id": 31668,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "475:2:32"
            },
            "returnParameters": {
              "id": 31671,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 31670,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 31672,
                  "src": "501:13:32",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 31669,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "501:6:32",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "500:15:32"
            },
            "scope": 31673,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ISemver",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 31666,
          "nodeType": "StructuredDocumentation",
          "src": "57:141:32",
          "text": "@title ISemver\n @notice ISemver is a simple contract for ensuring that contracts are\n         versioned using semantic versioning."
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          31673
        ],
        "name": "ISemver",
        "nameLocation": "208:7:32",
        "scope": 31674,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 32
}