{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract ERC20",
          "name": "_token",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "_sender",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "_shell",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "SENDER",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "TOKEN",
      "outputs": [
        {
          "internalType": "contract ERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "bytes32",
              "name": "shell",
              "type": "bytes32"
            }
          ],
          "internalType": "struct TransferOnion.Layer[]",
          "name": "_layers",
          "type": "tuple[]"
        }
      ],
      "name": "peel",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "shell",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x60c060405234801561001057600080fd5b50604051610a31380380610a3183398101604081905261002f91610069565b600160008190556001600160a01b039384166080529190921660a052556100ac565b6001600160a01b038116811461006657600080fd5b50565b60008060006060848603121561007e57600080fd5b835161008981610051565b602085015190935061009a81610051565b80925050604084015190509250925092565b60805160a0516109546100dd60003960008181606b01526102d601526000818160bc01526102b301526109546000f3fe608060405234801561001057600080fd5b506004361061004c5760003560e01c806343913491146100515780636050f2f81461006657806382bfefc8146100b7578063f11d2ff4146100de575b600080fd5b61006461005f366004610766565b6100f5565b005b61008d7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b61008d7f000000000000000000000000000000000000000000000000000000000000000081565b6100e760015481565b6040519081526020016100ae565b600260005403610166576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b60026000908155600154825190915b818110156103045760008482815181106101915761019161085d565b60200260200101519050838160000151826020015183604001516040516020016101e69392919073ffffffffffffffffffffffffffffffffffffffff9390931683526020830191909152604082015260600190565b6040516020818303038152906040528051906020012014610289576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f5472616e736665724f6e696f6e3a20776861742061726520796f7520646f696e60448201527f6720696e206d79207377616d703f000000000000000000000000000000000000606482015260840161015d565b6040810151815160208301519195506102fb9173ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016917f000000000000000000000000000000000000000000000000000000000000000091610311565b50600101610175565b5050600190815560005550565b6040805173ffffffffffffffffffffffffffffffffffffffff85811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd000000000000000000000000000000000000000000000000000000001790526103a69085906103ac565b50505050565b600061040e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166104bd9092919063ffffffff16565b8051909150156104b8578080602001905181019061042c919061088c565b6104b8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161015d565b505050565b60606104cc84846000856104d6565b90505b9392505050565b606082471015610568576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161015d565b73ffffffffffffffffffffffffffffffffffffffff85163b6105e6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161015d565b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161060f91906108da565b60006040518083038185875af1925050503d806000811461064c576040519150601f19603f3d011682016040523d82523d6000602084013e610651565b606091505b509150915061066182828661066c565b979650505050505050565b6060831561067b5750816104cf565b82511561068b5782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161015d91906108f6565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715610711576107116106bf565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561075e5761075e6106bf565b604052919050565b6000602080838503121561077957600080fd5b823567ffffffffffffffff8082111561079157600080fd5b818501915085601f8301126107a557600080fd5b8135818111156107b7576107b76106bf565b6107c5848260051b01610717565b818152848101925060609182028401850191888311156107e457600080fd5b938501935b828510156108515780858a0312156108015760008081fd5b6108096106ee565b853573ffffffffffffffffffffffffffffffffffffffff8116811461082e5760008081fd5b8152858701358782015260408087013590820152845293840193928501926107e9565b50979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006020828403121561089e57600080fd5b815180151581146104cf57600080fd5b60005b838110156108c95781810151838201526020016108b1565b838111156103a65750506000910152565b600082516108ec8184602087016108ae565b9190910192915050565b60208152600082518060208401526109158160408501602087016108ae565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fea164736f6c634300080f000a",
    "sourceMap": "633:1870:186:-:0;;;1348:140;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;1701:1:37;1806:7;:22;;;-1:-1:-1;;;;;1417:14:186;;;;;1441:16;;;;;;1467:14;633:1870;;14:138:302;-1:-1:-1;;;;;96:31:302;;86:42;;76:70;;142:1;139;132:12;76:70;14:138;:::o;157:475::-;260:6;268;276;329:2;317:9;308:7;304:23;300:32;297:52;;;345:1;342;335:12;297:52;377:9;371:16;396:38;428:5;396:38;:::i;:::-;503:2;488:18;;482:25;453:5;;-1:-1:-1;516:40:302;482:25;516:40;:::i;:::-;575:7;565:17;;;622:2;611:9;607:18;601:25;591:35;;157:475;;;;;:::o;:::-;633:1870:186;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b506004361061004c5760003560e01c806343913491146100515780636050f2f81461006657806382bfefc8146100b7578063f11d2ff4146100de575b600080fd5b61006461005f366004610766565b6100f5565b005b61008d7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020015b60405180910390f35b61008d7f000000000000000000000000000000000000000000000000000000000000000081565b6100e760015481565b6040519081526020016100ae565b600260005403610166576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601f60248201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c0060448201526064015b60405180910390fd5b60026000908155600154825190915b818110156103045760008482815181106101915761019161085d565b60200260200101519050838160000151826020015183604001516040516020016101e69392919073ffffffffffffffffffffffffffffffffffffffff9390931683526020830191909152604082015260600190565b6040516020818303038152906040528051906020012014610289576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602e60248201527f5472616e736665724f6e696f6e3a20776861742061726520796f7520646f696e60448201527f6720696e206d79207377616d703f000000000000000000000000000000000000606482015260840161015d565b6040810151815160208301519195506102fb9173ffffffffffffffffffffffffffffffffffffffff7f000000000000000000000000000000000000000000000000000000000000000016917f000000000000000000000000000000000000000000000000000000000000000091610311565b50600101610175565b5050600190815560005550565b6040805173ffffffffffffffffffffffffffffffffffffffff85811660248301528416604482015260648082018490528251808303909101815260849091019091526020810180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff167f23b872dd000000000000000000000000000000000000000000000000000000001790526103a69085906103ac565b50505050565b600061040e826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c65648152508573ffffffffffffffffffffffffffffffffffffffff166104bd9092919063ffffffff16565b8051909150156104b8578080602001905181019061042c919061088c565b6104b8576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e60448201527f6f74207375636365656400000000000000000000000000000000000000000000606482015260840161015d565b505050565b60606104cc84846000856104d6565b90505b9392505050565b606082471015610568576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f60448201527f722063616c6c0000000000000000000000000000000000000000000000000000606482015260840161015d565b73ffffffffffffffffffffffffffffffffffffffff85163b6105e6576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161015d565b6000808673ffffffffffffffffffffffffffffffffffffffff16858760405161060f91906108da565b60006040518083038185875af1925050503d806000811461064c576040519150601f19603f3d011682016040523d82523d6000602084013e610651565b606091505b509150915061066182828661066c565b979650505050505050565b6060831561067b5750816104cf565b82511561068b5782518084602001fd5b816040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161015d91906108f6565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6040516060810167ffffffffffffffff81118282101715610711576107116106bf565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561075e5761075e6106bf565b604052919050565b6000602080838503121561077957600080fd5b823567ffffffffffffffff8082111561079157600080fd5b818501915085601f8301126107a557600080fd5b8135818111156107b7576107b76106bf565b6107c5848260051b01610717565b818152848101925060609182028401850191888311156107e457600080fd5b938501935b828510156108515780858a0312156108015760008081fd5b6108096106ee565b853573ffffffffffffffffffffffffffffffffffffffff8116811461082e5760008081fd5b8152858701358782015260408087013590820152845293840193928501926107e9565b50979650505050505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006020828403121561089e57600080fd5b815180151581146104cf57600080fd5b60005b838110156108c95781810151838201526020016108b1565b838111156103a65750506000910152565b600082516108ec8184602087016108ae565b9190910192915050565b60208152600082518060208401526109158160408501602087016108ae565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016919091016040019291505056fea164736f6c634300080f000a",
    "sourceMap": "633:1870:186:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1616:885;;;;;;:::i;:::-;;:::i;:::-;;1024:31;;;;;;;;2538:42:302;2526:55;;;2508:74;;2496:2;2481:18;1024:31:186;;;;;;;;923:28;;;;;1098:20;;;;;;;;;2985:25:302;;;2973:2;2958:18;1098:20:186;2839:177:302;1616:885:186;1744:1:37;2325:7;;:19;2317:63;;;;;;;3223:2:302;2317:63:37;;;3205:21:302;3262:2;3242:18;;;3235:30;3301:33;3281:18;;;3274:61;3352:18;;2317:63:37;;;;;;;;;1744:1;2455:7;:18;;;1704:5:186::1;::::0;1736:14;;1704:5;;1760:707:::1;1784:6;1780:1;:10;1760:707;;;1807:18;1828:7;1836:1;1828:10;;;;;;;;:::i;:::-;;;;;;;1807:31;;2003:9;1955:5;:15;;;1972:5;:12;;;1986:5;:11;;;1944:54;;;;;;;;;3802:42:302::0;3790:55;;;;3772:74;;3877:2;3862:18;;3855:34;;;;3920:2;3905:18;;3898:34;3760:2;3745:18;;3570:368;1944:54:186::1;;;;;;;;;;;;;1934:65;;;;;;:78;1909:183;;;::::0;::::1;::::0;;4145:2:302;1909:183:186::1;::::0;::::1;4127:21:302::0;4184:2;4164:18;;;4157:30;4223:34;4203:18;;;4196:62;4294:16;4274:18;;;4267:44;4328:19;;1909:183:186::1;3943:410:302::0;1909:183:186::1;2158:11;::::0;::::1;::::0;2313:15;;2330:12:::1;::::0;::::1;::::0;2158:11;;-1:-1:-1;2282:61:186::1;::::0;:22:::1;:5;:22;::::0;2305:6:::1;::::0;2282:22:::1;:61::i;:::-;-1:-1:-1::0;2439:3:186::1;;1760:707;;;-1:-1:-1::0;;2477:5:186::1;:17:::0;;;2628:7:37;:22;-1:-1:-1;1616:885:186:o;974:241:45:-;1139:68;;;4570:42:302;4639:15;;;1139:68:45;;;4621:34:302;4691:15;;4671:18;;;4664:43;4723:18;;;;4716:34;;;1139:68:45;;;;;;;;;;4533:18:302;;;;1139:68:45;;;;;;;;;;1162:27;1139:68;;;1112:96;;1132:5;;1112:19;:96::i;:::-;974:241;;;;:::o;3747:706::-;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;4192:27;;;;:69;;;;;:::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:45;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;;;;5245:2:302;4351:85:45;;;5227:21:302;5284:2;5264:18;;;5257:30;5323:34;5303:18;;;5296:62;5394:12;5374:18;;;5367:40;5424:19;;4351:85:45;5043:406:302;4351:85:45;3817:636;3747:706;;:::o;3861:223:52:-;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;;3861:223;;;;;;:::o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;;;;5656:2:302;5137:81:52;;;5638:21:302;5695:2;5675:18;;;5668:30;5734:34;5714:18;;;5707:62;5805:8;5785:18;;;5778:36;5831:19;;5137:81:52;5454:402:302;5137:81:52;1465:19;;;;5228:60;;;;;;;6063:2:302;5228:60:52;;;6045:21:302;6102:2;6082:18;;;6075:30;6141:31;6121:18;;;6114:59;6190:18;;5228:60:52;5861:353:302;5228:60:52;5300:12;5314:23;5341:6;:11;;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:52:o;7561:742::-;7707:12;7735:7;7731:566;;;-1:-1:-1;7765:10:52;7758:17;;7731:566;7876:17;;:21;7872:415;;8120:10;8114:17;8180:15;8167:10;8163:2;8159:19;8152:44;7872:415;8259:12;8252:20;;;;;;;;;;;:::i;14:184:302:-;66:77;63:1;56:88;163:4;160:1;153:15;187:4;184:1;177:15;203:253;275:2;269:9;317:4;305:17;;352:18;337:34;;373:22;;;334:62;331:88;;;399:18;;:::i;:::-;435:2;428:22;203:253;:::o;461:334::-;532:2;526:9;588:2;578:13;;593:66;574:86;562:99;;691:18;676:34;;712:22;;;673:62;670:88;;;738:18;;:::i;:::-;774:2;767:22;461:334;;-1:-1:-1;461:334:302:o;800:1557::-;908:6;939:2;982;970:9;961:7;957:23;953:32;950:52;;;998:1;995;988:12;950:52;1038:9;1025:23;1067:18;1108:2;1100:6;1097:14;1094:34;;;1124:1;1121;1114:12;1094:34;1162:6;1151:9;1147:22;1137:32;;1207:7;1200:4;1196:2;1192:13;1188:27;1178:55;;1229:1;1226;1219:12;1178:55;1265:2;1252:16;1287:2;1283;1280:10;1277:36;;;1293:18;;:::i;:::-;1333:36;1365:2;1360;1357:1;1353:10;1349:19;1333:36;:::i;:::-;1403:15;;;1434:12;;;;-1:-1:-1;1465:4:302;1504:11;;;1496:20;;1492:29;;;1533:19;;;1530:39;;;1565:1;1562;1555:12;1530:39;1589:11;;;;1609:718;1625:6;1620:3;1617:15;1609:718;;;1705:2;1699:3;1690:7;1686:17;1682:26;1679:116;;;1749:1;1778:2;1774;1767:14;1679:116;1821:22;;:::i;:::-;1884:3;1871:17;1936:42;1927:7;1923:56;1914:7;1911:69;1901:167;;2022:1;2051:2;2047;2040:14;1901:167;2081:22;;2152:12;;;2139:26;2123:14;;;2116:50;2189:2;2240:12;;;2227:26;2211:14;;;2204:50;2267:18;;1642:12;;;;2305;;;;1609:718;;;-1:-1:-1;2346:5:302;800:1557;-1:-1:-1;;;;;;;800:1557:302:o;3381:184::-;3433:77;3430:1;3423:88;3530:4;3527:1;3520:15;3554:4;3551:1;3544:15;4761:277;4828:6;4881:2;4869:9;4860:7;4856:23;4852:32;4849:52;;;4897:1;4894;4887:12;4849:52;4929:9;4923:16;4982:5;4975:13;4968:21;4961:5;4958:32;4948:60;;5004:1;5001;4994:12;6219:258;6291:1;6301:113;6315:6;6312:1;6309:13;6301:113;;;6391:11;;;6385:18;6372:11;;;6365:39;6337:2;6330:10;6301:113;;;6432:6;6429:1;6426:13;6423:48;;;-1:-1:-1;;6467:1:302;6449:16;;6442:27;6219:258::o;6482:274::-;6611:3;6649:6;6643:13;6665:53;6711:6;6706:3;6699:4;6691:6;6687:17;6665:53;:::i;:::-;6734:16;;;;;6482:274;-1:-1:-1;;6482:274:302:o;6761:442::-;6910:2;6899:9;6892:21;6873:4;6942:6;6936:13;6985:6;6980:2;6969:9;6965:18;6958:34;7001:66;7060:6;7055:2;7044:9;7040:18;7035:2;7027:6;7023:15;7001:66;:::i;:::-;7119:2;7107:15;7124:66;7103:88;7088:104;;;;7194:2;7084:113;;6761:442;-1:-1:-1;;6761:442:302:o",
    "linkReferences": {},
    "immutableReferences": {
      "78313": [
        {
          "start": 188,
          "length": 32
        },
        {
          "start": 691,
          "length": 32
        }
      ],
      "78316": [
        {
          "start": 107,
          "length": 32
        },
        {
          "start": 726,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "SENDER()": "6050f2f8",
    "TOKEN()": "82bfefc8",
    "peel((address,uint256,bytes32)[])": "43913491",
    "shell()": "f11d2ff4"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.15+commit.e14f2714\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_shell\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"SENDER\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"TOKEN\",\"outputs\":[{\"internalType\":\"contract ERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"bytes32\",\"name\":\"shell\",\"type\":\"bytes32\"}],\"internalType\":\"struct TransferOnion.Layer[]\",\"name\":\"_layers\",\"type\":\"tuple[]\"}],\"name\":\"peel\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"shell\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"_sender\":\"Address of the sender to distribute from.\",\"_shell\":\"Initial shell of the onion.\",\"_token\":\"Address of the token to distribute.\"}},\"peel((address,uint256,bytes32)[])\":{\"params\":{\"_layers\":\"Array of onion layers to peel.\"}}},\"title\":\"TransferOnion\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"SENDER()\":{\"notice\":\"Address of the account to distribute tokens from.\"},\"TOKEN()\":{\"notice\":\"Address of the token to distribute.\"},\"constructor\":{\"notice\":\"Constructs a new TransferOnion.\"},\"peel((address,uint256,bytes32)[])\":{\"notice\":\"Peels layers from the onion and distributes tokens.\"},\"shell()\":{\"notice\":\"Current shell hash.\"}},\"notice\":\"TransferOnion is a hash onion for distributing tokens. The shell commits         to an ordered list of the token transfers and can be permissionlessly         unwrapped in order. The SENDER must `approve` this contract as         `transferFrom` is used to move the token balances.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/periphery/TransferOnion.sol\":\"TransferOnion\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"none\"},\"optimizer\":{\"enabled\":true,\"runs\":999999},\"remappings\":[\":@cwia/=lib/clones-with-immutable-args/src/\",\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@rari-capital/solmate/=lib/solmate/\",\":clones-with-immutable-args/=lib/clones-with-immutable-args/src/\",\":ds-test/=lib/forge-std/lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\",\":safe-contracts/=lib/safe-contracts/contracts/\",\":solmate/=lib/solmate/src/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol\":{\"keccak256\":\"0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2\",\"dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0\",\"dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd\",\"dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6\",\"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92\",\"dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3\"]},\"src/periphery/TransferOnion.sol\":{\"keccak256\":\"0xc2b952a3a18fb7aa2aeda16050415e098bd7978a94107958a8758cd9b7067325\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4752c0fc4c4d66984d695510717050b9954b16e3a184fd5d0048ad71abb8b633\",\"dweb:/ipfs/QmYLv41EtHtg3cWGGTGzpdVAvW4fxEaR4jGQE7Uj3tC3Sj\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.15+commit.e14f2714"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract ERC20",
              "name": "_token",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "_sender",
              "type": "address"
            },
            {
              "internalType": "bytes32",
              "name": "_shell",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "SENDER",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "TOKEN",
          "outputs": [
            {
              "internalType": "contract ERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct TransferOnion.Layer[]",
              "name": "_layers",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "address",
                  "name": "recipient",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "bytes32",
                  "name": "shell",
                  "type": "bytes32"
                }
              ]
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "peel"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "shell",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "constructor": {
            "params": {
              "_sender": "Address of the sender to distribute from.",
              "_shell": "Initial shell of the onion.",
              "_token": "Address of the token to distribute."
            }
          },
          "peel((address,uint256,bytes32)[])": {
            "params": {
              "_layers": "Array of onion layers to peel."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "SENDER()": {
            "notice": "Address of the account to distribute tokens from."
          },
          "TOKEN()": {
            "notice": "Address of the token to distribute."
          },
          "constructor": {
            "notice": "Constructs a new TransferOnion."
          },
          "peel((address,uint256,bytes32)[])": {
            "notice": "Peels layers from the onion and distributes tokens."
          },
          "shell()": {
            "notice": "Current shell hash."
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@cwia/=lib/clones-with-immutable-args/src/",
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@rari-capital/solmate/=lib/solmate/",
        "clones-with-immutable-args/=lib/clones-with-immutable-args/src/",
        "ds-test/=lib/forge-std/lib/ds-test/src/",
        "forge-std/=lib/forge-std/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/",
        "safe-contracts/=lib/safe-contracts/contracts/",
        "solmate/=lib/solmate/src/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 999999
      },
      "metadata": {
        "bytecodeHash": "none"
      },
      "compilationTarget": {
        "src/periphery/TransferOnion.sol": "TransferOnion"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol": {
        "keccak256": "0x0e9621f60b2faabe65549f7ed0f24e8853a45c1b7990d47e8160e523683f3935",
        "urls": [
          "bzz-raw://287a2f8d5814dd0f05f22b740f18ca8321acc21c9bd03a6cb2203ea626e2f3f2",
          "dweb:/ipfs/QmZRQv9iuwU817VuqkA2WweiaibKii69x9QxYBBEfbNEud"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0x24b04b8aacaaf1a4a0719117b29c9c3647b1f479c5ac2a60f5ff1bb6d839c238",
        "urls": [
          "bzz-raw://43e46da9d9f49741ecd876a269e71bc7494058d7a8e9478429998adb5bc3eaa0",
          "dweb:/ipfs/QmUtp4cqzf22C5rJ76AabKADquGWcjsc33yjYXxXC4sDvy"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0x8de418a5503946cabe331f35fe242d3201a73f67f77aaeb7110acb1f30423aca",
        "urls": [
          "bzz-raw://5a376d3dda2cb70536c0a45c208b29b34ac560c4cb4f513a42079f96ba47d2dd",
          "dweb:/ipfs/QmZQg6gn1sUpM8wHzwNvSnihumUCAhxD119MpXeKp8B9s8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29",
        "urls": [
          "bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6",
          "dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10",
        "urls": [
          "bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487",
          "dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7",
        "urls": [
          "bzz-raw://6df0ddf21ce9f58271bdfaa85cde98b200ef242a05a3f85c2bc10a8294800a92",
          "dweb:/ipfs/QmRK2Y5Yc6BK7tGKkgsgn3aJEQGi5aakeSPZvS65PV8Xp3"
        ],
        "license": "MIT"
      },
      "src/periphery/TransferOnion.sol": {
        "keccak256": "0xc2b952a3a18fb7aa2aeda16050415e098bd7978a94107958a8758cd9b7067325",
        "urls": [
          "bzz-raw://4752c0fc4c4d66984d695510717050b9954b16e3a184fd5d0048ad71abb8b633",
          "dweb:/ipfs/QmYLv41EtHtg3cWGGTGzpdVAvW4fxEaR4jGQE7Uj3tC3Sj"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 32255,
        "contract": "src/periphery/TransferOnion.sol:TransferOnion",
        "label": "_status",
        "offset": 0,
        "slot": "0",
        "type": "t_uint256"
      },
      {
        "astId": 78319,
        "contract": "src/periphery/TransferOnion.sol:TransferOnion",
        "label": "shell",
        "offset": 0,
        "slot": "1",
        "type": "t_bytes32"
      }
    ],
    "types": {
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  },
  "userdoc": {
    "version": 1,
    "kind": "user",
    "methods": {
      "SENDER()": {
        "notice": "Address of the account to distribute tokens from."
      },
      "TOKEN()": {
        "notice": "Address of the token to distribute."
      },
      "constructor": {
        "notice": "Constructs a new TransferOnion."
      },
      "peel((address,uint256,bytes32)[])": {
        "notice": "Peels layers from the onion and distributes tokens."
      },
      "shell()": {
        "notice": "Current shell hash."
      }
    },
    "notice": "TransferOnion is a hash onion for distributing tokens. The shell commits         to an ordered list of the token transfers and can be permissionlessly         unwrapped in order. The SENDER must `approve` this contract as         `transferFrom` is used to move the token balances."
  },
  "devdoc": {
    "version": 1,
    "kind": "dev",
    "methods": {
      "constructor": {
        "params": {
          "_sender": "Address of the sender to distribute from.",
          "_shell": "Initial shell of the onion.",
          "_token": "Address of the token to distribute."
        }
      },
      "peel((address,uint256,bytes32)[])": {
        "params": {
          "_layers": "Array of onion layers to peel."
        }
      }
    },
    "title": "TransferOnion"
  },
  "ast": {
    "absolutePath": "src/periphery/TransferOnion.sol",
    "id": 78421,
    "exportedSymbols": {
      "ERC20": [
        32870
      ],
      "ReentrancyGuard": [
        32284
      ],
      "SafeERC20": [
        34143
      ],
      "TransferOnion": [
        78420
      ]
    },
    "nodeType": "SourceUnit",
    "src": "32:2472:186",
    "nodes": [
      {
        "id": 78289,
        "nodeType": "PragmaDirective",
        "src": "32:23:186",
        "nodes": [],
        "literals": [
          "solidity",
          "0.8",
          ".15"
        ]
      },
      {
        "id": 78291,
        "nodeType": "ImportDirective",
        "src": "57:87:186",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/security/ReentrancyGuard.sol",
        "file": "@openzeppelin/contracts/security/ReentrancyGuard.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78421,
        "sourceUnit": 32285,
        "symbolAliases": [
          {
            "foreign": {
              "id": 78290,
              "name": "ReentrancyGuard",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 32284,
              "src": "66:15:186",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 78293,
        "nodeType": "ImportDirective",
        "src": "145:70:186",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/ERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78421,
        "sourceUnit": 32871,
        "symbolAliases": [
          {
            "foreign": {
              "id": 78292,
              "name": "ERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 32870,
              "src": "154:5:186",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 78295,
        "nodeType": "ImportDirective",
        "src": "216:84:186",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 78421,
        "sourceUnit": 34144,
        "symbolAliases": [
          {
            "foreign": {
              "id": 78294,
              "name": "SafeERC20",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 34143,
              "src": "225:9:186",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "id": 78420,
        "nodeType": "ContractDefinition",
        "src": "633:1870:186",
        "nodes": [
          {
            "id": 78302,
            "nodeType": "UsingForDirective",
            "src": "681:26:186",
            "nodes": [],
            "global": false,
            "libraryName": {
              "id": 78299,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 34143,
              "src": "687:9:186"
            },
            "typeName": {
              "id": 78301,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 78300,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 32870,
                "src": "701:5:186"
              },
              "referencedDeclaration": 32870,
              "src": "701:5:186",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$32870",
                "typeString": "contract ERC20"
              }
            }
          },
          {
            "id": 78309,
            "nodeType": "StructDefinition",
            "src": "771:94:186",
            "nodes": [],
            "canonicalName": "TransferOnion.Layer",
            "members": [
              {
                "constant": false,
                "id": 78304,
                "mutability": "mutable",
                "name": "recipient",
                "nameLocation": "802:9:186",
                "nodeType": "VariableDeclaration",
                "scope": 78309,
                "src": "794:17:186",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                },
                "typeName": {
                  "id": 78303,
                  "name": "address",
                  "nodeType": "ElementaryTypeName",
                  "src": "794:7:186",
                  "stateMutability": "nonpayable",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 78306,
                "mutability": "mutable",
                "name": "amount",
                "nameLocation": "829:6:186",
                "nodeType": "VariableDeclaration",
                "scope": 78309,
                "src": "821:14:186",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 78305,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "821:7:186",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 78308,
                "mutability": "mutable",
                "name": "shell",
                "nameLocation": "853:5:186",
                "nodeType": "VariableDeclaration",
                "scope": 78309,
                "src": "845:13:186",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                },
                "typeName": {
                  "id": 78307,
                  "name": "bytes32",
                  "nodeType": "ElementaryTypeName",
                  "src": "845:7:186",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "Layer",
            "nameLocation": "778:5:186",
            "scope": 78420,
            "visibility": "public"
          },
          {
            "id": 78313,
            "nodeType": "VariableDeclaration",
            "src": "923:28:186",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 78310,
              "nodeType": "StructuredDocumentation",
              "src": "871:47:186",
              "text": "@notice Address of the token to distribute."
            },
            "functionSelector": "82bfefc8",
            "mutability": "immutable",
            "name": "TOKEN",
            "nameLocation": "946:5:186",
            "scope": 78420,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_contract$_ERC20_$32870",
              "typeString": "contract ERC20"
            },
            "typeName": {
              "id": 78312,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 78311,
                "name": "ERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 32870,
                "src": "923:5:186"
              },
              "referencedDeclaration": 32870,
              "src": "923:5:186",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_ERC20_$32870",
                "typeString": "contract ERC20"
              }
            },
            "visibility": "public"
          },
          {
            "id": 78316,
            "nodeType": "VariableDeclaration",
            "src": "1024:31:186",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 78314,
              "nodeType": "StructuredDocumentation",
              "src": "958:61:186",
              "text": "@notice Address of the account to distribute tokens from."
            },
            "functionSelector": "6050f2f8",
            "mutability": "immutable",
            "name": "SENDER",
            "nameLocation": "1049:6:186",
            "scope": 78420,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 78315,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "1024:7:186",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "id": 78319,
            "nodeType": "VariableDeclaration",
            "src": "1098:20:186",
            "nodes": [],
            "constant": false,
            "documentation": {
              "id": 78317,
              "nodeType": "StructuredDocumentation",
              "src": "1062:31:186",
              "text": "@notice Current shell hash."
            },
            "functionSelector": "f11d2ff4",
            "mutability": "mutable",
            "name": "shell",
            "nameLocation": "1113:5:186",
            "scope": 78420,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes32",
              "typeString": "bytes32"
            },
            "typeName": {
              "id": 78318,
              "name": "bytes32",
              "nodeType": "ElementaryTypeName",
              "src": "1098:7:186",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes32",
                "typeString": "bytes32"
              }
            },
            "visibility": "public"
          },
          {
            "id": 78343,
            "nodeType": "FunctionDefinition",
            "src": "1348:140:186",
            "nodes": [],
            "body": {
              "id": 78342,
              "nodeType": "Block",
              "src": "1407:81:186",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 78332,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 78330,
                      "name": "TOKEN",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78313,
                      "src": "1417:5:186",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$32870",
                        "typeString": "contract ERC20"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 78331,
                      "name": "_token",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78323,
                      "src": "1425:6:186",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ERC20_$32870",
                        "typeString": "contract ERC20"
                      }
                    },
                    "src": "1417:14:186",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$32870",
                      "typeString": "contract ERC20"
                    }
                  },
                  "id": 78333,
                  "nodeType": "ExpressionStatement",
                  "src": "1417:14:186"
                },
                {
                  "expression": {
                    "id": 78336,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 78334,
                      "name": "SENDER",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78316,
                      "src": "1441:6:186",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 78335,
                      "name": "_sender",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78325,
                      "src": "1450:7:186",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1441:16:186",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 78337,
                  "nodeType": "ExpressionStatement",
                  "src": "1441:16:186"
                },
                {
                  "expression": {
                    "id": 78340,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 78338,
                      "name": "shell",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78319,
                      "src": "1467:5:186",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 78339,
                      "name": "_shell",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78327,
                      "src": "1475:6:186",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "1467:14:186",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 78341,
                  "nodeType": "ExpressionStatement",
                  "src": "1467:14:186"
                }
              ]
            },
            "documentation": {
              "id": 78320,
              "nodeType": "StructuredDocumentation",
              "src": "1125:218:186",
              "text": "@notice Constructs a new TransferOnion.\n @param _token  Address of the token to distribute.\n @param _sender Address of the sender to distribute from.\n @param _shell  Initial shell of the onion."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 78328,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78323,
                  "mutability": "mutable",
                  "name": "_token",
                  "nameLocation": "1366:6:186",
                  "nodeType": "VariableDeclaration",
                  "scope": 78343,
                  "src": "1360:12:186",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ERC20_$32870",
                    "typeString": "contract ERC20"
                  },
                  "typeName": {
                    "id": 78322,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 78321,
                      "name": "ERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 32870,
                      "src": "1360:5:186"
                    },
                    "referencedDeclaration": 32870,
                    "src": "1360:5:186",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ERC20_$32870",
                      "typeString": "contract ERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78325,
                  "mutability": "mutable",
                  "name": "_sender",
                  "nameLocation": "1382:7:186",
                  "nodeType": "VariableDeclaration",
                  "scope": 78343,
                  "src": "1374:15:186",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 78324,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1374:7:186",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 78327,
                  "mutability": "mutable",
                  "name": "_shell",
                  "nameLocation": "1399:6:186",
                  "nodeType": "VariableDeclaration",
                  "scope": 78343,
                  "src": "1391:14:186",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 78326,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1391:7:186",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1359:47:186"
            },
            "returnParameters": {
              "id": 78329,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1407:0:186"
            },
            "scope": 78420,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 78419,
            "nodeType": "FunctionDefinition",
            "src": "1616:885:186",
            "nodes": [],
            "body": {
              "id": 78418,
              "nodeType": "Block",
              "src": "1674:827:186",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    78354
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 78354,
                      "mutability": "mutable",
                      "name": "tempShell",
                      "nameLocation": "1692:9:186",
                      "nodeType": "VariableDeclaration",
                      "scope": 78418,
                      "src": "1684:17:186",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 78353,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "1684:7:186",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 78356,
                  "initialValue": {
                    "id": 78355,
                    "name": "shell",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 78319,
                    "src": "1704:5:186",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1684:25:186"
                },
                {
                  "assignments": [
                    78358
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 78358,
                      "mutability": "mutable",
                      "name": "length",
                      "nameLocation": "1727:6:186",
                      "nodeType": "VariableDeclaration",
                      "scope": 78418,
                      "src": "1719:14:186",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 78357,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "1719:7:186",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 78361,
                  "initialValue": {
                    "expression": {
                      "id": 78359,
                      "name": "_layers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78348,
                      "src": "1736:7:186",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_struct$_Layer_$78309_memory_ptr_$dyn_memory_ptr",
                        "typeString": "struct TransferOnion.Layer memory[] memory"
                      }
                    },
                    "id": 78360,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "1736:14:186",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "1719:31:186"
                },
                {
                  "body": {
                    "id": 78412,
                    "nodeType": "Block",
                    "src": "1793:674:186",
                    "statements": [
                      {
                        "assignments": [
                          78371
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 78371,
                            "mutability": "mutable",
                            "name": "layer",
                            "nameLocation": "1820:5:186",
                            "nodeType": "VariableDeclaration",
                            "scope": 78412,
                            "src": "1807:18:186",
                            "stateVariable": false,
                            "storageLocation": "memory",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Layer_$78309_memory_ptr",
                              "typeString": "struct TransferOnion.Layer"
                            },
                            "typeName": {
                              "id": 78370,
                              "nodeType": "UserDefinedTypeName",
                              "pathNode": {
                                "id": 78369,
                                "name": "Layer",
                                "nodeType": "IdentifierPath",
                                "referencedDeclaration": 78309,
                                "src": "1807:5:186"
                              },
                              "referencedDeclaration": 78309,
                              "src": "1807:5:186",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Layer_$78309_storage_ptr",
                                "typeString": "struct TransferOnion.Layer"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 78375,
                        "initialValue": {
                          "baseExpression": {
                            "id": 78372,
                            "name": "_layers",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78348,
                            "src": "1828:7:186",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_struct$_Layer_$78309_memory_ptr_$dyn_memory_ptr",
                              "typeString": "struct TransferOnion.Layer memory[] memory"
                            }
                          },
                          "id": 78374,
                          "indexExpression": {
                            "id": 78373,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78363,
                            "src": "1836:1:186",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "1828:10:186",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_Layer_$78309_memory_ptr",
                            "typeString": "struct TransferOnion.Layer memory"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "1807:31:186"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              "id": 78389,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "expression": {
                                          "id": 78380,
                                          "name": "layer",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 78371,
                                          "src": "1955:5:186",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Layer_$78309_memory_ptr",
                                            "typeString": "struct TransferOnion.Layer memory"
                                          }
                                        },
                                        "id": 78381,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "recipient",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 78304,
                                        "src": "1955:15:186",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      },
                                      {
                                        "expression": {
                                          "id": 78382,
                                          "name": "layer",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 78371,
                                          "src": "1972:5:186",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Layer_$78309_memory_ptr",
                                            "typeString": "struct TransferOnion.Layer memory"
                                          }
                                        },
                                        "id": 78383,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "amount",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 78306,
                                        "src": "1972:12:186",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      {
                                        "expression": {
                                          "id": 78384,
                                          "name": "layer",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 78371,
                                          "src": "1986:5:186",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_struct$_Layer_$78309_memory_ptr",
                                            "typeString": "struct TransferOnion.Layer memory"
                                          }
                                        },
                                        "id": 78385,
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "shell",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 78308,
                                        "src": "1986:11:186",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        },
                                        {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        },
                                        {
                                          "typeIdentifier": "t_bytes32",
                                          "typeString": "bytes32"
                                        }
                                      ],
                                      "expression": {
                                        "id": 78378,
                                        "name": "abi",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -1,
                                        "src": "1944:3:186",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_abi",
                                          "typeString": "abi"
                                        }
                                      },
                                      "id": 78379,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "lValueRequested": false,
                                      "memberName": "encode",
                                      "nodeType": "MemberAccess",
                                      "src": "1944:10:186",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                        "typeString": "function () pure returns (bytes memory)"
                                      }
                                    },
                                    "id": 78386,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "functionCall",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "1944:54:186",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "id": 78377,
                                  "name": "keccak256",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -8,
                                  "src": "1934:9:186",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                    "typeString": "function (bytes memory) pure returns (bytes32)"
                                  }
                                },
                                "id": 78387,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "1934:65:186",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 78388,
                                "name": "tempShell",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 78354,
                                "src": "2003:9:186",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes32",
                                  "typeString": "bytes32"
                                }
                              },
                              "src": "1934:78:186",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "5472616e736665724f6e696f6e3a20776861742061726520796f7520646f696e6720696e206d79207377616d703f",
                              "id": 78390,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "2030:48:186",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_cc770c4319fc2b524adbcd4dd26d8e72c58657124c679b05539d773ad29dd0bc",
                                "typeString": "literal_string \"TransferOnion: what are you doing in my swamp?\""
                              },
                              "value": "TransferOnion: what are you doing in my swamp?"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_cc770c4319fc2b524adbcd4dd26d8e72c58657124c679b05539d773ad29dd0bc",
                                "typeString": "literal_string \"TransferOnion: what are you doing in my swamp?\""
                              }
                            ],
                            "id": 78376,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "1909:7:186",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 78391,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "1909:183:186",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 78392,
                        "nodeType": "ExpressionStatement",
                        "src": "1909:183:186"
                      },
                      {
                        "expression": {
                          "id": 78396,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 78393,
                            "name": "tempShell",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 78354,
                            "src": "2146:9:186",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "expression": {
                              "id": 78394,
                              "name": "layer",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 78371,
                              "src": "2158:5:186",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_Layer_$78309_memory_ptr",
                                "typeString": "struct TransferOnion.Layer memory"
                              }
                            },
                            "id": 78395,
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "shell",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 78308,
                            "src": "2158:11:186",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "2146:23:186",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 78397,
                        "nodeType": "ExpressionStatement",
                        "src": "2146:23:186"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 78401,
                              "name": "SENDER",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 78316,
                              "src": "2305:6:186",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 78402,
                                "name": "layer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 78371,
                                "src": "2313:5:186",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Layer_$78309_memory_ptr",
                                  "typeString": "struct TransferOnion.Layer memory"
                                }
                              },
                              "id": 78403,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "recipient",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 78304,
                              "src": "2313:15:186",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "expression": {
                                "id": 78404,
                                "name": "layer",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 78371,
                                "src": "2330:5:186",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_Layer_$78309_memory_ptr",
                                  "typeString": "struct TransferOnion.Layer memory"
                                }
                              },
                              "id": 78405,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "amount",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 78306,
                              "src": "2330:12:186",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "expression": {
                              "id": 78398,
                              "name": "TOKEN",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 78313,
                              "src": "2282:5:186",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ERC20_$32870",
                                "typeString": "contract ERC20"
                              }
                            },
                            "id": 78400,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "safeTransferFrom",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 33920,
                            "src": "2282:22:186",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$32948_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$32948_$",
                              "typeString": "function (contract IERC20,address,address,uint256)"
                            }
                          },
                          "id": 78406,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "2282:61:186",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 78407,
                        "nodeType": "ExpressionStatement",
                        "src": "2282:61:186"
                      },
                      {
                        "id": 78411,
                        "nodeType": "UncheckedBlock",
                        "src": "2411:46:186",
                        "statements": [
                          {
                            "expression": {
                              "id": 78409,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "2439:3:186",
                              "subExpression": {
                                "id": 78408,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 78363,
                                "src": "2441:1:186",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 78410,
                            "nodeType": "ExpressionStatement",
                            "src": "2439:3:186"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 78368,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 78366,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78363,
                      "src": "1780:1:186",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 78367,
                      "name": "length",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78358,
                      "src": "1784:6:186",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1780:10:186",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 78413,
                  "initializationExpression": {
                    "assignments": [
                      78363
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 78363,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "1773:1:186",
                        "nodeType": "VariableDeclaration",
                        "scope": 78413,
                        "src": "1765:9:186",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 78362,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "1765:7:186",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 78365,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 78364,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1777:1:186",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "1765:13:186"
                  },
                  "nodeType": "ForStatement",
                  "src": "1760:707:186"
                },
                {
                  "expression": {
                    "id": 78416,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 78414,
                      "name": "shell",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78319,
                      "src": "2477:5:186",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 78415,
                      "name": "tempShell",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 78354,
                      "src": "2485:9:186",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2477:17:186",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 78417,
                  "nodeType": "ExpressionStatement",
                  "src": "2477:17:186"
                }
              ]
            },
            "documentation": {
              "id": 78344,
              "nodeType": "StructuredDocumentation",
              "src": "1494:117:186",
              "text": "@notice Peels layers from the onion and distributes tokens.\n @param _layers Array of onion layers to peel."
            },
            "functionSelector": "43913491",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 78351,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 78350,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 32283,
                  "src": "1661:12:186"
                },
                "nodeType": "ModifierInvocation",
                "src": "1661:12:186"
              }
            ],
            "name": "peel",
            "nameLocation": "1625:4:186",
            "parameters": {
              "id": 78349,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 78348,
                  "mutability": "mutable",
                  "name": "_layers",
                  "nameLocation": "1645:7:186",
                  "nodeType": "VariableDeclaration",
                  "scope": 78419,
                  "src": "1630:22:186",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_Layer_$78309_memory_ptr_$dyn_memory_ptr",
                    "typeString": "struct TransferOnion.Layer[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 78346,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 78345,
                        "name": "Layer",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 78309,
                        "src": "1630:5:186"
                      },
                      "referencedDeclaration": 78309,
                      "src": "1630:5:186",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Layer_$78309_storage_ptr",
                        "typeString": "struct TransferOnion.Layer"
                      }
                    },
                    "id": 78347,
                    "nodeType": "ArrayTypeName",
                    "src": "1630:7:186",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_Layer_$78309_storage_$dyn_storage_ptr",
                      "typeString": "struct TransferOnion.Layer[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1629:24:186"
            },
            "returnParameters": {
              "id": 78352,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1674:0:186"
            },
            "scope": 78420,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 78297,
              "name": "ReentrancyGuard",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 32284,
              "src": "659:15:186"
            },
            "id": 78298,
            "nodeType": "InheritanceSpecifier",
            "src": "659:15:186"
          }
        ],
        "canonicalName": "TransferOnion",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 78296,
          "nodeType": "StructuredDocumentation",
          "src": "302:331:186",
          "text": "@title  TransferOnion\n @notice TransferOnion is a hash onion for distributing tokens. The shell commits\n         to an ordered list of the token transfers and can be permissionlessly\n         unwrapped in order. The SENDER must `approve` this contract as\n         `transferFrom` is used to move the token balances."
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          78420,
          32284
        ],
        "name": "TransferOnion",
        "nameLocation": "642:13:186",
        "scope": 78421,
        "usedErrors": []
      }
    ],
    "license": "MIT"
  },
  "id": 186
}